/* Options:
Date: 2017-02-23 11:38:10
Version: 4.50
Tip: To override a DTO option, remove "//" prefix before updating
BaseUrl: http://192.168.0.19/ServiceAPI91

Package: com.acme
GlobalNamespace: dto
//AddPropertyAccessors: True
//SettersReturnThis: True
//AddServiceStackTypes: True
//AddResponseStatus: False
//AddDescriptionAsComments: True
//AddImplicitVersion: 
//IncludeTypes: 
//ExcludeTypes: 
//TreatTypesAsStrings: 
//DefaultImports: java.math.*,java.util.*,net.servicestack.client.*,com.google.gson.annotations.*,com.google.gson.reflect.*
*/

package com.acme;

import java.math.*;
import java.util.*;
import net.servicestack.client.*;
import com.google.gson.annotations.*;
import com.google.gson.reflect.*;

public class dto
{

    @Route(Path="/auth/adLogout", Verbs="GET")
    public static class ADLogout
    {
        
    }

    /**
    * Service to return information re session expiry when using ADFS WS-Fed.  Can be used to warn a user that their authentication is soon to expire or has expired.
    */
    @Route(Path="/WSFedInfo", Verbs="GET")
    @Api("Service to return information re session expiry when using ADFS WS-Fed.  Can be used to warn a user that their authentication is soon to expire or has expired.")
    public static class WSFedInfo implements IReturn<WSFedInfoResponse>
    {
        
        private static Object responseType = WSFedInfoResponse.class;
        public Object getResponseType() { return responseType; }
    }

    @Route(Path="/Record/{Id}/Rendition/{TypeOfRendition}", Verbs="GET")
    @DataContract
    public static class RenditionDownload extends BaseMethod implements IReturnVoid
    {
        /**
        * The type of Rendition.
        */
        @DataMember
        @ApiMember(Name="TypeOfRendition", ParameterType="path", DataType="string", IsRequired=true, Verb="GET", Description="The type of Rendition.")
        public RenditionType TypeOfRendition = null;

        /**
        * The Uri or unique name of the Record.
        */
        @DataMember
        @ApiMember(Name="Id", ParameterType="path", DataType="string", IsRequired=true, Verb="GET", Description="The Uri or unique name of the Record.")
        public String Id = null;
        
        public RenditionType getTypeOfRendition() { return TypeOfRendition; }
        public RenditionDownload setTypeOfRendition(RenditionType value) { this.TypeOfRendition = value; return this; }
        public String getId() { return Id; }
        public RenditionDownload setId(String value) { this.Id = value; return this; }
    }

    @Route(Path="/UploadFile", Verbs="POST")
    public static class UploadFile implements IReturn<UploadFileResponse>
    {
        
        private static Object responseType = UploadFileResponse.class;
        public Object getResponseType() { return responseType; }
    }

    @Route(Path="/Record/{Id*}/Children/{TrimChildType}/{ChildUri}", Verbs="GET")
    // @Route(Path="/Location/{Id*}/Children/{TrimChildType}/{ChildUri}", Verbs="GET")
    @DataContract
    public static class ChildDownload extends BaseMethod implements IReturnVoid
    {
        /**
        * The type of Child object.
        */
        @DataMember
        @ApiMember(Name="TrimChildType", ParameterType="path", DataType="string", IsRequired=true, Verb="GET", Description="The type of Child object.")
        public BaseObjectTypes TrimChildType = null;

        /**
        * The Uri or unique name of the object.
        */
        @DataMember
        @ApiMember(Name="Id", ParameterType="path", DataType="string", IsRequired=true, Verb="GET", Description="The Uri or unique name of the object.")
        public String Id = null;

        /**
        * The Uri of the Child object.
        */
        @DataMember
        @ApiMember(Name="ChildUri", ParameterType="path", DataType="long", IsRequired=true, Verb="GET", Description="The Uri of the Child object.")
        public Long ChildUri = null;
        
        public BaseObjectTypes getTrimChildType() { return TrimChildType; }
        public ChildDownload setTrimChildType(BaseObjectTypes value) { this.TrimChildType = value; return this; }
        public String getId() { return Id; }
        public ChildDownload setId(String value) { this.Id = value; return this; }
        public Long getChildUri() { return ChildUri; }
        public ChildDownload setChildUri(Long value) { this.ChildUri = value; return this; }
    }

    /**
    *  This will move the classification to a new position within the classification hierarchy
    */
    @Api(" This will move the classification to a new position within the classification hierarchy")
    @DataContract
    public static class MoveClassification extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="MoveClassificationnewParent")
        @SerializedName("MoveClassificationnewParent")
        @ApiMember(Name="MoveClassificationnewParent", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public ClassificationRef newParent = null;

        /**
        * 
        */
        @DataMember(Name="MoveClassificationupdateAssociatedRecordNumbers")
        @SerializedName("MoveClassificationupdateAssociatedRecordNumbers")
        @ApiMember(Name="MoveClassificationupdateAssociatedRecordNumbers", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean updateAssociatedRecordNumbers = null;
        
        public ClassificationRef getNewParent() { return newParent; }
        public MoveClassification setNewParent(ClassificationRef value) { this.newParent = value; return this; }
        public Boolean isUpdateAssociatedRecordNumbers() { return updateAssociatedRecordNumbers; }
        public MoveClassification setUpdateAssociatedRecordNumbers(Boolean value) { this.updateAssociatedRecordNumbers = value; return this; }
    }

    /**
    * Complete one or all actions due on a particular Record.
    */
    @Api("Complete one or all actions due on a particular Record.")
    @DataContract
    public static class CompleteActions extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="CompleteActionsComplete")
        @SerializedName("CompleteActionsComplete")
        @ApiMember(Name="CompleteActionsComplete", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public ActionToComplete Complete = null;

        /**
        * 
        */
        @DataMember(Name="CompleteActionsRecordActionUri")
        @SerializedName("CompleteActionsRecordActionUri")
        @ApiMember(Name="CompleteActionsRecordActionUri", ParameterType="form", DataType="long", Verb="POST", Description="")
        public Long RecordActionUri = null;

        /**
        * 
        */
        @DataMember(Name="CompleteActionsCompletionDate")
        @SerializedName("CompleteActionsCompletionDate")
        @ApiMember(Name="CompleteActionsCompletionDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime CompletionDate = null;

        /**
        * 
        */
        @DataMember(Name="CompleteActionsCompletePrevious")
        @SerializedName("CompleteActionsCompletePrevious")
        @ApiMember(Name="CompleteActionsCompletePrevious", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean CompletePrevious = null;
        
        public ActionToComplete getComplete() { return Complete; }
        public CompleteActions setComplete(ActionToComplete value) { this.Complete = value; return this; }
        public Long getRecordActionUri() { return RecordActionUri; }
        public CompleteActions setRecordActionUri(Long value) { this.RecordActionUri = value; return this; }
        public TrimDateTime getCompletionDate() { return CompletionDate; }
        public CompleteActions setCompletionDate(TrimDateTime value) { this.CompletionDate = value; return this; }
        public Boolean isCompletePrevious() { return CompletePrevious; }
        public CompleteActions setCompletePrevious(Boolean value) { this.CompletePrevious = value; return this; }
    }

    /**
    * Attach an action to a particular Record.
    */
    @Api("Attach an action to a particular Record.")
    @DataContract
    public static class AttachAction extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="AttachActionActionToAttach")
        @SerializedName("AttachActionActionToAttach")
        @ApiMember(Name="AttachActionActionToAttach", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public ActionDefRef ActionToAttach = null;

        /**
        * 
        */
        @DataMember(Name="AttachActionNewAssignee")
        @SerializedName("AttachActionNewAssignee")
        @ApiMember(Name="AttachActionNewAssignee", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef NewAssignee = null;

        /**
        * 
        */
        @DataMember(Name="AttachActionAssigneeOption")
        @SerializedName("AttachActionAssigneeOption")
        @ApiMember(Name="AttachActionAssigneeOption", ParameterType="form", DataType="string", Verb="POST", Description="")
        public ActionAssignmentOption AssigneeOption = null;

        /**
        * 
        */
        @DataMember(Name="AttachActionInsertPos")
        @SerializedName("AttachActionInsertPos")
        @ApiMember(Name="AttachActionInsertPos", ParameterType="form", DataType="string", Verb="POST", Description="")
        public ActionInsertPosition InsertPos = null;

        /**
        * 
        */
        @DataMember(Name="AttachActionRecordActionUri")
        @SerializedName("AttachActionRecordActionUri")
        @ApiMember(Name="AttachActionRecordActionUri", ParameterType="form", DataType="long", Verb="POST", Description="")
        public Long RecordActionUri = null;

        /**
        * 
        */
        @DataMember(Name="AttachActionScheduleStartDate")
        @SerializedName("AttachActionScheduleStartDate")
        @ApiMember(Name="AttachActionScheduleStartDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime ScheduleStartDate = null;
        
        public ActionDefRef getActionToAttach() { return ActionToAttach; }
        public AttachAction setActionToAttach(ActionDefRef value) { this.ActionToAttach = value; return this; }
        public LocationRef getNewAssignee() { return NewAssignee; }
        public AttachAction setNewAssignee(LocationRef value) { this.NewAssignee = value; return this; }
        public ActionAssignmentOption getAssigneeOption() { return AssigneeOption; }
        public AttachAction setAssigneeOption(ActionAssignmentOption value) { this.AssigneeOption = value; return this; }
        public ActionInsertPosition getInsertPos() { return InsertPos; }
        public AttachAction setInsertPos(ActionInsertPosition value) { this.InsertPos = value; return this; }
        public Long getRecordActionUri() { return RecordActionUri; }
        public AttachAction setRecordActionUri(Long value) { this.RecordActionUri = value; return this; }
        public TrimDateTime getScheduleStartDate() { return ScheduleStartDate; }
        public AttachAction setScheduleStartDate(TrimDateTime value) { this.ScheduleStartDate = value; return this; }
    }

    /**
    * Set the status of the Record to checked out.
    */
    @Api("Set the status of the Record to checked out.")
    @DataContract
    public static class Checkout extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="CheckoutComments")
        @SerializedName("CheckoutComments")
        @ApiMember(Name="CheckoutComments", ParameterType="form", DataType="string", Verb="POST", Description="")
        public String Comments = null;
        
        public String getComments() { return Comments; }
        public Checkout setComments(String value) { this.Comments = value; return this; }
    }

    /**
    * Undo a previous checkout of the electronic document for this Record, disregarding any changes made since it was checked out.
    */
    @Api("Undo a previous checkout of the electronic document for this Record, disregarding any changes made since it was checked out.")
    @DataContract
    public static class UndoCheckout extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="UndoCheckoutComments")
        @SerializedName("UndoCheckoutComments")
        @ApiMember(Name="UndoCheckoutComments", ParameterType="form", DataType="string", Verb="POST", Description="")
        public String Comments = null;
        
        public String getComments() { return Comments; }
        public UndoCheckout setComments(String value) { this.Comments = value; return this; }
    }

    /**
    * Set the Assignee to a particular Location, back to Home or register as Missing.
    */
    @Api("Set the Assignee to a particular Location, back to Home or register as Missing.")
    @DataContract
    public static class SetAssignee extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetAssigneeAssigneeType")
        @SerializedName("SetAssigneeAssigneeType")
        @ApiMember(Name="SetAssigneeAssigneeType", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public AssigneeType AssigneeType = null;

        /**
        * 
        */
        @DataMember(Name="SetAssigneeNewAssignee")
        @SerializedName("SetAssigneeNewAssignee")
        @ApiMember(Name="SetAssigneeNewAssignee", ParameterType="form", DataType="long", Verb="POST", Description="")
        public LocationRef NewAssignee = null;

        /**
        * 
        */
        @DataMember(Name="SetAssigneeDueForReturnByDate")
        @SerializedName("SetAssigneeDueForReturnByDate")
        @ApiMember(Name="SetAssigneeDueForReturnByDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime DueForReturnByDate = null;

        /**
        * 
        */
        @DataMember(Name="SetAssigneeActualTimeChangeOccurred")
        @SerializedName("SetAssigneeActualTimeChangeOccurred")
        @ApiMember(Name="SetAssigneeActualTimeChangeOccurred", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime ActualTimeChangeOccurred = null;
        
        public AssigneeType getAssigneeType() { return AssigneeType; }
        public SetAssignee setAssigneeType(AssigneeType value) { this.AssigneeType = value; return this; }
        public LocationRef getNewAssignee() { return NewAssignee; }
        public SetAssignee setNewAssignee(LocationRef value) { this.NewAssignee = value; return this; }
        public TrimDateTime getDueForReturnByDate() { return DueForReturnByDate; }
        public SetAssignee setDueForReturnByDate(TrimDateTime value) { this.DueForReturnByDate = value; return this; }
        public TrimDateTime getActualTimeChangeOccurred() { return ActualTimeChangeOccurred; }
        public SetAssignee setActualTimeChangeOccurred(TrimDateTime value) { this.ActualTimeChangeOccurred = value; return this; }
    }

    /**
    * Create a request for a record.
    */
    @Api("Create a request for a record.")
    @DataContract
    public static class RequestRecord extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RequestRecordRequestType")
        @SerializedName("RequestRecordRequestType")
        @ApiMember(Name="RequestRecordRequestType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public RequestTypes RequestType = null;

        /**
        * 
        */
        @DataMember(Name="RequestRecordPriority")
        @SerializedName("RequestRecordPriority")
        @ApiMember(Name="RequestRecordPriority", ParameterType="form", DataType="string", Verb="POST", Description="")
        public RequestPriority Priority = null;

        /**
        * Requestor, if null will be the current user
        */
        @DataMember(Name="RequestRecordRequestor")
        @SerializedName("RequestRecordRequestor")
        @ApiMember(Name="RequestRecordRequestor", ParameterType="form", DataType="long", Verb="POST", Description="Requestor, if null will be the current user")
        public LocationRef Requestor = null;

        /**
        * 
        */
        @DataMember(Name="RequestRecordFrequency")
        @SerializedName("RequestRecordFrequency")
        @ApiMember(Name="RequestRecordFrequency", ParameterType="form", DataType="int", Verb="POST", Description="")
        public Integer Frequency = null;

        /**
        * 
        */
        @DataMember(Name="RequestRecordFrequencyType")
        @SerializedName("RequestRecordFrequencyType")
        @ApiMember(Name="RequestRecordFrequencyType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public DateInterval FrequencyType = null;

        /**
        * 
        */
        @DataMember(Name="RequestRecordEndDate")
        @SerializedName("RequestRecordEndDate")
        @ApiMember(Name="RequestRecordEndDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime EndDate = null;

        /**
        * Only required for permanent pick-up requests
        */
        @DataMember(Name="RequestRecordServiceLocation")
        @SerializedName("RequestRecordServiceLocation")
        @ApiMember(Name="RequestRecordServiceLocation", ParameterType="form", DataType="long", Verb="POST", Description="Only required for permanent pick-up requests")
        public LocationRef ServiceLocation = null;

        /**
        * 
        */
        @DataMember(Name="RequestRecordDateRequired")
        @SerializedName("RequestRecordDateRequired")
        @ApiMember(Name="RequestRecordDateRequired", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime DateRequired = null;

        /**
        * 
        */
        @DataMember(Name="RequestRecordNotes")
        @SerializedName("RequestRecordNotes")
        @ApiMember(Name="RequestRecordNotes", ParameterType="form", DataType="string", Verb="POST", Description="")
        public String Notes = null;
        
        public RequestTypes getRequestType() { return RequestType; }
        public RequestRecord setRequestType(RequestTypes value) { this.RequestType = value; return this; }
        public RequestPriority getPriority() { return Priority; }
        public RequestRecord setPriority(RequestPriority value) { this.Priority = value; return this; }
        public LocationRef getRequestor() { return Requestor; }
        public RequestRecord setRequestor(LocationRef value) { this.Requestor = value; return this; }
        public Integer getFrequency() { return Frequency; }
        public RequestRecord setFrequency(Integer value) { this.Frequency = value; return this; }
        public DateInterval getFrequencyType() { return FrequencyType; }
        public RequestRecord setFrequencyType(DateInterval value) { this.FrequencyType = value; return this; }
        public TrimDateTime getEndDate() { return EndDate; }
        public RequestRecord setEndDate(TrimDateTime value) { this.EndDate = value; return this; }
        public LocationRef getServiceLocation() { return ServiceLocation; }
        public RequestRecord setServiceLocation(LocationRef value) { this.ServiceLocation = value; return this; }
        public TrimDateTime getDateRequired() { return DateRequired; }
        public RequestRecord setDateRequired(TrimDateTime value) { this.DateRequired = value; return this; }
        public String getNotes() { return Notes; }
        public RequestRecord setNotes(String value) { this.Notes = value; return this; }
    }

    /**
    * Allows for the setting of a user label.
    */
    @Api("Allows for the setting of a user label.")
    @DataContract
    public static class SetUserLabel extends UserLabelBase
    {
        /**
        * 
        */
        @DataMember(Name="SetUserLabelUserLabelToApply")
        @SerializedName("SetUserLabelUserLabelToApply")
        @ApiMember(Name="SetUserLabelUserLabelToApply", ParameterType="form", DataType="long", Verb="POST", Description="")
        public ArrayList<UserLabelRef> UserLabelToApply = null;

        /**
        * 
        */
        @DataMember(Name="SetUserLabelFavoriteType")
        @SerializedName("SetUserLabelFavoriteType")
        @ApiMember(Name="SetUserLabelFavoriteType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public FavoriteType FavoriteType = null;
        
        public ArrayList<UserLabelRef> getUserLabelToApply() { return UserLabelToApply; }
        public SetUserLabel setUserLabelToApply(ArrayList<UserLabelRef> value) { this.UserLabelToApply = value; return this; }
        public FavoriteType getFavoriteType() { return FavoriteType; }
        public SetUserLabel setFavoriteType(FavoriteType value) { this.FavoriteType = value; return this; }
    }

    /**
    * Allows for the removal of an object from a user label.
    */
    @Api("Allows for the removal of an object from a user label.")
    @DataContract
    public static class RemoveUserLabel extends UserLabelBase
    {
        /**
        * 
        */
        @DataMember(Name="RemoveUserLabelUserLabelToDetach")
        @SerializedName("RemoveUserLabelUserLabelToDetach")
        @ApiMember(Name="RemoveUserLabelUserLabelToDetach", ParameterType="form", DataType="long", Verb="POST", Description="")
        public ArrayList<UserLabelRef> UserLabelToDetach = null;

        /**
        * 
        */
        @DataMember(Name="RemoveUserLabelFavoriteType")
        @SerializedName("RemoveUserLabelFavoriteType")
        @ApiMember(Name="RemoveUserLabelFavoriteType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public FavoriteType FavoriteType = null;
        
        public ArrayList<UserLabelRef> getUserLabelToDetach() { return UserLabelToDetach; }
        public RemoveUserLabel setUserLabelToDetach(ArrayList<UserLabelRef> value) { this.UserLabelToDetach = value; return this; }
        public FavoriteType getFavoriteType() { return FavoriteType; }
        public RemoveUserLabel setFavoriteType(FavoriteType value) { this.FavoriteType = value; return this; }
    }

    /**
    * Set the object that a Field Definition is used for.
    */
    @Api("Set the object that a Field Definition is used for.")
    @DataContract
    public static class SetIsUsedFor extends BaseIsUsedFor
    {
        /**
        * 
        */
        @DataMember(Name="SetIsUsedForIsUsedForObject")
        @SerializedName("SetIsUsedForIsUsedForObject")
        @ApiMember(Name="SetIsUsedForIsUsedForObject", ParameterType="form", DataType="long", Verb="POST", Description="")
        public TrimMainObjectRef IsUsedForObject = null;

        /**
        * 
        */
        @DataMember(Name="SetIsUsedForIsUsedForObjectType")
        @SerializedName("SetIsUsedForIsUsedForObjectType")
        @ApiMember(Name="SetIsUsedForIsUsedForObjectType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public BaseObjectTypes IsUsedForObjectType = null;

        /**
        * 
        */
        @DataMember(Name="SetIsUsedForIsUsedForLocationType")
        @SerializedName("SetIsUsedForIsUsedForLocationType")
        @ApiMember(Name="SetIsUsedForIsUsedForLocationType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public LocationType IsUsedForLocationType = null;
        
        public TrimMainObjectRef getIsUsedForObject() { return IsUsedForObject; }
        public SetIsUsedFor setIsUsedForObject(TrimMainObjectRef value) { this.IsUsedForObject = value; return this; }
        public BaseObjectTypes getIsUsedForObjectType() { return IsUsedForObjectType; }
        public SetIsUsedFor setIsUsedForObjectType(BaseObjectTypes value) { this.IsUsedForObjectType = value; return this; }
        public LocationType getIsUsedForLocationType() { return IsUsedForLocationType; }
        public SetIsUsedFor setIsUsedForLocationType(LocationType value) { this.IsUsedForLocationType = value; return this; }
    }

    /**
    * Remove the object that a Field Definition is used for.
    */
    @Api("Remove the object that a Field Definition is used for.")
    @DataContract
    public static class RemoveIsUsedFor extends BaseIsUsedFor
    {
        /**
        * 
        */
        @DataMember(Name="RemoveIsUsedForIsUsedForObject")
        @SerializedName("RemoveIsUsedForIsUsedForObject")
        @ApiMember(Name="RemoveIsUsedForIsUsedForObject", ParameterType="form", DataType="long", Verb="POST", Description="")
        public TrimMainObjectRef IsUsedForObject = null;

        /**
        * 
        */
        @DataMember(Name="RemoveIsUsedForIsUsedForObjectType")
        @SerializedName("RemoveIsUsedForIsUsedForObjectType")
        @ApiMember(Name="RemoveIsUsedForIsUsedForObjectType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public BaseObjectTypes IsUsedForObjectType = null;

        /**
        * 
        */
        @DataMember(Name="RemoveIsUsedForIsUsedForLocationType")
        @SerializedName("RemoveIsUsedForIsUsedForLocationType")
        @ApiMember(Name="RemoveIsUsedForIsUsedForLocationType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public LocationType IsUsedForLocationType = null;
        
        public TrimMainObjectRef getIsUsedForObject() { return IsUsedForObject; }
        public RemoveIsUsedFor setIsUsedForObject(TrimMainObjectRef value) { this.IsUsedForObject = value; return this; }
        public BaseObjectTypes getIsUsedForObjectType() { return IsUsedForObjectType; }
        public RemoveIsUsedFor setIsUsedForObjectType(BaseObjectTypes value) { this.IsUsedForObjectType = value; return this; }
        public LocationType getIsUsedForLocationType() { return IsUsedForLocationType; }
        public RemoveIsUsedFor setIsUsedForLocationType(LocationType value) { this.IsUsedForLocationType = value; return this; }
    }

    /**
    * Set a Field Definition to be used by a Record Type.
    */
    @Api("Set a Field Definition to be used by a Record Type.")
    @DataContract
    public static class SetUsesField extends BaseUsesField
    {
        /**
        * 
        */
        @DataMember(Name="SetUsesFieldUserField")
        @SerializedName("SetUsesFieldUserField")
        @ApiMember(Name="SetUsesFieldUserField", ParameterType="form", DataType="long", Verb="POST", Description="")
        public FieldDefinitionRef UserField = null;
        
        public FieldDefinitionRef getUserField() { return UserField; }
        public SetUsesField setUserField(FieldDefinitionRef value) { this.UserField = value; return this; }
    }

    /**
    * Remove a Field Definition to be used by a Record Type.
    */
    @Api("Remove a Field Definition to be used by a Record Type.")
    @DataContract
    public static class RemoveUsesField extends BaseUsesField
    {
        /**
        * 
        */
        @DataMember(Name="RemoveUsesFieldUserField")
        @SerializedName("RemoveUsesFieldUserField")
        @ApiMember(Name="RemoveUsesFieldUserField", ParameterType="form", DataType="long", Verb="POST", Description="")
        public FieldDefinitionRef UserField = null;
        
        public FieldDefinitionRef getUserField() { return UserField; }
        public RemoveUsesField setUserField(FieldDefinitionRef value) { this.UserField = value; return this; }
    }

    /**
    * Turns on or off the logging of the nominated event within the active audit event log
    */
    @Api("Turns on or off the logging of the nominated event within the active audit event log")
    @DataContract
    public static class EnableActiveAuditEvent extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="EnableActiveAuditEventactiveAuditEventType")
        @SerializedName("EnableActiveAuditEventactiveAuditEventType")
        @ApiMember(Name="EnableActiveAuditEventactiveAuditEventType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public HistoryTypes activeAuditEventType = null;

        /**
        * 
        */
        @DataMember(Name="EnableActiveAuditEventisEnabled")
        @SerializedName("EnableActiveAuditEventisEnabled")
        @ApiMember(Name="EnableActiveAuditEventisEnabled", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean isEnabled = null;
        
        public HistoryTypes getActiveAuditEventType() { return activeAuditEventType; }
        public EnableActiveAuditEvent setActiveAuditEventType(HistoryTypes value) { this.activeAuditEventType = value; return this; }
        public Boolean getIsEnabled() { return isEnabled; }
        public EnableActiveAuditEvent setIsEnabled(Boolean value) { this.isEnabled = value; return this; }
    }

    /**
    * Set the home Location for this Record.
    */
    @Api("Set the home Location for this Record.")
    @DataContract
    public static class SetHomeLocation extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetHomeLocationNewHomeLocation")
        @SerializedName("SetHomeLocationNewHomeLocation")
        @ApiMember(Name="SetHomeLocationNewHomeLocation", ParameterType="form", DataType="long", Verb="POST", Description="")
        public LocationRef NewHomeLocation = null;

        /**
        * 
        */
        @DataMember(Name="SetHomeLocationNewHomeAlsoSetAssignee")
        @SerializedName("SetHomeLocationNewHomeAlsoSetAssignee")
        @ApiMember(Name="SetHomeLocationNewHomeAlsoSetAssignee", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean NewHomeAlsoSetAssignee = null;

        /**
        * 
        */
        @DataMember(Name="SetHomeLocationNewHomeSpace")
        @SerializedName("SetHomeLocationNewHomeSpace")
        @ApiMember(Name="SetHomeLocationNewHomeSpace", ParameterType="form", DataType="long", Verb="POST", Description="")
        public SpaceRef NewHomeSpace = null;
        
        public LocationRef getNewHomeLocation() { return NewHomeLocation; }
        public SetHomeLocation setNewHomeLocation(LocationRef value) { this.NewHomeLocation = value; return this; }
        public Boolean isNewHomeAlsoSetAssignee() { return NewHomeAlsoSetAssignee; }
        public SetHomeLocation setNewHomeAlsoSetAssignee(Boolean value) { this.NewHomeAlsoSetAssignee = value; return this; }
        public SpaceRef getNewHomeSpace() { return NewHomeSpace; }
        public SetHomeLocation setNewHomeSpace(SpaceRef value) { this.NewHomeSpace = value; return this; }
    }

    /**
    * Delete a Record.
    */
    @Route(Path="/Record/{Id}/Delete", Verbs="POST")
    @Api("Delete a Record.")
    @DataContract
    public static class DeleteRecord implements IReturnVoid
    {
        @DataMember(Name="TrimType")
        @SerializedName("TrimType")
        public BaseObjectTypes TrimType = null;

        /**
        * Uri or name of the Record.
        */
        @DataMember(Name="Id")
        @SerializedName("Id")
        @ApiMember(Name="Id", ParameterType="path", DataType="string", IsRequired=true, Verb="POST", Description="Uri or name of the Record.")
        public String Id = null;

        /**
        * 
        */
        @DataMember(Name="DeleteRecordNewHomeForContents")
        @SerializedName("DeleteRecordNewHomeForContents")
        @ApiMember(Name="DeleteRecordNewHomeForContents", ParameterType="form", DataType="long", Verb="POST", Description="")
        public LocationRef NewHomeForContents = null;

        /**
        * 
        */
        @DataMember(Name="DeleteRecordDeleteContents")
        @SerializedName("DeleteRecordDeleteContents")
        @ApiMember(Name="DeleteRecordDeleteContents", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean DeleteContents = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public DeleteRecord setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public String getId() { return Id; }
        public DeleteRecord setId(String value) { this.Id = value; return this; }
        public LocationRef getNewHomeForContents() { return NewHomeForContents; }
        public DeleteRecord setNewHomeForContents(LocationRef value) { this.NewHomeForContents = value; return this; }
        public Boolean isDeleteContents() { return DeleteContents; }
        public DeleteRecord setDeleteContents(Boolean value) { this.DeleteContents = value; return this; }
    }

    /**
    * Print a Report for a selection of Main Object types.
    */
    @Route(Path="/Report/{Id}/PrintToHTML", Verbs="GET")
    @Api("Print a Report for a selection of Main Object types.")
    public static class PrintReport implements IReturnVoid
    {
        @DataMember(Name="TrimType")
        @SerializedName("TrimType")
        public BaseObjectTypes TrimType = null;

        /**
        * Uri or name of the report.
        */
        @ApiMember(Name="Id", ParameterType="path", DataType="string", IsRequired=true, Verb="GET", Description="Uri or name of the report.")
        public String Id = null;

        /**
        * Enter a search query, e.g. 'all' to get all objects.
        */
        @ApiMember(Name="q", ParameterType="query", DataType="string", Verb="GET", Description="Enter a search query, e.g. 'all' to get all objects.")
        public String q = null;

        /**
        * Enter a filter clause, e.g. 'extension:txt' to get all 'txt' documents.
        */
        @ApiMember(Name="filter", ParameterType="query", DataType="string", Verb="GET", Description="Enter a filter clause, e.g. 'extension:txt' to get all 'txt' documents.")
        public String filter = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public PrintReport setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public String getId() { return Id; }
        public PrintReport setId(String value) { this.Id = value; return this; }
        public String getQ() { return q; }
        public PrintReport setQ(String value) { this.q = value; return this; }
        public String getFilter() { return filter; }
        public PrintReport setFilter(String value) { this.filter = value; return this; }
    }

    /**
    * Delete an object.
    */
    @Route(Path="/CheckinStyle/{Id}/Delete", Verbs="POST")
    // @Route(Path="/FieldDefinition/{Id}/Delete", Verbs="POST")
    // @Route(Path="/RecordType/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Activity/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Census/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Classification/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Consignment/{Id}/Delete", Verbs="POST")
    // @Route(Path="/ConsignmentApprover/{Id}/Delete", Verbs="POST")
    // @Route(Path="/ConsignmentIssue/{Id}/Delete", Verbs="POST")
    // @Route(Path="/DocumentQueue/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Hold/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Jurisdiction/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Keyword/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Origin/{Id}/Delete", Verbs="POST")
    // @Route(Path="/RecordAction/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Report/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Request/{Id}/Delete", Verbs="POST")
    // @Route(Path="/SavedSearch/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Schedule/{Id}/Delete", Verbs="POST")
    // @Route(Path="/SearchForm/{Id}/Delete", Verbs="POST")
    // @Route(Path="/SecurityCaveat/{Id}/Delete", Verbs="POST")
    // @Route(Path="/SecurityGuide/{Id}/Delete", Verbs="POST")
    // @Route(Path="/SecurityLevel/{Id}/Delete", Verbs="POST")
    // @Route(Path="/SharePointItem/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Space/{Id}/Delete", Verbs="POST")
    // @Route(Path="/UserLabel/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Workflow/{Id}/Delete", Verbs="POST")
    // @Route(Path="/WorkflowTemplate/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Database/{Id}/Delete", Verbs="POST")
    // @Route(Path="/ActionDef/{Id}/Delete", Verbs="POST")
    // @Route(Path="/AgendaItem/{Id}/Delete", Verbs="POST")
    // @Route(Path="/AgendaItemType/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Alert/{Id}/Delete", Verbs="POST")
    // @Route(Path="/AutoPartRule/{Id}/Delete", Verbs="POST")
    // @Route(Path="/CheckinPlace/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Communication/{Id}/Delete", Verbs="POST")
    // @Route(Path="/ElectronicStore/{Id}/Delete", Verbs="POST")
    // @Route(Path="/HtmlLayout/{Id}/Delete", Verbs="POST")
    // @Route(Path="/LookupItem/{Id}/Delete", Verbs="POST")
    // @Route(Path="/LookupSet/{Id}/Delete", Verbs="POST")
    // @Route(Path="/MailTemplate/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Meeting/{Id}/Delete", Verbs="POST")
    // @Route(Path="/MeetingType/{Id}/Delete", Verbs="POST")
    // @Route(Path="/MinuteItem/{Id}/Delete", Verbs="POST")
    // @Route(Path="/MinuteItemType/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Notification/{Id}/Delete", Verbs="POST")
    // @Route(Path="/OfflineRecord/{Id}/Delete", Verbs="POST")
    // @Route(Path="/OriginHistory/{Id}/Delete", Verbs="POST")
    // @Route(Path="/ReportBitmap/{Id}/Delete", Verbs="POST")
    // @Route(Path="/ScheduledTask/{Id}/Delete", Verbs="POST")
    // @Route(Path="/StopWord/{Id}/Delete", Verbs="POST")
    // @Route(Path="/TodoItem/{Id}/Delete", Verbs="POST")
    // @Route(Path="/Word/{Id}/Delete", Verbs="POST")
    // @Route(Path="/ZipCode/{Id}/Delete", Verbs="POST")
    @Api("Delete an object.")
    @DataContract
    public static class DeleteMainObject implements IReturnVoid
    {
        @DataMember(Name="TrimType")
        @SerializedName("TrimType")
        public BaseObjectTypes TrimType = null;

        /**
        * Uri or name of the object.
        */
        @DataMember(Name="Id")
        @SerializedName("Id")
        @ApiMember(Name="Id", ParameterType="path", DataType="string", IsRequired=true, Verb="POST", Description="Uri or name of the object.")
        public String Id = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public DeleteMainObject setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public String getId() { return Id; }
        public DeleteMainObject setId(String value) { this.Id = value; return this; }
    }

    /**
    * Removes any electronic document currently associated with this record.
    */
    @Api("Removes any electronic document currently associated with this record.")
    @DataContract
    public static class DetachDocument extends BaseMainObjectMethod
    {
        
    }

    /**
    * Delete a Location.
    */
    @Route(Path="/Location/{Id}/Delete", Verbs="POST")
    @Api("Delete a Location.")
    @DataContract
    public static class DeleteLocation implements IReturnVoid
    {
        @DataMember(Name="TrimType")
        @SerializedName("TrimType")
        public BaseObjectTypes TrimType = null;

        /**
        * Uri or name of the Location.
        */
        @DataMember(Name="Id")
        @SerializedName("Id")
        @ApiMember(Name="Id", ParameterType="path", DataType="string", IsRequired=true, Verb="POST", Description="Uri or name of the Location.")
        public String Id = null;

        /**
        * 
        */
        @DataMember(Name="DeleteLocationReplaceLocationWith")
        @SerializedName("DeleteLocationReplaceLocationWith")
        @ApiMember(Name="DeleteLocationReplaceLocationWith", ParameterType="form", DataType="long", Verb="POST", Description="")
        public LocationRef ReplaceLocationWith = null;

        /**
        * 
        */
        @DataMember(Name="DeleteLocationRemoveAnyRequests")
        @SerializedName("DeleteLocationRemoveAnyRequests")
        @ApiMember(Name="DeleteLocationRemoveAnyRequests", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean RemoveAnyRequests = null;

        /**
        * 
        */
        @DataMember(Name="DeleteLocationRemoveAnyAccessControls")
        @SerializedName("DeleteLocationRemoveAnyAccessControls")
        @ApiMember(Name="DeleteLocationRemoveAnyAccessControls", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean RemoveAnyAccessControls = null;

        /**
        * 
        */
        @DataMember(Name="DeleteLocationCopyEmailAddressesToReplacement")
        @SerializedName("DeleteLocationCopyEmailAddressesToReplacement")
        @ApiMember(Name="DeleteLocationCopyEmailAddressesToReplacement", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean CopyEmailAddressesToReplacement = null;

        /**
        * 
        */
        @DataMember(Name="DeleteLocationCopyAssociationsToReplacement")
        @SerializedName("DeleteLocationCopyAssociationsToReplacement")
        @ApiMember(Name="DeleteLocationCopyAssociationsToReplacement", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean CopyAssociationsToReplacement = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public DeleteLocation setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public String getId() { return Id; }
        public DeleteLocation setId(String value) { this.Id = value; return this; }
        public LocationRef getReplaceLocationWith() { return ReplaceLocationWith; }
        public DeleteLocation setReplaceLocationWith(LocationRef value) { this.ReplaceLocationWith = value; return this; }
        public Boolean isRemoveAnyRequests() { return RemoveAnyRequests; }
        public DeleteLocation setRemoveAnyRequests(Boolean value) { this.RemoveAnyRequests = value; return this; }
        public Boolean isRemoveAnyAccessControls() { return RemoveAnyAccessControls; }
        public DeleteLocation setRemoveAnyAccessControls(Boolean value) { this.RemoveAnyAccessControls = value; return this; }
        public Boolean isCopyEmailAddressesToReplacement() { return CopyEmailAddressesToReplacement; }
        public DeleteLocation setCopyEmailAddressesToReplacement(Boolean value) { this.CopyEmailAddressesToReplacement = value; return this; }
        public Boolean isCopyAssociationsToReplacement() { return CopyAssociationsToReplacement; }
        public DeleteLocation setCopyAssociationsToReplacement(Boolean value) { this.CopyAssociationsToReplacement = value; return this; }
    }

    /**
    * Delete a User Label.
    */
    @Route(Path="/UserLabel/{Id}/Delete", Verbs="POST")
    @Api("Delete a User Label.")
    @DataContract
    public static class DeleteUserLabel implements IReturnVoid
    {
        @DataMember(Name="TrimType")
        @SerializedName("TrimType")
        public BaseObjectTypes TrimType = null;

        /**
        * Uri or name of the User Label.
        */
        @DataMember(Name="Id")
        @SerializedName("Id")
        @ApiMember(Name="Id", ParameterType="path", DataType="string", IsRequired=true, Verb="POST", Description="Uri or name of the User Label.")
        public String Id = null;

        /**
        * 
        */
        @DataMember(Name="DeleteUserLabelDeleteLowerLevels")
        @SerializedName("DeleteUserLabelDeleteLowerLevels")
        @ApiMember(Name="DeleteUserLabelDeleteLowerLevels", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean DeleteLowerLevels = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public DeleteUserLabel setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public String getId() { return Id; }
        public DeleteUserLabel setId(String value) { this.Id = value; return this; }
        public Boolean isDeleteLowerLevels() { return DeleteLowerLevels; }
        public DeleteUserLabel setDeleteLowerLevels(Boolean value) { this.DeleteLowerLevels = value; return this; }
    }

    /**
    * Replaces all references to this schedule (in records, classifications, record types, origins, check in styles). You can also opt to make the schedule inactive after the references are done and also to keep the existing schedule on records that have been archived or destroyed according this schedule.
    */
    @Api("Replaces all references to this schedule (in records, classifications, record types, origins, check in styles). You can also opt to make the schedule inactive after the references are done and also to keep the existing schedule on records that have been archived or destroyed according this schedule.")
    @DataContract
    public static class ReplaceReferences extends BaseMainObjectMethod implements IReturnVoid
    {
        /**
        * 
        */
        @DataMember(Name="ReplaceReferencesreplacement")
        @SerializedName("ReplaceReferencesreplacement")
        @ApiMember(Name="ReplaceReferencesreplacement", ParameterType="form", DataType="long", Verb="POST", Description="")
        public ScheduleRef replacement = null;

        /**
        * 
        */
        @DataMember(Name="ReplaceReferencesmakeScheduleInactive")
        @SerializedName("ReplaceReferencesmakeScheduleInactive")
        @ApiMember(Name="ReplaceReferencesmakeScheduleInactive", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean makeScheduleInactive = null;

        /**
        * 
        */
        @DataMember(Name="ReplaceReferencesreplaceOnAlreadyArchivedRecords")
        @SerializedName("ReplaceReferencesreplaceOnAlreadyArchivedRecords")
        @ApiMember(Name="ReplaceReferencesreplaceOnAlreadyArchivedRecords", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean replaceOnAlreadyArchivedRecords = null;
        
        public ScheduleRef getReplacement() { return replacement; }
        public ReplaceReferences setReplacement(ScheduleRef value) { this.replacement = value; return this; }
        public Boolean isMakeScheduleInactive() { return makeScheduleInactive; }
        public ReplaceReferences setMakeScheduleInactive(Boolean value) { this.makeScheduleInactive = value; return this; }
        public Boolean isReplaceOnAlreadyArchivedRecords() { return replaceOnAlreadyArchivedRecords; }
        public ReplaceReferences setReplaceOnAlreadyArchivedRecords(Boolean value) { this.replaceOnAlreadyArchivedRecords = value; return this; }
    }

    /**
    * Resets this object to the current state on the database, will revert any changes that might have been made. Only required if you are not using BOBnotifications, or need to guarantee a really up-to-date version of the object state.
    */
    @Api("Resets this object to the current state on the database, will revert any changes that might have been made. Only required if you are not using BOBnotifications, or need to guarantee a really up-to-date version of the object state.")
    @DataContract
    public static class Refresh extends BaseMainObjectMethod implements IReturnVoid
    {
        
    }

    /**
    * When search for favorites they wil be returned in this order unless another sort is used.
    */
    @Api("When search for favorites they wil be returned in this order unless another sort is used.")
    @DataContract
    public static class ChangePositionWithinFavorites extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="ChangePositionWithinFavoritespositionChange")
        @SerializedName("ChangePositionWithinFavoritespositionChange")
        @ApiMember(Name="ChangePositionWithinFavoritespositionChange", ParameterType="form", DataType="string", Verb="POST", Description="")
        public LabelPositionChange positionChange = null;
        
        public LabelPositionChange getPositionChange() { return positionChange; }
        public ChangePositionWithinFavorites setPositionChange(LabelPositionChange value) { this.positionChange = value; return this; }
    }

    /**
    * When search by UserLabel they wil be returned in this order unless another sort is used.
    */
    @Api("When search by UserLabel they wil be returned in this order unless another sort is used.")
    @DataContract
    public static class ChangePositionWithinUserLabel extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="ChangePositionWithinUserLabellabel")
        @SerializedName("ChangePositionWithinUserLabellabel")
        @ApiMember(Name="ChangePositionWithinUserLabellabel", ParameterType="form", DataType="long", Verb="POST", Description="")
        public UserLabelRef label = null;

        /**
        * 
        */
        @DataMember(Name="ChangePositionWithinUserLabelpositionChange")
        @SerializedName("ChangePositionWithinUserLabelpositionChange")
        @ApiMember(Name="ChangePositionWithinUserLabelpositionChange", ParameterType="form", DataType="string", Verb="POST", Description="")
        public LabelPositionChange positionChange = null;
        
        public UserLabelRef getLabel() { return label; }
        public ChangePositionWithinUserLabel setLabel(UserLabelRef value) { this.label = value; return this; }
        public LabelPositionChange getPositionChange() { return positionChange; }
        public ChangePositionWithinUserLabel setPositionChange(LabelPositionChange value) { this.positionChange = value; return this; }
    }

    /**
    * Completes this activity. You must have preset any completion result, and attached records to any document placeholders as appropriate.
    */
    @Api("Completes this activity. You must have preset any completion result, and attached records to any document placeholders as appropriate.")
    @DataContract
    public static class CompleteActivity extends BaseMainObjectMethod
    {
        
    }

    /**
    * Reverts this activity back to an uncompleted state - also used for rejecting an authorization.
    */
    @Api("Reverts this activity back to an uncompleted state - also used for rejecting an authorization.")
    @DataContract
    public static class UncompleteActivity extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="UncompleteActivityReason")
        @SerializedName("UncompleteActivityReason")
        @ApiMember(Name="UncompleteActivityReason", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String Reason = null;
        
        public String getReason() { return Reason; }
        public UncompleteActivity setReason(String value) { this.Reason = value; return this; }
    }

    /**
    * Sets which type of location is valid for this user field (if it is a field of type 'Object (Location)'
    */
    @Api("Sets which type of location is valid for this user field (if it is a field of type 'Object (Location)'")
    @DataContract
    public static class SetValidLocationType extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetValidLocationTypelocType")
        @SerializedName("SetValidLocationTypelocType")
        @ApiMember(Name="SetValidLocationTypelocType", ParameterType="form", DataType="string", Verb="POST", Description="")
        public LocationType locType = null;

        /**
        * 
        */
        @DataMember(Name="SetValidLocationTypeincludeThisType")
        @SerializedName("SetValidLocationTypeincludeThisType")
        @ApiMember(Name="SetValidLocationTypeincludeThisType", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean includeThisType = null;
        
        public LocationType getLocType() { return locType; }
        public SetValidLocationType setLocType(LocationType value) { this.locType = value; return this; }
        public Boolean isIncludeThisType() { return includeThisType; }
        public SetValidLocationType setIncludeThisType(Boolean value) { this.includeThisType = value; return this; }
    }

    /**
    * Acquires this activity by assigning it to the currently logged in user.
    */
    @Api("Acquires this activity by assigning it to the currently logged in user.")
    @DataContract
    public static class AcquireActivity extends BaseMainObjectMethod
    {
        
    }

    /**
    * Resets the assignee of this activity back to its original assignee.
    */
    @Api("Resets the assignee of this activity back to its original assignee.")
    @DataContract
    public static class RelinquishActivity extends BaseMainObjectMethod
    {
        
    }

    /**
    * Reverts an activity back from a suspended state.
    */
    @Api("Reverts an activity back from a suspended state.")
    @DataContract
    public static class ResumeActivity extends BaseMainObjectMethod
    {
        
    }

    /**
    * Indicates that work has commenced on this activity.
    */
    @Api("Indicates that work has commenced on this activity.")
    @DataContract
    public static class StartActivity extends BaseMainObjectMethod
    {
        
    }

    /**
    * Authorizes the completion of this activity
    */
    @Api("Authorizes the completion of this activity")
    @DataContract
    public static class AuthorizeActivity extends BaseMainObjectMethod
    {
        
    }

    /**
    * Reverts workflow processing back to a preceding activity, resetting completed state to incomplete for all activities involved
    */
    @Api("Reverts workflow processing back to a preceding activity, resetting completed state to incomplete for all activities involved")
    @DataContract
    public static class RollbackActivity extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RollbackActivityactivityIdToRollbackTo")
        @SerializedName("RollbackActivityactivityIdToRollbackTo")
        @ApiMember(Name="RollbackActivityactivityIdToRollbackTo", ParameterType="form", DataType="int", IsRequired=true, Verb="POST", Description="")
        public Integer activityIdToRollbackTo = null;

        /**
        * 
        */
        @DataMember(Name="RollbackActivityreasonForRollback")
        @SerializedName("RollbackActivityreasonForRollback")
        @ApiMember(Name="RollbackActivityreasonForRollback", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String reasonForRollback = null;
        
        public Integer getActivityIdToRollbackTo() { return activityIdToRollbackTo; }
        public RollbackActivity setActivityIdToRollbackTo(Integer value) { this.activityIdToRollbackTo = value; return this; }
        public String getReasonForRollback() { return reasonForRollback; }
        public RollbackActivity setReasonForRollback(String value) { this.reasonForRollback = value; return this; }
    }

    /**
    * Suspends work on this activity for the nominated duration - usually required when waiting for outside input.
    */
    @Api("Suspends work on this activity for the nominated duration - usually required when waiting for outside input.")
    @DataContract
    public static class SuspendActivity extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SuspendActivityreasonForSuspension")
        @SerializedName("SuspendActivityreasonForSuspension")
        @ApiMember(Name="SuspendActivityreasonForSuspension", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String reasonForSuspension = null;

        /**
        * 
        */
        @DataMember(Name="SuspendActivitydurationOfSuspension")
        @SerializedName("SuspendActivitydurationOfSuspension")
        @ApiMember(Name="SuspendActivitydurationOfSuspension", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long durationOfSuspension = null;
        
        public String getReasonForSuspension() { return reasonForSuspension; }
        public SuspendActivity setReasonForSuspension(String value) { this.reasonForSuspension = value; return this; }
        public Long getDurationOfSuspension() { return durationOfSuspension; }
        public SuspendActivity setDurationOfSuspension(Long value) { this.durationOfSuspension = value; return this; }
    }

    /**
    * Rejects the authorization of this activity.
    */
    @Api("Rejects the authorization of this activity.")
    @DataContract
    public static class RejectActivity extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RejectActivityreasonForRejection")
        @SerializedName("RejectActivityreasonForRejection")
        @ApiMember(Name="RejectActivityreasonForRejection", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String reasonForRejection = null;
        
        public String getReasonForRejection() { return reasonForRejection; }
        public RejectActivity setReasonForRejection(String value) { this.reasonForRejection = value; return this; }
    }

    /**
    * Rejects the authorization of this activity.
    */
    @Api("Rejects the authorization of this activity.")
    @DataContract
    public static class ReassignActivity extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="ReassignActivitynewAssignee")
        @SerializedName("ReassignActivitynewAssignee")
        @ApiMember(Name="ReassignActivitynewAssignee", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef newAssignee = null;
        
        public LocationRef getNewAssignee() { return newAssignee; }
        public ReassignActivity setNewAssignee(LocationRef value) { this.newAssignee = value; return this; }
    }

    /**
    * Add a related Thesaurus term.
    */
    @Api("Add a related Thesaurus term.")
    @DataContract
    public static class AddKeywordRelationship extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="AddKeywordRelationshiprelatedKeyword")
        @SerializedName("AddKeywordRelationshiprelatedKeyword")
        @ApiMember(Name="AddKeywordRelationshiprelatedKeyword", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public KeywordRef relatedKeyword = null;

        /**
        * 
        */
        @DataMember(Name="AddKeywordRelationshiprelationshipType")
        @SerializedName("AddKeywordRelationshiprelationshipType")
        @ApiMember(Name="AddKeywordRelationshiprelationshipType", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public KeywordRelationship relationshipType = null;
        
        public KeywordRef getRelatedKeyword() { return relatedKeyword; }
        public AddKeywordRelationship setRelatedKeyword(KeywordRef value) { this.relatedKeyword = value; return this; }
        public KeywordRelationship getRelationshipType() { return relationshipType; }
        public AddKeywordRelationship setRelationshipType(KeywordRelationship value) { this.relationshipType = value; return this; }
    }

    /**
    * Remove a related Thesaurus term.
    */
    @Api("Remove a related Thesaurus term.")
    @DataContract
    public static class RemoveKeywordRelationship extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RemoveKeywordRelationshiprelatedKeyword")
        @SerializedName("RemoveKeywordRelationshiprelatedKeyword")
        @ApiMember(Name="RemoveKeywordRelationshiprelatedKeyword", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public KeywordRef relatedKeyword = null;
        
        public KeywordRef getRelatedKeyword() { return relatedKeyword; }
        public RemoveKeywordRelationship setRelatedKeyword(KeywordRef value) { this.relatedKeyword = value; return this; }
    }

    /**
    * 
    */
    @Api("")
    @DataContract
    public static class SetAsFinal extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetAsFinalRemoveOldRevisions")
        @SerializedName("SetAsFinalRemoveOldRevisions")
        @ApiMember(Name="SetAsFinalRemoveOldRevisions", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean RemoveOldRevisions = null;
        
        public Boolean isRemoveOldRevisions() { return RemoveOldRevisions; }
        public SetAsFinal setRemoveOldRevisions(Boolean value) { this.RemoveOldRevisions = value; return this; }
    }

    /**
    * Reverts the state of the record (and any of its contents) so that it is no longer disposed. When processing contents, you can specify whether the task should halt if any failures occur.
    */
    @Api("Reverts the state of the record (and any of its contents) so that it is no longer disposed. When processing contents, you can specify whether the task should halt if any failures occur.")
    @DataContract
    public static class Undispose extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="UndisposeContinueOnError")
        @SerializedName("UndisposeContinueOnError")
        @ApiMember(Name="UndisposeContinueOnError", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean ContinueOnError = null;
        
        public Boolean isContinueOnError() { return ContinueOnError; }
        public Undispose setContinueOnError(Boolean value) { this.ContinueOnError = value; return this; }
    }

    /**
    * Disposes of this record (and any of its contents) according to specified disposal method. When processing contents, you can specify whether the task should halt if any failures occur.
    */
    @Api("Disposes of this record (and any of its contents) according to specified disposal method. When processing contents, you can specify whether the task should halt if any failures occur.")
    @DataContract
    public static class Dispose extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="DisposeMethodOfDisposal")
        @SerializedName("DisposeMethodOfDisposal")
        @ApiMember(Name="DisposeMethodOfDisposal", ParameterType="form", DataType="string", Verb="POST", Description="")
        public DisposalType MethodOfDisposal = null;

        /**
        * 
        */
        @DataMember(Name="DisposeContinueOnError")
        @SerializedName("DisposeContinueOnError")
        @ApiMember(Name="DisposeContinueOnError", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean ContinueOnError = null;
        
        public DisposalType getMethodOfDisposal() { return MethodOfDisposal; }
        public Dispose setMethodOfDisposal(DisposalType value) { this.MethodOfDisposal = value; return this; }
        public Boolean isContinueOnError() { return ContinueOnError; }
        public Dispose setContinueOnError(Boolean value) { this.ContinueOnError = value; return this; }
    }

    /**
    * Reverts the state of the record (and any of its contents) so that it is no longer inactive. When processing contents, you can specify whether the task should halt if any failures occur.
    */
    @Api("Reverts the state of the record (and any of its contents) so that it is no longer inactive. When processing contents, you can specify whether the task should halt if any failures occur.")
    @DataContract
    public static class MakeActive extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="MakeActiveContinueOnError")
        @SerializedName("MakeActiveContinueOnError")
        @ApiMember(Name="MakeActiveContinueOnError", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean ContinueOnError = null;
        
        public Boolean isContinueOnError() { return ContinueOnError; }
        public MakeActive setContinueOnError(Boolean value) { this.ContinueOnError = value; return this; }
    }

    /**
    * Sets the dateInactive for this record and any of its contents. When processing contents, you can specify whether the task should halt if any failures occur.
    */
    @Api("Sets the dateInactive for this record and any of its contents. When processing contents, you can specify whether the task should halt if any failures occur.")
    @DataContract
    public static class MakeInactive extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="MakeInactiveNewInactiveDate")
        @SerializedName("MakeInactiveNewInactiveDate")
        @ApiMember(Name="MakeInactiveNewInactiveDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime NewInactiveDate = null;

        /**
        * 
        */
        @DataMember(Name="MakeInactiveContinueOnError")
        @SerializedName("MakeInactiveContinueOnError")
        @ApiMember(Name="MakeInactiveContinueOnError", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean ContinueOnError = null;
        
        public TrimDateTime getNewInactiveDate() { return NewInactiveDate; }
        public MakeInactive setNewInactiveDate(TrimDateTime value) { this.NewInactiveDate = value; return this; }
        public Boolean isContinueOnError() { return ContinueOnError; }
        public MakeInactive setContinueOnError(Boolean value) { this.ContinueOnError = value; return this; }
    }

    /**
    * Adds the nominated location to the record as a contact of the specified contact type.
    */
    @Api("Adds the nominated location to the record as a contact of the specified contact type.")
    @DataContract
    public static class AttachContact extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="AttachContactContactLocation")
        @SerializedName("AttachContactContactLocation")
        @ApiMember(Name="AttachContactContactLocation", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef ContactLocation = null;

        /**
        * 
        */
        @DataMember(Name="AttachContactAsContactType")
        @SerializedName("AttachContactAsContactType")
        @ApiMember(Name="AttachContactAsContactType", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public ContactType AsContactType = null;

        /**
        * 
        */
        @DataMember(Name="AttachContactSetAsPrimaryContact")
        @SerializedName("AttachContactSetAsPrimaryContact")
        @ApiMember(Name="AttachContactSetAsPrimaryContact", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean SetAsPrimaryContact = null;
        
        public LocationRef getContactLocation() { return ContactLocation; }
        public AttachContact setContactLocation(LocationRef value) { this.ContactLocation = value; return this; }
        public ContactType getAsContactType() { return AsContactType; }
        public AttachContact setAsContactType(ContactType value) { this.AsContactType = value; return this; }
        public Boolean isSetAsPrimaryContact() { return SetAsPrimaryContact; }
        public AttachContact setSetAsPrimaryContact(Boolean value) { this.SetAsPrimaryContact = value; return this; }
    }

    /**
    * Adds the nominated Thesaurus Term (keyword) to the list of attached Thesaurus Terms for this record. This method does not add the thesaurus term to the title of the record. Thesaurus titling is done by setting the 'GeneratedTitle' property of the Record.
    */
    @Api("Adds the nominated Thesaurus Term (keyword) to the list of attached Thesaurus Terms for this record. This method does not add the thesaurus term to the title of the record. Thesaurus titling is done by setting the 'GeneratedTitle' property of the Record.")
    @DataContract
    public static class AttachKeyword extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="AttachKeywordKeywordToAttach")
        @SerializedName("AttachKeywordKeywordToAttach")
        @ApiMember(Name="AttachKeywordKeywordToAttach", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public KeywordRef KeywordToAttach = null;
        
        public KeywordRef getKeywordToAttach() { return KeywordToAttach; }
        public AttachKeyword setKeywordToAttach(KeywordRef value) { this.KeywordToAttach = value; return this; }
    }

    /**
    * Creates a new History object (Active Audit Event) for this record of the specified type, importing the given history details.
    */
    @Api("Creates a new History object (Active Audit Event) for this record of the specified type, importing the given history details.")
    @DataContract
    public static class ImportHistory extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="ImportHistoryActiveEventType")
        @SerializedName("ImportHistoryActiveEventType")
        @ApiMember(Name="ImportHistoryActiveEventType", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public HistoryTypes ActiveEventType = null;

        /**
        * 
        */
        @DataMember(Name="ImportHistoryHistoryDate")
        @SerializedName("ImportHistoryHistoryDate")
        @ApiMember(Name="ImportHistoryHistoryDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime HistoryDate = null;

        /**
        * 
        */
        @DataMember(Name="ImportHistoryHistoryLogin")
        @SerializedName("ImportHistoryHistoryLogin")
        @ApiMember(Name="ImportHistoryHistoryLogin", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String HistoryLogin = null;

        /**
        * 
        */
        @DataMember(Name="ImportHistoryHistoryDescription")
        @SerializedName("ImportHistoryHistoryDescription")
        @ApiMember(Name="ImportHistoryHistoryDescription", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String HistoryDescription = null;

        /**
        * 
        */
        @DataMember(Name="ImportHistoryHistoryLocation")
        @SerializedName("ImportHistoryHistoryLocation")
        @ApiMember(Name="ImportHistoryHistoryLocation", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef HistoryLocation = null;

        /**
        * 
        */
        @DataMember(Name="ImportHistoryHistoryIsSecurityViolation")
        @SerializedName("ImportHistoryHistoryIsSecurityViolation")
        @ApiMember(Name="ImportHistoryHistoryIsSecurityViolation", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean HistoryIsSecurityViolation = null;
        
        public HistoryTypes getActiveEventType() { return ActiveEventType; }
        public ImportHistory setActiveEventType(HistoryTypes value) { this.ActiveEventType = value; return this; }
        public TrimDateTime getHistoryDate() { return HistoryDate; }
        public ImportHistory setHistoryDate(TrimDateTime value) { this.HistoryDate = value; return this; }
        public String getHistoryLogin() { return HistoryLogin; }
        public ImportHistory setHistoryLogin(String value) { this.HistoryLogin = value; return this; }
        public String getHistoryDescription() { return HistoryDescription; }
        public ImportHistory setHistoryDescription(String value) { this.HistoryDescription = value; return this; }
        public LocationRef getHistoryLocation() { return HistoryLocation; }
        public ImportHistory setHistoryLocation(LocationRef value) { this.HistoryLocation = value; return this; }
        public Boolean isHistoryIsSecurityViolation() { return HistoryIsSecurityViolation; }
        public ImportHistory setHistoryIsSecurityViolation(Boolean value) { this.HistoryIsSecurityViolation = value; return this; }
    }

    /**
    * Reassigns the nominated action to a specified location.
    */
    @Api("Reassigns the nominated action to a specified location.")
    @DataContract
    public static class ReassignAction extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="ReassignActionRecordActionUri")
        @SerializedName("ReassignActionRecordActionUri")
        @ApiMember(Name="ReassignActionRecordActionUri", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long RecordActionUri = null;

        /**
        * 
        */
        @DataMember(Name="ReassignActionNewAssignee")
        @SerializedName("ReassignActionNewAssignee")
        @ApiMember(Name="ReassignActionNewAssignee", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef NewAssignee = null;
        
        public Long getRecordActionUri() { return RecordActionUri; }
        public ReassignAction setRecordActionUri(Long value) { this.RecordActionUri = value; return this; }
        public LocationRef getNewAssignee() { return NewAssignee; }
        public ReassignAction setNewAssignee(LocationRef value) { this.NewAssignee = value; return this; }
    }

    /**
    * Uncompletes the nominated action.
    */
    @Api("Uncompletes the nominated action.")
    @DataContract
    public static class UncompleteAction extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="UncompleteActionRecordActionUri")
        @SerializedName("UncompleteActionRecordActionUri")
        @ApiMember(Name="UncompleteActionRecordActionUri", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long RecordActionUri = null;
        
        public Long getRecordActionUri() { return RecordActionUri; }
        public UncompleteAction setRecordActionUri(Long value) { this.RecordActionUri = value; return this; }
    }

    /**
    * Reschedules all actions attached to this record.
    */
    @Api("Reschedules all actions attached to this record.")
    @DataContract
    public static class RescheduleActions extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RescheduleActionsFromBaseDate")
        @SerializedName("RescheduleActionsFromBaseDate")
        @ApiMember(Name="RescheduleActionsFromBaseDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime FromBaseDate = null;

        /**
        * 
        */
        @DataMember(Name="RescheduleActionsUseActualDurations")
        @SerializedName("RescheduleActionsUseActualDurations")
        @ApiMember(Name="RescheduleActionsUseActualDurations", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean UseActualDurations = null;
        
        public TrimDateTime getFromBaseDate() { return FromBaseDate; }
        public RescheduleActions setFromBaseDate(TrimDateTime value) { this.FromBaseDate = value; return this; }
        public Boolean isUseActualDurations() { return UseActualDurations; }
        public RescheduleActions setUseActualDurations(Boolean value) { this.UseActualDurations = value; return this; }
    }

    /**
    * Alter the duration of an existing record action
    */
    @Api("Alter the duration of an existing record action")
    @DataContract
    public static class SetActionDuration extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetActionDurationRecordActionUri")
        @SerializedName("SetActionDurationRecordActionUri")
        @ApiMember(Name="SetActionDurationRecordActionUri", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long RecordActionUri = null;

        /**
        * 
        */
        @DataMember(Name="SetActionDurationNewDurationDays")
        @SerializedName("SetActionDurationNewDurationDays")
        @ApiMember(Name="SetActionDurationNewDurationDays", ParameterType="form", DataType="int", IsRequired=true, Verb="POST", Description="")
        public Integer NewDurationDays = null;

        /**
        * 
        */
        @DataMember(Name="SetActionDurationNewDurationHours")
        @SerializedName("SetActionDurationNewDurationHours")
        @ApiMember(Name="SetActionDurationNewDurationHours", ParameterType="form", DataType="int", IsRequired=true, Verb="POST", Description="")
        public Integer NewDurationHours = null;

        /**
        * 
        */
        @DataMember(Name="SetActionDurationnewDurationMinutes")
        @SerializedName("SetActionDurationnewDurationMinutes")
        @ApiMember(Name="SetActionDurationnewDurationMinutes", ParameterType="form", DataType="int", IsRequired=true, Verb="POST", Description="")
        public Integer newDurationMinutes = null;

        /**
        * 
        */
        @DataMember(Name="SetActionDurationAdjustProcedureOnly")
        @SerializedName("SetActionDurationAdjustProcedureOnly")
        @ApiMember(Name="SetActionDurationAdjustProcedureOnly", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean AdjustProcedureOnly = null;
        
        public Long getRecordActionUri() { return RecordActionUri; }
        public SetActionDuration setRecordActionUri(Long value) { this.RecordActionUri = value; return this; }
        public Integer getNewDurationDays() { return NewDurationDays; }
        public SetActionDuration setNewDurationDays(Integer value) { this.NewDurationDays = value; return this; }
        public Integer getNewDurationHours() { return NewDurationHours; }
        public SetActionDuration setNewDurationHours(Integer value) { this.NewDurationHours = value; return this; }
        public Integer getNewDurationMinutes() { return newDurationMinutes; }
        public SetActionDuration setNewDurationMinutes(Integer value) { this.newDurationMinutes = value; return this; }
        public Boolean isAdjustProcedureOnly() { return AdjustProcedureOnly; }
        public SetActionDuration setAdjustProcedureOnly(Boolean value) { this.AdjustProcedureOnly = value; return this; }
    }

    /**
    * Removes an existing record action.
    */
    @Api("Removes an existing record action.")
    @DataContract
    public static class RemoveAction extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RemoveActionRecordActionUri")
        @SerializedName("RemoveActionRecordActionUri")
        @ApiMember(Name="RemoveActionRecordActionUri", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long RecordActionUri = null;
        
        public Long getRecordActionUri() { return RecordActionUri; }
        public RemoveAction setRecordActionUri(Long value) { this.RecordActionUri = value; return this; }
    }

    /**
    * Sets the notes of an attached action.
    */
    @Api("Sets the notes of an attached action.")
    @DataContract
    public static class SetActionNotes extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetActionNotesRecordActionUri")
        @SerializedName("SetActionNotesRecordActionUri")
        @ApiMember(Name="SetActionNotesRecordActionUri", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long RecordActionUri = null;

        /**
        * 
        */
        @DataMember(Name="SetActionNotesNewNotes")
        @SerializedName("SetActionNotesNewNotes")
        @ApiMember(Name="SetActionNotesNewNotes", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String NewNotes = null;
        
        public Long getRecordActionUri() { return RecordActionUri; }
        public SetActionNotes setRecordActionUri(Long value) { this.RecordActionUri = value; return this; }
        public String getNewNotes() { return NewNotes; }
        public SetActionNotes setNewNotes(String value) { this.NewNotes = value; return this; }
    }

    /**
    * Sets the cost of an attached action.
    */
    @Api("Sets the cost of an attached action.")
    @DataContract
    public static class SetActionCost extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetActionCostRecordActionUri")
        @SerializedName("SetActionCostRecordActionUri")
        @ApiMember(Name="SetActionCostRecordActionUri", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long RecordActionUri = null;

        /**
        * 
        */
        @DataMember(Name="SetActionCostnewCost")
        @SerializedName("SetActionCostnewCost")
        @ApiMember(Name="SetActionCostnewCost", ParameterType="form", DataType="decimal", IsRequired=true, Verb="POST", Description="")
        public BigDecimal newCost = null;
        
        public Long getRecordActionUri() { return RecordActionUri; }
        public SetActionCost setRecordActionUri(Long value) { this.RecordActionUri = value; return this; }
        public BigDecimal getNewCost() { return newCost; }
        public SetActionCost setNewCost(BigDecimal value) { this.newCost = value; return this; }
    }

    /**
    * Removes all actions attached to this record.
    */
    @Api("Removes all actions attached to this record.")
    @DataContract
    public static class RemoveAllActions extends BaseMainObjectMethod
    {
        
    }

    /**
    * Transfers the electronic document attached to this record from its current storage location to a new electronic store.
    */
    @Api("Transfers the electronic document attached to this record from its current storage location to a new electronic store.")
    @DataContract
    public static class TransferStorage extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="TransferStoragenewDocumentStore")
        @SerializedName("TransferStoragenewDocumentStore")
        @ApiMember(Name="TransferStoragenewDocumentStore", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public ElectronicStoreRef newDocumentStore = null;

        /**
        * 
        */
        @DataMember(Name="TransferStorageTransferRevisionsAndRenditionsInSameStore")
        @SerializedName("TransferStorageTransferRevisionsAndRenditionsInSameStore")
        @ApiMember(Name="TransferStorageTransferRevisionsAndRenditionsInSameStore", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean TransferRevisionsAndRenditionsInSameStore = null;
        
        public ElectronicStoreRef getNewDocumentStore() { return newDocumentStore; }
        public TransferStorage setNewDocumentStore(ElectronicStoreRef value) { this.newDocumentStore = value; return this; }
        public Boolean isTransferRevisionsAndRenditionsInSameStore() { return TransferRevisionsAndRenditionsInSameStore; }
        public TransferStorage setTransferRevisionsAndRenditionsInSameStore(Boolean value) { this.TransferRevisionsAndRenditionsInSameStore = value; return this; }
    }

    /**
    * Transfers the electronic document attached to this record from its current storage location to a new electronic store at the specified location
    */
    @Api("Transfers the electronic document attached to this record from its current storage location to a new electronic store at the specified location")
    @DataContract
    public static class TransferStorageInPlace extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="TransferStorageInPlacenewDocumentStore")
        @SerializedName("TransferStorageInPlacenewDocumentStore")
        @ApiMember(Name="TransferStorageInPlacenewDocumentStore", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public ElectronicStoreRef newDocumentStore = null;

        /**
        * 
        */
        @DataMember(Name="TransferStorageInPlaceNewDocumentStoreId")
        @SerializedName("TransferStorageInPlaceNewDocumentStoreId")
        @ApiMember(Name="TransferStorageInPlaceNewDocumentStoreId", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String NewDocumentStoreId = null;
        
        public ElectronicStoreRef getNewDocumentStore() { return newDocumentStore; }
        public TransferStorageInPlace setNewDocumentStore(ElectronicStoreRef value) { this.newDocumentStore = value; return this; }
        public String getNewDocumentStoreId() { return NewDocumentStoreId; }
        public TransferStorageInPlace setNewDocumentStoreId(String value) { this.NewDocumentStoreId = value; return this; }
    }

    /**
    * Allows you to create a request for the automatic rendering engine to make a rendition of this record.
    */
    @Api("Allows you to create a request for the automatic rendering engine to make a rendition of this record.")
    @DataContract
    public static class RequestRendition extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RequestRenditionRenditionTypeRequested")
        @SerializedName("RequestRenditionRenditionTypeRequested")
        @ApiMember(Name="RequestRenditionRenditionTypeRequested", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public RenditionType RenditionTypeRequested = null;
        
        public RenditionType getRenditionTypeRequested() { return RenditionTypeRequested; }
        public RequestRendition setRenditionTypeRequested(RenditionType value) { this.RenditionTypeRequested = value; return this; }
    }

    /**
    * Sets the creator location of this Record.
    */
    @Api("Sets the creator location of this Record.")
    @DataContract
    public static class SetCreatorLocation extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetCreatorLocationNewCreatorLocation")
        @SerializedName("SetCreatorLocationNewCreatorLocation")
        @ApiMember(Name="SetCreatorLocationNewCreatorLocation", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef NewCreatorLocation = null;
        
        public LocationRef getNewCreatorLocation() { return NewCreatorLocation; }
        public SetCreatorLocation setNewCreatorLocation(LocationRef value) { this.NewCreatorLocation = value; return this; }
    }

    /**
    * Remove all relationships.
    */
    @Api("Remove all relationships.")
    @DataContract
    public static class RemoveAllRelationships extends BaseMainObjectMethod
    {
        
    }

    /**
    * Remove a relationship.
    */
    @Api("Remove a relationship.")
    @DataContract
    public static class RemoveRelationship extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RemoveRelationshipRelatedLocation")
        @SerializedName("RemoveRelationshipRelatedLocation")
        @ApiMember(Name="RemoveRelationshipRelatedLocation", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef RelatedLocation = null;
        
        public LocationRef getRelatedLocation() { return RelatedLocation; }
        public RemoveRelationship setRelatedLocation(LocationRef value) { this.RelatedLocation = value; return this; }
    }

    /**
    * Remove a relationship.
    */
    @Api("Remove a relationship.")
    @DataContract
    public static class RemoveRelationshipByType extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RemoveRelationshipByTypeRelatedLocation")
        @SerializedName("RemoveRelationshipByTypeRelatedLocation")
        @ApiMember(Name="RemoveRelationshipByTypeRelatedLocation", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef RelatedLocation = null;

        /**
        * 
        */
        @DataMember(Name="RemoveRelationshipByTyperelationshipType")
        @SerializedName("RemoveRelationshipByTyperelationshipType")
        @ApiMember(Name="RemoveRelationshipByTyperelationshipType", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public LocRelationshipType relationshipType = null;
        
        public LocationRef getRelatedLocation() { return RelatedLocation; }
        public RemoveRelationshipByType setRelatedLocation(LocationRef value) { this.RelatedLocation = value; return this; }
        public LocRelationshipType getRelationshipType() { return relationshipType; }
        public RemoveRelationshipByType setRelationshipType(LocRelationshipType value) { this.relationshipType = value; return this; }
    }

    /**
    * Add a relationship.
    */
    @Api("Add a relationship.")
    @DataContract
    public static class AddRelationship extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="AddRelationshipRelatedLocation")
        @SerializedName("AddRelationshipRelatedLocation")
        @ApiMember(Name="AddRelationshipRelatedLocation", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef RelatedLocation = null;

        /**
        * 
        */
        @DataMember(Name="AddRelationshipRelationshipType")
        @SerializedName("AddRelationshipRelationshipType")
        @ApiMember(Name="AddRelationshipRelationshipType", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public LocRelationshipType RelationshipType = null;

        /**
        * 
        */
        @DataMember(Name="AddRelationshipMakeThisTheDefaultRelationship")
        @SerializedName("AddRelationshipMakeThisTheDefaultRelationship")
        @ApiMember(Name="AddRelationshipMakeThisTheDefaultRelationship", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean MakeThisTheDefaultRelationship = null;
        
        public LocationRef getRelatedLocation() { return RelatedLocation; }
        public AddRelationship setRelatedLocation(LocationRef value) { this.RelatedLocation = value; return this; }
        public LocRelationshipType getRelationshipType() { return RelationshipType; }
        public AddRelationship setRelationshipType(LocRelationshipType value) { this.RelationshipType = value; return this; }
        public Boolean isMakeThisTheDefaultRelationship() { return MakeThisTheDefaultRelationship; }
        public AddRelationship setMakeThisTheDefaultRelationship(Boolean value) { this.MakeThisTheDefaultRelationship = value; return this; }
    }

    /**
    * Set the permission.
    */
    @Api("Set the permission.")
    @DataContract
    public static class SetPermission extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetPermissionPermission")
        @SerializedName("SetPermissionPermission")
        @ApiMember(Name="SetPermissionPermission", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public UserPermissions Permission = null;

        /**
        * 
        */
        @DataMember(Name="SetPermissionTurnOn")
        @SerializedName("SetPermissionTurnOn")
        @ApiMember(Name="SetPermissionTurnOn", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean TurnOn = null;
        
        public UserPermissions getPermission() { return Permission; }
        public SetPermission setPermission(UserPermissions value) { this.Permission = value; return this; }
        public Boolean isTurnOn() { return TurnOn; }
        public SetPermission setTurnOn(Boolean value) { this.TurnOn = value; return this; }
    }

    /**
    * Sets the census to completed status. The completion date is set to the nominated date.
    */
    @Api("Sets the census to completed status. The completion date is set to the nominated date.")
    @DataContract
    public static class Complete extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="CompleteCompletionDate")
        @SerializedName("CompleteCompletionDate")
        @ApiMember(Name="CompleteCompletionDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime CompletionDate = null;
        
        public TrimDateTime getCompletionDate() { return CompletionDate; }
        public Complete setCompletionDate(TrimDateTime value) { this.CompletionDate = value; return this; }
    }

    /**
    * Removes the specified record from this consignment.
    */
    @Api("Removes the specified record from this consignment.")
    @DataContract
    public static class RemoveRecord extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RemoveRecordRecordToRemove")
        @SerializedName("RemoveRecordRecordToRemove")
        @ApiMember(Name="RemoveRecordRecordToRemove", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public RecordRef RecordToRemove = null;
        
        public RecordRef getRecordToRemove() { return RecordToRemove; }
        public RemoveRecord setRecordToRemove(RecordRef value) { this.RecordToRemove = value; return this; }
    }

    /**
    * Updates the consignment to indicate that archivist review activity is complete. Note, all issues need to be resolved before this can be done.
    */
    @Api("Updates the consignment to indicate that archivist review activity is complete. Note, all issues need to be resolved before this can be done.")
    @DataContract
    public static class SetArchivistReviewComplete extends BaseMainObjectMethod
    {
        
    }

    /**
    * First step of disposal processing for Transfers - initializes the log record and sets the status of the consignment to be waiting for the acknowledgment of receipt of the consignment by the agency the data is being transferred to.
    */
    @Api("First step of disposal processing for Transfers - initializes the log record and sets the status of the consignment to be waiting for the acknowledgment of receipt of the consignment by the agency the data is being transferred to.")
    @DataContract
    public static class PrepareForTransfer extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="PrepareForTransferLogRecordType")
        @SerializedName("PrepareForTransferLogRecordType")
        @ApiMember(Name="PrepareForTransferLogRecordType", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public RecordTypeRef LogRecordType = null;

        /**
        * 
        */
        @DataMember(Name="PrepareForTransferLogContainer")
        @SerializedName("PrepareForTransferLogContainer")
        @ApiMember(Name="PrepareForTransferLogContainer", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public RecordRef LogContainer = null;
        
        public RecordTypeRef getLogRecordType() { return LogRecordType; }
        public PrepareForTransfer setLogRecordType(RecordTypeRef value) { this.LogRecordType = value; return this; }
        public RecordRef getLogContainer() { return LogContainer; }
        public PrepareForTransfer setLogContainer(RecordRef value) { this.LogContainer = value; return this; }
    }

    /**
    * Second step of disposal processing for Transfers - updates the consignment with the supplied receipt date and then completes the disposal operation.
    */
    @Api("Second step of disposal processing for Transfers - updates the consignment with the supplied receipt date and then completes the disposal operation.")
    @DataContract
    public static class CompleteTransfer extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="CompleteTransferDeleteRecordMetadata")
        @SerializedName("CompleteTransferDeleteRecordMetadata")
        @ApiMember(Name="CompleteTransferDeleteRecordMetadata", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean DeleteRecordMetadata = null;

        /**
        * 
        */
        @DataMember(Name="CompleteTransferDateTimeConsignmentReceived")
        @SerializedName("CompleteTransferDateTimeConsignmentReceived")
        @ApiMember(Name="CompleteTransferDateTimeConsignmentReceived", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime DateTimeConsignmentReceived = null;
        
        public Boolean isDeleteRecordMetadata() { return DeleteRecordMetadata; }
        public CompleteTransfer setDeleteRecordMetadata(Boolean value) { this.DeleteRecordMetadata = value; return this; }
        public TrimDateTime getDateTimeConsignmentReceived() { return DateTimeConsignmentReceived; }
        public CompleteTransfer setDateTimeConsignmentReceived(TrimDateTime value) { this.DateTimeConsignmentReceived = value; return this; }
    }

    /**
    * Performs the disposal operation for this consignment, use this for Archive or Destroy, you can also use it for Transfers that do not need to be acknowledged.
    */
    @Api("Performs the disposal operation for this consignment, use this for Archive or Destroy, you can also use it for Transfers that do not need to be acknowledged.")
    @DataContract
    public static class DoDisposal extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="DoDisposalDeleteRecordMetadata")
        @SerializedName("DoDisposalDeleteRecordMetadata")
        @ApiMember(Name="DoDisposalDeleteRecordMetadata", ParameterType="form", DataType="boolean", IsRequired=true, Verb="POST", Description="")
        public Boolean DeleteRecordMetadata = null;

        /**
        * 
        */
        @DataMember(Name="DoDisposalLogRecordType")
        @SerializedName("DoDisposalLogRecordType")
        @ApiMember(Name="DoDisposalLogRecordType", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public RecordTypeRef LogRecordType = null;

        /**
        * 
        */
        @DataMember(Name="DoDisposalLogContainer")
        @SerializedName("DoDisposalLogContainer")
        @ApiMember(Name="DoDisposalLogContainer", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public RecordRef LogContainer = null;
        
        public Boolean isDeleteRecordMetadata() { return DeleteRecordMetadata; }
        public DoDisposal setDeleteRecordMetadata(Boolean value) { this.DeleteRecordMetadata = value; return this; }
        public RecordTypeRef getLogRecordType() { return LogRecordType; }
        public DoDisposal setLogRecordType(RecordTypeRef value) { this.LogRecordType = value; return this; }
        public RecordRef getLogContainer() { return LogContainer; }
        public DoDisposal setLogContainer(RecordRef value) { this.LogContainer = value; return this; }
    }

    /**
    * Updates the approval status of the associated record to 'Approved'.
    */
    @Api("Updates the approval status of the associated record to 'Approved'.")
    @DataContract
    public static class Approve extends BaseMainObjectMethod
    {
        
    }

    /**
    * Updates the approval status of the associated record to 'Rejected'.
    */
    @Api("Updates the approval status of the associated record to 'Rejected'.")
    @DataContract
    public static class Reject extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RejectReasonForRejection")
        @SerializedName("RejectReasonForRejection")
        @ApiMember(Name="RejectReasonForRejection", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String ReasonForRejection = null;
        
        public String getReasonForRejection() { return ReasonForRejection; }
        public Reject setReasonForRejection(String value) { this.ReasonForRejection = value; return this; }
    }

    /**
    * Updates the approval status of the associated record to 'Removed'.
    */
    @Api("Updates the approval status of the associated record to 'Removed'.")
    @DataContract
    public static class ConfirmRejection extends BaseMainObjectMethod
    {
        
    }

    /**
    * Reverts any approval activity for the associated record.
    */
    @Api("Reverts any approval activity for the associated record.")
    @DataContract
    public static class Reset extends BaseMainObjectMethod
    {
        
    }

    /**
    * Updates the approval status of the associated record to 'Rejected'.
    */
    @Api("Updates the approval status of the associated record to 'Rejected'.")
    @DataContract
    public static class Reassign extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="ReassignNewApprover")
        @SerializedName("ReassignNewApprover")
        @ApiMember(Name="ReassignNewApprover", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef NewApprover = null;
        
        public LocationRef getNewApprover() { return NewApprover; }
        public Reassign setNewApprover(LocationRef value) { this.NewApprover = value; return this; }
    }

    /**
    * Resolves this issue by removing the associated record from its container.  Only applies for issues that are raised for contained items.
    */
    @Api("Resolves this issue by removing the associated record from its container.  Only applies for issues that are raised for contained items.")
    @DataContract
    public static class ResolveByRemovingRecordFromContainer extends BaseMainObjectMethod
    {
        
    }

    /**
    * Resolves this issue by removing the associated record from the consignment. Cannot be used for issues that are raised for contained items.
    */
    @Api("Resolves this issue by removing the associated record from the consignment. Cannot be used for issues that are raised for contained items.")
    @DataContract
    public static class ResolveByRemovingRecord extends BaseMainObjectMethod
    {
        
    }

    /**
    * Checks if the issue is now resolved, and will remove it if that is the case. Will automatically remove any issue that is a warning.
    */
    @Api("Checks if the issue is now resolved, and will remove it if that is the case. Will automatically remove any issue that is a warning.")
    @DataContract
    public static class RemoveIfResolved extends BaseMainObjectMethod
    {
        
    }

    /**
    * Indicates the end of an import batch.
    */
    @Api("Indicates the end of an import batch.")
    @DataContract
    public static class EndBatch extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="EndBatchBatchIdentifier")
        @SerializedName("EndBatchBatchIdentifier")
        @ApiMember(Name="EndBatchBatchIdentifier", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public OriginHistoryRef BatchIdentifier = null;

        /**
        * 
        */
        @DataMember(Name="EndBatchTotalRecordsCreated")
        @SerializedName("EndBatchTotalRecordsCreated")
        @ApiMember(Name="EndBatchTotalRecordsCreated", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long TotalRecordsCreated = null;

        /**
        * 
        */
        @DataMember(Name="EndBatchTotalRecordsInError")
        @SerializedName("EndBatchTotalRecordsInError")
        @ApiMember(Name="EndBatchTotalRecordsInError", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public Long TotalRecordsInError = null;
        
        public OriginHistoryRef getBatchIdentifier() { return BatchIdentifier; }
        public EndBatch setBatchIdentifier(OriginHistoryRef value) { this.BatchIdentifier = value; return this; }
        public Long getTotalRecordsCreated() { return TotalRecordsCreated; }
        public EndBatch setTotalRecordsCreated(Long value) { this.TotalRecordsCreated = value; return this; }
        public Long getTotalRecordsInError() { return TotalRecordsInError; }
        public EndBatch setTotalRecordsInError(Long value) { this.TotalRecordsInError = value; return this; }
    }

    /**
    * Completes the request by setting the status to complete and updating the locations of the associated record to match the expected result of processing the request.
    */
    @Api("Completes the request by setting the status to complete and updating the locations of the associated record to match the expected result of processing the request.")
    @DataContract
    public static class CompleteRequest extends BaseMainObjectMethod
    {
        
    }

    /**
    * 
    */
    @Api("")
    @DataContract
    public static class LockWorkflow extends BaseMainObjectMethod
    {
        
    }

    /**
    * 
    */
    @Api("")
    @DataContract
    public static class UnlockWorkflow extends BaseMainObjectMethod
    {
        
    }

    /**
    * Sets up this LocEAddress object as an email LocEAddress of the nominated email address, name and type (as used in MAPI systems.)
    */
    @Api("Sets up this LocEAddress object as an email LocEAddress of the nominated email address, name and type (as used in MAPI systems.)")
    @DataContract
    public static class SetEmailAddress extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetEmailAddressEmailAddressString")
        @SerializedName("SetEmailAddressEmailAddressString")
        @ApiMember(Name="SetEmailAddressEmailAddressString", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String EmailAddressString = null;

        /**
        * 
        */
        @DataMember(Name="SetEmailAddressEmailName")
        @SerializedName("SetEmailAddressEmailName")
        @ApiMember(Name="SetEmailAddressEmailName", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String EmailName = null;

        /**
        * SMTP = Internet, EX = Exchange/Outlook, NOTES = Lotus notes, or any other string for other email address types.
        */
        @DataMember(Name="SetEmailAddressEmailAddressType")
        @SerializedName("SetEmailAddressEmailAddressType")
        @ApiMember(Name="SetEmailAddressEmailAddressType", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="SMTP = Internet, EX = Exchange/Outlook, NOTES = Lotus notes, or any other string for other email address types.")
        public String EmailAddressType = null;
        
        public String getEmailAddressString() { return EmailAddressString; }
        public SetEmailAddress setEmailAddressString(String value) { this.EmailAddressString = value; return this; }
        public String getEmailName() { return EmailName; }
        public SetEmailAddress setEmailName(String value) { this.EmailName = value; return this; }
        public String getEmailAddressType() { return EmailAddressType; }
        public SetEmailAddress setEmailAddressType(String value) { this.EmailAddressType = value; return this; }
    }

    /**
    * 
    */
    @Api("")
    @DataContract
    public static class LockWorkflowTemplate extends BaseMainObjectMethod
    {
        
    }

    /**
    * 
    */
    @Api("")
    @DataContract
    public static class UnlockWorkflowTemplate extends BaseMainObjectMethod
    {
        
    }

    /**
    * Adds a set of records to this hold. Provides an efficient way for adding multiple records to a hold. Returns the number of records that were added in the AddedCount property.
    */
    @Api("Adds a set of records to this hold. Provides an efficient way for adding multiple records to a hold. Returns the number of records that were added in the AddedCount property.")
    @DataContract
    public static class AddRecordsToHold extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="AddRecordsToHoldRecordSelectionString")
        @SerializedName("AddRecordsToHoldRecordSelectionString")
        @ApiMember(Name="AddRecordsToHoldRecordSelectionString", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String RecordSelectionString = null;
        
        public String getRecordSelectionString() { return RecordSelectionString; }
        public AddRecordsToHold setRecordSelectionString(String value) { this.RecordSelectionString = value; return this; }
    }

    /**
    * Removes all records from this hold. Provides an efficient way for removing all records from a hold. Returns the number of records that were removed from the hold in the RemovedCount property.
    */
    @Api("Removes all records from this hold. Provides an efficient way for removing all records from a hold. Returns the number of records that were removed from the hold in the RemovedCount property.")
    @DataContract
    public static class RemoveAllRecordsFromHold extends BaseMainObjectMethod
    {
        
    }

    /**
    * Removes a set of records from this hold. Provides an efficient way for removing multiple records from a hold. Returns the number of records that were removed from the hold in the RemovedCount property.
    */
    @Api("Removes a set of records from this hold. Provides an efficient way for removing multiple records from a hold. Returns the number of records that were removed from the hold in the RemovedCount property.")
    @DataContract
    public static class RemoveRecordsFromHold extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="RemoveRecordsFromHoldRecordSelectionString")
        @SerializedName("RemoveRecordsFromHoldRecordSelectionString")
        @ApiMember(Name="RemoveRecordsFromHoldRecordSelectionString", ParameterType="form", DataType="string", IsRequired=true, Verb="POST", Description="")
        public String RecordSelectionString = null;
        
        public String getRecordSelectionString() { return RecordSelectionString; }
        public RemoveRecordsFromHold setRecordSelectionString(String value) { this.RecordSelectionString = value; return this; }
    }

    /**
    * Reset the Synchronization flag used by the SharePoint event processor.
    */
    @Api("Reset the Synchronization flag used by the SharePoint event processor.")
    @DataContract
    public static class ResetSynchronizationFlag extends BaseMainObjectMethod
    {
        
    }

    /**
    * Complete the record Action
    */
    @Api("Complete the record Action")
    @DataContract
    public static class CompleteRecordAction extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="CompleteRecordActionCompletionDate")
        @SerializedName("CompleteRecordActionCompletionDate")
        @ApiMember(Name="CompleteRecordActionCompletionDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime CompletionDate = null;

        /**
        * 
        */
        @DataMember(Name="CompleteRecordActionCompletePrevious")
        @SerializedName("CompleteRecordActionCompletePrevious")
        @ApiMember(Name="CompleteRecordActionCompletePrevious", ParameterType="form", DataType="boolean", Verb="POST", Description="")
        public Boolean CompletePrevious = null;
        
        public TrimDateTime getCompletionDate() { return CompletionDate; }
        public CompleteRecordAction setCompletionDate(TrimDateTime value) { this.CompletionDate = value; return this; }
        public Boolean isCompletePrevious() { return CompletePrevious; }
        public CompleteRecordAction setCompletePrevious(Boolean value) { this.CompletePrevious = value; return this; }
    }

    /**
    * Uncomplete the record Action
    */
    @Api("Uncomplete the record Action")
    @DataContract
    public static class UncompleteRecordAction extends BaseMainObjectMethod
    {
        
    }

    /**
    * Reassign the record Action
    */
    @Api("Reassign the record Action")
    @DataContract
    public static class ReassignRecordAction extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="ReassignRecordActionNewAssignee")
        @SerializedName("ReassignRecordActionNewAssignee")
        @ApiMember(Name="ReassignRecordActionNewAssignee", ParameterType="form", DataType="long", IsRequired=true, Verb="POST", Description="")
        public LocationRef NewAssignee = null;
        
        public LocationRef getNewAssignee() { return NewAssignee; }
        public ReassignRecordAction setNewAssignee(LocationRef value) { this.NewAssignee = value; return this; }
    }

    /**
    * Set the cost of a record Action
    */
    @Api("Set the cost of a record Action")
    @DataContract
    public static class SetRecordActionCost extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetRecordActionCostnewCost")
        @SerializedName("SetRecordActionCostnewCost")
        @ApiMember(Name="SetRecordActionCostnewCost", ParameterType="form", DataType="decimal", IsRequired=true, Verb="POST", Description="")
        public BigDecimal newCost = null;
        
        public BigDecimal getNewCost() { return newCost; }
        public SetRecordActionCost setNewCost(BigDecimal value) { this.newCost = value; return this; }
    }

    /**
    * 
    */
    @Api("")
    @DataContract
    public static class SetActiveDateRange extends BaseMainObjectMethod
    {
        /**
        * 
        */
        @DataMember(Name="SetActiveDateRangeValidFromDate")
        @SerializedName("SetActiveDateRangeValidFromDate")
        @ApiMember(Name="SetActiveDateRangeValidFromDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime ValidFromDate = null;

        /**
        * 
        */
        @DataMember(Name="SetActiveDateRangeValidToDate")
        @SerializedName("SetActiveDateRangeValidToDate")
        @ApiMember(Name="SetActiveDateRangeValidToDate", ParameterType="form", DataType="TrimDateTime", Verb="POST", Description="")
        public TrimDateTime ValidToDate = null;
        
        public TrimDateTime getValidFromDate() { return ValidFromDate; }
        public SetActiveDateRange setValidFromDate(TrimDateTime value) { this.ValidFromDate = value; return this; }
        public TrimDateTime getValidToDate() { return ValidToDate; }
        public SetActiveDateRange setValidToDate(TrimDateTime value) { this.ValidToDate = value; return this; }
    }

    /**
    * Fetch the various options set by the user in the HPE Content Manager client.
    */
    @Route(Path="/UserOptions/{UserOptionSet}", Verbs="GET")
    @Api("Fetch the various options set by the user in the HPE Content Manager client.")
    public static class UserOptions implements IReturn<UserOptionsResponse>
    {
        /**
        * Select the option set to return.
        */
        @ApiMember(Name="UserOptionSet", ParameterType="path", DataType="string", IsRequired=true, Verb="GET", Description="Select the option set to return.")
        public UserOptionSetIds UserOptionSet = null;
        
        public UserOptionSetIds getUserOptionSet() { return UserOptionSet; }
        public UserOptions setUserOptionSet(UserOptionSetIds value) { this.UserOptionSet = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Appearance
    */
    @Route(Path="/UserOptions/Appearance", Verbs="POST")
    @Api("Update Appearance")
    @DataContract
    public static class AppearanceUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="AppearanceUserOptionsDblClickContainers")
        @SerializedName("AppearanceUserOptionsDblClickContainers")
        @ApiMember(Name="AppearanceUserOptionsDblClickContainers", ParameterType="form", DataType="string")
        public TrimProperty<DblClickContainerStyle> DblClickContainers = null;

        @DataMember(Name="AppearanceUserOptionsDblClickDocsDesktop")
        @SerializedName("AppearanceUserOptionsDblClickDocsDesktop")
        @ApiMember(Name="AppearanceUserOptionsDblClickDocsDesktop", ParameterType="form", DataType="string")
        public TrimProperty<DblClickStyle> DblClickDocsDesktop = null;

        @DataMember(Name="AppearanceUserOptionsDblClickDocsTrim")
        @SerializedName("AppearanceUserOptionsDblClickDocsTrim")
        @ApiMember(Name="AppearanceUserOptionsDblClickDocsTrim", ParameterType="form", DataType="string")
        public TrimProperty<DblClickStyle> DblClickDocsTrim = null;

        @DataMember(Name="AppearanceUserOptionsDblClickExtLinkName")
        @SerializedName("AppearanceUserOptionsDblClickExtLinkName")
        @ApiMember(Name="AppearanceUserOptionsDblClickExtLinkName", ParameterType="form", DataType="string")
        public TrimStringProperty DblClickExtLinkName = null;

        @DataMember(Name="AppearanceUserOptionsSkinColour")
        @SerializedName("AppearanceUserOptionsSkinColour")
        @ApiMember(Name="AppearanceUserOptionsSkinColour", ParameterType="form", DataType="int")
        public TrimProperty<Integer> SkinColour = null;

        @DataMember(Name="AppearanceUserOptionsSkinMode")
        @SerializedName("AppearanceUserOptionsSkinMode")
        @ApiMember(Name="AppearanceUserOptionsSkinMode", ParameterType="form", DataType="string")
        public TrimProperty<SkinStyle> SkinMode = null;

        @DataMember(Name="AppearanceUserOptionsStyle")
        @SerializedName("AppearanceUserOptionsStyle")
        @ApiMember(Name="AppearanceUserOptionsStyle", ParameterType="form", DataType="string")
        public TrimProperty<FrameAppearance> Style = null;
        
        public TrimProperty<DblClickContainerStyle> getDblClickContainers() { return DblClickContainers; }
        public AppearanceUserOptions setDblClickContainers(TrimProperty<DblClickContainerStyle> value) { this.DblClickContainers = value; return this; }
        public TrimProperty<DblClickStyle> getDblClickDocsDesktop() { return DblClickDocsDesktop; }
        public AppearanceUserOptions setDblClickDocsDesktop(TrimProperty<DblClickStyle> value) { this.DblClickDocsDesktop = value; return this; }
        public TrimProperty<DblClickStyle> getDblClickDocsTrim() { return DblClickDocsTrim; }
        public AppearanceUserOptions setDblClickDocsTrim(TrimProperty<DblClickStyle> value) { this.DblClickDocsTrim = value; return this; }
        public TrimStringProperty getDblClickExtLinkName() { return DblClickExtLinkName; }
        public AppearanceUserOptions setDblClickExtLinkName(TrimStringProperty value) { this.DblClickExtLinkName = value; return this; }
        public TrimProperty<Integer> getSkinColour() { return SkinColour; }
        public AppearanceUserOptions setSkinColour(TrimProperty<Integer> value) { this.SkinColour = value; return this; }
        public TrimProperty<SkinStyle> getSkinMode() { return SkinMode; }
        public AppearanceUserOptions setSkinMode(TrimProperty<SkinStyle> value) { this.SkinMode = value; return this; }
        public TrimProperty<FrameAppearance> getStyle() { return Style; }
        public AppearanceUserOptions setStyle(TrimProperty<FrameAppearance> value) { this.Style = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update BlockedSearchMethods
    */
    @Route(Path="/UserOptions/BlockedSearchMethods", Verbs="POST")
    @Api("Update BlockedSearchMethods")
    @DataContract
    public static class BlockedSearchMethodsUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update ConsignmentLog
    */
    @Route(Path="/UserOptions/ConsignmentLog", Verbs="POST")
    @Api("Update ConsignmentLog")
    @DataContract
    public static class ConsignmentLogUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="ConsignmentLogUserOptionsShowApprovals")
        @SerializedName("ConsignmentLogUserOptionsShowApprovals")
        @ApiMember(Name="ConsignmentLogUserOptionsShowApprovals", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowApprovals = null;
        
        public TrimProperty<Boolean> getShowApprovals() { return ShowApprovals; }
        public ConsignmentLogUserOptions setShowApprovals(TrimProperty<Boolean> value) { this.ShowApprovals = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update DroppedFiles
    */
    @Route(Path="/UserOptions/DroppedFiles", Verbs="POST")
    @Api("Update DroppedFiles")
    @DataContract
    public static class DroppedFilesUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="DroppedFilesUserOptionsAutoViewDocuments")
        @SerializedName("DroppedFilesUserOptionsAutoViewDocuments")
        @ApiMember(Name="DroppedFilesUserOptionsAutoViewDocuments", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AutoViewDocuments = null;

        @DataMember(Name="DroppedFilesUserOptionsConfirmCheckIn")
        @SerializedName("DroppedFilesUserOptionsConfirmCheckIn")
        @ApiMember(Name="DroppedFilesUserOptionsConfirmCheckIn", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ConfirmCheckIn = null;

        @DataMember(Name="DroppedFilesUserOptionsContainer")
        @SerializedName("DroppedFilesUserOptionsContainer")
        @ApiMember(Name="DroppedFilesUserOptionsContainer", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef Container = null;

        @DataMember(Name="DroppedFilesUserOptionsDeleteFromDisk")
        @SerializedName("DroppedFilesUserOptionsDeleteFromDisk")
        @ApiMember(Name="DroppedFilesUserOptionsDeleteFromDisk", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DeleteFromDisk = null;

        @DataMember(Name="DroppedFilesUserOptionsDisplayDataEntryForm")
        @SerializedName("DroppedFilesUserOptionsDisplayDataEntryForm")
        @ApiMember(Name="DroppedFilesUserOptionsDisplayDataEntryForm", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DisplayDataEntryForm = null;

        @DataMember(Name="DroppedFilesUserOptionsEmailUpdateStyle")
        @SerializedName("DroppedFilesUserOptionsEmailUpdateStyle")
        @ApiMember(Name="DroppedFilesUserOptionsEmailUpdateStyle", ParameterType="form", DataType="string")
        public TrimProperty<EmailUpdateStyles> EmailUpdateStyle = null;

        @DataMember(Name="DroppedFilesUserOptionsRecordType")
        @SerializedName("DroppedFilesUserOptionsRecordType")
        @ApiMember(Name="DroppedFilesUserOptionsRecordType", ParameterType="form", DataType="long", Verb="POST")
        public RecordTypeRef RecordType = null;
        
        public TrimProperty<Boolean> getAutoViewDocuments() { return AutoViewDocuments; }
        public DroppedFilesUserOptions setAutoViewDocuments(TrimProperty<Boolean> value) { this.AutoViewDocuments = value; return this; }
        public TrimProperty<Boolean> getConfirmCheckIn() { return ConfirmCheckIn; }
        public DroppedFilesUserOptions setConfirmCheckIn(TrimProperty<Boolean> value) { this.ConfirmCheckIn = value; return this; }
        public RecordRef getContainer() { return Container; }
        public DroppedFilesUserOptions setContainer(RecordRef value) { this.Container = value; return this; }
        public TrimProperty<Boolean> getDeleteFromDisk() { return DeleteFromDisk; }
        public DroppedFilesUserOptions setDeleteFromDisk(TrimProperty<Boolean> value) { this.DeleteFromDisk = value; return this; }
        public TrimProperty<Boolean> getDisplayDataEntryForm() { return DisplayDataEntryForm; }
        public DroppedFilesUserOptions setDisplayDataEntryForm(TrimProperty<Boolean> value) { this.DisplayDataEntryForm = value; return this; }
        public TrimProperty<EmailUpdateStyles> getEmailUpdateStyle() { return EmailUpdateStyle; }
        public DroppedFilesUserOptions setEmailUpdateStyle(TrimProperty<EmailUpdateStyles> value) { this.EmailUpdateStyle = value; return this; }
        public RecordTypeRef getRecordType() { return RecordType; }
        public DroppedFilesUserOptions setRecordType(RecordTypeRef value) { this.RecordType = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update DroppedFolders
    */
    @Route(Path="/UserOptions/DroppedFolders", Verbs="POST")
    @Api("Update DroppedFolders")
    @DataContract
    public static class DroppedFoldersUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="DroppedFoldersUserOptionsDocumentTypeFilter")
        @SerializedName("DroppedFoldersUserOptionsDocumentTypeFilter")
        @ApiMember(Name="DroppedFoldersUserOptionsDocumentTypeFilter", ParameterType="form", DataType="string")
        public TrimStringProperty DocumentTypeFilter = null;

        @DataMember(Name="DroppedFoldersUserOptionsShowBinaryFiles")
        @SerializedName("DroppedFoldersUserOptionsShowBinaryFiles")
        @ApiMember(Name="DroppedFoldersUserOptionsShowBinaryFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowBinaryFiles = null;

        @DataMember(Name="DroppedFoldersUserOptionsShowHiddenFiles")
        @SerializedName("DroppedFoldersUserOptionsShowHiddenFiles")
        @ApiMember(Name="DroppedFoldersUserOptionsShowHiddenFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowHiddenFiles = null;

        @DataMember(Name="DroppedFoldersUserOptionsShowReferenceFiles")
        @SerializedName("DroppedFoldersUserOptionsShowReferenceFiles")
        @ApiMember(Name="DroppedFoldersUserOptionsShowReferenceFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowReferenceFiles = null;

        @DataMember(Name="DroppedFoldersUserOptionsShowRenditionFiles")
        @SerializedName("DroppedFoldersUserOptionsShowRenditionFiles")
        @ApiMember(Name="DroppedFoldersUserOptionsShowRenditionFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowRenditionFiles = null;

        @DataMember(Name="DroppedFoldersUserOptionsShowSystemFiles")
        @SerializedName("DroppedFoldersUserOptionsShowSystemFiles")
        @ApiMember(Name="DroppedFoldersUserOptionsShowSystemFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowSystemFiles = null;
        
        public TrimStringProperty getDocumentTypeFilter() { return DocumentTypeFilter; }
        public DroppedFoldersUserOptions setDocumentTypeFilter(TrimStringProperty value) { this.DocumentTypeFilter = value; return this; }
        public TrimProperty<Boolean> getShowBinaryFiles() { return ShowBinaryFiles; }
        public DroppedFoldersUserOptions setShowBinaryFiles(TrimProperty<Boolean> value) { this.ShowBinaryFiles = value; return this; }
        public TrimProperty<Boolean> getShowHiddenFiles() { return ShowHiddenFiles; }
        public DroppedFoldersUserOptions setShowHiddenFiles(TrimProperty<Boolean> value) { this.ShowHiddenFiles = value; return this; }
        public TrimProperty<Boolean> getShowReferenceFiles() { return ShowReferenceFiles; }
        public DroppedFoldersUserOptions setShowReferenceFiles(TrimProperty<Boolean> value) { this.ShowReferenceFiles = value; return this; }
        public TrimProperty<Boolean> getShowRenditionFiles() { return ShowRenditionFiles; }
        public DroppedFoldersUserOptions setShowRenditionFiles(TrimProperty<Boolean> value) { this.ShowRenditionFiles = value; return this; }
        public TrimProperty<Boolean> getShowSystemFiles() { return ShowSystemFiles; }
        public DroppedFoldersUserOptions setShowSystemFiles(TrimProperty<Boolean> value) { this.ShowSystemFiles = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Dropzone
    */
    @Route(Path="/UserOptions/Dropzone", Verbs="POST")
    @Api("Update Dropzone")
    @DataContract
    public static class DropzoneUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="DropzoneUserOptionsOnMinimise")
        @SerializedName("DropzoneUserOptionsOnMinimise")
        @ApiMember(Name="DropzoneUserOptionsOnMinimise", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> OnMinimise = null;

        @DataMember(Name="DropzoneUserOptionsShowAllSavedSearch")
        @SerializedName("DropzoneUserOptionsShowAllSavedSearch")
        @ApiMember(Name="DropzoneUserOptionsShowAllSavedSearch", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowAllSavedSearch = null;

        @DataMember(Name="DropzoneUserOptionsShowClassifications")
        @SerializedName("DropzoneUserOptionsShowClassifications")
        @ApiMember(Name="DropzoneUserOptionsShowClassifications", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowClassifications = null;

        @DataMember(Name="DropzoneUserOptionsShowFavRecords")
        @SerializedName("DropzoneUserOptionsShowFavRecords")
        @ApiMember(Name="DropzoneUserOptionsShowFavRecords", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowFavRecords = null;

        @DataMember(Name="DropzoneUserOptionsShowFreeTitleOnly")
        @SerializedName("DropzoneUserOptionsShowFreeTitleOnly")
        @ApiMember(Name="DropzoneUserOptionsShowFreeTitleOnly", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowFreeTitleOnly = null;

        @DataMember(Name="DropzoneUserOptionsShowMyClassifications")
        @SerializedName("DropzoneUserOptionsShowMyClassifications")
        @ApiMember(Name="DropzoneUserOptionsShowMyClassifications", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowMyClassifications = null;

        @DataMember(Name="DropzoneUserOptionsShowMyContainers")
        @SerializedName("DropzoneUserOptionsShowMyContainers")
        @ApiMember(Name="DropzoneUserOptionsShowMyContainers", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowMyContainers = null;

        @DataMember(Name="DropzoneUserOptionsShowMyDocuments")
        @SerializedName("DropzoneUserOptionsShowMyDocuments")
        @ApiMember(Name="DropzoneUserOptionsShowMyDocuments", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowMyDocuments = null;

        @DataMember(Name="DropzoneUserOptionsShowSavedSearch")
        @SerializedName("DropzoneUserOptionsShowSavedSearch")
        @ApiMember(Name="DropzoneUserOptionsShowSavedSearch", ParameterType="form", DataType="long", Verb="POST")
        public SavedSearchRef ShowSavedSearch = null;
        
        public TrimProperty<Boolean> getOnMinimise() { return OnMinimise; }
        public DropzoneUserOptions setOnMinimise(TrimProperty<Boolean> value) { this.OnMinimise = value; return this; }
        public TrimProperty<Boolean> getShowAllSavedSearch() { return ShowAllSavedSearch; }
        public DropzoneUserOptions setShowAllSavedSearch(TrimProperty<Boolean> value) { this.ShowAllSavedSearch = value; return this; }
        public TrimProperty<Boolean> getShowClassifications() { return ShowClassifications; }
        public DropzoneUserOptions setShowClassifications(TrimProperty<Boolean> value) { this.ShowClassifications = value; return this; }
        public TrimProperty<Boolean> getShowFavRecords() { return ShowFavRecords; }
        public DropzoneUserOptions setShowFavRecords(TrimProperty<Boolean> value) { this.ShowFavRecords = value; return this; }
        public TrimProperty<Boolean> getShowFreeTitleOnly() { return ShowFreeTitleOnly; }
        public DropzoneUserOptions setShowFreeTitleOnly(TrimProperty<Boolean> value) { this.ShowFreeTitleOnly = value; return this; }
        public TrimProperty<Boolean> getShowMyClassifications() { return ShowMyClassifications; }
        public DropzoneUserOptions setShowMyClassifications(TrimProperty<Boolean> value) { this.ShowMyClassifications = value; return this; }
        public TrimProperty<Boolean> getShowMyContainers() { return ShowMyContainers; }
        public DropzoneUserOptions setShowMyContainers(TrimProperty<Boolean> value) { this.ShowMyContainers = value; return this; }
        public TrimProperty<Boolean> getShowMyDocuments() { return ShowMyDocuments; }
        public DropzoneUserOptions setShowMyDocuments(TrimProperty<Boolean> value) { this.ShowMyDocuments = value; return this; }
        public SavedSearchRef getShowSavedSearch() { return ShowSavedSearch; }
        public DropzoneUserOptions setShowSavedSearch(SavedSearchRef value) { this.ShowSavedSearch = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Email
    */
    @Route(Path="/UserOptions/Email", Verbs="POST")
    @Api("Update Email")
    @DataContract
    public static class EmailUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="EmailUserOptionsAddEmailToRecentDocuments")
        @SerializedName("EmailUserOptionsAddEmailToRecentDocuments")
        @ApiMember(Name="EmailUserOptionsAddEmailToRecentDocuments", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AddEmailToRecentDocuments = null;

        @DataMember(Name="EmailUserOptionsSendUsingTrimForm")
        @SerializedName("EmailUserOptionsSendUsingTrimForm")
        @ApiMember(Name="EmailUserOptionsSendUsingTrimForm", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> SendUsingTrimForm = null;

        @DataMember(Name="EmailUserOptionsUseSimpleMAPI")
        @SerializedName("EmailUserOptionsUseSimpleMAPI")
        @ApiMember(Name="EmailUserOptionsUseSimpleMAPI", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseSimpleMAPI = null;
        
        public TrimProperty<Boolean> getAddEmailToRecentDocuments() { return AddEmailToRecentDocuments; }
        public EmailUserOptions setAddEmailToRecentDocuments(TrimProperty<Boolean> value) { this.AddEmailToRecentDocuments = value; return this; }
        public TrimProperty<Boolean> getSendUsingTrimForm() { return SendUsingTrimForm; }
        public EmailUserOptions setSendUsingTrimForm(TrimProperty<Boolean> value) { this.SendUsingTrimForm = value; return this; }
        public TrimProperty<Boolean> getUseSimpleMAPI() { return UseSimpleMAPI; }
        public EmailUserOptions setUseSimpleMAPI(TrimProperty<Boolean> value) { this.UseSimpleMAPI = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update EmailingRecords
    */
    @Route(Path="/UserOptions/EmailingRecords", Verbs="POST")
    @Api("Update EmailingRecords")
    @DataContract
    public static class EmailingRecordsUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="EmailingRecordsUserOptionsAttachDocument")
        @SerializedName("EmailingRecordsUserOptionsAttachDocument")
        @ApiMember(Name="EmailingRecordsUserOptionsAttachDocument", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AttachDocument = null;

        @DataMember(Name="EmailingRecordsUserOptionsAttachReference")
        @SerializedName("EmailingRecordsUserOptionsAttachReference")
        @ApiMember(Name="EmailingRecordsUserOptionsAttachReference", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AttachReference = null;

        @DataMember(Name="EmailingRecordsUserOptionsAttachRenditions")
        @SerializedName("EmailingRecordsUserOptionsAttachRenditions")
        @ApiMember(Name="EmailingRecordsUserOptionsAttachRenditions", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AttachRenditions = null;

        @DataMember(Name="EmailingRecordsUserOptionsAttachURL")
        @SerializedName("EmailingRecordsUserOptionsAttachURL")
        @ApiMember(Name="EmailingRecordsUserOptionsAttachURL", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AttachURL = null;

        @DataMember(Name="EmailingRecordsUserOptionsAttachWorkingDocument")
        @SerializedName("EmailingRecordsUserOptionsAttachWorkingDocument")
        @ApiMember(Name="EmailingRecordsUserOptionsAttachWorkingDocument", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AttachWorkingDocument = null;
        
        public TrimProperty<Boolean> getAttachDocument() { return AttachDocument; }
        public EmailingRecordsUserOptions setAttachDocument(TrimProperty<Boolean> value) { this.AttachDocument = value; return this; }
        public TrimProperty<Boolean> getAttachReference() { return AttachReference; }
        public EmailingRecordsUserOptions setAttachReference(TrimProperty<Boolean> value) { this.AttachReference = value; return this; }
        public TrimProperty<Boolean> getAttachRenditions() { return AttachRenditions; }
        public EmailingRecordsUserOptions setAttachRenditions(TrimProperty<Boolean> value) { this.AttachRenditions = value; return this; }
        public TrimProperty<Boolean> getAttachURL() { return AttachURL; }
        public EmailingRecordsUserOptions setAttachURL(TrimProperty<Boolean> value) { this.AttachURL = value; return this; }
        public TrimProperty<Boolean> getAttachWorkingDocument() { return AttachWorkingDocument; }
        public EmailingRecordsUserOptions setAttachWorkingDocument(TrimProperty<Boolean> value) { this.AttachWorkingDocument = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update FileTypes
    */
    @Route(Path="/UserOptions/FileTypes", Verbs="POST")
    @Api("Update FileTypes")
    @DataContract
    public static class FileTypesUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update GisData
    */
    @Route(Path="/UserOptions/GisData", Verbs="POST")
    @Api("Update GisData")
    @DataContract
    public static class GisDataUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="GisDataUserOptionsDisplayGISinWebBrowser")
        @SerializedName("GisDataUserOptionsDisplayGISinWebBrowser")
        @ApiMember(Name="GisDataUserOptionsDisplayGISinWebBrowser", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DisplayGISinWebBrowser = null;

        @DataMember(Name="GisDataUserOptionsSeachPreference")
        @SerializedName("GisDataUserOptionsSeachPreference")
        @ApiMember(Name="GisDataUserOptionsSeachPreference", ParameterType="form", DataType="string")
        public TrimStringProperty SeachPreference = null;

        @DataMember(Name="GisDataUserOptionsStartPoint")
        @SerializedName("GisDataUserOptionsStartPoint")
        @ApiMember(Name="GisDataUserOptionsStartPoint", ParameterType="form", DataType="string")
        public TrimStringProperty StartPoint = null;
        
        public TrimProperty<Boolean> getDisplayGISinWebBrowser() { return DisplayGISinWebBrowser; }
        public GisDataUserOptions setDisplayGISinWebBrowser(TrimProperty<Boolean> value) { this.DisplayGISinWebBrowser = value; return this; }
        public TrimStringProperty getSeachPreference() { return SeachPreference; }
        public GisDataUserOptions setSeachPreference(TrimStringProperty value) { this.SeachPreference = value; return this; }
        public TrimStringProperty getStartPoint() { return StartPoint; }
        public GisDataUserOptions setStartPoint(TrimStringProperty value) { this.StartPoint = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Locale
    */
    @Route(Path="/UserOptions/Locale", Verbs="POST")
    @Api("Update Locale")
    @DataContract
    public static class LocaleUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="LocaleUserOptionsDateSeparator")
        @SerializedName("LocaleUserOptionsDateSeparator")
        @ApiMember(Name="LocaleUserOptionsDateSeparator", ParameterType="form", DataType="string")
        public TrimStringProperty DateSeparator = null;

        @DataMember(Name="LocaleUserOptionsMonthBeforeDay")
        @SerializedName("LocaleUserOptionsMonthBeforeDay")
        @ApiMember(Name="LocaleUserOptionsMonthBeforeDay", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> MonthBeforeDay = null;

        @DataMember(Name="LocaleUserOptionsPreferredLanguage")
        @SerializedName("LocaleUserOptionsPreferredLanguage")
        @ApiMember(Name="LocaleUserOptionsPreferredLanguage", ParameterType="form", DataType="string")
        public TrimProperty<Language> PreferredLanguage = null;

        @DataMember(Name="LocaleUserOptionsYearFirst")
        @SerializedName("LocaleUserOptionsYearFirst")
        @ApiMember(Name="LocaleUserOptionsYearFirst", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> YearFirst = null;
        
        public TrimStringProperty getDateSeparator() { return DateSeparator; }
        public LocaleUserOptions setDateSeparator(TrimStringProperty value) { this.DateSeparator = value; return this; }
        public TrimProperty<Boolean> getMonthBeforeDay() { return MonthBeforeDay; }
        public LocaleUserOptions setMonthBeforeDay(TrimProperty<Boolean> value) { this.MonthBeforeDay = value; return this; }
        public TrimProperty<Language> getPreferredLanguage() { return PreferredLanguage; }
        public LocaleUserOptions setPreferredLanguage(TrimProperty<Language> value) { this.PreferredLanguage = value; return this; }
        public TrimProperty<Boolean> getYearFirst() { return YearFirst; }
        public LocaleUserOptions setYearFirst(TrimProperty<Boolean> value) { this.YearFirst = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Outlook
    */
    @Route(Path="/UserOptions/Outlook", Verbs="POST")
    @Api("Update Outlook")
    @DataContract
    public static class OutlookUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="OutlookUserOptionsActionWhenDuplicateDetected")
        @SerializedName("OutlookUserOptionsActionWhenDuplicateDetected")
        @ApiMember(Name="OutlookUserOptionsActionWhenDuplicateDetected", ParameterType="form", DataType="string")
        public TrimProperty<DuplicateEmailOptions> ActionWhenDuplicateDetected = null;

        @DataMember(Name="OutlookUserOptionsCheckinSentItems")
        @SerializedName("OutlookUserOptionsCheckinSentItems")
        @ApiMember(Name="OutlookUserOptionsCheckinSentItems", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> CheckinSentItems = null;

        @DataMember(Name="OutlookUserOptionsDefaultCheckinStyle")
        @SerializedName("OutlookUserOptionsDefaultCheckinStyle")
        @ApiMember(Name="OutlookUserOptionsDefaultCheckinStyle", ParameterType="form", DataType="long", Verb="POST")
        public CheckinStyleRef DefaultCheckinStyle = null;

        @DataMember(Name="OutlookUserOptionsSentItemsCheckinStyle")
        @SerializedName("OutlookUserOptionsSentItemsCheckinStyle")
        @ApiMember(Name="OutlookUserOptionsSentItemsCheckinStyle", ParameterType="form", DataType="long", Verb="POST")
        public CheckinStyleRef SentItemsCheckinStyle = null;

        @DataMember(Name="OutlookUserOptionsShowDataEntryForm")
        @SerializedName("OutlookUserOptionsShowDataEntryForm")
        @ApiMember(Name="OutlookUserOptionsShowDataEntryForm", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowDataEntryForm = null;

        @DataMember(Name="OutlookUserOptionsWarnWhenDuplicateDetected")
        @SerializedName("OutlookUserOptionsWarnWhenDuplicateDetected")
        @ApiMember(Name="OutlookUserOptionsWarnWhenDuplicateDetected", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> WarnWhenDuplicateDetected = null;
        
        public TrimProperty<DuplicateEmailOptions> getActionWhenDuplicateDetected() { return ActionWhenDuplicateDetected; }
        public OutlookUserOptions setActionWhenDuplicateDetected(TrimProperty<DuplicateEmailOptions> value) { this.ActionWhenDuplicateDetected = value; return this; }
        public TrimProperty<Boolean> getCheckinSentItems() { return CheckinSentItems; }
        public OutlookUserOptions setCheckinSentItems(TrimProperty<Boolean> value) { this.CheckinSentItems = value; return this; }
        public CheckinStyleRef getDefaultCheckinStyle() { return DefaultCheckinStyle; }
        public OutlookUserOptions setDefaultCheckinStyle(CheckinStyleRef value) { this.DefaultCheckinStyle = value; return this; }
        public CheckinStyleRef getSentItemsCheckinStyle() { return SentItemsCheckinStyle; }
        public OutlookUserOptions setSentItemsCheckinStyle(CheckinStyleRef value) { this.SentItemsCheckinStyle = value; return this; }
        public TrimProperty<Boolean> getShowDataEntryForm() { return ShowDataEntryForm; }
        public OutlookUserOptions setShowDataEntryForm(TrimProperty<Boolean> value) { this.ShowDataEntryForm = value; return this; }
        public TrimProperty<Boolean> getWarnWhenDuplicateDetected() { return WarnWhenDuplicateDetected; }
        public OutlookUserOptions setWarnWhenDuplicateDetected(TrimProperty<Boolean> value) { this.WarnWhenDuplicateDetected = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update PolicyCentre
    */
    @Route(Path="/UserOptions/PolicyCentre", Verbs="POST")
    @Api("Update PolicyCentre")
    @DataContract
    public static class PolicyCentreUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="PolicyCentreUserOptionsAuthenticationURL")
        @SerializedName("PolicyCentreUserOptionsAuthenticationURL")
        @ApiMember(Name="PolicyCentreUserOptionsAuthenticationURL", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty AuthenticationURL = null;

        @DataMember(Name="PolicyCentreUserOptionsCreateClassifications")
        @SerializedName("PolicyCentreUserOptionsCreateClassifications")
        @ApiMember(Name="PolicyCentreUserOptionsCreateClassifications", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> CreateClassifications = null;

        @DataMember(Name="PolicyCentreUserOptionsDateLastRun")
        @SerializedName("PolicyCentreUserOptionsDateLastRun")
        @ApiMember(Name="PolicyCentreUserOptionsDateLastRun", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateLastRun = null;

        @DataMember(Name="PolicyCentreUserOptionsDiagnosticLogging")
        @SerializedName("PolicyCentreUserOptionsDiagnosticLogging")
        @ApiMember(Name="PolicyCentreUserOptionsDiagnosticLogging", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DiagnosticLogging = null;

        @DataMember(Name="PolicyCentreUserOptionsDomain")
        @SerializedName("PolicyCentreUserOptionsDomain")
        @ApiMember(Name="PolicyCentreUserOptionsDomain", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Domain = null;

        @DataMember(Name="PolicyCentreUserOptionsPageSize")
        @SerializedName("PolicyCentreUserOptionsPageSize")
        @ApiMember(Name="PolicyCentreUserOptionsPageSize", ParameterType="form", DataType="int")
        public TrimProperty<Integer> PageSize = null;

        @DataMember(Name="PolicyCentreUserOptionsPassword")
        @SerializedName("PolicyCentreUserOptionsPassword")
        @ApiMember(Name="PolicyCentreUserOptionsPassword", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Password = null;

        @DataMember(Name="PolicyCentreUserOptionsPrivateKey")
        @SerializedName("PolicyCentreUserOptionsPrivateKey")
        @ApiMember(Name="PolicyCentreUserOptionsPrivateKey", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty PrivateKey = null;

        @DataMember(Name="PolicyCentreUserOptionsRunForever")
        @SerializedName("PolicyCentreUserOptionsRunForever")
        @ApiMember(Name="PolicyCentreUserOptionsRunForever", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> RunForever = null;

        @DataMember(Name="PolicyCentreUserOptionsSynchronizationInterval")
        @SerializedName("PolicyCentreUserOptionsSynchronizationInterval")
        @ApiMember(Name="PolicyCentreUserOptionsSynchronizationInterval", ParameterType="form", DataType="int")
        public TrimProperty<Integer> SynchronizationInterval = null;

        @DataMember(Name="PolicyCentreUserOptionsUserName")
        @SerializedName("PolicyCentreUserOptionsUserName")
        @ApiMember(Name="PolicyCentreUserOptionsUserName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty UserName = null;

        @DataMember(Name="PolicyCentreUserOptionsWebServiceURL")
        @SerializedName("PolicyCentreUserOptionsWebServiceURL")
        @ApiMember(Name="PolicyCentreUserOptionsWebServiceURL", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty WebServiceURL = null;
        
        public TrimStringProperty getAuthenticationURL() { return AuthenticationURL; }
        public PolicyCentreUserOptions setAuthenticationURL(TrimStringProperty value) { this.AuthenticationURL = value; return this; }
        public TrimProperty<Boolean> getCreateClassifications() { return CreateClassifications; }
        public PolicyCentreUserOptions setCreateClassifications(TrimProperty<Boolean> value) { this.CreateClassifications = value; return this; }
        public TrimDateTime getDateLastRun() { return DateLastRun; }
        public PolicyCentreUserOptions setDateLastRun(TrimDateTime value) { this.DateLastRun = value; return this; }
        public TrimProperty<Boolean> getDiagnosticLogging() { return DiagnosticLogging; }
        public PolicyCentreUserOptions setDiagnosticLogging(TrimProperty<Boolean> value) { this.DiagnosticLogging = value; return this; }
        public TrimStringProperty getDomain() { return Domain; }
        public PolicyCentreUserOptions setDomain(TrimStringProperty value) { this.Domain = value; return this; }
        public TrimProperty<Integer> getPageSize() { return PageSize; }
        public PolicyCentreUserOptions setPageSize(TrimProperty<Integer> value) { this.PageSize = value; return this; }
        public TrimStringProperty getPassword() { return Password; }
        public PolicyCentreUserOptions setPassword(TrimStringProperty value) { this.Password = value; return this; }
        public TrimStringProperty getPrivateKey() { return PrivateKey; }
        public PolicyCentreUserOptions setPrivateKey(TrimStringProperty value) { this.PrivateKey = value; return this; }
        public TrimProperty<Boolean> getRunForever() { return RunForever; }
        public PolicyCentreUserOptions setRunForever(TrimProperty<Boolean> value) { this.RunForever = value; return this; }
        public TrimProperty<Integer> getSynchronizationInterval() { return SynchronizationInterval; }
        public PolicyCentreUserOptions setSynchronizationInterval(TrimProperty<Integer> value) { this.SynchronizationInterval = value; return this; }
        public TrimStringProperty getUserName() { return UserName; }
        public PolicyCentreUserOptions setUserName(TrimStringProperty value) { this.UserName = value; return this; }
        public TrimStringProperty getWebServiceURL() { return WebServiceURL; }
        public PolicyCentreUserOptions setWebServiceURL(TrimStringProperty value) { this.WebServiceURL = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Reporter
    */
    @Route(Path="/UserOptions/Reporter", Verbs="POST")
    @Api("Update Reporter")
    @DataContract
    public static class ReporterUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="ReporterUserOptionsHorizontalAdjustment")
        @SerializedName("ReporterUserOptionsHorizontalAdjustment")
        @ApiMember(Name="ReporterUserOptionsHorizontalAdjustment", ParameterType="form", DataType="int")
        public TrimProperty<Integer> HorizontalAdjustment = null;

        @DataMember(Name="ReporterUserOptionsVerticalAdjustment")
        @SerializedName("ReporterUserOptionsVerticalAdjustment")
        @ApiMember(Name="ReporterUserOptionsVerticalAdjustment", ParameterType="form", DataType="int")
        public TrimProperty<Integer> VerticalAdjustment = null;
        
        public TrimProperty<Integer> getHorizontalAdjustment() { return HorizontalAdjustment; }
        public ReporterUserOptions setHorizontalAdjustment(TrimProperty<Integer> value) { this.HorizontalAdjustment = value; return this; }
        public TrimProperty<Integer> getVerticalAdjustment() { return VerticalAdjustment; }
        public ReporterUserOptions setVerticalAdjustment(TrimProperty<Integer> value) { this.VerticalAdjustment = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Ribbon
    */
    @Route(Path="/UserOptions/Ribbon", Verbs="POST")
    @Api("Update Ribbon")
    @DataContract
    public static class RibbonUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Search
    */
    @Route(Path="/UserOptions/Search", Verbs="POST")
    @Api("Update Search")
    @DataContract
    public static class SearchUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="SearchUserOptionsAlphaObjectSort")
        @SerializedName("SearchUserOptionsAlphaObjectSort")
        @ApiMember(Name="SearchUserOptionsAlphaObjectSort", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AlphaObjectSort = null;

        @DataMember(Name="SearchUserOptionsAnyWordContents")
        @SerializedName("SearchUserOptionsAnyWordContents")
        @ApiMember(Name="SearchUserOptionsAnyWordContents", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AnyWordContents = null;

        @DataMember(Name="SearchUserOptionsAnyWordNotes")
        @SerializedName("SearchUserOptionsAnyWordNotes")
        @ApiMember(Name="SearchUserOptionsAnyWordNotes", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AnyWordNotes = null;

        @DataMember(Name="SearchUserOptionsAnyWordTitle")
        @SerializedName("SearchUserOptionsAnyWordTitle")
        @ApiMember(Name="SearchUserOptionsAnyWordTitle", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AnyWordTitle = null;

        @DataMember(Name="SearchUserOptionsAssigneeSearchIncludesAuthorisation")
        @SerializedName("SearchUserOptionsAssigneeSearchIncludesAuthorisation")
        @ApiMember(Name="SearchUserOptionsAssigneeSearchIncludesAuthorisation", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AssigneeSearchIncludesAuthorisation = null;

        @DataMember(Name="SearchUserOptionsAssigneeSearchIncludesDelegates")
        @SerializedName("SearchUserOptionsAssigneeSearchIncludesDelegates")
        @ApiMember(Name="SearchUserOptionsAssigneeSearchIncludesDelegates", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AssigneeSearchIncludesDelegates = null;

        @DataMember(Name="SearchUserOptionsAssigneeSearchIncludesEscalated")
        @SerializedName("SearchUserOptionsAssigneeSearchIncludesEscalated")
        @ApiMember(Name="SearchUserOptionsAssigneeSearchIncludesEscalated", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AssigneeSearchIncludesEscalated = null;

        @DataMember(Name="SearchUserOptionsAssigneeSearchIncludesGroups")
        @SerializedName("SearchUserOptionsAssigneeSearchIncludesGroups")
        @ApiMember(Name="SearchUserOptionsAssigneeSearchIncludesGroups", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AssigneeSearchIncludesGroups = null;

        @DataMember(Name="SearchUserOptionsAssigneeSearchIncludesPosition")
        @SerializedName("SearchUserOptionsAssigneeSearchIncludesPosition")
        @ApiMember(Name="SearchUserOptionsAssigneeSearchIncludesPosition", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AssigneeSearchIncludesPosition = null;

        @DataMember(Name="SearchUserOptionsAutomaticallyCountResults")
        @SerializedName("SearchUserOptionsAutomaticallyCountResults")
        @ApiMember(Name="SearchUserOptionsAutomaticallyCountResults", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AutomaticallyCountResults = null;

        @DataMember(Name="SearchUserOptionsAutomaticallyViewRecords")
        @SerializedName("SearchUserOptionsAutomaticallyViewRecords")
        @ApiMember(Name="SearchUserOptionsAutomaticallyViewRecords", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AutomaticallyViewRecords = null;

        @DataMember(Name="SearchUserOptionsContentsInReverseDateOrder")
        @SerializedName("SearchUserOptionsContentsInReverseDateOrder")
        @ApiMember(Name="SearchUserOptionsContentsInReverseDateOrder", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ContentsInReverseDateOrder = null;

        @DataMember(Name="SearchUserOptionsDefaultIncludesContent")
        @SerializedName("SearchUserOptionsDefaultIncludesContent")
        @ApiMember(Name="SearchUserOptionsDefaultIncludesContent", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DefaultIncludesContent = null;

        @DataMember(Name="SearchUserOptionsDefaultIncludesNotes")
        @SerializedName("SearchUserOptionsDefaultIncludesNotes")
        @ApiMember(Name="SearchUserOptionsDefaultIncludesNotes", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DefaultIncludesNotes = null;

        @DataMember(Name="SearchUserOptionsDefaultIncludesNumber")
        @SerializedName("SearchUserOptionsDefaultIncludesNumber")
        @ApiMember(Name="SearchUserOptionsDefaultIncludesNumber", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DefaultIncludesNumber = null;

        @DataMember(Name="SearchUserOptionsDefaultIncludesTitle")
        @SerializedName("SearchUserOptionsDefaultIncludesTitle")
        @ApiMember(Name="SearchUserOptionsDefaultIncludesTitle", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DefaultIncludesTitle = null;

        @DataMember(Name="SearchUserOptionsEditor")
        @SerializedName("SearchUserOptionsEditor")
        @ApiMember(Name="SearchUserOptionsEditor", ParameterType="form", DataType="string")
        public TrimProperty<SearchEditor> Editor = null;

        @DataMember(Name="SearchUserOptionsExtendedIDOLOptimization")
        @SerializedName("SearchUserOptionsExtendedIDOLOptimization")
        @ApiMember(Name="SearchUserOptionsExtendedIDOLOptimization", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ExtendedIDOLOptimization = null;

        @DataMember(Name="SearchUserOptionsIdolSearchStyle")
        @SerializedName("SearchUserOptionsIdolSearchStyle")
        @ApiMember(Name="SearchUserOptionsIdolSearchStyle", ParameterType="form", DataType="string")
        public TrimProperty<IdolSearchStyles> IdolSearchStyle = null;

        @DataMember(Name="SearchUserOptionsIncludeAlternateWhenShowingFolderContents")
        @SerializedName("SearchUserOptionsIncludeAlternateWhenShowingFolderContents")
        @ApiMember(Name="SearchUserOptionsIncludeAlternateWhenShowingFolderContents", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IncludeAlternateWhenShowingFolderContents = null;

        @DataMember(Name="SearchUserOptionsIncludeLocationsByAddressReference")
        @SerializedName("SearchUserOptionsIncludeLocationsByAddressReference")
        @ApiMember(Name="SearchUserOptionsIncludeLocationsByAddressReference", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IncludeLocationsByAddressReference = null;

        @DataMember(Name="SearchUserOptionsIncludeLocationsByProfileReference")
        @SerializedName("SearchUserOptionsIncludeLocationsByProfileReference")
        @ApiMember(Name="SearchUserOptionsIncludeLocationsByProfileReference", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IncludeLocationsByProfileReference = null;

        @DataMember(Name="SearchUserOptionsPreferredDistance")
        @SerializedName("SearchUserOptionsPreferredDistance")
        @ApiMember(Name="SearchUserOptionsPreferredDistance", ParameterType="form", DataType="long", IsRequired=true)
        public TrimProperty<Long> PreferredDistance = null;

        @DataMember(Name="SearchUserOptionsPreferredGDU")
        @SerializedName("SearchUserOptionsPreferredGDU")
        @ApiMember(Name="SearchUserOptionsPreferredGDU", ParameterType="form", DataType="string")
        public TrimProperty<GeographyDistanceUnit> PreferredGDU = null;

        @DataMember(Name="SearchUserOptionsRecordEditor")
        @SerializedName("SearchUserOptionsRecordEditor")
        @ApiMember(Name="SearchUserOptionsRecordEditor", ParameterType="form", DataType="string")
        public TrimProperty<SearchEditor> RecordEditor = null;

        @DataMember(Name="SearchUserOptionsStartPointDefault")
        @SerializedName("SearchUserOptionsStartPointDefault")
        @ApiMember(Name="SearchUserOptionsStartPointDefault", ParameterType="form", DataType="string")
        public TrimProperty<SearchStartPoint> StartPointDefault = null;

        @DataMember(Name="SearchUserOptionsStartPointForContainers")
        @SerializedName("SearchUserOptionsStartPointForContainers")
        @ApiMember(Name="SearchUserOptionsStartPointForContainers", ParameterType="form", DataType="string")
        public TrimProperty<DesktopStartStates> StartPointForContainers = null;

        @DataMember(Name="SearchUserOptionsStartPointForDocuments")
        @SerializedName("SearchUserOptionsStartPointForDocuments")
        @ApiMember(Name="SearchUserOptionsStartPointForDocuments", ParameterType="form", DataType="string")
        public TrimProperty<DesktopStartStates> StartPointForDocuments = null;

        @DataMember(Name="SearchUserOptionsStartPointForLocations")
        @SerializedName("SearchUserOptionsStartPointForLocations")
        @ApiMember(Name="SearchUserOptionsStartPointForLocations", ParameterType="form", DataType="string")
        public TrimProperty<SearchStartPoint> StartPointForLocations = null;

        @DataMember(Name="SearchUserOptionsStartPointRecordDefault")
        @SerializedName("SearchUserOptionsStartPointRecordDefault")
        @ApiMember(Name="SearchUserOptionsStartPointRecordDefault", ParameterType="form", DataType="string")
        public TrimProperty<DesktopStartStates> StartPointRecordDefault = null;

        @DataMember(Name="SearchUserOptionsUseDirectIDOLquery")
        @SerializedName("SearchUserOptionsUseDirectIDOLquery")
        @ApiMember(Name="SearchUserOptionsUseDirectIDOLquery", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseDirectIDOLquery = null;

        @DataMember(Name="SearchUserOptionsUseSameWindowWhenNavigating")
        @SerializedName("SearchUserOptionsUseSameWindowWhenNavigating")
        @ApiMember(Name="SearchUserOptionsUseSameWindowWhenNavigating", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseSameWindowWhenNavigating = null;

        @DataMember(Name="SearchUserOptionsUseSQLViews")
        @SerializedName("SearchUserOptionsUseSQLViews")
        @ApiMember(Name="SearchUserOptionsUseSQLViews", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseSQLViews = null;
        
        public TrimProperty<Boolean> getAlphaObjectSort() { return AlphaObjectSort; }
        public SearchUserOptions setAlphaObjectSort(TrimProperty<Boolean> value) { this.AlphaObjectSort = value; return this; }
        public TrimProperty<Boolean> getAnyWordContents() { return AnyWordContents; }
        public SearchUserOptions setAnyWordContents(TrimProperty<Boolean> value) { this.AnyWordContents = value; return this; }
        public TrimProperty<Boolean> getAnyWordNotes() { return AnyWordNotes; }
        public SearchUserOptions setAnyWordNotes(TrimProperty<Boolean> value) { this.AnyWordNotes = value; return this; }
        public TrimProperty<Boolean> getAnyWordTitle() { return AnyWordTitle; }
        public SearchUserOptions setAnyWordTitle(TrimProperty<Boolean> value) { this.AnyWordTitle = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesAuthorisation() { return AssigneeSearchIncludesAuthorisation; }
        public SearchUserOptions setAssigneeSearchIncludesAuthorisation(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesAuthorisation = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesDelegates() { return AssigneeSearchIncludesDelegates; }
        public SearchUserOptions setAssigneeSearchIncludesDelegates(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesDelegates = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesEscalated() { return AssigneeSearchIncludesEscalated; }
        public SearchUserOptions setAssigneeSearchIncludesEscalated(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesEscalated = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesGroups() { return AssigneeSearchIncludesGroups; }
        public SearchUserOptions setAssigneeSearchIncludesGroups(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesGroups = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesPosition() { return AssigneeSearchIncludesPosition; }
        public SearchUserOptions setAssigneeSearchIncludesPosition(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesPosition = value; return this; }
        public TrimProperty<Boolean> getAutomaticallyCountResults() { return AutomaticallyCountResults; }
        public SearchUserOptions setAutomaticallyCountResults(TrimProperty<Boolean> value) { this.AutomaticallyCountResults = value; return this; }
        public TrimProperty<Boolean> getAutomaticallyViewRecords() { return AutomaticallyViewRecords; }
        public SearchUserOptions setAutomaticallyViewRecords(TrimProperty<Boolean> value) { this.AutomaticallyViewRecords = value; return this; }
        public TrimProperty<Boolean> getContentsInReverseDateOrder() { return ContentsInReverseDateOrder; }
        public SearchUserOptions setContentsInReverseDateOrder(TrimProperty<Boolean> value) { this.ContentsInReverseDateOrder = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesContent() { return DefaultIncludesContent; }
        public SearchUserOptions setDefaultIncludesContent(TrimProperty<Boolean> value) { this.DefaultIncludesContent = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesNotes() { return DefaultIncludesNotes; }
        public SearchUserOptions setDefaultIncludesNotes(TrimProperty<Boolean> value) { this.DefaultIncludesNotes = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesNumber() { return DefaultIncludesNumber; }
        public SearchUserOptions setDefaultIncludesNumber(TrimProperty<Boolean> value) { this.DefaultIncludesNumber = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesTitle() { return DefaultIncludesTitle; }
        public SearchUserOptions setDefaultIncludesTitle(TrimProperty<Boolean> value) { this.DefaultIncludesTitle = value; return this; }
        public TrimProperty<SearchEditor> getEditor() { return Editor; }
        public SearchUserOptions setEditor(TrimProperty<SearchEditor> value) { this.Editor = value; return this; }
        public TrimProperty<Boolean> getExtendedIDOLOptimization() { return ExtendedIDOLOptimization; }
        public SearchUserOptions setExtendedIDOLOptimization(TrimProperty<Boolean> value) { this.ExtendedIDOLOptimization = value; return this; }
        public TrimProperty<IdolSearchStyles> getIdolSearchStyle() { return IdolSearchStyle; }
        public SearchUserOptions setIdolSearchStyle(TrimProperty<IdolSearchStyles> value) { this.IdolSearchStyle = value; return this; }
        public TrimProperty<Boolean> getIncludeAlternateWhenShowingFolderContents() { return IncludeAlternateWhenShowingFolderContents; }
        public SearchUserOptions setIncludeAlternateWhenShowingFolderContents(TrimProperty<Boolean> value) { this.IncludeAlternateWhenShowingFolderContents = value; return this; }
        public TrimProperty<Boolean> getIncludeLocationsByAddressReference() { return IncludeLocationsByAddressReference; }
        public SearchUserOptions setIncludeLocationsByAddressReference(TrimProperty<Boolean> value) { this.IncludeLocationsByAddressReference = value; return this; }
        public TrimProperty<Boolean> getIncludeLocationsByProfileReference() { return IncludeLocationsByProfileReference; }
        public SearchUserOptions setIncludeLocationsByProfileReference(TrimProperty<Boolean> value) { this.IncludeLocationsByProfileReference = value; return this; }
        public TrimProperty<Long> getPreferredDistance() { return PreferredDistance; }
        public SearchUserOptions setPreferredDistance(TrimProperty<Long> value) { this.PreferredDistance = value; return this; }
        public TrimProperty<GeographyDistanceUnit> getPreferredGDU() { return PreferredGDU; }
        public SearchUserOptions setPreferredGDU(TrimProperty<GeographyDistanceUnit> value) { this.PreferredGDU = value; return this; }
        public TrimProperty<SearchEditor> getRecordEditor() { return RecordEditor; }
        public SearchUserOptions setRecordEditor(TrimProperty<SearchEditor> value) { this.RecordEditor = value; return this; }
        public TrimProperty<SearchStartPoint> getStartPointDefault() { return StartPointDefault; }
        public SearchUserOptions setStartPointDefault(TrimProperty<SearchStartPoint> value) { this.StartPointDefault = value; return this; }
        public TrimProperty<DesktopStartStates> getStartPointForContainers() { return StartPointForContainers; }
        public SearchUserOptions setStartPointForContainers(TrimProperty<DesktopStartStates> value) { this.StartPointForContainers = value; return this; }
        public TrimProperty<DesktopStartStates> getStartPointForDocuments() { return StartPointForDocuments; }
        public SearchUserOptions setStartPointForDocuments(TrimProperty<DesktopStartStates> value) { this.StartPointForDocuments = value; return this; }
        public TrimProperty<SearchStartPoint> getStartPointForLocations() { return StartPointForLocations; }
        public SearchUserOptions setStartPointForLocations(TrimProperty<SearchStartPoint> value) { this.StartPointForLocations = value; return this; }
        public TrimProperty<DesktopStartStates> getStartPointRecordDefault() { return StartPointRecordDefault; }
        public SearchUserOptions setStartPointRecordDefault(TrimProperty<DesktopStartStates> value) { this.StartPointRecordDefault = value; return this; }
        public TrimProperty<Boolean> getUseDirectIDOLquery() { return UseDirectIDOLquery; }
        public SearchUserOptions setUseDirectIDOLquery(TrimProperty<Boolean> value) { this.UseDirectIDOLquery = value; return this; }
        public TrimProperty<Boolean> getUseSameWindowWhenNavigating() { return UseSameWindowWhenNavigating; }
        public SearchUserOptions setUseSameWindowWhenNavigating(TrimProperty<Boolean> value) { this.UseSameWindowWhenNavigating = value; return this; }
        public TrimProperty<Boolean> getUseSQLViews() { return UseSQLViews; }
        public SearchUserOptions setUseSQLViews(TrimProperty<Boolean> value) { this.UseSQLViews = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update SortAndFilter
    */
    @Route(Path="/UserOptions/SortAndFilter", Verbs="POST")
    @Api("Update SortAndFilter")
    @DataContract
    public static class SortAndFilterUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Spelling
    */
    @Route(Path="/UserOptions/Spelling", Verbs="POST")
    @Api("Update Spelling")
    @DataContract
    public static class SpellingUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="SpellingUserOptionsAdvancedSpellingOptions")
        @SerializedName("SpellingUserOptionsAdvancedSpellingOptions")
        @ApiMember(Name="SpellingUserOptionsAdvancedSpellingOptions", ParameterType="form", DataType="string")
        public TrimStringProperty AdvancedSpellingOptions = null;

        @DataMember(Name="SpellingUserOptionsExtraDictionaries")
        @SerializedName("SpellingUserOptionsExtraDictionaries")
        @ApiMember(Name="SpellingUserOptionsExtraDictionaries", ParameterType="form", DataType="string")
        public TrimStringProperty ExtraDictionaries = null;

        @DataMember(Name="SpellingUserOptionsUseAmerican")
        @SerializedName("SpellingUserOptionsUseAmerican")
        @ApiMember(Name="SpellingUserOptionsUseAmerican", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseAmerican = null;

        @DataMember(Name="SpellingUserOptionsUseBritish")
        @SerializedName("SpellingUserOptionsUseBritish")
        @ApiMember(Name="SpellingUserOptionsUseBritish", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseBritish = null;

        @DataMember(Name="SpellingUserOptionsUseChinese")
        @SerializedName("SpellingUserOptionsUseChinese")
        @ApiMember(Name="SpellingUserOptionsUseChinese", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseChinese = null;

        @DataMember(Name="SpellingUserOptionsUseDutch")
        @SerializedName("SpellingUserOptionsUseDutch")
        @ApiMember(Name="SpellingUserOptionsUseDutch", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseDutch = null;

        @DataMember(Name="SpellingUserOptionsUseFrench")
        @SerializedName("SpellingUserOptionsUseFrench")
        @ApiMember(Name="SpellingUserOptionsUseFrench", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseFrench = null;

        @DataMember(Name="SpellingUserOptionsUseGerman")
        @SerializedName("SpellingUserOptionsUseGerman")
        @ApiMember(Name="SpellingUserOptionsUseGerman", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseGerman = null;

        @DataMember(Name="SpellingUserOptionsUseItalian")
        @SerializedName("SpellingUserOptionsUseItalian")
        @ApiMember(Name="SpellingUserOptionsUseItalian", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseItalian = null;

        @DataMember(Name="SpellingUserOptionsUsePortuguese")
        @SerializedName("SpellingUserOptionsUsePortuguese")
        @ApiMember(Name="SpellingUserOptionsUsePortuguese", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UsePortuguese = null;

        @DataMember(Name="SpellingUserOptionsUsePortugueseBrazil")
        @SerializedName("SpellingUserOptionsUsePortugueseBrazil")
        @ApiMember(Name="SpellingUserOptionsUsePortugueseBrazil", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UsePortugueseBrazil = null;

        @DataMember(Name="SpellingUserOptionsUseRussian")
        @SerializedName("SpellingUserOptionsUseRussian")
        @ApiMember(Name="SpellingUserOptionsUseRussian", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseRussian = null;

        @DataMember(Name="SpellingUserOptionsUseSpanish")
        @SerializedName("SpellingUserOptionsUseSpanish")
        @ApiMember(Name="SpellingUserOptionsUseSpanish", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseSpanish = null;

        @DataMember(Name="SpellingUserOptionsUseSwedish")
        @SerializedName("SpellingUserOptionsUseSwedish")
        @ApiMember(Name="SpellingUserOptionsUseSwedish", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseSwedish = null;

        @DataMember(Name="SpellingUserOptionsUseVietnamese")
        @SerializedName("SpellingUserOptionsUseVietnamese")
        @ApiMember(Name="SpellingUserOptionsUseVietnamese", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseVietnamese = null;
        
        public TrimStringProperty getAdvancedSpellingOptions() { return AdvancedSpellingOptions; }
        public SpellingUserOptions setAdvancedSpellingOptions(TrimStringProperty value) { this.AdvancedSpellingOptions = value; return this; }
        public TrimStringProperty getExtraDictionaries() { return ExtraDictionaries; }
        public SpellingUserOptions setExtraDictionaries(TrimStringProperty value) { this.ExtraDictionaries = value; return this; }
        public TrimProperty<Boolean> getUseAmerican() { return UseAmerican; }
        public SpellingUserOptions setUseAmerican(TrimProperty<Boolean> value) { this.UseAmerican = value; return this; }
        public TrimProperty<Boolean> getUseBritish() { return UseBritish; }
        public SpellingUserOptions setUseBritish(TrimProperty<Boolean> value) { this.UseBritish = value; return this; }
        public TrimProperty<Boolean> getUseChinese() { return UseChinese; }
        public SpellingUserOptions setUseChinese(TrimProperty<Boolean> value) { this.UseChinese = value; return this; }
        public TrimProperty<Boolean> getUseDutch() { return UseDutch; }
        public SpellingUserOptions setUseDutch(TrimProperty<Boolean> value) { this.UseDutch = value; return this; }
        public TrimProperty<Boolean> getUseFrench() { return UseFrench; }
        public SpellingUserOptions setUseFrench(TrimProperty<Boolean> value) { this.UseFrench = value; return this; }
        public TrimProperty<Boolean> getUseGerman() { return UseGerman; }
        public SpellingUserOptions setUseGerman(TrimProperty<Boolean> value) { this.UseGerman = value; return this; }
        public TrimProperty<Boolean> getUseItalian() { return UseItalian; }
        public SpellingUserOptions setUseItalian(TrimProperty<Boolean> value) { this.UseItalian = value; return this; }
        public TrimProperty<Boolean> getUsePortuguese() { return UsePortuguese; }
        public SpellingUserOptions setUsePortuguese(TrimProperty<Boolean> value) { this.UsePortuguese = value; return this; }
        public TrimProperty<Boolean> getUsePortugueseBrazil() { return UsePortugueseBrazil; }
        public SpellingUserOptions setUsePortugueseBrazil(TrimProperty<Boolean> value) { this.UsePortugueseBrazil = value; return this; }
        public TrimProperty<Boolean> getUseRussian() { return UseRussian; }
        public SpellingUserOptions setUseRussian(TrimProperty<Boolean> value) { this.UseRussian = value; return this; }
        public TrimProperty<Boolean> getUseSpanish() { return UseSpanish; }
        public SpellingUserOptions setUseSpanish(TrimProperty<Boolean> value) { this.UseSpanish = value; return this; }
        public TrimProperty<Boolean> getUseSwedish() { return UseSwedish; }
        public SpellingUserOptions setUseSwedish(TrimProperty<Boolean> value) { this.UseSwedish = value; return this; }
        public TrimProperty<Boolean> getUseVietnamese() { return UseVietnamese; }
        public SpellingUserOptions setUseVietnamese(TrimProperty<Boolean> value) { this.UseVietnamese = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Startup
    */
    @Route(Path="/UserOptions/Startup", Verbs="POST")
    @Api("Update Startup")
    @DataContract
    public static class StartupUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="StartupUserOptionsActivityDue")
        @SerializedName("StartupUserOptionsActivityDue")
        @ApiMember(Name="StartupUserOptionsActivityDue", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ActivityDue = null;

        @DataMember(Name="StartupUserOptionsCheckinStyles")
        @SerializedName("StartupUserOptionsCheckinStyles")
        @ApiMember(Name="StartupUserOptionsCheckinStyles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> CheckinStyles = null;

        @DataMember(Name="StartupUserOptionsClassificationBrowser")
        @SerializedName("StartupUserOptionsClassificationBrowser")
        @ApiMember(Name="StartupUserOptionsClassificationBrowser", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ClassificationBrowser = null;

        @DataMember(Name="StartupUserOptionsClientMatterHierarchy")
        @SerializedName("StartupUserOptionsClientMatterHierarchy")
        @ApiMember(Name="StartupUserOptionsClientMatterHierarchy", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ClientMatterHierarchy = null;

        @DataMember(Name="StartupUserOptionsDocumentsCheckedOut")
        @SerializedName("StartupUserOptionsDocumentsCheckedOut")
        @ApiMember(Name="StartupUserOptionsDocumentsCheckedOut", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DocumentsCheckedOut = null;

        @DataMember(Name="StartupUserOptionsDueTray")
        @SerializedName("StartupUserOptionsDueTray")
        @ApiMember(Name="StartupUserOptionsDueTray", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DueTray = null;

        @DataMember(Name="StartupUserOptionsFavoriteClassifications")
        @SerializedName("StartupUserOptionsFavoriteClassifications")
        @ApiMember(Name="StartupUserOptionsFavoriteClassifications", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> FavoriteClassifications = null;

        @DataMember(Name="StartupUserOptionsFavoriteLocations")
        @SerializedName("StartupUserOptionsFavoriteLocations")
        @ApiMember(Name="StartupUserOptionsFavoriteLocations", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> FavoriteLocations = null;

        @DataMember(Name="StartupUserOptionsFavoriteRecords")
        @SerializedName("StartupUserOptionsFavoriteRecords")
        @ApiMember(Name="StartupUserOptionsFavoriteRecords", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> FavoriteRecords = null;

        @DataMember(Name="StartupUserOptionsFavoriteSearches")
        @SerializedName("StartupUserOptionsFavoriteSearches")
        @ApiMember(Name="StartupUserOptionsFavoriteSearches", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> FavoriteSearches = null;

        @DataMember(Name="StartupUserOptionsFavoriteWorkflows")
        @SerializedName("StartupUserOptionsFavoriteWorkflows")
        @ApiMember(Name="StartupUserOptionsFavoriteWorkflows", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> FavoriteWorkflows = null;

        @DataMember(Name="StartupUserOptionsFind")
        @SerializedName("StartupUserOptionsFind")
        @ApiMember(Name="StartupUserOptionsFind", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> Find = null;

        @DataMember(Name="StartupUserOptionsInDueTray")
        @SerializedName("StartupUserOptionsInDueTray")
        @ApiMember(Name="StartupUserOptionsInDueTray", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> InDueTray = null;

        @DataMember(Name="StartupUserOptionsInTray")
        @SerializedName("StartupUserOptionsInTray")
        @ApiMember(Name="StartupUserOptionsInTray", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> InTray = null;

        @DataMember(Name="StartupUserOptionsNewItem")
        @SerializedName("StartupUserOptionsNewItem")
        @ApiMember(Name="StartupUserOptionsNewItem", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> NewItem = null;

        @DataMember(Name="StartupUserOptionsOfflineRecords")
        @SerializedName("StartupUserOptionsOfflineRecords")
        @ApiMember(Name="StartupUserOptionsOfflineRecords", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> OfflineRecords = null;

        @DataMember(Name="StartupUserOptionsRecentContainers")
        @SerializedName("StartupUserOptionsRecentContainers")
        @ApiMember(Name="StartupUserOptionsRecentContainers", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> RecentContainers = null;

        @DataMember(Name="StartupUserOptionsRecentDocuments")
        @SerializedName("StartupUserOptionsRecentDocuments")
        @ApiMember(Name="StartupUserOptionsRecentDocuments", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> RecentDocuments = null;

        @DataMember(Name="StartupUserOptionsRequests")
        @SerializedName("StartupUserOptionsRequests")
        @ApiMember(Name="StartupUserOptionsRequests", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> Requests = null;

        @DataMember(Name="StartupUserOptionsTodoItems")
        @SerializedName("StartupUserOptionsTodoItems")
        @ApiMember(Name="StartupUserOptionsTodoItems", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> TodoItems = null;

        @DataMember(Name="StartupUserOptionsWebClientPane1")
        @SerializedName("StartupUserOptionsWebClientPane1")
        @ApiMember(Name="StartupUserOptionsWebClientPane1", ParameterType="form", DataType="string")
        public TrimProperty<StartupPaneType> WebClientPane1 = null;

        @DataMember(Name="StartupUserOptionsWebClientPane2")
        @SerializedName("StartupUserOptionsWebClientPane2")
        @ApiMember(Name="StartupUserOptionsWebClientPane2", ParameterType="form", DataType="string")
        public TrimProperty<StartupPaneType> WebClientPane2 = null;

        @DataMember(Name="StartupUserOptionsWebClientPane3")
        @SerializedName("StartupUserOptionsWebClientPane3")
        @ApiMember(Name="StartupUserOptionsWebClientPane3", ParameterType="form", DataType="string")
        public TrimProperty<StartupPaneType> WebClientPane3 = null;

        @DataMember(Name="StartupUserOptionsWorkTray")
        @SerializedName("StartupUserOptionsWorkTray")
        @ApiMember(Name="StartupUserOptionsWorkTray", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> WorkTray = null;
        
        public TrimProperty<Boolean> getActivityDue() { return ActivityDue; }
        public StartupUserOptions setActivityDue(TrimProperty<Boolean> value) { this.ActivityDue = value; return this; }
        public TrimProperty<Boolean> getCheckinStyles() { return CheckinStyles; }
        public StartupUserOptions setCheckinStyles(TrimProperty<Boolean> value) { this.CheckinStyles = value; return this; }
        public TrimProperty<Boolean> getClassificationBrowser() { return ClassificationBrowser; }
        public StartupUserOptions setClassificationBrowser(TrimProperty<Boolean> value) { this.ClassificationBrowser = value; return this; }
        public TrimProperty<Boolean> getClientMatterHierarchy() { return ClientMatterHierarchy; }
        public StartupUserOptions setClientMatterHierarchy(TrimProperty<Boolean> value) { this.ClientMatterHierarchy = value; return this; }
        public TrimProperty<Boolean> getDocumentsCheckedOut() { return DocumentsCheckedOut; }
        public StartupUserOptions setDocumentsCheckedOut(TrimProperty<Boolean> value) { this.DocumentsCheckedOut = value; return this; }
        public TrimProperty<Boolean> getDueTray() { return DueTray; }
        public StartupUserOptions setDueTray(TrimProperty<Boolean> value) { this.DueTray = value; return this; }
        public TrimProperty<Boolean> getFavoriteClassifications() { return FavoriteClassifications; }
        public StartupUserOptions setFavoriteClassifications(TrimProperty<Boolean> value) { this.FavoriteClassifications = value; return this; }
        public TrimProperty<Boolean> getFavoriteLocations() { return FavoriteLocations; }
        public StartupUserOptions setFavoriteLocations(TrimProperty<Boolean> value) { this.FavoriteLocations = value; return this; }
        public TrimProperty<Boolean> getFavoriteRecords() { return FavoriteRecords; }
        public StartupUserOptions setFavoriteRecords(TrimProperty<Boolean> value) { this.FavoriteRecords = value; return this; }
        public TrimProperty<Boolean> getFavoriteSearches() { return FavoriteSearches; }
        public StartupUserOptions setFavoriteSearches(TrimProperty<Boolean> value) { this.FavoriteSearches = value; return this; }
        public TrimProperty<Boolean> getFavoriteWorkflows() { return FavoriteWorkflows; }
        public StartupUserOptions setFavoriteWorkflows(TrimProperty<Boolean> value) { this.FavoriteWorkflows = value; return this; }
        public TrimProperty<Boolean> getFind() { return Find; }
        public StartupUserOptions setFind(TrimProperty<Boolean> value) { this.Find = value; return this; }
        public TrimProperty<Boolean> getInDueTray() { return InDueTray; }
        public StartupUserOptions setInDueTray(TrimProperty<Boolean> value) { this.InDueTray = value; return this; }
        public TrimProperty<Boolean> getInTray() { return InTray; }
        public StartupUserOptions setInTray(TrimProperty<Boolean> value) { this.InTray = value; return this; }
        public TrimProperty<Boolean> getNewItem() { return NewItem; }
        public StartupUserOptions setNewItem(TrimProperty<Boolean> value) { this.NewItem = value; return this; }
        public TrimProperty<Boolean> getOfflineRecords() { return OfflineRecords; }
        public StartupUserOptions setOfflineRecords(TrimProperty<Boolean> value) { this.OfflineRecords = value; return this; }
        public TrimProperty<Boolean> getRecentContainers() { return RecentContainers; }
        public StartupUserOptions setRecentContainers(TrimProperty<Boolean> value) { this.RecentContainers = value; return this; }
        public TrimProperty<Boolean> getRecentDocuments() { return RecentDocuments; }
        public StartupUserOptions setRecentDocuments(TrimProperty<Boolean> value) { this.RecentDocuments = value; return this; }
        public TrimProperty<Boolean> getRequests() { return Requests; }
        public StartupUserOptions setRequests(TrimProperty<Boolean> value) { this.Requests = value; return this; }
        public TrimProperty<Boolean> getTodoItems() { return TodoItems; }
        public StartupUserOptions setTodoItems(TrimProperty<Boolean> value) { this.TodoItems = value; return this; }
        public TrimProperty<StartupPaneType> getWebClientPane1() { return WebClientPane1; }
        public StartupUserOptions setWebClientPane1(TrimProperty<StartupPaneType> value) { this.WebClientPane1 = value; return this; }
        public TrimProperty<StartupPaneType> getWebClientPane2() { return WebClientPane2; }
        public StartupUserOptions setWebClientPane2(TrimProperty<StartupPaneType> value) { this.WebClientPane2 = value; return this; }
        public TrimProperty<StartupPaneType> getWebClientPane3() { return WebClientPane3; }
        public StartupUserOptions setWebClientPane3(TrimProperty<StartupPaneType> value) { this.WebClientPane3 = value; return this; }
        public TrimProperty<Boolean> getWorkTray() { return WorkTray; }
        public StartupUserOptions setWorkTray(TrimProperty<Boolean> value) { this.WorkTray = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update TreeBox
    */
    @Route(Path="/UserOptions/TreeBox", Verbs="POST")
    @Api("Update TreeBox")
    @DataContract
    public static class TreeBoxUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Viewer
    */
    @Route(Path="/UserOptions/Viewer", Verbs="POST")
    @Api("Update Viewer")
    @DataContract
    public static class ViewerUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="ViewerUserOptionsBrowserFileTypes")
        @SerializedName("ViewerUserOptionsBrowserFileTypes")
        @ApiMember(Name="ViewerUserOptionsBrowserFileTypes", ParameterType="form", DataType="string")
        public TrimStringProperty BrowserFileTypes = null;

        @DataMember(Name="ViewerUserOptionsLaunchNativeMailViewer")
        @SerializedName("ViewerUserOptionsLaunchNativeMailViewer")
        @ApiMember(Name="ViewerUserOptionsLaunchNativeMailViewer", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> LaunchNativeMailViewer = null;

        @DataMember(Name="ViewerUserOptionsNativeApplicationFileTypes")
        @SerializedName("ViewerUserOptionsNativeApplicationFileTypes")
        @ApiMember(Name="ViewerUserOptionsNativeApplicationFileTypes", ParameterType="form", DataType="string")
        public TrimStringProperty NativeApplicationFileTypes = null;

        @DataMember(Name="ViewerUserOptionsPreviewDocument")
        @SerializedName("ViewerUserOptionsPreviewDocument")
        @ApiMember(Name="ViewerUserOptionsPreviewDocument", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> PreviewDocument = null;

        @DataMember(Name="ViewerUserOptionsPreviewRevision")
        @SerializedName("ViewerUserOptionsPreviewRevision")
        @ApiMember(Name="ViewerUserOptionsPreviewRevision", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> PreviewRevision = null;

        @DataMember(Name="ViewerUserOptionsPreviewShowHighlights")
        @SerializedName("ViewerUserOptionsPreviewShowHighlights")
        @ApiMember(Name="ViewerUserOptionsPreviewShowHighlights", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> PreviewShowHighlights = null;

        @DataMember(Name="ViewerUserOptionsReuseViewerWindow")
        @SerializedName("ViewerUserOptionsReuseViewerWindow")
        @ApiMember(Name="ViewerUserOptionsReuseViewerWindow", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ReuseViewerWindow = null;
        
        public TrimStringProperty getBrowserFileTypes() { return BrowserFileTypes; }
        public ViewerUserOptions setBrowserFileTypes(TrimStringProperty value) { this.BrowserFileTypes = value; return this; }
        public TrimProperty<Boolean> getLaunchNativeMailViewer() { return LaunchNativeMailViewer; }
        public ViewerUserOptions setLaunchNativeMailViewer(TrimProperty<Boolean> value) { this.LaunchNativeMailViewer = value; return this; }
        public TrimStringProperty getNativeApplicationFileTypes() { return NativeApplicationFileTypes; }
        public ViewerUserOptions setNativeApplicationFileTypes(TrimStringProperty value) { this.NativeApplicationFileTypes = value; return this; }
        public TrimProperty<Boolean> getPreviewDocument() { return PreviewDocument; }
        public ViewerUserOptions setPreviewDocument(TrimProperty<Boolean> value) { this.PreviewDocument = value; return this; }
        public TrimProperty<Boolean> getPreviewRevision() { return PreviewRevision; }
        public ViewerUserOptions setPreviewRevision(TrimProperty<Boolean> value) { this.PreviewRevision = value; return this; }
        public TrimProperty<Boolean> getPreviewShowHighlights() { return PreviewShowHighlights; }
        public ViewerUserOptions setPreviewShowHighlights(TrimProperty<Boolean> value) { this.PreviewShowHighlights = value; return this; }
        public TrimProperty<Boolean> getReuseViewerWindow() { return ReuseViewerWindow; }
        public ViewerUserOptions setReuseViewerWindow(TrimProperty<Boolean> value) { this.ReuseViewerWindow = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update ViewPane
    */
    @Route(Path="/UserOptions/ViewPane", Verbs="POST")
    @Api("Update ViewPane")
    @DataContract
    public static class ViewPaneUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update WebClient
    */
    @Route(Path="/UserOptions/WebClient", Verbs="POST")
    @Api("Update WebClient")
    @DataContract
    public static class WebClientUserOptions extends IUserOptions implements IReturn<UserOptionsResponse>
    {
        @DataMember(Name="WebClientUserOptionsBypassFileTypes")
        @SerializedName("WebClientUserOptionsBypassFileTypes")
        @ApiMember(Name="WebClientUserOptionsBypassFileTypes", ParameterType="form", DataType="string")
        public TrimStringProperty BypassFileTypes = null;

        @DataMember(Name="WebClientUserOptionsOnstreamFileTypes")
        @SerializedName("WebClientUserOptionsOnstreamFileTypes")
        @ApiMember(Name="WebClientUserOptionsOnstreamFileTypes", ParameterType="form", DataType="string")
        public TrimStringProperty OnstreamFileTypes = null;

        @DataMember(Name="WebClientUserOptionsPageSize")
        @SerializedName("WebClientUserOptionsPageSize")
        @ApiMember(Name="WebClientUserOptionsPageSize", ParameterType="form", DataType="int")
        public TrimProperty<Integer> PageSize = null;

        @DataMember(Name="WebClientUserOptionsTimezone")
        @SerializedName("WebClientUserOptionsTimezone")
        @ApiMember(Name="WebClientUserOptionsTimezone", ParameterType="form", DataType="string")
        public TrimStringProperty Timezone = null;
        
        public TrimStringProperty getBypassFileTypes() { return BypassFileTypes; }
        public WebClientUserOptions setBypassFileTypes(TrimStringProperty value) { this.BypassFileTypes = value; return this; }
        public TrimStringProperty getOnstreamFileTypes() { return OnstreamFileTypes; }
        public WebClientUserOptions setOnstreamFileTypes(TrimStringProperty value) { this.OnstreamFileTypes = value; return this; }
        public TrimProperty<Integer> getPageSize() { return PageSize; }
        public WebClientUserOptions setPageSize(TrimProperty<Integer> value) { this.PageSize = value; return this; }
        public TrimStringProperty getTimezone() { return Timezone; }
        public WebClientUserOptions setTimezone(TrimStringProperty value) { this.Timezone = value; return this; }
        private static Object responseType = UserOptionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    @Route(Path="/Record/{Id}/File/Resource/{Path}/{ResourceId}", Verbs="GET")
    // @Route(Path="/Record/{Id}/File/{DownloadType}", Verbs="GET")
    // @Route(Path="/Record/{Id}/File/Resource/{ResourceId}", Verbs="GET")
    @DataContract
    public static class RecordDownload implements IReturnVoid
    {
        /**
        * The Uri or Record Number of the Record.
        */
        @DataMember
        @ApiMember(Name="Id", ParameterType="path", DataType="string", IsRequired=true, Verb="GET", Description="The Uri or Record Number of the Record.")
        public String Id = null;

        /**
        * Download as an Electronic Document, HTML page or Zip file containing HTML and images.
        */
        @DataMember
        @ApiMember(Name="DownloadType", ParameterType="path", DataType="string", IsRequired=true, Verb="GET", Description="Download as an Electronic Document, HTML page or Zip file containing HTML and images.")
        public DownloadType DownloadType = null;

        /**
        * Used to load an image within an HTML rendition of an Electronic Document.
        */
        @DataMember
        @ApiMember(Name="ResourceId", ParameterType="path", DataType="string", Verb="GET", Description="Used to load an image within an HTML rendition of an Electronic Document.")
        public String ResourceId = null;

        /**
        * Some Document HTML renditions require a path as well as a resource ID to find images.
        */
        @DataMember
        @ApiMember(Name="Path", ParameterType="path", DataType="string", Verb="GET", Description="Some Document HTML renditions require a path as well as a resource ID to find images.")
        public String Path = null;
        
        public String getId() { return Id; }
        public RecordDownload setId(String value) { this.Id = value; return this; }
        public DownloadType getDownloadType() { return DownloadType; }
        public RecordDownload setDownloadType(DownloadType value) { this.DownloadType = value; return this; }
        public String getResourceId() { return ResourceId; }
        public RecordDownload setResourceId(String value) { this.ResourceId = value; return this; }
        public String getPath() { return Path; }
        public RecordDownload setPath(String value) { this.Path = value; return this; }
    }

    /**
    * Update a Record object.
    */
    @Route(Path="/Record", Verbs="POST")
    // @Route(Path="/ExpenseClaim", Verbs="POST")
    // @Route(Path="/ExpenseItem", Verbs="POST")
    // @Route(Path="/RecordUploadExample", Verbs="POST")
    @Api("Update a Record object.")
    @DataContract
    public static class Record extends TrimMainObject implements IReturn<RecordsResponse>
    {
        @DataMember(Name="Exclusions")
        @SerializedName("Exclusions")
        public ArrayList<LocationRef> Exclusions = null;

        @DataMember(Name="CanDispose")
        @SerializedName("CanDispose")
        public DisposalTypeDictionary CanDispose = null;

        @DataMember(Name="CanUndispose")
        @SerializedName("CanUndispose")
        public BooleanWithReason CanUndispose = null;

        @DataMember(Name="CanMakeActive")
        @SerializedName("CanMakeActive")
        public BooleanWithReason CanMakeActive = null;

        @DataMember(Name="TextPage")
        @SerializedName("TextPage")
        public TextPage TextPage = null;

        @DataMember(Name="CanMakeInactive")
        @SerializedName("CanMakeInactive")
        public BooleanWithReason CanMakeInactive = null;

        @DataMember(Name="CurrentRequest")
        @SerializedName("CurrentRequest")
        public Request CurrentRequest = null;

        @DataMember(Name="EnabledActionCommandIds")
        @SerializedName("EnabledActionCommandIds")
        public ArrayList<CommandIds> EnabledActionCommandIds = null;

        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * Complete one or all actions due on a particular Record.
        */
        @DataMember
        @ApiMember(Name="CompleteActions", ParameterType="form", Verb="POST", Description="Complete one or all actions due on a particular Record.")
        public CompleteActions CompleteActions = null;

        /**
        * Attach an action to a particular Record.
        */
        @DataMember
        @ApiMember(Name="AttachAction", ParameterType="form", Verb="POST", Description="Attach an action to a particular Record.")
        public AttachAction AttachAction = null;

        /**
        * Set the status of the Record to checked out.
        */
        @DataMember
        @ApiMember(Name="Checkout", ParameterType="form", Verb="POST", Description="Set the status of the Record to checked out.")
        public Checkout Checkout = null;

        /**
        * Undo a previous checkout of the electronic document for this Record, disregarding any changes made since it was checked out.
        */
        @DataMember
        @ApiMember(Name="UndoCheckout", ParameterType="form", Verb="POST", Description="Undo a previous checkout of the electronic document for this Record, disregarding any changes made since it was checked out.")
        public UndoCheckout UndoCheckout = null;

        /**
        * Set the Assignee to a particular Location, back to Home or register as Missing.
        */
        @DataMember
        @ApiMember(Name="SetAssignee", ParameterType="form", Verb="POST", Description="Set the Assignee to a particular Location, back to Home or register as Missing.")
        public SetAssignee SetAssignee = null;

        /**
        * Create a request for a record.
        */
        @DataMember
        @ApiMember(Name="RequestRecord", ParameterType="form", Verb="POST", Description="Create a request for a record.")
        public RequestRecord RequestRecord = null;

        /**
        * Set the home Location for this Record.
        */
        @DataMember
        @ApiMember(Name="SetHomeLocation", ParameterType="form", Verb="POST", Description="Set the home Location for this Record.")
        public SetHomeLocation SetHomeLocation = null;

        /**
        * Delete a Record.
        */
        @DataMember
        @ApiMember(Name="DeleteRecord", ParameterType="form", Verb="POST", Description="Delete a Record.")
        public DeleteRecord DeleteRecord = null;

        /**
        * Removes any electronic document currently associated with this record.
        */
        @DataMember
        @ApiMember(Name="DetachDocument", ParameterType="form", Verb="POST", Description="Removes any electronic document currently associated with this record.")
        public DetachDocument DetachDocument = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetAsFinal", ParameterType="form", Verb="POST", Description="")
        public SetAsFinal SetAsFinal = null;

        /**
        * Reverts the state of the record (and any of its contents) so that it is no longer disposed. When processing contents, you can specify whether the task should halt if any failures occur.
        */
        @DataMember
        @ApiMember(Name="Undispose", ParameterType="form", Verb="POST", Description="Reverts the state of the record (and any of its contents) so that it is no longer disposed. When processing contents, you can specify whether the task should halt if any failures occur.")
        public Undispose Undispose = null;

        /**
        * Disposes of this record (and any of its contents) according to specified disposal method. When processing contents, you can specify whether the task should halt if any failures occur.
        */
        @DataMember
        @ApiMember(Name="Dispose", ParameterType="form", Verb="POST", Description="Disposes of this record (and any of its contents) according to specified disposal method. When processing contents, you can specify whether the task should halt if any failures occur.")
        public Dispose Dispose = null;

        /**
        * Reverts the state of the record (and any of its contents) so that it is no longer inactive. When processing contents, you can specify whether the task should halt if any failures occur.
        */
        @DataMember
        @ApiMember(Name="MakeActive", ParameterType="form", Verb="POST", Description="Reverts the state of the record (and any of its contents) so that it is no longer inactive. When processing contents, you can specify whether the task should halt if any failures occur.")
        public MakeActive MakeActive = null;

        /**
        * Sets the dateInactive for this record and any of its contents. When processing contents, you can specify whether the task should halt if any failures occur.
        */
        @DataMember
        @ApiMember(Name="MakeInactive", ParameterType="form", Verb="POST", Description="Sets the dateInactive for this record and any of its contents. When processing contents, you can specify whether the task should halt if any failures occur.")
        public MakeInactive MakeInactive = null;

        /**
        * Adds the nominated location to the record as a contact of the specified contact type.
        */
        @DataMember
        @ApiMember(Name="AttachContact", ParameterType="form", Verb="POST", Description="Adds the nominated location to the record as a contact of the specified contact type.")
        public AttachContact AttachContact = null;

        /**
        * Adds the nominated Thesaurus Term (keyword) to the list of attached Thesaurus Terms for this record. This method does not add the thesaurus term to the title of the record. Thesaurus titling is done by setting the 'GeneratedTitle' property of the Record.
        */
        @DataMember
        @ApiMember(Name="AttachKeyword", ParameterType="form", Verb="POST", Description="Adds the nominated Thesaurus Term (keyword) to the list of attached Thesaurus Terms for this record. This method does not add the thesaurus term to the title of the record. Thesaurus titling is done by setting the 'GeneratedTitle' property of the Record.")
        public AttachKeyword AttachKeyword = null;

        /**
        * Creates a new History object (Active Audit Event) for this record of the specified type, importing the given history details.
        */
        @DataMember
        @ApiMember(Name="ImportHistory", ParameterType="form", Verb="POST", Description="Creates a new History object (Active Audit Event) for this record of the specified type, importing the given history details.")
        public ImportHistory ImportHistory = null;

        /**
        * Reassigns the nominated action to a specified location.
        */
        @DataMember
        @ApiMember(Name="ReassignAction", ParameterType="form", Verb="POST", Description="Reassigns the nominated action to a specified location.")
        public ReassignAction ReassignAction = null;

        /**
        * Uncompletes the nominated action.
        */
        @DataMember
        @ApiMember(Name="UncompleteAction", ParameterType="form", Verb="POST", Description="Uncompletes the nominated action.")
        public UncompleteAction UncompleteAction = null;

        /**
        * Reschedules all actions attached to this record.
        */
        @DataMember
        @ApiMember(Name="RescheduleActions", ParameterType="form", Verb="POST", Description="Reschedules all actions attached to this record.")
        public RescheduleActions RescheduleActions = null;

        /**
        * Alter the duration of an existing record action
        */
        @DataMember
        @ApiMember(Name="SetActionDuration", ParameterType="form", Verb="POST", Description="Alter the duration of an existing record action")
        public SetActionDuration SetActionDuration = null;

        /**
        * Removes an existing record action.
        */
        @DataMember
        @ApiMember(Name="RemoveAction", ParameterType="form", Verb="POST", Description="Removes an existing record action.")
        public RemoveAction RemoveAction = null;

        /**
        * Sets the notes of an attached action.
        */
        @DataMember
        @ApiMember(Name="SetActionNotes", ParameterType="form", Verb="POST", Description="Sets the notes of an attached action.")
        public SetActionNotes SetActionNotes = null;

        /**
        * Sets the cost of an attached action.
        */
        @DataMember
        @ApiMember(Name="SetActionCost", ParameterType="form", Verb="POST", Description="Sets the cost of an attached action.")
        public SetActionCost SetActionCost = null;

        /**
        * Removes all actions attached to this record.
        */
        @DataMember
        @ApiMember(Name="RemoveAllActions", ParameterType="form", Verb="POST", Description="Removes all actions attached to this record.")
        public RemoveAllActions RemoveAllActions = null;

        /**
        * Transfers the electronic document attached to this record from its current storage location to a new electronic store.
        */
        @DataMember
        @ApiMember(Name="TransferStorage", ParameterType="form", Verb="POST", Description="Transfers the electronic document attached to this record from its current storage location to a new electronic store.")
        public TransferStorage TransferStorage = null;

        /**
        * Transfers the electronic document attached to this record from its current storage location to a new electronic store at the specified location
        */
        @DataMember
        @ApiMember(Name="TransferStorageInPlace", ParameterType="form", Verb="POST", Description="Transfers the electronic document attached to this record from its current storage location to a new electronic store at the specified location")
        public TransferStorageInPlace TransferStorageInPlace = null;

        /**
        * Allows you to create a request for the automatic rendering engine to make a rendition of this record.
        */
        @DataMember
        @ApiMember(Name="RequestRendition", ParameterType="form", Verb="POST", Description="Allows you to create a request for the automatic rendering engine to make a rendition of this record.")
        public RequestRendition RequestRendition = null;

        /**
        * Sets the creator location of this Record.
        */
        @DataMember
        @ApiMember(Name="SetCreatorLocation", ParameterType="form", Verb="POST", Description="Sets the creator location of this Record.")
        public SetCreatorLocation SetCreatorLocation = null;

        /**
        * True to create a new Revision with this Electronic document, false to replace the current Revision.
        */
        @DataMember(Name="makeNewRevision")
        @SerializedName("makeNewRevision")
        @ApiMember(Name="makeNewRevision", ParameterType="form", DataType="boolean", Verb="POST", Description="True to create a new Revision with this Electronic document, false to replace the current Revision.")
        public Boolean makeNewRevision = null;

        /**
        * True to leave the Record checked out after the electronic document is uploaded.
        */
        @DataMember(Name="keepBookedOut")
        @SerializedName("keepBookedOut")
        @ApiMember(Name="keepBookedOut", ParameterType="form", DataType="boolean", Verb="POST", Description="True to leave the Record checked out after the electronic document is uploaded.")
        public Boolean keepBookedOut = null;

        /**
        * Comments to go in the Record Notes when the document is uploaded.
        */
        @DataMember(Name="comments")
        @SerializedName("comments")
        @ApiMember(Name="comments", ParameterType="form", DataType="string", Verb="POST", Description="Comments to go in the Record Notes when the document is uploaded.")
        public String comments = null;

        /**
        * Set the Source property of the electronic document.
        */
        @DataMember(Name="CheckinAs")
        @SerializedName("CheckinAs")
        @ApiMember(Name="CheckinAs", ParameterType="form", DataType="string", Verb="POST", Description="Set the Source property of the electronic document.")
        public String CheckinAs = null;

        /**
        * Specify a URI for the Record from which to copy the electronic document for this Record.
        */
        @DataMember(Name="CopyDocumentFromRecord")
        @SerializedName("CopyDocumentFromRecord")
        @ApiMember(Name="CopyDocumentFromRecord", ParameterType="form", DataType="long", Verb="POST", Description="Specify a URI for the Record from which to copy the electronic document for this Record.")
        public Long CopyDocumentFromRecord = null;

        /**
        * Specify a URI for the Checkin Style from which to initialise this Record.
        */
        @DataMember(Name="CreateFromCheckinStyle")
        @SerializedName("CreateFromCheckinStyle")
        @ApiMember(Name="CreateFromCheckinStyle", ParameterType="form", DataType="long", Verb="POST", Description="Specify a URI for the Checkin Style from which to initialise this Record.")
        public Long CreateFromCheckinStyle = null;

        @DataMember(Name="Html")
        @SerializedName("Html")
        public String Html = null;

        @DataMember(Name="SecurityProfile")
        @SerializedName("SecurityProfile")
        public TrimSecurityProfile SecurityProfile = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Part, Version or Copy.
        */
        @DataMember(Name="RecordNewType")
        @SerializedName("RecordNewType")
        @ApiMember(Name="RecordNewType", ParameterType="form", DataType="string", Verb="POST", Description="Leave as Default unless creating a New Part, Version or Copy.")
        public NewType NewType = null;

        @DataMember(Name="ChildClientMatterParties")
        @SerializedName("ChildClientMatterParties")
        public ArrayList<RecordClientMatterParty> ChildClientMatterParties = null;

        @DataMember(Name="ChildClientMatterRoles")
        @SerializedName("ChildClientMatterRoles")
        public ArrayList<RecordClientMatterRole> ChildClientMatterRoles = null;

        @DataMember(Name="ChildHolds")
        @SerializedName("ChildHolds")
        public ArrayList<RecordHold> ChildHolds = null;

        @DataMember(Name="ChildJurisdictions")
        @SerializedName("ChildJurisdictions")
        public ArrayList<RecordJurisdiction> ChildJurisdictions = null;

        @DataMember(Name="ChildKeywords")
        @SerializedName("ChildKeywords")
        public ArrayList<RecordKeyword> ChildKeywords = null;

        @DataMember(Name="ChildLinkedDocuments")
        @SerializedName("ChildLinkedDocuments")
        public ArrayList<RecordLinkedDocument> ChildLinkedDocuments = null;

        @DataMember(Name="ChildLocations")
        @SerializedName("ChildLocations")
        public ArrayList<RecordLocation> ChildLocations = null;

        @DataMember(Name="ChildRelationships")
        @SerializedName("ChildRelationships")
        public ArrayList<RecordRelationship> ChildRelationships = null;

        @DataMember(Name="ChildRenditions")
        @SerializedName("ChildRenditions")
        public ArrayList<RecordRendition> ChildRenditions = null;

        @DataMember(Name="ChildRevisions")
        @SerializedName("ChildRevisions")
        public ArrayList<RecordRevision> ChildRevisions = null;

        @DataMember(Name="ChildSapComponents")
        @SerializedName("ChildSapComponents")
        public ArrayList<RecordSapComponent> ChildSapComponents = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="RecordAccessControl")
        @SerializedName("RecordAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="RecordAccessionNumber")
        @SerializedName("RecordAccessionNumber")
        @ApiMember(Name="RecordAccessionNumber", ParameterType="form", DataType="int")
        public TrimProperty<Integer> AccessionNumber = null;

        @DataMember(Name="RecordActions")
        @SerializedName("RecordActions")
        @ApiMember(Name="RecordActions", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Actions = null;

        @DataMember(Name="RecordAddressee")
        @SerializedName("RecordAddressee")
        @ApiMember(Name="RecordAddressee", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Addressee = null;

        @DataMember(Name="RecordAggregatedDisposal")
        @SerializedName("RecordAggregatedDisposal")
        @ApiMember(Name="RecordAggregatedDisposal", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AggregatedDisposal = null;

        @DataMember(Name="RecordAllContacts")
        @SerializedName("RecordAllContacts")
        @ApiMember(Name="RecordAllContacts", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllContacts = null;

        @DataMember(Name="RecordAllHolds")
        @SerializedName("RecordAllHolds")
        @ApiMember(Name="RecordAllHolds", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllHolds = null;

        @DataMember(Name="RecordAllMeetings")
        @SerializedName("RecordAllMeetings")
        @ApiMember(Name="RecordAllMeetings", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllMeetings = null;

        @DataMember(Name="RecordAllParts")
        @SerializedName("RecordAllParts")
        @ApiMember(Name="RecordAllParts", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllParts = null;

        @DataMember(Name="RecordAllVersions")
        @SerializedName("RecordAllVersions")
        @ApiMember(Name="RecordAllVersions", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllVersions = null;

        @DataMember(Name="RecordAlternateContentsCount")
        @SerializedName("RecordAlternateContentsCount")
        @ApiMember(Name="RecordAlternateContentsCount", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> AlternateContentsCount = null;

        @DataMember(Name="RecordAlternativeContainer")
        @SerializedName("RecordAlternativeContainer")
        @ApiMember(Name="RecordAlternativeContainer", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef AlternativeContainer = null;

        @DataMember(Name="RecordAlternativeContainers")
        @SerializedName("RecordAlternativeContainers")
        @ApiMember(Name="RecordAlternativeContainers", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AlternativeContainers = null;

        @DataMember(Name="RecordAlternativeContents")
        @SerializedName("RecordAlternativeContents")
        @ApiMember(Name="RecordAlternativeContents", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AlternativeContents = null;

        @DataMember(Name="RecordArchivePermDate")
        @SerializedName("RecordArchivePermDate")
        @ApiMember(Name="RecordArchivePermDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime ArchivePermDate = null;

        @DataMember(Name="RecordArchiveTransferDate")
        @SerializedName("RecordArchiveTransferDate")
        @ApiMember(Name="RecordArchiveTransferDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime ArchiveTransferDate = null;

        @DataMember(Name="RecordAssignee")
        @SerializedName("RecordAssignee")
        @ApiMember(Name="RecordAssignee", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Assignee = null;

        @DataMember(Name="RecordAssigneeStatus")
        @SerializedName("RecordAssigneeStatus")
        @ApiMember(Name="RecordAssigneeStatus", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<RecLocSubTypes> AssigneeStatus = null;

        @DataMember(Name="RecordAttachedKeywords")
        @SerializedName("RecordAttachedKeywords")
        @ApiMember(Name="RecordAttachedKeywords", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AttachedKeywords = null;

        @DataMember(Name="RecordAuthor")
        @SerializedName("RecordAuthor")
        @ApiMember(Name="RecordAuthor", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Author = null;

        @DataMember(Name="RecordAuthorizationMethod")
        @SerializedName("RecordAuthorizationMethod")
        @ApiMember(Name="RecordAuthorizationMethod", ParameterType="form", DataType="string")
        public TrimProperty<AuthorizationMethods> AuthorizationMethod = null;

        @DataMember(Name="RecordAutoClassificationConfidenceLevel")
        @SerializedName("RecordAutoClassificationConfidenceLevel")
        @ApiMember(Name="RecordAutoClassificationConfidenceLevel", ParameterType="form", DataType="int")
        public TrimProperty<Integer> AutoClassificationConfidenceLevel = null;

        @DataMember(Name="RecordAutoRenderStatus")
        @SerializedName("RecordAutoRenderStatus")
        @ApiMember(Name="RecordAutoRenderStatus", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<AutoRenditionStatus> AutoRenderStatus = null;

        @DataMember(Name="RecordAutoRenderToPDFOnSave")
        @SerializedName("RecordAutoRenderToPDFOnSave")
        @ApiMember(Name="RecordAutoRenderToPDFOnSave", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AutoRenderToPDFOnSave = null;

        @DataMember(Name="RecordBarcode")
        @SerializedName("RecordBarcode")
        @ApiMember(Name="RecordBarcode", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Barcode = null;

        @DataMember(Name="RecordBlueprintTitle")
        @SerializedName("RecordBlueprintTitle")
        @ApiMember(Name="RecordBlueprintTitle", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef BlueprintTitle = null;

        @DataMember(Name="RecordBypassRecordTypeAccessControls")
        @SerializedName("RecordBypassRecordTypeAccessControls")
        @ApiMember(Name="RecordBypassRecordTypeAccessControls", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> BypassRecordTypeAccessControls = null;

        @DataMember(Name="RecordCanUseClassification")
        @SerializedName("RecordCanUseClassification")
        @ApiMember(Name="RecordCanUseClassification", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> CanUseClassification = null;

        @DataMember(Name="RecordCheckedInBy")
        @SerializedName("RecordCheckedInBy")
        @ApiMember(Name="RecordCheckedInBy", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef CheckedInBy = null;

        @DataMember(Name="RecordCheckedOutOn")
        @SerializedName("RecordCheckedOutOn")
        @ApiMember(Name="RecordCheckedOutOn", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime CheckedOutOn = null;

        @DataMember(Name="RecordCheckedOutPath")
        @SerializedName("RecordCheckedOutPath")
        @ApiMember(Name="RecordCheckedOutPath", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CheckedOutPath = null;

        @DataMember(Name="RecordCheckedOutTo")
        @SerializedName("RecordCheckedOutTo")
        @ApiMember(Name="RecordCheckedOutTo", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef CheckedOutTo = null;

        @DataMember(Name="RecordClassification")
        @SerializedName("RecordClassification")
        @ApiMember(Name="RecordClassification", ParameterType="form", DataType="long", Verb="POST")
        public ClassificationRef Classification = null;

        @DataMember(Name="RecordClassOfRecord")
        @SerializedName("RecordClassOfRecord")
        @ApiMember(Name="RecordClassOfRecord", ParameterType="form", DataType="string")
        public TrimProperty<RecordClass> ClassOfRecord = null;

        @DataMember(Name="RecordClient")
        @SerializedName("RecordClient")
        @ApiMember(Name="RecordClient", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Client = null;

        @DataMember(Name="RecordClientName")
        @SerializedName("RecordClientName")
        @ApiMember(Name="RecordClientName", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ClientName = null;

        @DataMember(Name="RecordClientNumber")
        @SerializedName("RecordClientNumber")
        @ApiMember(Name="RecordClientNumber", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ClientNumber = null;

        @DataMember(Name="RecordClientRecord")
        @SerializedName("RecordClientRecord")
        @ApiMember(Name="RecordClientRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef ClientRecord = null;

        @DataMember(Name="RecordConsignment")
        @SerializedName("RecordConsignment")
        @ApiMember(Name="RecordConsignment", ParameterType="form", DataType="string")
        public TrimStringProperty Consignment = null;

        @DataMember(Name="RecordConsignmentObject")
        @SerializedName("RecordConsignmentObject")
        @ApiMember(Name="RecordConsignmentObject", ParameterType="form", DataType="long", Verb="POST")
        public ConsignmentRef ConsignmentObject = null;

        @DataMember(Name="RecordContainer")
        @SerializedName("RecordContainer")
        @ApiMember(Name="RecordContainer", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef Container = null;

        @DataMember(Name="RecordContents")
        @SerializedName("RecordContents")
        @ApiMember(Name="RecordContents", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Contents = null;

        @DataMember(Name="RecordConversationId")
        @SerializedName("RecordConversationId")
        @ApiMember(Name="RecordConversationId", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ConversationId = null;

        @DataMember(Name="RecordCreator")
        @SerializedName("RecordCreator")
        @ApiMember(Name="RecordCreator", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Creator = null;

        @DataMember(Name="RecordCSdeclassifyDetails")
        @SerializedName("RecordCSdeclassifyDetails")
        @ApiMember(Name="RecordCSdeclassifyDetails", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CSdeclassifyDetails = null;

        @DataMember(Name="RecordCSdeclassifyOn")
        @SerializedName("RecordCSdeclassifyOn")
        @ApiMember(Name="RecordCSdeclassifyOn", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime CSdeclassifyOn = null;

        @DataMember(Name="RecordCSdowngradeDetails")
        @SerializedName("RecordCSdowngradeDetails")
        @ApiMember(Name="RecordCSdowngradeDetails", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CSdowngradeDetails = null;

        @DataMember(Name="RecordCSdowngradeOn")
        @SerializedName("RecordCSdowngradeOn")
        @ApiMember(Name="RecordCSdowngradeOn", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime CSdowngradeOn = null;

        @DataMember(Name="RecordCSguideEntries")
        @SerializedName("RecordCSguideEntries")
        @ApiMember(Name="RecordCSguideEntries", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CSguideEntries = null;

        @DataMember(Name="RecordCSinitialSecurity")
        @SerializedName("RecordCSinitialSecurity")
        @ApiMember(Name="RecordCSinitialSecurity", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CSinitialSecurity = null;

        @DataMember(Name="RecordCSlastReviewed")
        @SerializedName("RecordCSlastReviewed")
        @ApiMember(Name="RecordCSlastReviewed", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CSlastReviewed = null;

        @DataMember(Name="RecordCSlastUpdateDetails")
        @SerializedName("RecordCSlastUpdateDetails")
        @ApiMember(Name="RecordCSlastUpdateDetails", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CSlastUpdateDetails = null;

        @DataMember(Name="RecordCSsecurityDetails")
        @SerializedName("RecordCSsecurityDetails")
        @ApiMember(Name="RecordCSsecurityDetails", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CSsecurityDetails = null;

        @DataMember(Name="RecordCurrentAction")
        @SerializedName("RecordCurrentAction")
        @ApiMember(Name="RecordCurrentAction", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty CurrentAction = null;

        @DataMember(Name="RecordCurrentVersion")
        @SerializedName("RecordCurrentVersion")
        @ApiMember(Name="RecordCurrentVersion", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef CurrentVersion = null;

        @DataMember(Name="RecordDateAssigned")
        @SerializedName("RecordDateAssigned")
        @ApiMember(Name="RecordDateAssigned", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateAssigned = null;

        @DataMember(Name="RecordDateClosed")
        @SerializedName("RecordDateClosed")
        @ApiMember(Name="RecordDateClosed", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateClosed = null;

        @DataMember(Name="RecordDateCreated")
        @SerializedName("RecordDateCreated")
        @ApiMember(Name="RecordDateCreated", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="RecordDateDue")
        @SerializedName("RecordDateDue")
        @ApiMember(Name="RecordDateDue", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateDue = null;

        @DataMember(Name="RecordDateFinalized")
        @SerializedName("RecordDateFinalized")
        @ApiMember(Name="RecordDateFinalized", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateFinalized = null;

        @DataMember(Name="RecordDateImported")
        @SerializedName("RecordDateImported")
        @ApiMember(Name="RecordDateImported", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateImported = null;

        @DataMember(Name="RecordDateInactive")
        @SerializedName("RecordDateInactive")
        @ApiMember(Name="RecordDateInactive", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateInactive = null;

        @DataMember(Name="RecordDateModified")
        @SerializedName("RecordDateModified")
        @ApiMember(Name="RecordDateModified", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="RecordDatePublished")
        @SerializedName("RecordDatePublished")
        @ApiMember(Name="RecordDatePublished", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DatePublished = null;

        @DataMember(Name="RecordDateReceived")
        @SerializedName("RecordDateReceived")
        @ApiMember(Name="RecordDateReceived", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateReceived = null;

        @DataMember(Name="RecordDateRegistered")
        @SerializedName("RecordDateRegistered")
        @ApiMember(Name="RecordDateRegistered", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateRegistered = null;

        @DataMember(Name="RecordDateSuperseded")
        @SerializedName("RecordDateSuperseded")
        @ApiMember(Name="RecordDateSuperseded", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateSuperseded = null;

        @DataMember(Name="RecordDestructionDate")
        @SerializedName("RecordDestructionDate")
        @ApiMember(Name="RecordDestructionDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DestructionDate = null;

        @DataMember(Name="RecordDisposalDate")
        @SerializedName("RecordDisposalDate")
        @ApiMember(Name="RecordDisposalDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DisposalDate = null;

        @DataMember(Name="RecordDisposalMethod")
        @SerializedName("RecordDisposalMethod")
        @ApiMember(Name="RecordDisposalMethod", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<DisposalType> DisposalMethod = null;

        @DataMember(Name="RecordDisposition")
        @SerializedName("RecordDisposition")
        @ApiMember(Name="RecordDisposition", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<RecordDisp> Disposition = null;

        @DataMember(Name="RecordDispositionChangedDate")
        @SerializedName("RecordDispositionChangedDate")
        @ApiMember(Name="RecordDispositionChangedDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DispositionChangedDate = null;

        @DataMember(Name="RecordDispositionSchedule")
        @SerializedName("RecordDispositionSchedule")
        @ApiMember(Name="RecordDispositionSchedule", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DispositionSchedule = null;

        @DataMember(Name="RecordDocumentAttachPending")
        @SerializedName("RecordDocumentAttachPending")
        @ApiMember(Name="RecordDocumentAttachPending", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DocumentAttachPending = null;

        @DataMember(Name="RecordDocumentDetails")
        @SerializedName("RecordDocumentDetails")
        @ApiMember(Name="RecordDocumentDetails", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DocumentDetails = null;

        @DataMember(Name="RecordDocumentLastAccessedDate")
        @SerializedName("RecordDocumentLastAccessedDate")
        @ApiMember(Name="RecordDocumentLastAccessedDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DocumentLastAccessedDate = null;

        @DataMember(Name="RecordDocumentSize")
        @SerializedName("RecordDocumentSize")
        @ApiMember(Name="RecordDocumentSize", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> DocumentSize = null;

        @DataMember(Name="RecordDocumentStatus")
        @SerializedName("RecordDocumentStatus")
        @ApiMember(Name="RecordDocumentStatus", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DocumentStatus = null;

        @DataMember(Name="RecordDocumentType")
        @SerializedName("RecordDocumentType")
        @ApiMember(Name="RecordDocumentType", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DocumentType = null;

        @DataMember(Name="RecordEditor")
        @SerializedName("RecordEditor")
        @ApiMember(Name="RecordEditor", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Editor = null;

        @DataMember(Name="RecordESource")
        @SerializedName("RecordESource")
        @ApiMember(Name="RecordESource", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ESource = null;

        @DataMember(Name="RecordEStore")
        @SerializedName("RecordEStore")
        @ApiMember(Name="RecordEStore", ParameterType="form", DataType="long", Verb="POST")
        public ElectronicStoreRef EStore = null;

        @DataMember(Name="RecordEStoreId")
        @SerializedName("RecordEStoreId")
        @ApiMember(Name="RecordEStoreId", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty EStoreId = null;

        @DataMember(Name="RecordExtension")
        @SerializedName("RecordExtension")
        @ApiMember(Name="RecordExtension", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="RecordExternalReference")
        @SerializedName("RecordExternalReference")
        @ApiMember(Name="RecordExternalReference", ParameterType="form", DataType="string")
        public TrimStringProperty ExternalReference = null;

        @DataMember(Name="RecordFilePath")
        @SerializedName("RecordFilePath")
        @ApiMember(Name="RecordFilePath", ParameterType="form", DataType="string")
        public TrimStringProperty FilePath = null;

        @DataMember(Name="RecordFinalizeOnSave")
        @SerializedName("RecordFinalizeOnSave")
        @ApiMember(Name="RecordFinalizeOnSave", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> FinalizeOnSave = null;

        @DataMember(Name="RecordFolderOrigin")
        @SerializedName("RecordFolderOrigin")
        @ApiMember(Name="RecordFolderOrigin", ParameterType="form", DataType="long", Verb="POST")
        public OriginRef FolderOrigin = null;

        @DataMember(Name="RecordForeignBarcode")
        @SerializedName("RecordForeignBarcode")
        @ApiMember(Name="RecordForeignBarcode", ParameterType="form", DataType="string")
        public TrimStringProperty ForeignBarcode = null;

        @DataMember(Name="RecordFullClassification")
        @SerializedName("RecordFullClassification")
        @ApiMember(Name="RecordFullClassification", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty FullClassification = null;

        @DataMember(Name="RecordGeneratedTitle")
        @SerializedName("RecordGeneratedTitle")
        @ApiMember(Name="RecordGeneratedTitle", ParameterType="form", DataType="string")
        public TrimStringProperty GeneratedTitle = null;

        @DataMember(Name="RecordGpsLocation")
        @SerializedName("RecordGpsLocation")
        @ApiMember(Name="RecordGpsLocation", ParameterType="form", DataType="string")
        public TrimStringProperty GpsLocation = null;

        @DataMember(Name="RecordHasEmailAttachments")
        @SerializedName("RecordHasEmailAttachments")
        @ApiMember(Name="RecordHasEmailAttachments", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> HasEmailAttachments = null;

        @DataMember(Name="RecordHasHold")
        @SerializedName("RecordHasHold")
        @ApiMember(Name="RecordHasHold", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> HasHold = null;

        @DataMember(Name="RecordHasLinkedDocuments")
        @SerializedName("RecordHasLinkedDocuments")
        @ApiMember(Name="RecordHasLinkedDocuments", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> HasLinkedDocuments = null;

        @DataMember(Name="RecordHistory")
        @SerializedName("RecordHistory")
        @ApiMember(Name="RecordHistory", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty History = null;

        @DataMember(Name="RecordHomeLocation")
        @SerializedName("RecordHomeLocation")
        @ApiMember(Name="RecordHomeLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef HomeLocation = null;

        @DataMember(Name="RecordHomeLocationStatus")
        @SerializedName("RecordHomeLocationStatus")
        @ApiMember(Name="RecordHomeLocationStatus", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<RecLocSubTypes> HomeLocationStatus = null;

        @DataMember(Name="RecordHomeSpace")
        @SerializedName("RecordHomeSpace")
        @ApiMember(Name="RecordHomeSpace", ParameterType="form", DataType="long", Verb="POST")
        public SpaceRef HomeSpace = null;

        @DataMember(Name="RecordHomeSpaceNumber")
        @SerializedName("RecordHomeSpaceNumber")
        @ApiMember(Name="RecordHomeSpaceNumber", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty HomeSpaceNumber = null;

        @DataMember(Name="RecordIdolMetadataXML")
        @SerializedName("RecordIdolMetadataXML")
        @ApiMember(Name="RecordIdolMetadataXML", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty IdolMetadataXML = null;

        @DataMember(Name="RecordIsCheckedOut")
        @SerializedName("RecordIsCheckedOut")
        @ApiMember(Name="RecordIsCheckedOut", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsCheckedOut = null;

        @DataMember(Name="RecordIsContainer")
        @SerializedName("RecordIsContainer")
        @ApiMember(Name="RecordIsContainer", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsContainer = null;

        @DataMember(Name="RecordIsElectronic")
        @SerializedName("RecordIsElectronic")
        @ApiMember(Name="RecordIsElectronic", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsElectronic = null;

        @DataMember(Name="RecordIsEnclosed")
        @SerializedName("RecordIsEnclosed")
        @ApiMember(Name="RecordIsEnclosed", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsEnclosed = null;

        @DataMember(Name="RecordIsInPartSeries")
        @SerializedName("RecordIsInPartSeries")
        @ApiMember(Name="RecordIsInPartSeries", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsInPartSeries = null;

        @DataMember(Name="RecordIsRootOfPartSeries")
        @SerializedName("RecordIsRootOfPartSeries")
        @ApiMember(Name="RecordIsRootOfPartSeries", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsRootOfPartSeries = null;

        @DataMember(Name="RecordIsSigned")
        @SerializedName("RecordIsSigned")
        @ApiMember(Name="RecordIsSigned", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsSigned = null;

        @DataMember(Name="RecordJurisdictions")
        @SerializedName("RecordJurisdictions")
        @ApiMember(Name="RecordJurisdictions", ParameterType="form", DataType="string")
        public TrimStringProperty Jurisdictions = null;

        @DataMember(Name="RecordKeywords")
        @SerializedName("RecordKeywords")
        @ApiMember(Name="RecordKeywords", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Keywords = null;

        @DataMember(Name="RecordLastActionDate")
        @SerializedName("RecordLastActionDate")
        @ApiMember(Name="RecordLastActionDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime LastActionDate = null;

        @DataMember(Name="RecordLastPartRecord")
        @SerializedName("RecordLastPartRecord")
        @ApiMember(Name="RecordLastPartRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef LastPartRecord = null;

        @DataMember(Name="RecordLatestVersion")
        @SerializedName("RecordLatestVersion")
        @ApiMember(Name="RecordLatestVersion", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef LatestVersion = null;

        @DataMember(Name="RecordLongNumber")
        @SerializedName("RecordLongNumber")
        @ApiMember(Name="RecordLongNumber", ParameterType="form", DataType="string")
        public TrimStringProperty LongNumber = null;

        @DataMember(Name="RecordMakeInactiveDate")
        @SerializedName("RecordMakeInactiveDate")
        @ApiMember(Name="RecordMakeInactiveDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime MakeInactiveDate = null;

        @DataMember(Name="RecordManualDestructionDate")
        @SerializedName("RecordManualDestructionDate")
        @ApiMember(Name="RecordManualDestructionDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime ManualDestructionDate = null;

        @DataMember(Name="RecordMatterName")
        @SerializedName("RecordMatterName")
        @ApiMember(Name="RecordMatterName", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty MatterName = null;

        @DataMember(Name="RecordMatterNumber")
        @SerializedName("RecordMatterNumber")
        @ApiMember(Name="RecordMatterNumber", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty MatterNumber = null;

        @DataMember(Name="RecordMatterRecord")
        @SerializedName("RecordMatterRecord")
        @ApiMember(Name="RecordMatterRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef MatterRecord = null;

        @DataMember(Name="RecordMediaType")
        @SerializedName("RecordMediaType")
        @ApiMember(Name="RecordMediaType", ParameterType="form", DataType="string")
        public TrimProperty<MediaTypes> MediaType = null;

        @DataMember(Name="RecordMeeting")
        @SerializedName("RecordMeeting")
        @ApiMember(Name="RecordMeeting", ParameterType="form", DataType="long", Verb="POST")
        public MeetingRef Meeting = null;

        @DataMember(Name="RecordMessageId")
        @SerializedName("RecordMessageId")
        @ApiMember(Name="RecordMessageId", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty MessageId = null;

        @DataMember(Name="RecordMimeType")
        @SerializedName("RecordMimeType")
        @ApiMember(Name="RecordMimeType", ParameterType="form", DataType="string")
        public TrimStringProperty MimeType = null;

        @DataMember(Name="RecordMovementHistory")
        @SerializedName("RecordMovementHistory")
        @ApiMember(Name="RecordMovementHistory", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty MovementHistory = null;

        @DataMember(Name="RecordMyAuthorizationComments")
        @SerializedName("RecordMyAuthorizationComments")
        @ApiMember(Name="RecordMyAuthorizationComments", ParameterType="form", DataType="string")
        public TrimStringProperty MyAuthorizationComments = null;

        @DataMember(Name="RecordMyAuthorizationComplete")
        @SerializedName("RecordMyAuthorizationComplete")
        @ApiMember(Name="RecordMyAuthorizationComplete", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> MyAuthorizationComplete = null;

        @DataMember(Name="RecordMyReviewComments")
        @SerializedName("RecordMyReviewComments")
        @ApiMember(Name="RecordMyReviewComments", ParameterType="form", DataType="string")
        public TrimStringProperty MyReviewComments = null;

        @DataMember(Name="RecordMyReviewComplete")
        @SerializedName("RecordMyReviewComplete")
        @ApiMember(Name="RecordMyReviewComplete", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> MyReviewComplete = null;

        @DataMember(Name="RecordNbrPages")
        @SerializedName("RecordNbrPages")
        @ApiMember(Name="RecordNbrPages", ParameterType="form", DataType="int")
        public TrimProperty<Integer> NbrPages = null;

        @DataMember(Name="RecordNeedsAuthorization")
        @SerializedName("RecordNeedsAuthorization")
        @ApiMember(Name="RecordNeedsAuthorization", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> NeedsAuthorization = null;

        @DataMember(Name="RecordNeedsDataEntryForm")
        @SerializedName("RecordNeedsDataEntryForm")
        @ApiMember(Name="RecordNeedsDataEntryForm", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> NeedsDataEntryForm = null;

        @DataMember(Name="RecordNeedsReview")
        @SerializedName("RecordNeedsReview")
        @ApiMember(Name="RecordNeedsReview", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> NeedsReview = null;

        @DataMember(Name="RecordNewPartCreationRule")
        @SerializedName("RecordNewPartCreationRule")
        @ApiMember(Name="RecordNewPartCreationRule", ParameterType="form", DataType="long", Verb="POST")
        public AutoPartRuleRef NewPartCreationRule = null;

        @DataMember(Name="RecordNextPartRecord")
        @SerializedName("RecordNextPartRecord")
        @ApiMember(Name="RecordNextPartRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef NextPartRecord = null;

        @DataMember(Name="RecordNextTaskDue")
        @SerializedName("RecordNextTaskDue")
        @ApiMember(Name="RecordNextTaskDue", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty NextTaskDue = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="RecordNotes")
        @SerializedName("RecordNotes")
        @ApiMember(Name="RecordNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="RecordNumber")
        @SerializedName("RecordNumber")
        @ApiMember(Name="RecordNumber", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Number = null;

        @DataMember(Name="RecordOriginatedFrom")
        @SerializedName("RecordOriginatedFrom")
        @ApiMember(Name="RecordOriginatedFrom", ParameterType="form", DataType="long", Verb="POST")
        public OriginRef OriginatedFrom = null;

        @DataMember(Name="RecordOriginatedFromRun")
        @SerializedName("RecordOriginatedFromRun")
        @ApiMember(Name="RecordOriginatedFromRun", ParameterType="form", DataType="long", Verb="POST")
        public OriginHistoryRef OriginatedFromRun = null;

        @DataMember(Name="RecordOtherContact")
        @SerializedName("RecordOtherContact")
        @ApiMember(Name="RecordOtherContact", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef OtherContact = null;

        @DataMember(Name="RecordOverdueActions")
        @SerializedName("RecordOverdueActions")
        @ApiMember(Name="RecordOverdueActions", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty OverdueActions = null;

        @DataMember(Name="RecordOwnerLocation")
        @SerializedName("RecordOwnerLocation")
        @ApiMember(Name="RecordOwnerLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef OwnerLocation = null;

        @DataMember(Name="RecordPreserveHierarchyOnDataEntry")
        @SerializedName("RecordPreserveHierarchyOnDataEntry")
        @ApiMember(Name="RecordPreserveHierarchyOnDataEntry", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> PreserveHierarchyOnDataEntry = null;

        @DataMember(Name="RecordPrevPartRecord")
        @SerializedName("RecordPrevPartRecord")
        @ApiMember(Name="RecordPrevPartRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef PrevPartRecord = null;

        @DataMember(Name="RecordPrimaryContact")
        @SerializedName("RecordPrimaryContact")
        @ApiMember(Name="RecordPrimaryContact", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef PrimaryContact = null;

        @DataMember(Name="RecordPriority")
        @SerializedName("RecordPriority")
        @ApiMember(Name="RecordPriority", ParameterType="form", DataType="string")
        public TrimStringProperty Priority = null;

        @DataMember(Name="RecordRecordType")
        @SerializedName("RecordRecordType")
        @ApiMember(Name="RecordRecordType", ParameterType="form", DataType="long", IsRequired=true, Verb="POST")
        public RecordTypeRef RecordType = null;

        @DataMember(Name="RecordRedactedFrom")
        @SerializedName("RecordRedactedFrom")
        @ApiMember(Name="RecordRedactedFrom", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty RedactedFrom = null;

        @DataMember(Name="RecordRedactionsOf")
        @SerializedName("RecordRedactionsOf")
        @ApiMember(Name="RecordRedactionsOf", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty RedactionsOf = null;

        @DataMember(Name="RecordRelatedRecord")
        @SerializedName("RecordRelatedRecord")
        @ApiMember(Name="RecordRelatedRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef RelatedRecord = null;

        @DataMember(Name="RecordRelatedRecs")
        @SerializedName("RecordRelatedRecs")
        @ApiMember(Name="RecordRelatedRecs", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty RelatedRecs = null;

        @DataMember(Name="RecordRenditionCount")
        @SerializedName("RecordRenditionCount")
        @ApiMember(Name="RecordRenditionCount", ParameterType="form", DataType="int", Verb="GET")
        public TrimProperty<Integer> RenditionCount = null;

        @DataMember(Name="RecordRepresentative")
        @SerializedName("RecordRepresentative")
        @ApiMember(Name="RecordRepresentative", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Representative = null;

        @DataMember(Name="RecordRequests")
        @SerializedName("RecordRequests")
        @ApiMember(Name="RecordRequests", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Requests = null;

        @DataMember(Name="RecordRetentionSchedule")
        @SerializedName("RecordRetentionSchedule")
        @ApiMember(Name="RecordRetentionSchedule", ParameterType="form", DataType="long", Verb="POST")
        public ScheduleRef RetentionSchedule = null;

        @DataMember(Name="RecordReturnDueDateTime")
        @SerializedName("RecordReturnDueDateTime")
        @ApiMember(Name="RecordReturnDueDateTime", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime ReturnDueDateTime = null;

        @DataMember(Name="RecordReviewDate")
        @SerializedName("RecordReviewDate")
        @ApiMember(Name="RecordReviewDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime ReviewDate = null;

        @DataMember(Name="RecordReviewDueDate")
        @SerializedName("RecordReviewDueDate")
        @ApiMember(Name="RecordReviewDueDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime ReviewDueDate = null;

        @DataMember(Name="RecordReviewState")
        @SerializedName("RecordReviewState")
        @ApiMember(Name="RecordReviewState", ParameterType="form", DataType="string")
        public TrimProperty<DocumentReviewStates> ReviewState = null;

        @DataMember(Name="RecordReviewStateDate")
        @SerializedName("RecordReviewStateDate")
        @ApiMember(Name="RecordReviewStateDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime ReviewStateDate = null;

        @DataMember(Name="RecordRevisionCount")
        @SerializedName("RecordRevisionCount")
        @ApiMember(Name="RecordRevisionCount", ParameterType="form", DataType="int", Verb="GET")
        public TrimProperty<Integer> RevisionCount = null;

        @DataMember(Name="RecordRevisionNumber")
        @SerializedName("RecordRevisionNumber")
        @ApiMember(Name="RecordRevisionNumber", ParameterType="form", DataType="int", Verb="GET")
        public TrimProperty<Integer> RevisionNumber = null;

        @DataMember(Name="RecordRootPartRecord")
        @SerializedName("RecordRootPartRecord")
        @ApiMember(Name="RecordRootPartRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef RootPartRecord = null;

        @DataMember(Name="RecordSapArchiveDate")
        @SerializedName("RecordSapArchiveDate")
        @ApiMember(Name="RecordSapArchiveDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime SapArchiveDate = null;

        @DataMember(Name="RecordSapArchiveLinkVsn")
        @SerializedName("RecordSapArchiveLinkVsn")
        @ApiMember(Name="RecordSapArchiveLinkVsn", ParameterType="form", DataType="string")
        public TrimStringProperty SapArchiveLinkVsn = null;

        @DataMember(Name="RecordSapBusinessId")
        @SerializedName("RecordSapBusinessId")
        @ApiMember(Name="RecordSapBusinessId", ParameterType="form", DataType="string")
        public TrimStringProperty SapBusinessId = null;

        @DataMember(Name="RecordSapBusinessObject")
        @SerializedName("RecordSapBusinessObject")
        @ApiMember(Name="RecordSapBusinessObject", ParameterType="form", DataType="string")
        public TrimStringProperty SapBusinessObject = null;

        @DataMember(Name="RecordSapCreatorLocUri")
        @SerializedName("RecordSapCreatorLocUri")
        @ApiMember(Name="RecordSapCreatorLocUri", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef SapCreatorLocUri = null;

        @DataMember(Name="RecordSapCreatorName")
        @SerializedName("RecordSapCreatorName")
        @ApiMember(Name="RecordSapCreatorName", ParameterType="form", DataType="string")
        public TrimStringProperty SapCreatorName = null;

        @DataMember(Name="RecordSapCustomerName")
        @SerializedName("RecordSapCustomerName")
        @ApiMember(Name="RecordSapCustomerName", ParameterType="form", DataType="string")
        public TrimStringProperty SapCustomerName = null;

        @DataMember(Name="RecordSapCustomerNumber")
        @SerializedName("RecordSapCustomerNumber")
        @ApiMember(Name="RecordSapCustomerNumber", ParameterType="form", DataType="string")
        public TrimStringProperty SapCustomerNumber = null;

        @DataMember(Name="RecordSapDocumentId")
        @SerializedName("RecordSapDocumentId")
        @ApiMember(Name="RecordSapDocumentId", ParameterType="form", DataType="string")
        public TrimStringProperty SapDocumentId = null;

        @DataMember(Name="RecordSapDocumentProtection")
        @SerializedName("RecordSapDocumentProtection")
        @ApiMember(Name="RecordSapDocumentProtection", ParameterType="form", DataType="string")
        public TrimStringProperty SapDocumentProtection = null;

        @DataMember(Name="RecordSapDocumentType")
        @SerializedName("RecordSapDocumentType")
        @ApiMember(Name="RecordSapDocumentType", ParameterType="form", DataType="string")
        public TrimStringProperty SapDocumentType = null;

        @DataMember(Name="RecordSapModifiedDate")
        @SerializedName("RecordSapModifiedDate")
        @ApiMember(Name="RecordSapModifiedDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime SapModifiedDate = null;

        @DataMember(Name="RecordSapReposId")
        @SerializedName("RecordSapReposId")
        @ApiMember(Name="RecordSapReposId", ParameterType="form", DataType="string")
        public TrimStringProperty SapReposId = null;

        @DataMember(Name="RecordScheduledDisposalDate")
        @SerializedName("RecordScheduledDisposalDate")
        @ApiMember(Name="RecordScheduledDisposalDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime ScheduledDisposalDate = null;

        @DataMember(Name="RecordScheduledDisposalMethod")
        @SerializedName("RecordScheduledDisposalMethod")
        @ApiMember(Name="RecordScheduledDisposalMethod", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<DisposalType> ScheduledDisposalMethod = null;

        @DataMember(Name="RecordScheduledDisposalStatus")
        @SerializedName("RecordScheduledDisposalStatus")
        @ApiMember(Name="RecordScheduledDisposalStatus", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<DisposalScheduleStatus> ScheduledDisposalStatus = null;

        @DataMember(Name="RecordScheduledInactiveStatus")
        @SerializedName("RecordScheduledInactiveStatus")
        @ApiMember(Name="RecordScheduledInactiveStatus", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<DisposalScheduleStatus> ScheduledInactiveStatus = null;

        @DataMember(Name="RecordSecurity")
        @SerializedName("RecordSecurity")
        @ApiMember(Name="RecordSecurity", ParameterType="form", DataType="string")
        public TrimStringProperty Security = null;

        @DataMember(Name="RecordSecurityLocks")
        @SerializedName("RecordSecurityLocks")
        @ApiMember(Name="RecordSecurityLocks", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty SecurityLocks = null;

        @DataMember(Name="RecordSeriesRecord")
        @SerializedName("RecordSeriesRecord")
        @ApiMember(Name="RecordSeriesRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef SeriesRecord = null;

        @DataMember(Name="RecordSpFarmGUID")
        @SerializedName("RecordSpFarmGUID")
        @ApiMember(Name="RecordSpFarmGUID", ParameterType="form", DataType="string")
        public TrimStringProperty SpFarmGUID = null;

        @DataMember(Name="RecordSpGUID")
        @SerializedName("RecordSpGUID")
        @ApiMember(Name="RecordSpGUID", ParameterType="form", DataType="string")
        public TrimStringProperty SpGUID = null;

        @DataMember(Name="RecordSpListItemCount")
        @SerializedName("RecordSpListItemCount")
        @ApiMember(Name="RecordSpListItemCount", ParameterType="form", DataType="int", Verb="GET")
        public TrimProperty<Integer> SpListItemCount = null;

        @DataMember(Name="RecordSpListType")
        @SerializedName("RecordSpListType")
        @ApiMember(Name="RecordSpListType", ParameterType="form", DataType="string")
        public TrimStringProperty SpListType = null;

        @DataMember(Name="RecordSpSiteCollectionGUID")
        @SerializedName("RecordSpSiteCollectionGUID")
        @ApiMember(Name="RecordSpSiteCollectionGUID", ParameterType="form", DataType="string")
        public TrimStringProperty SpSiteCollectionGUID = null;

        @DataMember(Name="RecordSpType")
        @SerializedName("RecordSpType")
        @ApiMember(Name="RecordSpType", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<SpElementType> SpType = null;

        @DataMember(Name="RecordSpURL")
        @SerializedName("RecordSpURL")
        @ApiMember(Name="RecordSpURL", ParameterType="form", DataType="string")
        public TrimStringProperty SpURL = null;

        @DataMember(Name="RecordSuggestedFileName")
        @SerializedName("RecordSuggestedFileName")
        @ApiMember(Name="RecordSuggestedFileName", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty SuggestedFileName = null;

        @DataMember(Name="RecordTitle")
        @SerializedName("RecordTitle")
        @ApiMember(Name="RecordTitle", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Title = null;

        @DataMember(Name="RecordTopLevelActions")
        @SerializedName("RecordTopLevelActions")
        @ApiMember(Name="RecordTopLevelActions", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty TopLevelActions = null;

        @DataMember(Name="RecordTypedTitle")
        @SerializedName("RecordTypedTitle")
        @ApiMember(Name="RecordTypedTitle", ParameterType="form", DataType="string")
        public TrimStringProperty TypedTitle = null;

        @DataMember(Name="RecordViewPaneId")
        @SerializedName("RecordViewPaneId")
        @ApiMember(Name="RecordViewPaneId", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ViewPaneId = null;
        
        public ArrayList<LocationRef> getExclusions() { return Exclusions; }
        public Record setExclusions(ArrayList<LocationRef> value) { this.Exclusions = value; return this; }
        public DisposalTypeDictionary getCanDispose() { return CanDispose; }
        public Record setCanDispose(DisposalTypeDictionary value) { this.CanDispose = value; return this; }
        public BooleanWithReason isCanUndispose() { return CanUndispose; }
        public Record setCanUndispose(BooleanWithReason value) { this.CanUndispose = value; return this; }
        public BooleanWithReason isCanMakeActive() { return CanMakeActive; }
        public Record setCanMakeActive(BooleanWithReason value) { this.CanMakeActive = value; return this; }
        public TextPage getTextPage() { return TextPage; }
        public Record setTextPage(TextPage value) { this.TextPage = value; return this; }
        public BooleanWithReason isCanMakeInactive() { return CanMakeInactive; }
        public Record setCanMakeInactive(BooleanWithReason value) { this.CanMakeInactive = value; return this; }
        public Request getCurrentRequest() { return CurrentRequest; }
        public Record setCurrentRequest(Request value) { this.CurrentRequest = value; return this; }
        public ArrayList<CommandIds> getEnabledActionCommandIds() { return EnabledActionCommandIds; }
        public Record setEnabledActionCommandIds(ArrayList<CommandIds> value) { this.EnabledActionCommandIds = value; return this; }
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Record setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Record setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Record setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Record setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public CompleteActions getCompleteActions() { return CompleteActions; }
        public Record setCompleteActions(CompleteActions value) { this.CompleteActions = value; return this; }
        public AttachAction getAttachAction() { return AttachAction; }
        public Record setAttachAction(AttachAction value) { this.AttachAction = value; return this; }
        public Checkout getCheckout() { return Checkout; }
        public Record setCheckout(Checkout value) { this.Checkout = value; return this; }
        public UndoCheckout getUndoCheckout() { return UndoCheckout; }
        public Record setUndoCheckout(UndoCheckout value) { this.UndoCheckout = value; return this; }
        public SetAssignee getSetAssignee() { return SetAssignee; }
        public Record setSetAssignee(SetAssignee value) { this.SetAssignee = value; return this; }
        public RequestRecord getRequestRecord() { return RequestRecord; }
        public Record setRequestRecord(RequestRecord value) { this.RequestRecord = value; return this; }
        public SetHomeLocation getSetHomeLocation() { return SetHomeLocation; }
        public Record setSetHomeLocation(SetHomeLocation value) { this.SetHomeLocation = value; return this; }
        public DeleteRecord getDeleteRecord() { return DeleteRecord; }
        public Record setDeleteRecord(DeleteRecord value) { this.DeleteRecord = value; return this; }
        public DetachDocument getDetachDocument() { return DetachDocument; }
        public Record setDetachDocument(DetachDocument value) { this.DetachDocument = value; return this; }
        public SetAsFinal getSetAsFinal() { return SetAsFinal; }
        public Record setSetAsFinal(SetAsFinal value) { this.SetAsFinal = value; return this; }
        public Undispose getUndispose() { return Undispose; }
        public Record setUndispose(Undispose value) { this.Undispose = value; return this; }
        public Dispose getDispose() { return Dispose; }
        public Record setDispose(Dispose value) { this.Dispose = value; return this; }
        public MakeActive getMakeActive() { return MakeActive; }
        public Record setMakeActive(MakeActive value) { this.MakeActive = value; return this; }
        public MakeInactive getMakeInactive() { return MakeInactive; }
        public Record setMakeInactive(MakeInactive value) { this.MakeInactive = value; return this; }
        public AttachContact getAttachContact() { return AttachContact; }
        public Record setAttachContact(AttachContact value) { this.AttachContact = value; return this; }
        public AttachKeyword getAttachKeyword() { return AttachKeyword; }
        public Record setAttachKeyword(AttachKeyword value) { this.AttachKeyword = value; return this; }
        public ImportHistory getImportHistory() { return ImportHistory; }
        public Record setImportHistory(ImportHistory value) { this.ImportHistory = value; return this; }
        public ReassignAction getReassignAction() { return ReassignAction; }
        public Record setReassignAction(ReassignAction value) { this.ReassignAction = value; return this; }
        public UncompleteAction getUncompleteAction() { return UncompleteAction; }
        public Record setUncompleteAction(UncompleteAction value) { this.UncompleteAction = value; return this; }
        public RescheduleActions getRescheduleActions() { return RescheduleActions; }
        public Record setRescheduleActions(RescheduleActions value) { this.RescheduleActions = value; return this; }
        public SetActionDuration getSetActionDuration() { return SetActionDuration; }
        public Record setSetActionDuration(SetActionDuration value) { this.SetActionDuration = value; return this; }
        public RemoveAction getRemoveAction() { return RemoveAction; }
        public Record setRemoveAction(RemoveAction value) { this.RemoveAction = value; return this; }
        public SetActionNotes getSetActionNotes() { return SetActionNotes; }
        public Record setSetActionNotes(SetActionNotes value) { this.SetActionNotes = value; return this; }
        public SetActionCost getSetActionCost() { return SetActionCost; }
        public Record setSetActionCost(SetActionCost value) { this.SetActionCost = value; return this; }
        public RemoveAllActions getRemoveAllActions() { return RemoveAllActions; }
        public Record setRemoveAllActions(RemoveAllActions value) { this.RemoveAllActions = value; return this; }
        public TransferStorage getTransferStorage() { return TransferStorage; }
        public Record setTransferStorage(TransferStorage value) { this.TransferStorage = value; return this; }
        public TransferStorageInPlace getTransferStorageInPlace() { return TransferStorageInPlace; }
        public Record setTransferStorageInPlace(TransferStorageInPlace value) { this.TransferStorageInPlace = value; return this; }
        public RequestRendition getRequestRendition() { return RequestRendition; }
        public Record setRequestRendition(RequestRendition value) { this.RequestRendition = value; return this; }
        public SetCreatorLocation getSetCreatorLocation() { return SetCreatorLocation; }
        public Record setSetCreatorLocation(SetCreatorLocation value) { this.SetCreatorLocation = value; return this; }
        public Boolean isMakeNewRevision() { return makeNewRevision; }
        public Record setMakeNewRevision(Boolean value) { this.makeNewRevision = value; return this; }
        public Boolean isKeepBookedOut() { return keepBookedOut; }
        public Record setKeepBookedOut(Boolean value) { this.keepBookedOut = value; return this; }
        public String getComments() { return comments; }
        public Record setComments(String value) { this.comments = value; return this; }
        public String getCheckinAs() { return CheckinAs; }
        public Record setCheckinAs(String value) { this.CheckinAs = value; return this; }
        public Long getCopyDocumentFromRecord() { return CopyDocumentFromRecord; }
        public Record setCopyDocumentFromRecord(Long value) { this.CopyDocumentFromRecord = value; return this; }
        public Long getCreateFromCheckinStyle() { return CreateFromCheckinStyle; }
        public Record setCreateFromCheckinStyle(Long value) { this.CreateFromCheckinStyle = value; return this; }
        public String getHtml() { return Html; }
        public Record setHtml(String value) { this.Html = value; return this; }
        public TrimSecurityProfile getSecurityProfile() { return SecurityProfile; }
        public Record setSecurityProfile(TrimSecurityProfile value) { this.SecurityProfile = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Record setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public Record setNewType(NewType value) { this.NewType = value; return this; }
        public ArrayList<RecordClientMatterParty> getChildClientMatterParties() { return ChildClientMatterParties; }
        public Record setChildClientMatterParties(ArrayList<RecordClientMatterParty> value) { this.ChildClientMatterParties = value; return this; }
        public ArrayList<RecordClientMatterRole> getChildClientMatterRoles() { return ChildClientMatterRoles; }
        public Record setChildClientMatterRoles(ArrayList<RecordClientMatterRole> value) { this.ChildClientMatterRoles = value; return this; }
        public ArrayList<RecordHold> getChildHolds() { return ChildHolds; }
        public Record setChildHolds(ArrayList<RecordHold> value) { this.ChildHolds = value; return this; }
        public ArrayList<RecordJurisdiction> getChildJurisdictions() { return ChildJurisdictions; }
        public Record setChildJurisdictions(ArrayList<RecordJurisdiction> value) { this.ChildJurisdictions = value; return this; }
        public ArrayList<RecordKeyword> getChildKeywords() { return ChildKeywords; }
        public Record setChildKeywords(ArrayList<RecordKeyword> value) { this.ChildKeywords = value; return this; }
        public ArrayList<RecordLinkedDocument> getChildLinkedDocuments() { return ChildLinkedDocuments; }
        public Record setChildLinkedDocuments(ArrayList<RecordLinkedDocument> value) { this.ChildLinkedDocuments = value; return this; }
        public ArrayList<RecordLocation> getChildLocations() { return ChildLocations; }
        public Record setChildLocations(ArrayList<RecordLocation> value) { this.ChildLocations = value; return this; }
        public ArrayList<RecordRelationship> getChildRelationships() { return ChildRelationships; }
        public Record setChildRelationships(ArrayList<RecordRelationship> value) { this.ChildRelationships = value; return this; }
        public ArrayList<RecordRendition> getChildRenditions() { return ChildRenditions; }
        public Record setChildRenditions(ArrayList<RecordRendition> value) { this.ChildRenditions = value; return this; }
        public ArrayList<RecordRevision> getChildRevisions() { return ChildRevisions; }
        public Record setChildRevisions(ArrayList<RecordRevision> value) { this.ChildRevisions = value; return this; }
        public ArrayList<RecordSapComponent> getChildSapComponents() { return ChildSapComponents; }
        public Record setChildSapComponents(ArrayList<RecordSapComponent> value) { this.ChildSapComponents = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Record setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Record setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Integer> getAccessionNumber() { return AccessionNumber; }
        public Record setAccessionNumber(TrimProperty<Integer> value) { this.AccessionNumber = value; return this; }
        public TrimStringProperty getActions() { return Actions; }
        public Record setActions(TrimStringProperty value) { this.Actions = value; return this; }
        public LocationRef getAddressee() { return Addressee; }
        public Record setAddressee(LocationRef value) { this.Addressee = value; return this; }
        public TrimStringProperty getAggregatedDisposal() { return AggregatedDisposal; }
        public Record setAggregatedDisposal(TrimStringProperty value) { this.AggregatedDisposal = value; return this; }
        public TrimStringProperty getAllContacts() { return AllContacts; }
        public Record setAllContacts(TrimStringProperty value) { this.AllContacts = value; return this; }
        public TrimStringProperty getAllHolds() { return AllHolds; }
        public Record setAllHolds(TrimStringProperty value) { this.AllHolds = value; return this; }
        public TrimStringProperty getAllMeetings() { return AllMeetings; }
        public Record setAllMeetings(TrimStringProperty value) { this.AllMeetings = value; return this; }
        public TrimStringProperty getAllParts() { return AllParts; }
        public Record setAllParts(TrimStringProperty value) { this.AllParts = value; return this; }
        public TrimStringProperty getAllVersions() { return AllVersions; }
        public Record setAllVersions(TrimStringProperty value) { this.AllVersions = value; return this; }
        public TrimProperty<Long> getAlternateContentsCount() { return AlternateContentsCount; }
        public Record setAlternateContentsCount(TrimProperty<Long> value) { this.AlternateContentsCount = value; return this; }
        public RecordRef getAlternativeContainer() { return AlternativeContainer; }
        public Record setAlternativeContainer(RecordRef value) { this.AlternativeContainer = value; return this; }
        public TrimStringProperty getAlternativeContainers() { return AlternativeContainers; }
        public Record setAlternativeContainers(TrimStringProperty value) { this.AlternativeContainers = value; return this; }
        public TrimStringProperty getAlternativeContents() { return AlternativeContents; }
        public Record setAlternativeContents(TrimStringProperty value) { this.AlternativeContents = value; return this; }
        public TrimDateTime getArchivePermDate() { return ArchivePermDate; }
        public Record setArchivePermDate(TrimDateTime value) { this.ArchivePermDate = value; return this; }
        public TrimDateTime getArchiveTransferDate() { return ArchiveTransferDate; }
        public Record setArchiveTransferDate(TrimDateTime value) { this.ArchiveTransferDate = value; return this; }
        public LocationRef getAssignee() { return Assignee; }
        public Record setAssignee(LocationRef value) { this.Assignee = value; return this; }
        public TrimProperty<RecLocSubTypes> getAssigneeStatus() { return AssigneeStatus; }
        public Record setAssigneeStatus(TrimProperty<RecLocSubTypes> value) { this.AssigneeStatus = value; return this; }
        public TrimStringProperty getAttachedKeywords() { return AttachedKeywords; }
        public Record setAttachedKeywords(TrimStringProperty value) { this.AttachedKeywords = value; return this; }
        public LocationRef getAuthor() { return Author; }
        public Record setAuthor(LocationRef value) { this.Author = value; return this; }
        public TrimProperty<AuthorizationMethods> getAuthorizationMethod() { return AuthorizationMethod; }
        public Record setAuthorizationMethod(TrimProperty<AuthorizationMethods> value) { this.AuthorizationMethod = value; return this; }
        public TrimProperty<Integer> getAutoClassificationConfidenceLevel() { return AutoClassificationConfidenceLevel; }
        public Record setAutoClassificationConfidenceLevel(TrimProperty<Integer> value) { this.AutoClassificationConfidenceLevel = value; return this; }
        public TrimProperty<AutoRenditionStatus> getAutoRenderStatus() { return AutoRenderStatus; }
        public Record setAutoRenderStatus(TrimProperty<AutoRenditionStatus> value) { this.AutoRenderStatus = value; return this; }
        public TrimProperty<Boolean> getAutoRenderToPDFOnSave() { return AutoRenderToPDFOnSave; }
        public Record setAutoRenderToPDFOnSave(TrimProperty<Boolean> value) { this.AutoRenderToPDFOnSave = value; return this; }
        public TrimStringProperty getBarcode() { return Barcode; }
        public Record setBarcode(TrimStringProperty value) { this.Barcode = value; return this; }
        public RecordRef getBlueprintTitle() { return BlueprintTitle; }
        public Record setBlueprintTitle(RecordRef value) { this.BlueprintTitle = value; return this; }
        public TrimProperty<Boolean> getBypassRecordTypeAccessControls() { return BypassRecordTypeAccessControls; }
        public Record setBypassRecordTypeAccessControls(TrimProperty<Boolean> value) { this.BypassRecordTypeAccessControls = value; return this; }
        public TrimProperty<Boolean> getCanUseClassification() { return CanUseClassification; }
        public Record setCanUseClassification(TrimProperty<Boolean> value) { this.CanUseClassification = value; return this; }
        public LocationRef getCheckedInBy() { return CheckedInBy; }
        public Record setCheckedInBy(LocationRef value) { this.CheckedInBy = value; return this; }
        public TrimDateTime getCheckedOutOn() { return CheckedOutOn; }
        public Record setCheckedOutOn(TrimDateTime value) { this.CheckedOutOn = value; return this; }
        public TrimStringProperty getCheckedOutPath() { return CheckedOutPath; }
        public Record setCheckedOutPath(TrimStringProperty value) { this.CheckedOutPath = value; return this; }
        public LocationRef getCheckedOutTo() { return CheckedOutTo; }
        public Record setCheckedOutTo(LocationRef value) { this.CheckedOutTo = value; return this; }
        public ClassificationRef getClassification() { return Classification; }
        public Record setClassification(ClassificationRef value) { this.Classification = value; return this; }
        public TrimProperty<RecordClass> getClassOfRecord() { return ClassOfRecord; }
        public Record setClassOfRecord(TrimProperty<RecordClass> value) { this.ClassOfRecord = value; return this; }
        public LocationRef getClient() { return Client; }
        public Record setClient(LocationRef value) { this.Client = value; return this; }
        public TrimStringProperty getClientName() { return ClientName; }
        public Record setClientName(TrimStringProperty value) { this.ClientName = value; return this; }
        public TrimStringProperty getClientNumber() { return ClientNumber; }
        public Record setClientNumber(TrimStringProperty value) { this.ClientNumber = value; return this; }
        public RecordRef getClientRecord() { return ClientRecord; }
        public Record setClientRecord(RecordRef value) { this.ClientRecord = value; return this; }
        public TrimStringProperty getConsignment() { return Consignment; }
        public Record setConsignment(TrimStringProperty value) { this.Consignment = value; return this; }
        public ConsignmentRef getConsignmentObject() { return ConsignmentObject; }
        public Record setConsignmentObject(ConsignmentRef value) { this.ConsignmentObject = value; return this; }
        public RecordRef getContainer() { return Container; }
        public Record setContainer(RecordRef value) { this.Container = value; return this; }
        public TrimStringProperty getContents() { return Contents; }
        public Record setContents(TrimStringProperty value) { this.Contents = value; return this; }
        public TrimStringProperty getConversationId() { return ConversationId; }
        public Record setConversationId(TrimStringProperty value) { this.ConversationId = value; return this; }
        public LocationRef getCreator() { return Creator; }
        public Record setCreator(LocationRef value) { this.Creator = value; return this; }
        public TrimStringProperty getCSdeclassifyDetails() { return CSdeclassifyDetails; }
        public Record setCSdeclassifyDetails(TrimStringProperty value) { this.CSdeclassifyDetails = value; return this; }
        public TrimDateTime getCSdeclassifyOn() { return CSdeclassifyOn; }
        public Record setCSdeclassifyOn(TrimDateTime value) { this.CSdeclassifyOn = value; return this; }
        public TrimStringProperty getCSdowngradeDetails() { return CSdowngradeDetails; }
        public Record setCSdowngradeDetails(TrimStringProperty value) { this.CSdowngradeDetails = value; return this; }
        public TrimDateTime getCSdowngradeOn() { return CSdowngradeOn; }
        public Record setCSdowngradeOn(TrimDateTime value) { this.CSdowngradeOn = value; return this; }
        public TrimStringProperty getCSguideEntries() { return CSguideEntries; }
        public Record setCSguideEntries(TrimStringProperty value) { this.CSguideEntries = value; return this; }
        public TrimStringProperty getCSinitialSecurity() { return CSinitialSecurity; }
        public Record setCSinitialSecurity(TrimStringProperty value) { this.CSinitialSecurity = value; return this; }
        public TrimStringProperty getCSlastReviewed() { return CSlastReviewed; }
        public Record setCSlastReviewed(TrimStringProperty value) { this.CSlastReviewed = value; return this; }
        public TrimStringProperty getCSlastUpdateDetails() { return CSlastUpdateDetails; }
        public Record setCSlastUpdateDetails(TrimStringProperty value) { this.CSlastUpdateDetails = value; return this; }
        public TrimStringProperty getCSsecurityDetails() { return CSsecurityDetails; }
        public Record setCSsecurityDetails(TrimStringProperty value) { this.CSsecurityDetails = value; return this; }
        public TrimStringProperty getCurrentAction() { return CurrentAction; }
        public Record setCurrentAction(TrimStringProperty value) { this.CurrentAction = value; return this; }
        public RecordRef getCurrentVersion() { return CurrentVersion; }
        public Record setCurrentVersion(RecordRef value) { this.CurrentVersion = value; return this; }
        public TrimDateTime getDateAssigned() { return DateAssigned; }
        public Record setDateAssigned(TrimDateTime value) { this.DateAssigned = value; return this; }
        public TrimDateTime getDateClosed() { return DateClosed; }
        public Record setDateClosed(TrimDateTime value) { this.DateClosed = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public Record setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimDateTime getDateDue() { return DateDue; }
        public Record setDateDue(TrimDateTime value) { this.DateDue = value; return this; }
        public TrimDateTime getDateFinalized() { return DateFinalized; }
        public Record setDateFinalized(TrimDateTime value) { this.DateFinalized = value; return this; }
        public TrimDateTime getDateImported() { return DateImported; }
        public Record setDateImported(TrimDateTime value) { this.DateImported = value; return this; }
        public TrimDateTime getDateInactive() { return DateInactive; }
        public Record setDateInactive(TrimDateTime value) { this.DateInactive = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public Record setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimDateTime getDatePublished() { return DatePublished; }
        public Record setDatePublished(TrimDateTime value) { this.DatePublished = value; return this; }
        public TrimDateTime getDateReceived() { return DateReceived; }
        public Record setDateReceived(TrimDateTime value) { this.DateReceived = value; return this; }
        public TrimDateTime getDateRegistered() { return DateRegistered; }
        public Record setDateRegistered(TrimDateTime value) { this.DateRegistered = value; return this; }
        public TrimDateTime getDateSuperseded() { return DateSuperseded; }
        public Record setDateSuperseded(TrimDateTime value) { this.DateSuperseded = value; return this; }
        public TrimDateTime getDestructionDate() { return DestructionDate; }
        public Record setDestructionDate(TrimDateTime value) { this.DestructionDate = value; return this; }
        public TrimDateTime getDisposalDate() { return DisposalDate; }
        public Record setDisposalDate(TrimDateTime value) { this.DisposalDate = value; return this; }
        public TrimProperty<DisposalType> getDisposalMethod() { return DisposalMethod; }
        public Record setDisposalMethod(TrimProperty<DisposalType> value) { this.DisposalMethod = value; return this; }
        public TrimProperty<RecordDisp> getDisposition() { return Disposition; }
        public Record setDisposition(TrimProperty<RecordDisp> value) { this.Disposition = value; return this; }
        public TrimDateTime getDispositionChangedDate() { return DispositionChangedDate; }
        public Record setDispositionChangedDate(TrimDateTime value) { this.DispositionChangedDate = value; return this; }
        public TrimStringProperty getDispositionSchedule() { return DispositionSchedule; }
        public Record setDispositionSchedule(TrimStringProperty value) { this.DispositionSchedule = value; return this; }
        public TrimProperty<Boolean> getDocumentAttachPending() { return DocumentAttachPending; }
        public Record setDocumentAttachPending(TrimProperty<Boolean> value) { this.DocumentAttachPending = value; return this; }
        public TrimStringProperty getDocumentDetails() { return DocumentDetails; }
        public Record setDocumentDetails(TrimStringProperty value) { this.DocumentDetails = value; return this; }
        public TrimDateTime getDocumentLastAccessedDate() { return DocumentLastAccessedDate; }
        public Record setDocumentLastAccessedDate(TrimDateTime value) { this.DocumentLastAccessedDate = value; return this; }
        public TrimProperty<Long> getDocumentSize() { return DocumentSize; }
        public Record setDocumentSize(TrimProperty<Long> value) { this.DocumentSize = value; return this; }
        public TrimStringProperty getDocumentStatus() { return DocumentStatus; }
        public Record setDocumentStatus(TrimStringProperty value) { this.DocumentStatus = value; return this; }
        public TrimStringProperty getDocumentType() { return DocumentType; }
        public Record setDocumentType(TrimStringProperty value) { this.DocumentType = value; return this; }
        public LocationRef getEditor() { return Editor; }
        public Record setEditor(LocationRef value) { this.Editor = value; return this; }
        public TrimStringProperty getESource() { return ESource; }
        public Record setESource(TrimStringProperty value) { this.ESource = value; return this; }
        public ElectronicStoreRef getEStore() { return EStore; }
        public Record setEStore(ElectronicStoreRef value) { this.EStore = value; return this; }
        public TrimStringProperty getEStoreId() { return EStoreId; }
        public Record setEStoreId(TrimStringProperty value) { this.EStoreId = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public Record setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimStringProperty getExternalReference() { return ExternalReference; }
        public Record setExternalReference(TrimStringProperty value) { this.ExternalReference = value; return this; }
        public TrimStringProperty getFilePath() { return FilePath; }
        public Record setFilePath(TrimStringProperty value) { this.FilePath = value; return this; }
        public TrimProperty<Boolean> getFinalizeOnSave() { return FinalizeOnSave; }
        public Record setFinalizeOnSave(TrimProperty<Boolean> value) { this.FinalizeOnSave = value; return this; }
        public OriginRef getFolderOrigin() { return FolderOrigin; }
        public Record setFolderOrigin(OriginRef value) { this.FolderOrigin = value; return this; }
        public TrimStringProperty getForeignBarcode() { return ForeignBarcode; }
        public Record setForeignBarcode(TrimStringProperty value) { this.ForeignBarcode = value; return this; }
        public TrimStringProperty getFullClassification() { return FullClassification; }
        public Record setFullClassification(TrimStringProperty value) { this.FullClassification = value; return this; }
        public TrimStringProperty getGeneratedTitle() { return GeneratedTitle; }
        public Record setGeneratedTitle(TrimStringProperty value) { this.GeneratedTitle = value; return this; }
        public TrimStringProperty getGpsLocation() { return GpsLocation; }
        public Record setGpsLocation(TrimStringProperty value) { this.GpsLocation = value; return this; }
        public TrimProperty<Boolean> getHasEmailAttachments() { return HasEmailAttachments; }
        public Record setHasEmailAttachments(TrimProperty<Boolean> value) { this.HasEmailAttachments = value; return this; }
        public TrimProperty<Boolean> getHasHold() { return HasHold; }
        public Record setHasHold(TrimProperty<Boolean> value) { this.HasHold = value; return this; }
        public TrimProperty<Boolean> getHasLinkedDocuments() { return HasLinkedDocuments; }
        public Record setHasLinkedDocuments(TrimProperty<Boolean> value) { this.HasLinkedDocuments = value; return this; }
        public TrimStringProperty getHistory() { return History; }
        public Record setHistory(TrimStringProperty value) { this.History = value; return this; }
        public LocationRef getHomeLocation() { return HomeLocation; }
        public Record setHomeLocation(LocationRef value) { this.HomeLocation = value; return this; }
        public TrimProperty<RecLocSubTypes> getHomeLocationStatus() { return HomeLocationStatus; }
        public Record setHomeLocationStatus(TrimProperty<RecLocSubTypes> value) { this.HomeLocationStatus = value; return this; }
        public SpaceRef getHomeSpace() { return HomeSpace; }
        public Record setHomeSpace(SpaceRef value) { this.HomeSpace = value; return this; }
        public TrimStringProperty getHomeSpaceNumber() { return HomeSpaceNumber; }
        public Record setHomeSpaceNumber(TrimStringProperty value) { this.HomeSpaceNumber = value; return this; }
        public TrimStringProperty getIdolMetadataXML() { return IdolMetadataXML; }
        public Record setIdolMetadataXML(TrimStringProperty value) { this.IdolMetadataXML = value; return this; }
        public TrimProperty<Boolean> getIsCheckedOut() { return IsCheckedOut; }
        public Record setIsCheckedOut(TrimProperty<Boolean> value) { this.IsCheckedOut = value; return this; }
        public TrimProperty<Boolean> getIsContainer() { return IsContainer; }
        public Record setIsContainer(TrimProperty<Boolean> value) { this.IsContainer = value; return this; }
        public TrimProperty<Boolean> getIsElectronic() { return IsElectronic; }
        public Record setIsElectronic(TrimProperty<Boolean> value) { this.IsElectronic = value; return this; }
        public TrimProperty<Boolean> getIsEnclosed() { return IsEnclosed; }
        public Record setIsEnclosed(TrimProperty<Boolean> value) { this.IsEnclosed = value; return this; }
        public TrimProperty<Boolean> getIsInPartSeries() { return IsInPartSeries; }
        public Record setIsInPartSeries(TrimProperty<Boolean> value) { this.IsInPartSeries = value; return this; }
        public TrimProperty<Boolean> getIsRootOfPartSeries() { return IsRootOfPartSeries; }
        public Record setIsRootOfPartSeries(TrimProperty<Boolean> value) { this.IsRootOfPartSeries = value; return this; }
        public TrimProperty<Boolean> getIsSigned() { return IsSigned; }
        public Record setIsSigned(TrimProperty<Boolean> value) { this.IsSigned = value; return this; }
        public TrimStringProperty getJurisdictions() { return Jurisdictions; }
        public Record setJurisdictions(TrimStringProperty value) { this.Jurisdictions = value; return this; }
        public TrimStringProperty getKeywords() { return Keywords; }
        public Record setKeywords(TrimStringProperty value) { this.Keywords = value; return this; }
        public TrimDateTime getLastActionDate() { return LastActionDate; }
        public Record setLastActionDate(TrimDateTime value) { this.LastActionDate = value; return this; }
        public RecordRef getLastPartRecord() { return LastPartRecord; }
        public Record setLastPartRecord(RecordRef value) { this.LastPartRecord = value; return this; }
        public RecordRef getLatestVersion() { return LatestVersion; }
        public Record setLatestVersion(RecordRef value) { this.LatestVersion = value; return this; }
        public TrimStringProperty getLongNumber() { return LongNumber; }
        public Record setLongNumber(TrimStringProperty value) { this.LongNumber = value; return this; }
        public TrimDateTime getMakeInactiveDate() { return MakeInactiveDate; }
        public Record setMakeInactiveDate(TrimDateTime value) { this.MakeInactiveDate = value; return this; }
        public TrimDateTime getManualDestructionDate() { return ManualDestructionDate; }
        public Record setManualDestructionDate(TrimDateTime value) { this.ManualDestructionDate = value; return this; }
        public TrimStringProperty getMatterName() { return MatterName; }
        public Record setMatterName(TrimStringProperty value) { this.MatterName = value; return this; }
        public TrimStringProperty getMatterNumber() { return MatterNumber; }
        public Record setMatterNumber(TrimStringProperty value) { this.MatterNumber = value; return this; }
        public RecordRef getMatterRecord() { return MatterRecord; }
        public Record setMatterRecord(RecordRef value) { this.MatterRecord = value; return this; }
        public TrimProperty<MediaTypes> getMediaType() { return MediaType; }
        public Record setMediaType(TrimProperty<MediaTypes> value) { this.MediaType = value; return this; }
        public MeetingRef getMeeting() { return Meeting; }
        public Record setMeeting(MeetingRef value) { this.Meeting = value; return this; }
        public TrimStringProperty getMessageId() { return MessageId; }
        public Record setMessageId(TrimStringProperty value) { this.MessageId = value; return this; }
        public TrimStringProperty getMimeType() { return MimeType; }
        public Record setMimeType(TrimStringProperty value) { this.MimeType = value; return this; }
        public TrimStringProperty getMovementHistory() { return MovementHistory; }
        public Record setMovementHistory(TrimStringProperty value) { this.MovementHistory = value; return this; }
        public TrimStringProperty getMyAuthorizationComments() { return MyAuthorizationComments; }
        public Record setMyAuthorizationComments(TrimStringProperty value) { this.MyAuthorizationComments = value; return this; }
        public TrimProperty<Boolean> getMyAuthorizationComplete() { return MyAuthorizationComplete; }
        public Record setMyAuthorizationComplete(TrimProperty<Boolean> value) { this.MyAuthorizationComplete = value; return this; }
        public TrimStringProperty getMyReviewComments() { return MyReviewComments; }
        public Record setMyReviewComments(TrimStringProperty value) { this.MyReviewComments = value; return this; }
        public TrimProperty<Boolean> getMyReviewComplete() { return MyReviewComplete; }
        public Record setMyReviewComplete(TrimProperty<Boolean> value) { this.MyReviewComplete = value; return this; }
        public TrimProperty<Integer> getNbrPages() { return NbrPages; }
        public Record setNbrPages(TrimProperty<Integer> value) { this.NbrPages = value; return this; }
        public TrimProperty<Boolean> getNeedsAuthorization() { return NeedsAuthorization; }
        public Record setNeedsAuthorization(TrimProperty<Boolean> value) { this.NeedsAuthorization = value; return this; }
        public TrimProperty<Boolean> getNeedsDataEntryForm() { return NeedsDataEntryForm; }
        public Record setNeedsDataEntryForm(TrimProperty<Boolean> value) { this.NeedsDataEntryForm = value; return this; }
        public TrimProperty<Boolean> getNeedsReview() { return NeedsReview; }
        public Record setNeedsReview(TrimProperty<Boolean> value) { this.NeedsReview = value; return this; }
        public AutoPartRuleRef getNewPartCreationRule() { return NewPartCreationRule; }
        public Record setNewPartCreationRule(AutoPartRuleRef value) { this.NewPartCreationRule = value; return this; }
        public RecordRef getNextPartRecord() { return NextPartRecord; }
        public Record setNextPartRecord(RecordRef value) { this.NextPartRecord = value; return this; }
        public TrimStringProperty getNextTaskDue() { return NextTaskDue; }
        public Record setNextTaskDue(TrimStringProperty value) { this.NextTaskDue = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Record setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Record setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getNumber() { return Number; }
        public Record setNumber(TrimStringProperty value) { this.Number = value; return this; }
        public OriginRef getOriginatedFrom() { return OriginatedFrom; }
        public Record setOriginatedFrom(OriginRef value) { this.OriginatedFrom = value; return this; }
        public OriginHistoryRef getOriginatedFromRun() { return OriginatedFromRun; }
        public Record setOriginatedFromRun(OriginHistoryRef value) { this.OriginatedFromRun = value; return this; }
        public LocationRef getOtherContact() { return OtherContact; }
        public Record setOtherContact(LocationRef value) { this.OtherContact = value; return this; }
        public TrimStringProperty getOverdueActions() { return OverdueActions; }
        public Record setOverdueActions(TrimStringProperty value) { this.OverdueActions = value; return this; }
        public LocationRef getOwnerLocation() { return OwnerLocation; }
        public Record setOwnerLocation(LocationRef value) { this.OwnerLocation = value; return this; }
        public TrimProperty<Boolean> getPreserveHierarchyOnDataEntry() { return PreserveHierarchyOnDataEntry; }
        public Record setPreserveHierarchyOnDataEntry(TrimProperty<Boolean> value) { this.PreserveHierarchyOnDataEntry = value; return this; }
        public RecordRef getPrevPartRecord() { return PrevPartRecord; }
        public Record setPrevPartRecord(RecordRef value) { this.PrevPartRecord = value; return this; }
        public LocationRef getPrimaryContact() { return PrimaryContact; }
        public Record setPrimaryContact(LocationRef value) { this.PrimaryContact = value; return this; }
        public TrimStringProperty getPriority() { return Priority; }
        public Record setPriority(TrimStringProperty value) { this.Priority = value; return this; }
        public RecordTypeRef getRecordType() { return RecordType; }
        public Record setRecordType(RecordTypeRef value) { this.RecordType = value; return this; }
        public TrimStringProperty getRedactedFrom() { return RedactedFrom; }
        public Record setRedactedFrom(TrimStringProperty value) { this.RedactedFrom = value; return this; }
        public TrimStringProperty getRedactionsOf() { return RedactionsOf; }
        public Record setRedactionsOf(TrimStringProperty value) { this.RedactionsOf = value; return this; }
        public RecordRef getRelatedRecord() { return RelatedRecord; }
        public Record setRelatedRecord(RecordRef value) { this.RelatedRecord = value; return this; }
        public TrimStringProperty getRelatedRecs() { return RelatedRecs; }
        public Record setRelatedRecs(TrimStringProperty value) { this.RelatedRecs = value; return this; }
        public TrimProperty<Integer> getRenditionCount() { return RenditionCount; }
        public Record setRenditionCount(TrimProperty<Integer> value) { this.RenditionCount = value; return this; }
        public LocationRef getRepresentative() { return Representative; }
        public Record setRepresentative(LocationRef value) { this.Representative = value; return this; }
        public TrimStringProperty getRequests() { return Requests; }
        public Record setRequests(TrimStringProperty value) { this.Requests = value; return this; }
        public ScheduleRef getRetentionSchedule() { return RetentionSchedule; }
        public Record setRetentionSchedule(ScheduleRef value) { this.RetentionSchedule = value; return this; }
        public TrimDateTime getReturnDueDateTime() { return ReturnDueDateTime; }
        public Record setReturnDueDateTime(TrimDateTime value) { this.ReturnDueDateTime = value; return this; }
        public TrimDateTime getReviewDate() { return ReviewDate; }
        public Record setReviewDate(TrimDateTime value) { this.ReviewDate = value; return this; }
        public TrimDateTime getReviewDueDate() { return ReviewDueDate; }
        public Record setReviewDueDate(TrimDateTime value) { this.ReviewDueDate = value; return this; }
        public TrimProperty<DocumentReviewStates> getReviewState() { return ReviewState; }
        public Record setReviewState(TrimProperty<DocumentReviewStates> value) { this.ReviewState = value; return this; }
        public TrimDateTime getReviewStateDate() { return ReviewStateDate; }
        public Record setReviewStateDate(TrimDateTime value) { this.ReviewStateDate = value; return this; }
        public TrimProperty<Integer> getRevisionCount() { return RevisionCount; }
        public Record setRevisionCount(TrimProperty<Integer> value) { this.RevisionCount = value; return this; }
        public TrimProperty<Integer> getRevisionNumber() { return RevisionNumber; }
        public Record setRevisionNumber(TrimProperty<Integer> value) { this.RevisionNumber = value; return this; }
        public RecordRef getRootPartRecord() { return RootPartRecord; }
        public Record setRootPartRecord(RecordRef value) { this.RootPartRecord = value; return this; }
        public TrimDateTime getSapArchiveDate() { return SapArchiveDate; }
        public Record setSapArchiveDate(TrimDateTime value) { this.SapArchiveDate = value; return this; }
        public TrimStringProperty getSapArchiveLinkVsn() { return SapArchiveLinkVsn; }
        public Record setSapArchiveLinkVsn(TrimStringProperty value) { this.SapArchiveLinkVsn = value; return this; }
        public TrimStringProperty getSapBusinessId() { return SapBusinessId; }
        public Record setSapBusinessId(TrimStringProperty value) { this.SapBusinessId = value; return this; }
        public TrimStringProperty getSapBusinessObject() { return SapBusinessObject; }
        public Record setSapBusinessObject(TrimStringProperty value) { this.SapBusinessObject = value; return this; }
        public LocationRef getSapCreatorLocUri() { return SapCreatorLocUri; }
        public Record setSapCreatorLocUri(LocationRef value) { this.SapCreatorLocUri = value; return this; }
        public TrimStringProperty getSapCreatorName() { return SapCreatorName; }
        public Record setSapCreatorName(TrimStringProperty value) { this.SapCreatorName = value; return this; }
        public TrimStringProperty getSapCustomerName() { return SapCustomerName; }
        public Record setSapCustomerName(TrimStringProperty value) { this.SapCustomerName = value; return this; }
        public TrimStringProperty getSapCustomerNumber() { return SapCustomerNumber; }
        public Record setSapCustomerNumber(TrimStringProperty value) { this.SapCustomerNumber = value; return this; }
        public TrimStringProperty getSapDocumentId() { return SapDocumentId; }
        public Record setSapDocumentId(TrimStringProperty value) { this.SapDocumentId = value; return this; }
        public TrimStringProperty getSapDocumentProtection() { return SapDocumentProtection; }
        public Record setSapDocumentProtection(TrimStringProperty value) { this.SapDocumentProtection = value; return this; }
        public TrimStringProperty getSapDocumentType() { return SapDocumentType; }
        public Record setSapDocumentType(TrimStringProperty value) { this.SapDocumentType = value; return this; }
        public TrimDateTime getSapModifiedDate() { return SapModifiedDate; }
        public Record setSapModifiedDate(TrimDateTime value) { this.SapModifiedDate = value; return this; }
        public TrimStringProperty getSapReposId() { return SapReposId; }
        public Record setSapReposId(TrimStringProperty value) { this.SapReposId = value; return this; }
        public TrimDateTime getScheduledDisposalDate() { return ScheduledDisposalDate; }
        public Record setScheduledDisposalDate(TrimDateTime value) { this.ScheduledDisposalDate = value; return this; }
        public TrimProperty<DisposalType> getScheduledDisposalMethod() { return ScheduledDisposalMethod; }
        public Record setScheduledDisposalMethod(TrimProperty<DisposalType> value) { this.ScheduledDisposalMethod = value; return this; }
        public TrimProperty<DisposalScheduleStatus> getScheduledDisposalStatus() { return ScheduledDisposalStatus; }
        public Record setScheduledDisposalStatus(TrimProperty<DisposalScheduleStatus> value) { this.ScheduledDisposalStatus = value; return this; }
        public TrimProperty<DisposalScheduleStatus> getScheduledInactiveStatus() { return ScheduledInactiveStatus; }
        public Record setScheduledInactiveStatus(TrimProperty<DisposalScheduleStatus> value) { this.ScheduledInactiveStatus = value; return this; }
        public TrimStringProperty getSecurity() { return Security; }
        public Record setSecurity(TrimStringProperty value) { this.Security = value; return this; }
        public TrimStringProperty getSecurityLocks() { return SecurityLocks; }
        public Record setSecurityLocks(TrimStringProperty value) { this.SecurityLocks = value; return this; }
        public RecordRef getSeriesRecord() { return SeriesRecord; }
        public Record setSeriesRecord(RecordRef value) { this.SeriesRecord = value; return this; }
        public TrimStringProperty getSpFarmGUID() { return SpFarmGUID; }
        public Record setSpFarmGUID(TrimStringProperty value) { this.SpFarmGUID = value; return this; }
        public TrimStringProperty getSpGUID() { return SpGUID; }
        public Record setSpGUID(TrimStringProperty value) { this.SpGUID = value; return this; }
        public TrimProperty<Integer> getSpListItemCount() { return SpListItemCount; }
        public Record setSpListItemCount(TrimProperty<Integer> value) { this.SpListItemCount = value; return this; }
        public TrimStringProperty getSpListType() { return SpListType; }
        public Record setSpListType(TrimStringProperty value) { this.SpListType = value; return this; }
        public TrimStringProperty getSpSiteCollectionGUID() { return SpSiteCollectionGUID; }
        public Record setSpSiteCollectionGUID(TrimStringProperty value) { this.SpSiteCollectionGUID = value; return this; }
        public TrimProperty<SpElementType> getSpType() { return SpType; }
        public Record setSpType(TrimProperty<SpElementType> value) { this.SpType = value; return this; }
        public TrimStringProperty getSpURL() { return SpURL; }
        public Record setSpURL(TrimStringProperty value) { this.SpURL = value; return this; }
        public TrimStringProperty getSuggestedFileName() { return SuggestedFileName; }
        public Record setSuggestedFileName(TrimStringProperty value) { this.SuggestedFileName = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public Record setTitle(TrimStringProperty value) { this.Title = value; return this; }
        public TrimStringProperty getTopLevelActions() { return TopLevelActions; }
        public Record setTopLevelActions(TrimStringProperty value) { this.TopLevelActions = value; return this; }
        public TrimStringProperty getTypedTitle() { return TypedTitle; }
        public Record setTypedTitle(TrimStringProperty value) { this.TypedTitle = value; return this; }
        public TrimStringProperty getViewPaneId() { return ViewPaneId; }
        public Record setViewPaneId(TrimStringProperty value) { this.ViewPaneId = value; return this; }
        private static Object responseType = RecordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of ActionDefs filtered using a search string.
    */
    @Route(Path="/ActionDef", Verbs="GET")
    @Api("Fetch a collection of ActionDefs filtered using a search string.")
    public static class ActionDefs extends TrimMainObjectSearch implements IReturn<ActionDefsResponse>
    {
        
        private static Object responseType = ActionDefsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a ActionDef object.
    */
    @Route(Path="/ActionDef", Verbs="POST")
    @Api("Update a ActionDef object.")
    @DataContract
    public static class ActionDef extends TrimMainObject implements IReturn<ActionDefsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildSteps")
        @SerializedName("ChildSteps")
        public ArrayList<ActionDefStep> ChildSteps = null;

        @DataMember(Name="ActionDefActionName")
        @SerializedName("ActionDefActionName")
        @ApiMember(Name="ActionDefActionName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty ActionName = null;

        @DataMember(Name="ActionDefAssignable")
        @SerializedName("ActionDefAssignable")
        @ApiMember(Name="ActionDefAssignable", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> Assignable = null;

        @DataMember(Name="ActionDefAssignee")
        @SerializedName("ActionDefAssignee")
        @ApiMember(Name="ActionDefAssignee", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Assignee = null;

        @DataMember(Name="ActionDefCost")
        @SerializedName("ActionDefCost")
        @ApiMember(Name="ActionDefCost", ParameterType="form", DataType="double")
        public TrimProperty<BigDecimal> Cost = null;

        @DataMember(Name="ActionDefDays")
        @SerializedName("ActionDefDays")
        @ApiMember(Name="ActionDefDays", ParameterType="form", DataType="int")
        public TrimProperty<Integer> Days = null;

        @DataMember(Name="ActionDefHours")
        @SerializedName("ActionDefHours")
        @ApiMember(Name="ActionDefHours", ParameterType="form", DataType="int")
        public TrimProperty<Integer> Hours = null;

        @DataMember(Name="ActionDefIsProcedure")
        @SerializedName("ActionDefIsProcedure")
        @ApiMember(Name="ActionDefIsProcedure", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsProcedure = null;

        @DataMember(Name="ActionDefMinutes")
        @SerializedName("ActionDefMinutes")
        @ApiMember(Name="ActionDefMinutes", ParameterType="form", DataType="int")
        public TrimProperty<Integer> Minutes = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="ActionDefNotes")
        @SerializedName("ActionDefNotes")
        @ApiMember(Name="ActionDefNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActionDef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<ActionDefStep> getChildSteps() { return ChildSteps; }
        public ActionDef setChildSteps(ArrayList<ActionDefStep> value) { this.ChildSteps = value; return this; }
        public TrimStringProperty getActionName() { return ActionName; }
        public ActionDef setActionName(TrimStringProperty value) { this.ActionName = value; return this; }
        public TrimProperty<Boolean> getAssignable() { return Assignable; }
        public ActionDef setAssignable(TrimProperty<Boolean> value) { this.Assignable = value; return this; }
        public LocationRef getAssignee() { return Assignee; }
        public ActionDef setAssignee(LocationRef value) { this.Assignee = value; return this; }
        public TrimProperty<BigDecimal> getCost() { return Cost; }
        public ActionDef setCost(TrimProperty<BigDecimal> value) { this.Cost = value; return this; }
        public TrimProperty<Integer> getDays() { return Days; }
        public ActionDef setDays(TrimProperty<Integer> value) { this.Days = value; return this; }
        public TrimProperty<Integer> getHours() { return Hours; }
        public ActionDef setHours(TrimProperty<Integer> value) { this.Hours = value; return this; }
        public TrimProperty<Boolean> getIsProcedure() { return IsProcedure; }
        public ActionDef setIsProcedure(TrimProperty<Boolean> value) { this.IsProcedure = value; return this; }
        public TrimProperty<Integer> getMinutes() { return Minutes; }
        public ActionDef setMinutes(TrimProperty<Integer> value) { this.Minutes = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public ActionDef setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public ActionDef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        private static Object responseType = ActionDefsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single ActionDef by Uri or Name.
    */
    @Route(Path="/ActionDef/{Id*}", Verbs="GET")
    @Api("Fetch a single ActionDef by Uri or Name.")
    public static class ActionDefFind extends TrimMainObjectByUri implements IReturn<ActionDefsResponse>
    {
        
        private static Object responseType = ActionDefsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Activities filtered using a search string.
    */
    @Route(Path="/Activity", Verbs="GET")
    @Api("Fetch a collection of Activities filtered using a search string.")
    public static class Activities extends TrimMainObjectSearch implements IReturn<ActivitiesResponse>
    {
        
        private static Object responseType = ActivitiesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Activity object.
    */
    @Route(Path="/Activity", Verbs="POST")
    @Api("Update a Activity object.")
    @DataContract
    public static class Activity extends TrimMainObject implements IReturn<ActivitiesResponse>
    {
        /**
        * Completes this activity. You must have preset any completion result, and attached records to any document placeholders as appropriate.
        */
        @DataMember
        @ApiMember(Name="CompleteActivity", ParameterType="form", Verb="POST", Description="Completes this activity. You must have preset any completion result, and attached records to any document placeholders as appropriate.")
        public CompleteActivity CompleteActivity = null;

        /**
        * Reverts this activity back to an uncompleted state - also used for rejecting an authorization.
        */
        @DataMember
        @ApiMember(Name="UncompleteActivity", ParameterType="form", Verb="POST", Description="Reverts this activity back to an uncompleted state - also used for rejecting an authorization.")
        public UncompleteActivity UncompleteActivity = null;

        /**
        * Acquires this activity by assigning it to the currently logged in user.
        */
        @DataMember
        @ApiMember(Name="AcquireActivity", ParameterType="form", Verb="POST", Description="Acquires this activity by assigning it to the currently logged in user.")
        public AcquireActivity AcquireActivity = null;

        /**
        * Resets the assignee of this activity back to its original assignee.
        */
        @DataMember
        @ApiMember(Name="RelinquishActivity", ParameterType="form", Verb="POST", Description="Resets the assignee of this activity back to its original assignee.")
        public RelinquishActivity RelinquishActivity = null;

        /**
        * Reverts an activity back from a suspended state.
        */
        @DataMember
        @ApiMember(Name="ResumeActivity", ParameterType="form", Verb="POST", Description="Reverts an activity back from a suspended state.")
        public ResumeActivity ResumeActivity = null;

        /**
        * Indicates that work has commenced on this activity.
        */
        @DataMember
        @ApiMember(Name="StartActivity", ParameterType="form", Verb="POST", Description="Indicates that work has commenced on this activity.")
        public StartActivity StartActivity = null;

        /**
        * Authorizes the completion of this activity
        */
        @DataMember
        @ApiMember(Name="AuthorizeActivity", ParameterType="form", Verb="POST", Description="Authorizes the completion of this activity")
        public AuthorizeActivity AuthorizeActivity = null;

        /**
        * Reverts workflow processing back to a preceding activity, resetting completed state to incomplete for all activities involved
        */
        @DataMember
        @ApiMember(Name="RollbackActivity", ParameterType="form", Verb="POST", Description="Reverts workflow processing back to a preceding activity, resetting completed state to incomplete for all activities involved")
        public RollbackActivity RollbackActivity = null;

        /**
        * Suspends work on this activity for the nominated duration - usually required when waiting for outside input.
        */
        @DataMember
        @ApiMember(Name="SuspendActivity", ParameterType="form", Verb="POST", Description="Suspends work on this activity for the nominated duration - usually required when waiting for outside input.")
        public SuspendActivity SuspendActivity = null;

        /**
        * Rejects the authorization of this activity.
        */
        @DataMember
        @ApiMember(Name="RejectActivity", ParameterType="form", Verb="POST", Description="Rejects the authorization of this activity.")
        public RejectActivity RejectActivity = null;

        /**
        * Rejects the authorization of this activity.
        */
        @DataMember
        @ApiMember(Name="ReassignActivity", ParameterType="form", Verb="POST", Description="Rejects the authorization of this activity.")
        public ReassignActivity ReassignActivity = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildAuthorizations")
        @SerializedName("ChildAuthorizations")
        public ArrayList<ActivityAuthorization> ChildAuthorizations = null;

        @DataMember(Name="ChildDocuments")
        @SerializedName("ChildDocuments")
        public ArrayList<ActivityDocument> ChildDocuments = null;

        @DataMember(Name="ChildEmailRecipients")
        @SerializedName("ChildEmailRecipients")
        public ArrayList<ActivityEmailRecipient> ChildEmailRecipients = null;

        @DataMember(Name="ChildEscalations")
        @SerializedName("ChildEscalations")
        public ArrayList<ActivityEscalation> ChildEscalations = null;

        @DataMember(Name="ChildResults")
        @SerializedName("ChildResults")
        public ArrayList<ActivityResult> ChildResults = null;

        @DataMember(Name="ChildStartConditions")
        @SerializedName("ChildStartConditions")
        public ArrayList<ActivityStartCondition> ChildStartConditions = null;

        @DataMember(Name="ActivityActivityId")
        @SerializedName("ActivityActivityId")
        @ApiMember(Name="ActivityActivityId", ParameterType="form", DataType="int", Verb="GET")
        public TrimProperty<Integer> ActivityId = null;

        @DataMember(Name="ActivityActivityPriority")
        @SerializedName("ActivityActivityPriority")
        @ApiMember(Name="ActivityActivityPriority", ParameterType="form", DataType="string")
        public TrimProperty<Priority> ActivityPriority = null;

        @DataMember(Name="ActivityActualCost")
        @SerializedName("ActivityActualCost")
        @ApiMember(Name="ActivityActualCost", ParameterType="form", DataType="double")
        public TrimProperty<BigDecimal> ActualCost = null;

        @DataMember(Name="ActivityActualDuration")
        @SerializedName("ActivityActualDuration")
        @ApiMember(Name="ActivityActualDuration", ParameterType="form", DataType="long")
        public TrimProperty<Long> ActualDuration = null;

        @DataMember(Name="ActivityAssignedBy")
        @SerializedName("ActivityAssignedBy")
        @ApiMember(Name="ActivityAssignedBy", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef AssignedBy = null;

        @DataMember(Name="ActivityAssignedTo")
        @SerializedName("ActivityAssignedTo")
        @ApiMember(Name="ActivityAssignedTo", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef AssignedTo = null;

        @DataMember(Name="ActivityAutoComplete")
        @SerializedName("ActivityAutoComplete")
        @ApiMember(Name="ActivityAutoComplete", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AutoComplete = null;

        @DataMember(Name="ActivityCompletedBy")
        @SerializedName("ActivityCompletedBy")
        @ApiMember(Name="ActivityCompletedBy", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef CompletedBy = null;

        @DataMember(Name="ActivityCompletedOnTime")
        @SerializedName("ActivityCompletedOnTime")
        @ApiMember(Name="ActivityCompletedOnTime", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> CompletedOnTime = null;

        @DataMember(Name="ActivityDateAssigned")
        @SerializedName("ActivityDateAssigned")
        @ApiMember(Name="ActivityDateAssigned", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateAssigned = null;

        @DataMember(Name="ActivityDateAuthorized")
        @SerializedName("ActivityDateAuthorized")
        @ApiMember(Name="ActivityDateAuthorized", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateAuthorized = null;

        @DataMember(Name="ActivityDateCompleted")
        @SerializedName("ActivityDateCompleted")
        @ApiMember(Name="ActivityDateCompleted", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateCompleted = null;

        @DataMember(Name="ActivityDateDue")
        @SerializedName("ActivityDateDue")
        @ApiMember(Name="ActivityDateDue", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateDue = null;

        @DataMember(Name="ActivityDateEarliestStart")
        @SerializedName("ActivityDateEarliestStart")
        @ApiMember(Name="ActivityDateEarliestStart", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateEarliestStart = null;

        @DataMember(Name="ActivityDateLatestStart")
        @SerializedName("ActivityDateLatestStart")
        @ApiMember(Name="ActivityDateLatestStart", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateLatestStart = null;

        @DataMember(Name="ActivityDateSkipped")
        @SerializedName("ActivityDateSkipped")
        @ApiMember(Name="ActivityDateSkipped", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateSkipped = null;

        @DataMember(Name="ActivityDateStarted")
        @SerializedName("ActivityDateStarted")
        @ApiMember(Name="ActivityDateStarted", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateStarted = null;

        @DataMember(Name="ActivityDateSuspended")
        @SerializedName("ActivityDateSuspended")
        @ApiMember(Name="ActivityDateSuspended", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateSuspended = null;

        @DataMember(Name="ActivityDateSuspendedUntil")
        @SerializedName("ActivityDateSuspendedUntil")
        @ApiMember(Name="ActivityDateSuspendedUntil", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateSuspendedUntil = null;

        @DataMember(Name="ActivityDerivedFromTemplate")
        @SerializedName("ActivityDerivedFromTemplate")
        @ApiMember(Name="ActivityDerivedFromTemplate", ParameterType="form", DataType="long", Verb="POST")
        public WorkflowTemplateRef DerivedFromTemplate = null;

        @DataMember(Name="ActivityEmailAssigned")
        @SerializedName("ActivityEmailAssigned")
        @ApiMember(Name="ActivityEmailAssigned", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailAssigned = null;

        @DataMember(Name="ActivityEmailAuthorizable")
        @SerializedName("ActivityEmailAuthorizable")
        @ApiMember(Name="ActivityEmailAuthorizable", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailAuthorizable = null;

        @DataMember(Name="ActivityEmailCompleted")
        @SerializedName("ActivityEmailCompleted")
        @ApiMember(Name="ActivityEmailCompleted", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailCompleted = null;

        @DataMember(Name="ActivityEmailCurrent")
        @SerializedName("ActivityEmailCurrent")
        @ApiMember(Name="ActivityEmailCurrent", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailCurrent = null;

        @DataMember(Name="ActivityEmailEscalated")
        @SerializedName("ActivityEmailEscalated")
        @ApiMember(Name="ActivityEmailEscalated", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailEscalated = null;

        @DataMember(Name="ActivityEmailOverdue")
        @SerializedName("ActivityEmailOverdue")
        @ApiMember(Name="ActivityEmailOverdue", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailOverdue = null;

        @DataMember(Name="ActivityEmailReassigned")
        @SerializedName("ActivityEmailReassigned")
        @ApiMember(Name="ActivityEmailReassigned", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailReassigned = null;

        @DataMember(Name="ActivityEmailSkipped")
        @SerializedName("ActivityEmailSkipped")
        @ApiMember(Name="ActivityEmailSkipped", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailSkipped = null;

        @DataMember(Name="ActivityEmailUndone")
        @SerializedName("ActivityEmailUndone")
        @ApiMember(Name="ActivityEmailUndone", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> EmailUndone = null;

        @DataMember(Name="ActivityEscalatedTo")
        @SerializedName("ActivityEscalatedTo")
        @ApiMember(Name="ActivityEscalatedTo", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef EscalatedTo = null;

        @DataMember(Name="ActivityEstimatedCost")
        @SerializedName("ActivityEstimatedCost")
        @ApiMember(Name="ActivityEstimatedCost", ParameterType="form", DataType="double")
        public TrimProperty<BigDecimal> EstimatedCost = null;

        @DataMember(Name="ActivityEstimatedDuration")
        @SerializedName("ActivityEstimatedDuration")
        @ApiMember(Name="ActivityEstimatedDuration", ParameterType="form", DataType="long")
        public TrimProperty<Long> EstimatedDuration = null;

        @DataMember(Name="ActivityHasSubActivities")
        @SerializedName("ActivityHasSubActivities")
        @ApiMember(Name="ActivityHasSubActivities", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> HasSubActivities = null;

        @DataMember(Name="ActivityIsComplete")
        @SerializedName("ActivityIsComplete")
        @ApiMember(Name="ActivityIsComplete", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="ActivityIsLastActivity")
        @SerializedName("ActivityIsLastActivity")
        @ApiMember(Name="ActivityIsLastActivity", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsLastActivity = null;

        @DataMember(Name="ActivityIsOverdue")
        @SerializedName("ActivityIsOverdue")
        @ApiMember(Name="ActivityIsOverdue", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsOverdue = null;

        @DataMember(Name="ActivityIsReadyToStart")
        @SerializedName("ActivityIsReadyToStart")
        @ApiMember(Name="ActivityIsReadyToStart", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsReadyToStart = null;

        @DataMember(Name="ActivityIsStartActivity")
        @SerializedName("ActivityIsStartActivity")
        @ApiMember(Name="ActivityIsStartActivity", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsStartActivity = null;

        @DataMember(Name="ActivityName")
        @SerializedName("ActivityName")
        @ApiMember(Name="ActivityName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="ActivityNormalRect")
        @SerializedName("ActivityNormalRect")
        @ApiMember(Name="ActivityNormalRect", ParameterType="form", DataType="string")
        public TrimStringProperty NormalRect = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="ActivityNotes")
        @SerializedName("ActivityNotes")
        @ApiMember(Name="ActivityNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="ActivityOriginalAssignee")
        @SerializedName("ActivityOriginalAssignee")
        @ApiMember(Name="ActivityOriginalAssignee", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef OriginalAssignee = null;

        @DataMember(Name="ActivityOutlineRect")
        @SerializedName("ActivityOutlineRect")
        @ApiMember(Name="ActivityOutlineRect", ParameterType="form", DataType="string")
        public TrimStringProperty OutlineRect = null;

        @DataMember(Name="ActivityParentActivityId")
        @SerializedName("ActivityParentActivityId")
        @ApiMember(Name="ActivityParentActivityId", ParameterType="form", DataType="int", Verb="GET")
        public TrimProperty<Integer> ParentActivityId = null;

        @DataMember(Name="ActivityPercentComplete")
        @SerializedName("ActivityPercentComplete")
        @ApiMember(Name="ActivityPercentComplete", ParameterType="form", DataType="int")
        public TrimProperty<Integer> PercentComplete = null;

        @DataMember(Name="ActivityReasonForSuspension")
        @SerializedName("ActivityReasonForSuspension")
        @ApiMember(Name="ActivityReasonForSuspension", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ReasonForSuspension = null;

        @DataMember(Name="ActivityRequiresAuthorization")
        @SerializedName("ActivityRequiresAuthorization")
        @ApiMember(Name="ActivityRequiresAuthorization", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> RequiresAuthorization = null;

        @DataMember(Name="ActivityResult")
        @SerializedName("ActivityResult")
        @ApiMember(Name="ActivityResult", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Result = null;

        @DataMember(Name="ActivityScheduledDuration")
        @SerializedName("ActivityScheduledDuration")
        @ApiMember(Name="ActivityScheduledDuration", ParameterType="form", DataType="long")
        public TrimProperty<Long> ScheduledDuration = null;

        @DataMember(Name="ActivityState")
        @SerializedName("ActivityState")
        @ApiMember(Name="ActivityState", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<ActivityStates> State = null;

        @DataMember(Name="ActivitySupervisor")
        @SerializedName("ActivitySupervisor")
        @ApiMember(Name="ActivitySupervisor", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Supervisor = null;

        @DataMember(Name="ActivitySuspendedBy")
        @SerializedName("ActivitySuspendedBy")
        @ApiMember(Name="ActivitySuspendedBy", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef SuspendedBy = null;

        @DataMember(Name="ActivityTemplate")
        @SerializedName("ActivityTemplate")
        @ApiMember(Name="ActivityTemplate", ParameterType="form", DataType="long", Verb="POST")
        public WorkflowTemplateRef Template = null;

        @DataMember(Name="ActivityTotalSuspensionDuration")
        @SerializedName("ActivityTotalSuspensionDuration")
        @ApiMember(Name="ActivityTotalSuspensionDuration", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> TotalSuspensionDuration = null;

        @DataMember(Name="ActivityUseAdvancedCompletionWizard")
        @SerializedName("ActivityUseAdvancedCompletionWizard")
        @ApiMember(Name="ActivityUseAdvancedCompletionWizard", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseAdvancedCompletionWizard = null;

        @DataMember(Name="ActivityWasSkipped")
        @SerializedName("ActivityWasSkipped")
        @ApiMember(Name="ActivityWasSkipped", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> WasSkipped = null;

        @DataMember(Name="ActivityWithinTemplate")
        @SerializedName("ActivityWithinTemplate")
        @ApiMember(Name="ActivityWithinTemplate", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> WithinTemplate = null;

        @DataMember(Name="ActivityWorkflow")
        @SerializedName("ActivityWorkflow")
        @ApiMember(Name="ActivityWorkflow", ParameterType="form", DataType="long", Verb="POST")
        public WorkflowRef Workflow = null;
        
        public CompleteActivity getCompleteActivity() { return CompleteActivity; }
        public Activity setCompleteActivity(CompleteActivity value) { this.CompleteActivity = value; return this; }
        public UncompleteActivity getUncompleteActivity() { return UncompleteActivity; }
        public Activity setUncompleteActivity(UncompleteActivity value) { this.UncompleteActivity = value; return this; }
        public AcquireActivity getAcquireActivity() { return AcquireActivity; }
        public Activity setAcquireActivity(AcquireActivity value) { this.AcquireActivity = value; return this; }
        public RelinquishActivity getRelinquishActivity() { return RelinquishActivity; }
        public Activity setRelinquishActivity(RelinquishActivity value) { this.RelinquishActivity = value; return this; }
        public ResumeActivity getResumeActivity() { return ResumeActivity; }
        public Activity setResumeActivity(ResumeActivity value) { this.ResumeActivity = value; return this; }
        public StartActivity getStartActivity() { return StartActivity; }
        public Activity setStartActivity(StartActivity value) { this.StartActivity = value; return this; }
        public AuthorizeActivity getAuthorizeActivity() { return AuthorizeActivity; }
        public Activity setAuthorizeActivity(AuthorizeActivity value) { this.AuthorizeActivity = value; return this; }
        public RollbackActivity getRollbackActivity() { return RollbackActivity; }
        public Activity setRollbackActivity(RollbackActivity value) { this.RollbackActivity = value; return this; }
        public SuspendActivity getSuspendActivity() { return SuspendActivity; }
        public Activity setSuspendActivity(SuspendActivity value) { this.SuspendActivity = value; return this; }
        public RejectActivity getRejectActivity() { return RejectActivity; }
        public Activity setRejectActivity(RejectActivity value) { this.RejectActivity = value; return this; }
        public ReassignActivity getReassignActivity() { return ReassignActivity; }
        public Activity setReassignActivity(ReassignActivity value) { this.ReassignActivity = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Activity setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<ActivityAuthorization> getChildAuthorizations() { return ChildAuthorizations; }
        public Activity setChildAuthorizations(ArrayList<ActivityAuthorization> value) { this.ChildAuthorizations = value; return this; }
        public ArrayList<ActivityDocument> getChildDocuments() { return ChildDocuments; }
        public Activity setChildDocuments(ArrayList<ActivityDocument> value) { this.ChildDocuments = value; return this; }
        public ArrayList<ActivityEmailRecipient> getChildEmailRecipients() { return ChildEmailRecipients; }
        public Activity setChildEmailRecipients(ArrayList<ActivityEmailRecipient> value) { this.ChildEmailRecipients = value; return this; }
        public ArrayList<ActivityEscalation> getChildEscalations() { return ChildEscalations; }
        public Activity setChildEscalations(ArrayList<ActivityEscalation> value) { this.ChildEscalations = value; return this; }
        public ArrayList<ActivityResult> getChildResults() { return ChildResults; }
        public Activity setChildResults(ArrayList<ActivityResult> value) { this.ChildResults = value; return this; }
        public ArrayList<ActivityStartCondition> getChildStartConditions() { return ChildStartConditions; }
        public Activity setChildStartConditions(ArrayList<ActivityStartCondition> value) { this.ChildStartConditions = value; return this; }
        public TrimProperty<Integer> getActivityId() { return ActivityId; }
        public Activity setActivityId(TrimProperty<Integer> value) { this.ActivityId = value; return this; }
        public TrimProperty<Priority> getActivityPriority() { return ActivityPriority; }
        public Activity setActivityPriority(TrimProperty<Priority> value) { this.ActivityPriority = value; return this; }
        public TrimProperty<BigDecimal> getActualCost() { return ActualCost; }
        public Activity setActualCost(TrimProperty<BigDecimal> value) { this.ActualCost = value; return this; }
        public TrimProperty<Long> getActualDuration() { return ActualDuration; }
        public Activity setActualDuration(TrimProperty<Long> value) { this.ActualDuration = value; return this; }
        public LocationRef getAssignedBy() { return AssignedBy; }
        public Activity setAssignedBy(LocationRef value) { this.AssignedBy = value; return this; }
        public LocationRef getAssignedTo() { return AssignedTo; }
        public Activity setAssignedTo(LocationRef value) { this.AssignedTo = value; return this; }
        public TrimProperty<Boolean> getAutoComplete() { return AutoComplete; }
        public Activity setAutoComplete(TrimProperty<Boolean> value) { this.AutoComplete = value; return this; }
        public LocationRef getCompletedBy() { return CompletedBy; }
        public Activity setCompletedBy(LocationRef value) { this.CompletedBy = value; return this; }
        public TrimProperty<Boolean> getCompletedOnTime() { return CompletedOnTime; }
        public Activity setCompletedOnTime(TrimProperty<Boolean> value) { this.CompletedOnTime = value; return this; }
        public TrimDateTime getDateAssigned() { return DateAssigned; }
        public Activity setDateAssigned(TrimDateTime value) { this.DateAssigned = value; return this; }
        public TrimDateTime getDateAuthorized() { return DateAuthorized; }
        public Activity setDateAuthorized(TrimDateTime value) { this.DateAuthorized = value; return this; }
        public TrimDateTime getDateCompleted() { return DateCompleted; }
        public Activity setDateCompleted(TrimDateTime value) { this.DateCompleted = value; return this; }
        public TrimDateTime getDateDue() { return DateDue; }
        public Activity setDateDue(TrimDateTime value) { this.DateDue = value; return this; }
        public TrimDateTime getDateEarliestStart() { return DateEarliestStart; }
        public Activity setDateEarliestStart(TrimDateTime value) { this.DateEarliestStart = value; return this; }
        public TrimDateTime getDateLatestStart() { return DateLatestStart; }
        public Activity setDateLatestStart(TrimDateTime value) { this.DateLatestStart = value; return this; }
        public TrimDateTime getDateSkipped() { return DateSkipped; }
        public Activity setDateSkipped(TrimDateTime value) { this.DateSkipped = value; return this; }
        public TrimDateTime getDateStarted() { return DateStarted; }
        public Activity setDateStarted(TrimDateTime value) { this.DateStarted = value; return this; }
        public TrimDateTime getDateSuspended() { return DateSuspended; }
        public Activity setDateSuspended(TrimDateTime value) { this.DateSuspended = value; return this; }
        public TrimDateTime getDateSuspendedUntil() { return DateSuspendedUntil; }
        public Activity setDateSuspendedUntil(TrimDateTime value) { this.DateSuspendedUntil = value; return this; }
        public WorkflowTemplateRef getDerivedFromTemplate() { return DerivedFromTemplate; }
        public Activity setDerivedFromTemplate(WorkflowTemplateRef value) { this.DerivedFromTemplate = value; return this; }
        public TrimProperty<Boolean> getEmailAssigned() { return EmailAssigned; }
        public Activity setEmailAssigned(TrimProperty<Boolean> value) { this.EmailAssigned = value; return this; }
        public TrimProperty<Boolean> getEmailAuthorizable() { return EmailAuthorizable; }
        public Activity setEmailAuthorizable(TrimProperty<Boolean> value) { this.EmailAuthorizable = value; return this; }
        public TrimProperty<Boolean> getEmailCompleted() { return EmailCompleted; }
        public Activity setEmailCompleted(TrimProperty<Boolean> value) { this.EmailCompleted = value; return this; }
        public TrimProperty<Boolean> getEmailCurrent() { return EmailCurrent; }
        public Activity setEmailCurrent(TrimProperty<Boolean> value) { this.EmailCurrent = value; return this; }
        public TrimProperty<Boolean> getEmailEscalated() { return EmailEscalated; }
        public Activity setEmailEscalated(TrimProperty<Boolean> value) { this.EmailEscalated = value; return this; }
        public TrimProperty<Boolean> getEmailOverdue() { return EmailOverdue; }
        public Activity setEmailOverdue(TrimProperty<Boolean> value) { this.EmailOverdue = value; return this; }
        public TrimProperty<Boolean> getEmailReassigned() { return EmailReassigned; }
        public Activity setEmailReassigned(TrimProperty<Boolean> value) { this.EmailReassigned = value; return this; }
        public TrimProperty<Boolean> getEmailSkipped() { return EmailSkipped; }
        public Activity setEmailSkipped(TrimProperty<Boolean> value) { this.EmailSkipped = value; return this; }
        public TrimProperty<Boolean> getEmailUndone() { return EmailUndone; }
        public Activity setEmailUndone(TrimProperty<Boolean> value) { this.EmailUndone = value; return this; }
        public LocationRef getEscalatedTo() { return EscalatedTo; }
        public Activity setEscalatedTo(LocationRef value) { this.EscalatedTo = value; return this; }
        public TrimProperty<BigDecimal> getEstimatedCost() { return EstimatedCost; }
        public Activity setEstimatedCost(TrimProperty<BigDecimal> value) { this.EstimatedCost = value; return this; }
        public TrimProperty<Long> getEstimatedDuration() { return EstimatedDuration; }
        public Activity setEstimatedDuration(TrimProperty<Long> value) { this.EstimatedDuration = value; return this; }
        public TrimProperty<Boolean> getHasSubActivities() { return HasSubActivities; }
        public Activity setHasSubActivities(TrimProperty<Boolean> value) { this.HasSubActivities = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public Activity setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<Boolean> getIsLastActivity() { return IsLastActivity; }
        public Activity setIsLastActivity(TrimProperty<Boolean> value) { this.IsLastActivity = value; return this; }
        public TrimProperty<Boolean> getIsOverdue() { return IsOverdue; }
        public Activity setIsOverdue(TrimProperty<Boolean> value) { this.IsOverdue = value; return this; }
        public TrimProperty<Boolean> getIsReadyToStart() { return IsReadyToStart; }
        public Activity setIsReadyToStart(TrimProperty<Boolean> value) { this.IsReadyToStart = value; return this; }
        public TrimProperty<Boolean> getIsStartActivity() { return IsStartActivity; }
        public Activity setIsStartActivity(TrimProperty<Boolean> value) { this.IsStartActivity = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Activity setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNormalRect() { return NormalRect; }
        public Activity setNormalRect(TrimStringProperty value) { this.NormalRect = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Activity setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Activity setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public LocationRef getOriginalAssignee() { return OriginalAssignee; }
        public Activity setOriginalAssignee(LocationRef value) { this.OriginalAssignee = value; return this; }
        public TrimStringProperty getOutlineRect() { return OutlineRect; }
        public Activity setOutlineRect(TrimStringProperty value) { this.OutlineRect = value; return this; }
        public TrimProperty<Integer> getParentActivityId() { return ParentActivityId; }
        public Activity setParentActivityId(TrimProperty<Integer> value) { this.ParentActivityId = value; return this; }
        public TrimProperty<Integer> getPercentComplete() { return PercentComplete; }
        public Activity setPercentComplete(TrimProperty<Integer> value) { this.PercentComplete = value; return this; }
        public TrimStringProperty getReasonForSuspension() { return ReasonForSuspension; }
        public Activity setReasonForSuspension(TrimStringProperty value) { this.ReasonForSuspension = value; return this; }
        public TrimProperty<Boolean> getRequiresAuthorization() { return RequiresAuthorization; }
        public Activity setRequiresAuthorization(TrimProperty<Boolean> value) { this.RequiresAuthorization = value; return this; }
        public TrimStringProperty getResult() { return Result; }
        public Activity setResult(TrimStringProperty value) { this.Result = value; return this; }
        public TrimProperty<Long> getScheduledDuration() { return ScheduledDuration; }
        public Activity setScheduledDuration(TrimProperty<Long> value) { this.ScheduledDuration = value; return this; }
        public TrimProperty<ActivityStates> getState() { return State; }
        public Activity setState(TrimProperty<ActivityStates> value) { this.State = value; return this; }
        public LocationRef getSupervisor() { return Supervisor; }
        public Activity setSupervisor(LocationRef value) { this.Supervisor = value; return this; }
        public LocationRef getSuspendedBy() { return SuspendedBy; }
        public Activity setSuspendedBy(LocationRef value) { this.SuspendedBy = value; return this; }
        public WorkflowTemplateRef getTemplate() { return Template; }
        public Activity setTemplate(WorkflowTemplateRef value) { this.Template = value; return this; }
        public TrimProperty<Long> getTotalSuspensionDuration() { return TotalSuspensionDuration; }
        public Activity setTotalSuspensionDuration(TrimProperty<Long> value) { this.TotalSuspensionDuration = value; return this; }
        public TrimProperty<Boolean> getUseAdvancedCompletionWizard() { return UseAdvancedCompletionWizard; }
        public Activity setUseAdvancedCompletionWizard(TrimProperty<Boolean> value) { this.UseAdvancedCompletionWizard = value; return this; }
        public TrimProperty<Boolean> getWasSkipped() { return WasSkipped; }
        public Activity setWasSkipped(TrimProperty<Boolean> value) { this.WasSkipped = value; return this; }
        public TrimProperty<Boolean> getWithinTemplate() { return WithinTemplate; }
        public Activity setWithinTemplate(TrimProperty<Boolean> value) { this.WithinTemplate = value; return this; }
        public WorkflowRef getWorkflow() { return Workflow; }
        public Activity setWorkflow(WorkflowRef value) { this.Workflow = value; return this; }
        private static Object responseType = ActivitiesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Activity by Uri or Name.
    */
    @Route(Path="/Activity/{Id*}", Verbs="GET")
    @Api("Fetch a single Activity by Uri or Name.")
    public static class ActivityFind extends TrimMainObjectByUri implements IReturn<ActivitiesResponse>
    {
        
        private static Object responseType = ActivitiesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of AgendaItems filtered using a search string.
    */
    @Route(Path="/AgendaItem", Verbs="GET")
    @Api("Fetch a collection of AgendaItems filtered using a search string.")
    public static class AgendaItems extends TrimMainObjectSearch implements IReturn<AgendaItemsResponse>
    {
        
        private static Object responseType = AgendaItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a AgendaItem object.
    */
    @Route(Path="/AgendaItem", Verbs="POST")
    @Api("Update a AgendaItem object.")
    @DataContract
    public static class AgendaItem extends TrimMainObject implements IReturn<AgendaItemsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildAttachments")
        @SerializedName("ChildAttachments")
        public ArrayList<AgendaItemAttachment> ChildAttachments = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="AgendaItemAccessControl")
        @SerializedName("AgendaItemAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="AgendaItemAgendaItemOrderNumber")
        @SerializedName("AgendaItemAgendaItemOrderNumber")
        @ApiMember(Name="AgendaItemAgendaItemOrderNumber", ParameterType="form", DataType="int")
        public TrimProperty<Integer> AgendaItemOrderNumber = null;

        @DataMember(Name="AgendaItemApproved")
        @SerializedName("AgendaItemApproved")
        @ApiMember(Name="AgendaItemApproved", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> Approved = null;

        @DataMember(Name="AgendaItemCarriedForwardFromItem")
        @SerializedName("AgendaItemCarriedForwardFromItem")
        @ApiMember(Name="AgendaItemCarriedForwardFromItem", ParameterType="form", DataType="long", Verb="POST")
        public AgendaItemRef CarriedForwardFromItem = null;

        @DataMember(Name="AgendaItemDateApproved")
        @SerializedName("AgendaItemDateApproved")
        @ApiMember(Name="AgendaItemDateApproved", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateApproved = null;

        @DataMember(Name="AgendaItemDateSubmitted")
        @SerializedName("AgendaItemDateSubmitted")
        @ApiMember(Name="AgendaItemDateSubmitted", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateSubmitted = null;

        @DataMember(Name="AgendaItemDefaultMinuteItemType")
        @SerializedName("AgendaItemDefaultMinuteItemType")
        @ApiMember(Name="AgendaItemDefaultMinuteItemType", ParameterType="form", DataType="long", Verb="POST")
        public MinuteItemTypeRef DefaultMinuteItemType = null;

        @DataMember(Name="AgendaItemDescription")
        @SerializedName("AgendaItemDescription")
        @ApiMember(Name="AgendaItemDescription", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Description = null;

        @DataMember(Name="AgendaItemDocDateModified")
        @SerializedName("AgendaItemDocDateModified")
        @ApiMember(Name="AgendaItemDocDateModified", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DocDateModified = null;

        @DataMember(Name="AgendaItemDocExtension")
        @SerializedName("AgendaItemDocExtension")
        @ApiMember(Name="AgendaItemDocExtension", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DocExtension = null;

        @DataMember(Name="AgendaItemDocSize")
        @SerializedName("AgendaItemDocSize")
        @ApiMember(Name="AgendaItemDocSize", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> DocSize = null;

        @DataMember(Name="AgendaItemDocStore")
        @SerializedName("AgendaItemDocStore")
        @ApiMember(Name="AgendaItemDocStore", ParameterType="form", DataType="long", Verb="POST")
        public ElectronicStoreRef DocStore = null;

        @DataMember(Name="AgendaItemDocStoreId")
        @SerializedName("AgendaItemDocStoreId")
        @ApiMember(Name="AgendaItemDocStoreId", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DocStoreId = null;

        @DataMember(Name="AgendaItemExpandedNumber")
        @SerializedName("AgendaItemExpandedNumber")
        @ApiMember(Name="AgendaItemExpandedNumber", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ExpandedNumber = null;

        @DataMember(Name="AgendaItemIsPending")
        @SerializedName("AgendaItemIsPending")
        @ApiMember(Name="AgendaItemIsPending", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsPending = null;

        @DataMember(Name="AgendaItemIsSection")
        @SerializedName("AgendaItemIsSection")
        @ApiMember(Name="AgendaItemIsSection", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsSection = null;

        @DataMember(Name="AgendaItemIsStanding")
        @SerializedName("AgendaItemIsStanding")
        @ApiMember(Name="AgendaItemIsStanding", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsStanding = null;

        @DataMember(Name="AgendaItemItemType")
        @SerializedName("AgendaItemItemType")
        @ApiMember(Name="AgendaItemItemType", ParameterType="form", DataType="long", Verb="POST")
        public AgendaItemTypeRef ItemType = null;

        @DataMember(Name="AgendaItemNeedsApprovalBy")
        @SerializedName("AgendaItemNeedsApprovalBy")
        @ApiMember(Name="AgendaItemNeedsApprovalBy", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef NeedsApprovalBy = null;

        @DataMember(Name="AgendaItemNumber")
        @SerializedName("AgendaItemNumber")
        @ApiMember(Name="AgendaItemNumber", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Number = null;

        @DataMember(Name="AgendaItemOutlineNumber")
        @SerializedName("AgendaItemOutlineNumber")
        @ApiMember(Name="AgendaItemOutlineNumber", ParameterType="form", DataType="string")
        public TrimStringProperty OutlineNumber = null;

        @DataMember(Name="AgendaItemParentAgendaItem")
        @SerializedName("AgendaItemParentAgendaItem")
        @ApiMember(Name="AgendaItemParentAgendaItem", ParameterType="form", DataType="long", Verb="POST")
        public AgendaItemRef ParentAgendaItem = null;

        @DataMember(Name="AgendaItemParentMeeting")
        @SerializedName("AgendaItemParentMeeting")
        @ApiMember(Name="AgendaItemParentMeeting", ParameterType="form", DataType="long", Verb="POST")
        public MeetingRef ParentMeeting = null;

        @DataMember(Name="AgendaItemParentMeetingType")
        @SerializedName("AgendaItemParentMeetingType")
        @ApiMember(Name="AgendaItemParentMeetingType", ParameterType="form", DataType="long", Verb="POST")
        public MeetingTypeRef ParentMeetingType = null;

        @DataMember(Name="AgendaItemPrimaryLocation")
        @SerializedName("AgendaItemPrimaryLocation")
        @ApiMember(Name="AgendaItemPrimaryLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef PrimaryLocation = null;

        @DataMember(Name="AgendaItemPrimaryRecord")
        @SerializedName("AgendaItemPrimaryRecord")
        @ApiMember(Name="AgendaItemPrimaryRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef PrimaryRecord = null;

        @DataMember(Name="AgendaItemSubmittedBy")
        @SerializedName("AgendaItemSubmittedBy")
        @ApiMember(Name="AgendaItemSubmittedBy", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef SubmittedBy = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AgendaItem setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<AgendaItemAttachment> getChildAttachments() { return ChildAttachments; }
        public AgendaItem setChildAttachments(ArrayList<AgendaItemAttachment> value) { this.ChildAttachments = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public AgendaItem setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public AgendaItem setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Integer> getAgendaItemOrderNumber() { return AgendaItemOrderNumber; }
        public AgendaItem setAgendaItemOrderNumber(TrimProperty<Integer> value) { this.AgendaItemOrderNumber = value; return this; }
        public TrimProperty<Boolean> getApproved() { return Approved; }
        public AgendaItem setApproved(TrimProperty<Boolean> value) { this.Approved = value; return this; }
        public AgendaItemRef getCarriedForwardFromItem() { return CarriedForwardFromItem; }
        public AgendaItem setCarriedForwardFromItem(AgendaItemRef value) { this.CarriedForwardFromItem = value; return this; }
        public TrimDateTime getDateApproved() { return DateApproved; }
        public AgendaItem setDateApproved(TrimDateTime value) { this.DateApproved = value; return this; }
        public TrimDateTime getDateSubmitted() { return DateSubmitted; }
        public AgendaItem setDateSubmitted(TrimDateTime value) { this.DateSubmitted = value; return this; }
        public MinuteItemTypeRef getDefaultMinuteItemType() { return DefaultMinuteItemType; }
        public AgendaItem setDefaultMinuteItemType(MinuteItemTypeRef value) { this.DefaultMinuteItemType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public AgendaItem setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getDocDateModified() { return DocDateModified; }
        public AgendaItem setDocDateModified(TrimDateTime value) { this.DocDateModified = value; return this; }
        public TrimStringProperty getDocExtension() { return DocExtension; }
        public AgendaItem setDocExtension(TrimStringProperty value) { this.DocExtension = value; return this; }
        public TrimProperty<Long> getDocSize() { return DocSize; }
        public AgendaItem setDocSize(TrimProperty<Long> value) { this.DocSize = value; return this; }
        public ElectronicStoreRef getDocStore() { return DocStore; }
        public AgendaItem setDocStore(ElectronicStoreRef value) { this.DocStore = value; return this; }
        public TrimStringProperty getDocStoreId() { return DocStoreId; }
        public AgendaItem setDocStoreId(TrimStringProperty value) { this.DocStoreId = value; return this; }
        public TrimStringProperty getExpandedNumber() { return ExpandedNumber; }
        public AgendaItem setExpandedNumber(TrimStringProperty value) { this.ExpandedNumber = value; return this; }
        public TrimProperty<Boolean> getIsPending() { return IsPending; }
        public AgendaItem setIsPending(TrimProperty<Boolean> value) { this.IsPending = value; return this; }
        public TrimProperty<Boolean> getIsSection() { return IsSection; }
        public AgendaItem setIsSection(TrimProperty<Boolean> value) { this.IsSection = value; return this; }
        public TrimProperty<Boolean> getIsStanding() { return IsStanding; }
        public AgendaItem setIsStanding(TrimProperty<Boolean> value) { this.IsStanding = value; return this; }
        public AgendaItemTypeRef getItemType() { return ItemType; }
        public AgendaItem setItemType(AgendaItemTypeRef value) { this.ItemType = value; return this; }
        public LocationRef getNeedsApprovalBy() { return NeedsApprovalBy; }
        public AgendaItem setNeedsApprovalBy(LocationRef value) { this.NeedsApprovalBy = value; return this; }
        public TrimStringProperty getNumber() { return Number; }
        public AgendaItem setNumber(TrimStringProperty value) { this.Number = value; return this; }
        public TrimStringProperty getOutlineNumber() { return OutlineNumber; }
        public AgendaItem setOutlineNumber(TrimStringProperty value) { this.OutlineNumber = value; return this; }
        public AgendaItemRef getParentAgendaItem() { return ParentAgendaItem; }
        public AgendaItem setParentAgendaItem(AgendaItemRef value) { this.ParentAgendaItem = value; return this; }
        public MeetingRef getParentMeeting() { return ParentMeeting; }
        public AgendaItem setParentMeeting(MeetingRef value) { this.ParentMeeting = value; return this; }
        public MeetingTypeRef getParentMeetingType() { return ParentMeetingType; }
        public AgendaItem setParentMeetingType(MeetingTypeRef value) { this.ParentMeetingType = value; return this; }
        public LocationRef getPrimaryLocation() { return PrimaryLocation; }
        public AgendaItem setPrimaryLocation(LocationRef value) { this.PrimaryLocation = value; return this; }
        public RecordRef getPrimaryRecord() { return PrimaryRecord; }
        public AgendaItem setPrimaryRecord(RecordRef value) { this.PrimaryRecord = value; return this; }
        public LocationRef getSubmittedBy() { return SubmittedBy; }
        public AgendaItem setSubmittedBy(LocationRef value) { this.SubmittedBy = value; return this; }
        private static Object responseType = AgendaItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single AgendaItem by Uri or Name.
    */
    @Route(Path="/AgendaItem/{Id*}", Verbs="GET")
    @Api("Fetch a single AgendaItem by Uri or Name.")
    public static class AgendaItemFind extends TrimMainObjectByUri implements IReturn<AgendaItemsResponse>
    {
        
        private static Object responseType = AgendaItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of AgendaItemTypes filtered using a search string.
    */
    @Route(Path="/AgendaItemType", Verbs="GET")
    @Api("Fetch a collection of AgendaItemTypes filtered using a search string.")
    public static class AgendaItemTypes extends TrimMainObjectSearch implements IReturn<AgendaItemTypesResponse>
    {
        
        private static Object responseType = AgendaItemTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a AgendaItemType object.
    */
    @Route(Path="/AgendaItemType", Verbs="POST")
    @Api("Update a AgendaItemType object.")
    @DataContract
    public static class AgendaItemType extends TrimMainObject implements IReturn<AgendaItemTypesResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildAttachments")
        @SerializedName("ChildAttachments")
        public ArrayList<AgendaItemTypeAttachment> ChildAttachments = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="AgendaItemTypeAccessControl")
        @SerializedName("AgendaItemTypeAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="AgendaItemTypeDefaultMinuteItemType")
        @SerializedName("AgendaItemTypeDefaultMinuteItemType")
        @ApiMember(Name="AgendaItemTypeDefaultMinuteItemType", ParameterType="form", DataType="long", Verb="POST")
        public MinuteItemTypeRef DefaultMinuteItemType = null;

        @DataMember(Name="AgendaItemTypeDocDateModified")
        @SerializedName("AgendaItemTypeDocDateModified")
        @ApiMember(Name="AgendaItemTypeDocDateModified", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DocDateModified = null;

        @DataMember(Name="AgendaItemTypeDocExtension")
        @SerializedName("AgendaItemTypeDocExtension")
        @ApiMember(Name="AgendaItemTypeDocExtension", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DocExtension = null;

        @DataMember(Name="AgendaItemTypeDocSize")
        @SerializedName("AgendaItemTypeDocSize")
        @ApiMember(Name="AgendaItemTypeDocSize", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> DocSize = null;

        @DataMember(Name="AgendaItemTypeDocStore")
        @SerializedName("AgendaItemTypeDocStore")
        @ApiMember(Name="AgendaItemTypeDocStore", ParameterType="form", DataType="long", Verb="POST")
        public ElectronicStoreRef DocStore = null;

        @DataMember(Name="AgendaItemTypeDocStoreId")
        @SerializedName("AgendaItemTypeDocStoreId")
        @ApiMember(Name="AgendaItemTypeDocStoreId", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DocStoreId = null;

        @DataMember(Name="AgendaItemTypeLastNumber")
        @SerializedName("AgendaItemTypeLastNumber")
        @ApiMember(Name="AgendaItemTypeLastNumber", ParameterType="form", DataType="string")
        public TrimStringProperty LastNumber = null;

        @DataMember(Name="AgendaItemTypeName")
        @SerializedName("AgendaItemTypeName")
        @ApiMember(Name="AgendaItemTypeName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="AgendaItemTypeNeedsApprovalBy")
        @SerializedName("AgendaItemTypeNeedsApprovalBy")
        @ApiMember(Name="AgendaItemTypeNeedsApprovalBy", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef NeedsApprovalBy = null;

        @DataMember(Name="AgendaItemTypeNumberPattern")
        @SerializedName("AgendaItemTypeNumberPattern")
        @ApiMember(Name="AgendaItemTypeNumberPattern", ParameterType="form", DataType="string")
        public TrimStringProperty NumberPattern = null;

        @DataMember(Name="AgendaItemTypeOwner")
        @SerializedName("AgendaItemTypeOwner")
        @ApiMember(Name="AgendaItemTypeOwner", ParameterType="form", DataType="long", IsRequired=true, Verb="POST")
        public LocationRef Owner = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AgendaItemType setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<AgendaItemTypeAttachment> getChildAttachments() { return ChildAttachments; }
        public AgendaItemType setChildAttachments(ArrayList<AgendaItemTypeAttachment> value) { this.ChildAttachments = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public AgendaItemType setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public AgendaItemType setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public MinuteItemTypeRef getDefaultMinuteItemType() { return DefaultMinuteItemType; }
        public AgendaItemType setDefaultMinuteItemType(MinuteItemTypeRef value) { this.DefaultMinuteItemType = value; return this; }
        public TrimDateTime getDocDateModified() { return DocDateModified; }
        public AgendaItemType setDocDateModified(TrimDateTime value) { this.DocDateModified = value; return this; }
        public TrimStringProperty getDocExtension() { return DocExtension; }
        public AgendaItemType setDocExtension(TrimStringProperty value) { this.DocExtension = value; return this; }
        public TrimProperty<Long> getDocSize() { return DocSize; }
        public AgendaItemType setDocSize(TrimProperty<Long> value) { this.DocSize = value; return this; }
        public ElectronicStoreRef getDocStore() { return DocStore; }
        public AgendaItemType setDocStore(ElectronicStoreRef value) { this.DocStore = value; return this; }
        public TrimStringProperty getDocStoreId() { return DocStoreId; }
        public AgendaItemType setDocStoreId(TrimStringProperty value) { this.DocStoreId = value; return this; }
        public TrimStringProperty getLastNumber() { return LastNumber; }
        public AgendaItemType setLastNumber(TrimStringProperty value) { this.LastNumber = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public AgendaItemType setName(TrimStringProperty value) { this.Name = value; return this; }
        public LocationRef getNeedsApprovalBy() { return NeedsApprovalBy; }
        public AgendaItemType setNeedsApprovalBy(LocationRef value) { this.NeedsApprovalBy = value; return this; }
        public TrimStringProperty getNumberPattern() { return NumberPattern; }
        public AgendaItemType setNumberPattern(TrimStringProperty value) { this.NumberPattern = value; return this; }
        public LocationRef getOwner() { return Owner; }
        public AgendaItemType setOwner(LocationRef value) { this.Owner = value; return this; }
        private static Object responseType = AgendaItemTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single AgendaItemType by Uri or Name.
    */
    @Route(Path="/AgendaItemType/{Id*}", Verbs="GET")
    @Api("Fetch a single AgendaItemType by Uri or Name.")
    public static class AgendaItemTypeFind extends TrimMainObjectByUri implements IReturn<AgendaItemTypesResponse>
    {
        
        private static Object responseType = AgendaItemTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Alerts filtered using a search string.
    */
    @Route(Path="/Alert", Verbs="GET")
    @Api("Fetch a collection of Alerts filtered using a search string.")
    public static class Alerts extends TrimMainObjectSearch implements IReturn<AlertsResponse>
    {
        
        private static Object responseType = AlertsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Alert object.
    */
    @Route(Path="/Alert", Verbs="POST")
    @Api("Update a Alert object.")
    @DataContract
    public static class Alert extends TrimMainObject implements IReturn<AlertsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildSubscribers")
        @SerializedName("ChildSubscribers")
        public ArrayList<AlertSubscriber> ChildSubscribers = null;

        @DataMember(Name="AlertCriteria")
        @SerializedName("AlertCriteria")
        @ApiMember(Name="AlertCriteria", ParameterType="form", DataType="string")
        public TrimStringProperty Criteria = null;

        @DataMember(Name="AlertDescription")
        @SerializedName("AlertDescription")
        @ApiMember(Name="AlertDescription", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="AlertEventType")
        @SerializedName("AlertEventType")
        @ApiMember(Name="AlertEventType", ParameterType="form", DataType="string")
        public TrimProperty<Events> EventType = null;

        @DataMember(Name="AlertObjectType")
        @SerializedName("AlertObjectType")
        @ApiMember(Name="AlertObjectType", ParameterType="form", DataType="string")
        public TrimProperty<BaseObjectTypes> ObjectType = null;

        @DataMember(Name="AlertSuspendUserFrom")
        @SerializedName("AlertSuspendUserFrom")
        @ApiMember(Name="AlertSuspendUserFrom", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime SuspendUserFrom = null;

        @DataMember(Name="AlertSuspendUserUntil")
        @SerializedName("AlertSuspendUserUntil")
        @ApiMember(Name="AlertSuspendUserUntil", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime SuspendUserUntil = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Alert setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<AlertSubscriber> getChildSubscribers() { return ChildSubscribers; }
        public Alert setChildSubscribers(ArrayList<AlertSubscriber> value) { this.ChildSubscribers = value; return this; }
        public TrimStringProperty getCriteria() { return Criteria; }
        public Alert setCriteria(TrimStringProperty value) { this.Criteria = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public Alert setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Events> getEventType() { return EventType; }
        public Alert setEventType(TrimProperty<Events> value) { this.EventType = value; return this; }
        public TrimProperty<BaseObjectTypes> getObjectType() { return ObjectType; }
        public Alert setObjectType(TrimProperty<BaseObjectTypes> value) { this.ObjectType = value; return this; }
        public TrimDateTime getSuspendUserFrom() { return SuspendUserFrom; }
        public Alert setSuspendUserFrom(TrimDateTime value) { this.SuspendUserFrom = value; return this; }
        public TrimDateTime getSuspendUserUntil() { return SuspendUserUntil; }
        public Alert setSuspendUserUntil(TrimDateTime value) { this.SuspendUserUntil = value; return this; }
        private static Object responseType = AlertsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Alert by Uri or Name.
    */
    @Route(Path="/Alert/{Id*}", Verbs="GET")
    @Api("Fetch a single Alert by Uri or Name.")
    public static class AlertFind extends TrimMainObjectByUri implements IReturn<AlertsResponse>
    {
        
        private static Object responseType = AlertsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of AutoPartRules filtered using a search string.
    */
    @Route(Path="/AutoPartRule", Verbs="GET")
    @Api("Fetch a collection of AutoPartRules filtered using a search string.")
    public static class AutoPartRules extends TrimMainObjectSearch implements IReturn<AutoPartRulesResponse>
    {
        
        private static Object responseType = AutoPartRulesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a AutoPartRule object.
    */
    @Route(Path="/AutoPartRule", Verbs="POST")
    @Api("Update a AutoPartRule object.")
    @DataContract
    public static class AutoPartRule extends TrimMainObject implements IReturn<AutoPartRulesResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="AutoPartRuleNewType")
        @SerializedName("AutoPartRuleNewType")
        @ApiMember(Name="AutoPartRuleNewType", ParameterType="form", DataType="string", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="AutoPartRuleAccessControl")
        @SerializedName("AutoPartRuleAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="AutoPartRuleContentLimit")
        @SerializedName("AutoPartRuleContentLimit")
        @ApiMember(Name="AutoPartRuleContentLimit", ParameterType="form", DataType="int")
        public TrimProperty<Integer> ContentLimit = null;

        @DataMember(Name="AutoPartRuleDateType")
        @SerializedName("AutoPartRuleDateType")
        @ApiMember(Name="AutoPartRuleDateType", ParameterType="form", DataType="string")
        public TrimProperty<AprDateTypes> DateType = null;

        @DataMember(Name="AutoPartRuleDelayInterval")
        @SerializedName("AutoPartRuleDelayInterval")
        @ApiMember(Name="AutoPartRuleDelayInterval", ParameterType="form", DataType="int")
        public TrimProperty<Integer> DelayInterval = null;

        @DataMember(Name="AutoPartRuleDelayType")
        @SerializedName("AutoPartRuleDelayType")
        @ApiMember(Name="AutoPartRuleDelayType", ParameterType="form", DataType="string")
        public TrimProperty<DateInterval> DelayType = null;

        @DataMember(Name="AutoPartRuleDescription")
        @SerializedName("AutoPartRuleDescription")
        @ApiMember(Name="AutoPartRuleDescription", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="AutoPartRuleFixedDate")
        @SerializedName("AutoPartRuleFixedDate")
        @ApiMember(Name="AutoPartRuleFixedDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime FixedDate = null;

        @DataMember(Name="AutoPartRuleName")
        @SerializedName("AutoPartRuleName")
        @ApiMember(Name="AutoPartRuleName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="AutoPartRuleNotes")
        @SerializedName("AutoPartRuleNotes")
        @ApiMember(Name="AutoPartRuleNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="AutoPartRulePartRuleType")
        @SerializedName("AutoPartRulePartRuleType")
        @ApiMember(Name="AutoPartRulePartRuleType", ParameterType="form", DataType="string")
        public TrimProperty<AprType> PartRuleType = null;

        @DataMember(Name="AutoPartRuleUserDefinedDateField")
        @SerializedName("AutoPartRuleUserDefinedDateField")
        @ApiMember(Name="AutoPartRuleUserDefinedDateField", ParameterType="form", DataType="long", Verb="POST")
        public FieldDefinitionRef UserDefinedDateField = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AutoPartRule setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public AutoPartRule setNewType(NewType value) { this.NewType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public AutoPartRule setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public AutoPartRule setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Integer> getContentLimit() { return ContentLimit; }
        public AutoPartRule setContentLimit(TrimProperty<Integer> value) { this.ContentLimit = value; return this; }
        public TrimProperty<AprDateTypes> getDateType() { return DateType; }
        public AutoPartRule setDateType(TrimProperty<AprDateTypes> value) { this.DateType = value; return this; }
        public TrimProperty<Integer> getDelayInterval() { return DelayInterval; }
        public AutoPartRule setDelayInterval(TrimProperty<Integer> value) { this.DelayInterval = value; return this; }
        public TrimProperty<DateInterval> getDelayType() { return DelayType; }
        public AutoPartRule setDelayType(TrimProperty<DateInterval> value) { this.DelayType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public AutoPartRule setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getFixedDate() { return FixedDate; }
        public AutoPartRule setFixedDate(TrimDateTime value) { this.FixedDate = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public AutoPartRule setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public AutoPartRule setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public AutoPartRule setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<AprType> getPartRuleType() { return PartRuleType; }
        public AutoPartRule setPartRuleType(TrimProperty<AprType> value) { this.PartRuleType = value; return this; }
        public FieldDefinitionRef getUserDefinedDateField() { return UserDefinedDateField; }
        public AutoPartRule setUserDefinedDateField(FieldDefinitionRef value) { this.UserDefinedDateField = value; return this; }
        private static Object responseType = AutoPartRulesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single AutoPartRule by Uri or Name.
    */
    @Route(Path="/AutoPartRule/{Id*}", Verbs="GET")
    @Api("Fetch a single AutoPartRule by Uri or Name.")
    public static class AutoPartRuleFind extends TrimMainObjectByUri implements IReturn<AutoPartRulesResponse>
    {
        
        private static Object responseType = AutoPartRulesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of CensusCollection filtered using a search string.
    */
    @Route(Path="/Census", Verbs="GET")
    @Api("Fetch a collection of CensusCollection filtered using a search string.")
    public static class CensusCollection extends TrimMainObjectSearch implements IReturn<CensusCollectionResponse>
    {
        
        private static Object responseType = CensusCollectionResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Census object.
    */
    @Route(Path="/Census", Verbs="POST")
    @Api("Update a Census object.")
    @DataContract
    public static class Census extends TrimMainObject implements IReturn<CensusCollectionResponse>
    {
        /**
        * Sets the census to completed status. The completion date is set to the nominated date.
        */
        @DataMember
        @ApiMember(Name="Complete", ParameterType="form", Verb="POST", Description="Sets the census to completed status. The completion date is set to the nominated date.")
        public Complete Complete = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="CensusCensusLocation")
        @SerializedName("CensusCensusLocation")
        @ApiMember(Name="CensusCensusLocation", ParameterType="form", DataType="long", IsRequired=true, Verb="POST")
        public LocationRef CensusLocation = null;

        @DataMember(Name="CensusEndDate")
        @SerializedName("CensusEndDate")
        @ApiMember(Name="CensusEndDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime EndDate = null;

        @DataMember(Name="CensusInProgress")
        @SerializedName("CensusInProgress")
        @ApiMember(Name="CensusInProgress", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> InProgress = null;

        @DataMember(Name="CensusName")
        @SerializedName("CensusName")
        @ApiMember(Name="CensusName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="CensusRecordsEnd")
        @SerializedName("CensusRecordsEnd")
        @ApiMember(Name="CensusRecordsEnd", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> RecordsEnd = null;

        @DataMember(Name="CensusRecordsMissing")
        @SerializedName("CensusRecordsMissing")
        @ApiMember(Name="CensusRecordsMissing", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> RecordsMissing = null;

        @DataMember(Name="CensusRecordsStart")
        @SerializedName("CensusRecordsStart")
        @ApiMember(Name="CensusRecordsStart", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> RecordsStart = null;

        @DataMember(Name="CensusStartDate")
        @SerializedName("CensusStartDate")
        @ApiMember(Name="CensusStartDate", ParameterType="form", DataType="TrimDateTime", IsRequired=true)
        public TrimDateTime StartDate = null;
        
        public Complete getComplete() { return Complete; }
        public Census setComplete(Complete value) { this.Complete = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Census setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public LocationRef getCensusLocation() { return CensusLocation; }
        public Census setCensusLocation(LocationRef value) { this.CensusLocation = value; return this; }
        public TrimDateTime getEndDate() { return EndDate; }
        public Census setEndDate(TrimDateTime value) { this.EndDate = value; return this; }
        public TrimProperty<Boolean> getInProgress() { return InProgress; }
        public Census setInProgress(TrimProperty<Boolean> value) { this.InProgress = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Census setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<Long> getRecordsEnd() { return RecordsEnd; }
        public Census setRecordsEnd(TrimProperty<Long> value) { this.RecordsEnd = value; return this; }
        public TrimProperty<Long> getRecordsMissing() { return RecordsMissing; }
        public Census setRecordsMissing(TrimProperty<Long> value) { this.RecordsMissing = value; return this; }
        public TrimProperty<Long> getRecordsStart() { return RecordsStart; }
        public Census setRecordsStart(TrimProperty<Long> value) { this.RecordsStart = value; return this; }
        public TrimDateTime getStartDate() { return StartDate; }
        public Census setStartDate(TrimDateTime value) { this.StartDate = value; return this; }
        private static Object responseType = CensusCollectionResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Census by Uri or Name.
    */
    @Route(Path="/Census/{Id*}", Verbs="GET")
    @Api("Fetch a single Census by Uri or Name.")
    public static class CensusFind extends TrimMainObjectByUri implements IReturn<CensusCollectionResponse>
    {
        
        private static Object responseType = CensusCollectionResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of CheckinPlaces filtered using a search string.
    */
    @Route(Path="/CheckinPlace", Verbs="GET")
    @Api("Fetch a collection of CheckinPlaces filtered using a search string.")
    public static class CheckinPlaces extends TrimMainObjectSearch implements IReturn<CheckinPlacesResponse>
    {
        
        private static Object responseType = CheckinPlacesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a CheckinPlace object.
    */
    @Route(Path="/CheckinPlace", Verbs="POST")
    @Api("Update a CheckinPlace object.")
    @DataContract
    public static class CheckinPlace extends TrimMainObject implements IReturn<CheckinPlacesResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="CheckinPlaceCheckinAs")
        @SerializedName("CheckinPlaceCheckinAs")
        @ApiMember(Name="CheckinPlaceCheckinAs", ParameterType="form", DataType="long", IsRequired=true, Verb="POST")
        public CheckinStyleRef CheckinAs = null;

        @DataMember(Name="CheckinPlaceMailFolderType")
        @SerializedName("CheckinPlaceMailFolderType")
        @ApiMember(Name="CheckinPlaceMailFolderType", ParameterType="form", DataType="string")
        public TrimProperty<MailFolderTypes> MailFolderType = null;

        @DataMember(Name="CheckinPlaceName")
        @SerializedName("CheckinPlaceName")
        @ApiMember(Name="CheckinPlaceName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="CheckinPlaceOwner")
        @SerializedName("CheckinPlaceOwner")
        @ApiMember(Name="CheckinPlaceOwner", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Owner = null;

        @DataMember(Name="CheckinPlacePlaceId")
        @SerializedName("CheckinPlacePlaceId")
        @ApiMember(Name="CheckinPlacePlaceId", ParameterType="form", DataType="string")
        public TrimStringProperty PlaceId = null;

        @DataMember(Name="CheckinPlacePlaceType")
        @SerializedName("CheckinPlacePlaceType")
        @ApiMember(Name="CheckinPlacePlaceType", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<CheckinPlaceTypes> PlaceType = null;

        @DataMember(Name="CheckinPlaceSyncState")
        @SerializedName("CheckinPlaceSyncState")
        @ApiMember(Name="CheckinPlaceSyncState", ParameterType="form", DataType="string")
        public TrimStringProperty SyncState = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public CheckinPlace setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public CheckinStyleRef getCheckinAs() { return CheckinAs; }
        public CheckinPlace setCheckinAs(CheckinStyleRef value) { this.CheckinAs = value; return this; }
        public TrimProperty<MailFolderTypes> getMailFolderType() { return MailFolderType; }
        public CheckinPlace setMailFolderType(TrimProperty<MailFolderTypes> value) { this.MailFolderType = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public CheckinPlace setName(TrimStringProperty value) { this.Name = value; return this; }
        public LocationRef getOwner() { return Owner; }
        public CheckinPlace setOwner(LocationRef value) { this.Owner = value; return this; }
        public TrimStringProperty getPlaceId() { return PlaceId; }
        public CheckinPlace setPlaceId(TrimStringProperty value) { this.PlaceId = value; return this; }
        public TrimProperty<CheckinPlaceTypes> getPlaceType() { return PlaceType; }
        public CheckinPlace setPlaceType(TrimProperty<CheckinPlaceTypes> value) { this.PlaceType = value; return this; }
        public TrimStringProperty getSyncState() { return SyncState; }
        public CheckinPlace setSyncState(TrimStringProperty value) { this.SyncState = value; return this; }
        private static Object responseType = CheckinPlacesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single CheckinPlace by Uri or Name.
    */
    @Route(Path="/CheckinPlace/{Id*}", Verbs="GET")
    @Api("Fetch a single CheckinPlace by Uri or Name.")
    public static class CheckinPlaceFind extends TrimMainObjectByUri implements IReturn<CheckinPlacesResponse>
    {
        
        private static Object responseType = CheckinPlacesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of CheckinStyles filtered using a search string.
    */
    @Route(Path="/CheckinStyle", Verbs="GET")
    @Api("Fetch a collection of CheckinStyles filtered using a search string.")
    public static class CheckinStyles extends TrimMainObjectSearch implements IReturn<CheckinStylesResponse>
    {
        
        private static Object responseType = CheckinStylesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a CheckinStyle object.
    */
    @Route(Path="/CheckinStyle", Verbs="POST")
    @Api("Update a CheckinStyle object.")
    @DataContract
    public static class CheckinStyle extends TrimMainObject implements IReturn<CheckinStylesResponse>
    {
        @DataMember(Name="RecordDataEntryForm")
        @SerializedName("RecordDataEntryForm")
        public DataEntryForm RecordDataEntryForm = null;

        @DataMember(Name="NeedsDataEntryForm")
        @SerializedName("NeedsDataEntryForm")
        public Boolean NeedsDataEntryForm = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="CheckinStyleAction")
        @SerializedName("CheckinStyleAction")
        @ApiMember(Name="CheckinStyleAction", ParameterType="form", DataType="long", Verb="POST")
        public ActionDefRef Action = null;

        @DataMember(Name="CheckinStyleAssignee")
        @SerializedName("CheckinStyleAssignee")
        @ApiMember(Name="CheckinStyleAssignee", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Assignee = null;

        @DataMember(Name="CheckinStyleAutoRender")
        @SerializedName("CheckinStyleAutoRender")
        @ApiMember(Name="CheckinStyleAutoRender", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AutoRender = null;

        @DataMember(Name="CheckinStyleClassification")
        @SerializedName("CheckinStyleClassification")
        @ApiMember(Name="CheckinStyleClassification", ParameterType="form", DataType="long", Verb="POST")
        public ClassificationRef Classification = null;

        @DataMember(Name="CheckinStyleContainer")
        @SerializedName("CheckinStyleContainer")
        @ApiMember(Name="CheckinStyleContainer", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef Container = null;

        @DataMember(Name="CheckinStyleDescription")
        @SerializedName("CheckinStyleDescription")
        @ApiMember(Name="CheckinStyleDescription", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="CheckinStyleFinalizeOnSave")
        @SerializedName("CheckinStyleFinalizeOnSave")
        @ApiMember(Name="CheckinStyleFinalizeOnSave", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> FinalizeOnSave = null;

        @DataMember(Name="CheckinStyleGpsLocation")
        @SerializedName("CheckinStyleGpsLocation")
        @ApiMember(Name="CheckinStyleGpsLocation", ParameterType="form", DataType="string")
        public TrimStringProperty GpsLocation = null;

        @DataMember(Name="CheckinStyleInitiateWorkflow")
        @SerializedName("CheckinStyleInitiateWorkflow")
        @ApiMember(Name="CheckinStyleInitiateWorkflow", ParameterType="form", DataType="long", Verb="POST")
        public WorkflowTemplateRef InitiateWorkflow = null;

        @DataMember(Name="CheckinStyleIsMatterSubfolder")
        @SerializedName("CheckinStyleIsMatterSubfolder")
        @ApiMember(Name="CheckinStyleIsMatterSubfolder", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsMatterSubfolder = null;

        @DataMember(Name="CheckinStyleIsMatterTemplate")
        @SerializedName("CheckinStyleIsMatterTemplate")
        @ApiMember(Name="CheckinStyleIsMatterTemplate", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsMatterTemplate = null;

        @DataMember(Name="CheckinStyleJurisdiction")
        @SerializedName("CheckinStyleJurisdiction")
        @ApiMember(Name="CheckinStyleJurisdiction", ParameterType="form", DataType="long", Verb="POST")
        public JurisdictionRef Jurisdiction = null;

        @DataMember(Name="CheckinStyleMakePrivate")
        @SerializedName("CheckinStyleMakePrivate")
        @ApiMember(Name="CheckinStyleMakePrivate", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> MakePrivate = null;

        @DataMember(Name="CheckinStyleMatter")
        @SerializedName("CheckinStyleMatter")
        @ApiMember(Name="CheckinStyleMatter", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef Matter = null;

        @DataMember(Name="CheckinStyleMoveToDeletedItems")
        @SerializedName("CheckinStyleMoveToDeletedItems")
        @ApiMember(Name="CheckinStyleMoveToDeletedItems", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> MoveToDeletedItems = null;

        @DataMember(Name="CheckinStyleName")
        @SerializedName("CheckinStyleName")
        @ApiMember(Name="CheckinStyleName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="CheckinStyleRecordType")
        @SerializedName("CheckinStyleRecordType")
        @ApiMember(Name="CheckinStyleRecordType", ParameterType="form", DataType="long", Verb="POST")
        public RecordTypeRef RecordType = null;

        @DataMember(Name="CheckinStyleRetainInClient")
        @SerializedName("CheckinStyleRetainInClient")
        @ApiMember(Name="CheckinStyleRetainInClient", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> RetainInClient = null;

        @DataMember(Name="CheckinStyleRetentionSchedule")
        @SerializedName("CheckinStyleRetentionSchedule")
        @ApiMember(Name="CheckinStyleRetentionSchedule", ParameterType="form", DataType="long", Verb="POST")
        public ScheduleRef RetentionSchedule = null;

        @DataMember(Name="CheckinStyleSecurity")
        @SerializedName("CheckinStyleSecurity")
        @ApiMember(Name="CheckinStyleSecurity", ParameterType="form", DataType="string")
        public TrimStringProperty Security = null;

        @DataMember(Name="CheckinStyleShowDataEntryForm")
        @SerializedName("CheckinStyleShowDataEntryForm")
        @ApiMember(Name="CheckinStyleShowDataEntryForm", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowDataEntryForm = null;

        @DataMember(Name="CheckinStyleStyleOwner")
        @SerializedName("CheckinStyleStyleOwner")
        @ApiMember(Name="CheckinStyleStyleOwner", ParameterType="form", DataType="long", IsRequired=true, Verb="POST")
        public LocationRef StyleOwner = null;

        @DataMember(Name="CheckinStyleSubFolderRecordType")
        @SerializedName("CheckinStyleSubFolderRecordType")
        @ApiMember(Name="CheckinStyleSubFolderRecordType", ParameterType="form", DataType="long", Verb="POST")
        public RecordTypeRef SubFolderRecordType = null;

        @DataMember(Name="CheckinStyleUseForServerDocCapture")
        @SerializedName("CheckinStyleUseForServerDocCapture")
        @ApiMember(Name="CheckinStyleUseForServerDocCapture", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseForServerDocCapture = null;

        @DataMember(Name="CheckinStyleUseForServerMailCapture")
        @SerializedName("CheckinStyleUseForServerMailCapture")
        @ApiMember(Name="CheckinStyleUseForServerMailCapture", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UseForServerMailCapture = null;

        @DataMember(Name="CheckinStyleUseForServerMailFolderType")
        @SerializedName("CheckinStyleUseForServerMailFolderType")
        @ApiMember(Name="CheckinStyleUseForServerMailFolderType", ParameterType="form", DataType="string")
        public TrimProperty<MailFolderTypes> UseForServerMailFolderType = null;
        
        public DataEntryForm getRecordDataEntryForm() { return RecordDataEntryForm; }
        public CheckinStyle setRecordDataEntryForm(DataEntryForm value) { this.RecordDataEntryForm = value; return this; }
        public Boolean isNeedsDataEntryForm() { return NeedsDataEntryForm; }
        public CheckinStyle setNeedsDataEntryForm(Boolean value) { this.NeedsDataEntryForm = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public CheckinStyle setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ActionDefRef getAction() { return Action; }
        public CheckinStyle setAction(ActionDefRef value) { this.Action = value; return this; }
        public LocationRef getAssignee() { return Assignee; }
        public CheckinStyle setAssignee(LocationRef value) { this.Assignee = value; return this; }
        public TrimProperty<Boolean> getAutoRender() { return AutoRender; }
        public CheckinStyle setAutoRender(TrimProperty<Boolean> value) { this.AutoRender = value; return this; }
        public ClassificationRef getClassification() { return Classification; }
        public CheckinStyle setClassification(ClassificationRef value) { this.Classification = value; return this; }
        public RecordRef getContainer() { return Container; }
        public CheckinStyle setContainer(RecordRef value) { this.Container = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public CheckinStyle setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getFinalizeOnSave() { return FinalizeOnSave; }
        public CheckinStyle setFinalizeOnSave(TrimProperty<Boolean> value) { this.FinalizeOnSave = value; return this; }
        public TrimStringProperty getGpsLocation() { return GpsLocation; }
        public CheckinStyle setGpsLocation(TrimStringProperty value) { this.GpsLocation = value; return this; }
        public WorkflowTemplateRef getInitiateWorkflow() { return InitiateWorkflow; }
        public CheckinStyle setInitiateWorkflow(WorkflowTemplateRef value) { this.InitiateWorkflow = value; return this; }
        public TrimProperty<Boolean> getIsMatterSubfolder() { return IsMatterSubfolder; }
        public CheckinStyle setIsMatterSubfolder(TrimProperty<Boolean> value) { this.IsMatterSubfolder = value; return this; }
        public TrimProperty<Boolean> getIsMatterTemplate() { return IsMatterTemplate; }
        public CheckinStyle setIsMatterTemplate(TrimProperty<Boolean> value) { this.IsMatterTemplate = value; return this; }
        public JurisdictionRef getJurisdiction() { return Jurisdiction; }
        public CheckinStyle setJurisdiction(JurisdictionRef value) { this.Jurisdiction = value; return this; }
        public TrimProperty<Boolean> getMakePrivate() { return MakePrivate; }
        public CheckinStyle setMakePrivate(TrimProperty<Boolean> value) { this.MakePrivate = value; return this; }
        public RecordRef getMatter() { return Matter; }
        public CheckinStyle setMatter(RecordRef value) { this.Matter = value; return this; }
        public TrimProperty<Boolean> getMoveToDeletedItems() { return MoveToDeletedItems; }
        public CheckinStyle setMoveToDeletedItems(TrimProperty<Boolean> value) { this.MoveToDeletedItems = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public CheckinStyle setName(TrimStringProperty value) { this.Name = value; return this; }
        public RecordTypeRef getRecordType() { return RecordType; }
        public CheckinStyle setRecordType(RecordTypeRef value) { this.RecordType = value; return this; }
        public TrimProperty<Boolean> getRetainInClient() { return RetainInClient; }
        public CheckinStyle setRetainInClient(TrimProperty<Boolean> value) { this.RetainInClient = value; return this; }
        public ScheduleRef getRetentionSchedule() { return RetentionSchedule; }
        public CheckinStyle setRetentionSchedule(ScheduleRef value) { this.RetentionSchedule = value; return this; }
        public TrimStringProperty getSecurity() { return Security; }
        public CheckinStyle setSecurity(TrimStringProperty value) { this.Security = value; return this; }
        public TrimProperty<Boolean> getShowDataEntryForm() { return ShowDataEntryForm; }
        public CheckinStyle setShowDataEntryForm(TrimProperty<Boolean> value) { this.ShowDataEntryForm = value; return this; }
        public LocationRef getStyleOwner() { return StyleOwner; }
        public CheckinStyle setStyleOwner(LocationRef value) { this.StyleOwner = value; return this; }
        public RecordTypeRef getSubFolderRecordType() { return SubFolderRecordType; }
        public CheckinStyle setSubFolderRecordType(RecordTypeRef value) { this.SubFolderRecordType = value; return this; }
        public TrimProperty<Boolean> getUseForServerDocCapture() { return UseForServerDocCapture; }
        public CheckinStyle setUseForServerDocCapture(TrimProperty<Boolean> value) { this.UseForServerDocCapture = value; return this; }
        public TrimProperty<Boolean> getUseForServerMailCapture() { return UseForServerMailCapture; }
        public CheckinStyle setUseForServerMailCapture(TrimProperty<Boolean> value) { this.UseForServerMailCapture = value; return this; }
        public TrimProperty<MailFolderTypes> getUseForServerMailFolderType() { return UseForServerMailFolderType; }
        public CheckinStyle setUseForServerMailFolderType(TrimProperty<MailFolderTypes> value) { this.UseForServerMailFolderType = value; return this; }
        private static Object responseType = CheckinStylesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single CheckinStyle by Uri or Name.
    */
    @Route(Path="/CheckinStyle/{Id*}", Verbs="GET")
    @Api("Fetch a single CheckinStyle by Uri or Name.")
    public static class CheckinStyleFind extends TrimMainObjectByUri implements IReturn<CheckinStylesResponse>
    {
        
        private static Object responseType = CheckinStylesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Classifications filtered using a search string.
    */
    @Route(Path="/Classification", Verbs="GET")
    @Api("Fetch a collection of Classifications filtered using a search string.")
    public static class Classifications extends TrimMainObjectSearch implements IReturn<ClassificationsResponse>
    {
        
        private static Object responseType = ClassificationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Classification object.
    */
    @Route(Path="/Classification", Verbs="POST")
    @Api("Update a Classification object.")
    @DataContract
    public static class Classification extends TrimMainObject implements IReturn<ClassificationsResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        *  This will move the classification to a new position within the classification hierarchy
        */
        @DataMember
        @ApiMember(Name="MoveClassification", ParameterType="form", Verb="POST", Description=" This will move the classification to a new position within the classification hierarchy")
        public MoveClassification MoveClassification = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * True to create and return a new lower level Classification
        */
        @DataMember(Name="NewLowerLevel")
        @SerializedName("NewLowerLevel")
        @ApiMember(Name="NewLowerLevel", ParameterType="form", DataType="boolean", Verb="POST", Description="True to create and return a new lower level Classification")
        public Boolean NewLowerLevel = null;

        @DataMember(Name="SecurityProfile")
        @SerializedName("SecurityProfile")
        public TrimSecurityProfile SecurityProfile = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildSapBusinessObjects")
        @SerializedName("ChildSapBusinessObjects")
        public ArrayList<ClassificationSapBusinessObject> ChildSapBusinessObjects = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="ClassificationAccessControl")
        @SerializedName("ClassificationAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="ClassificationActiveFrom")
        @SerializedName("ClassificationActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="ClassificationActiveTo")
        @SerializedName("ClassificationActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="ClassificationActiveDescription")
        @SerializedName("ClassificationActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="ClassificationIsActive")
        @SerializedName("ClassificationIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="ClassificationApprover")
        @SerializedName("ClassificationApprover")
        @ApiMember(Name="ClassificationApprover", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Approver = null;

        @DataMember(Name="ClassificationCanAttachRecords")
        @SerializedName("ClassificationCanAttachRecords")
        @ApiMember(Name="ClassificationCanAttachRecords", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> CanAttachRecords = null;

        @DataMember(Name="ClassificationChildLastNumber")
        @SerializedName("ClassificationChildLastNumber")
        @ApiMember(Name="ClassificationChildLastNumber", ParameterType="form", DataType="string")
        public TrimStringProperty ChildLastNumber = null;

        @DataMember(Name="ClassificationChildPattern")
        @SerializedName("ClassificationChildPattern")
        @ApiMember(Name="ClassificationChildPattern", ParameterType="form", DataType="string")
        public TrimStringProperty ChildPattern = null;

        @DataMember(Name="ClassificationClassOfRecord")
        @SerializedName("ClassificationClassOfRecord")
        @ApiMember(Name="ClassificationClassOfRecord", ParameterType="form", DataType="string")
        public TrimProperty<RecordClass> ClassOfRecord = null;

        @DataMember(Name="ClassificationContainerCreation")
        @SerializedName("ClassificationContainerCreation")
        @ApiMember(Name="ClassificationContainerCreation", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ContainerCreation = null;

        @DataMember(Name="ClassificationContainerDateInterval")
        @SerializedName("ClassificationContainerDateInterval")
        @ApiMember(Name="ClassificationContainerDateInterval", ParameterType="form", DataType="string")
        public TrimProperty<DateIntervalSing> ContainerDateInterval = null;

        @DataMember(Name="ClassificationContainerHasDateRange")
        @SerializedName("ClassificationContainerHasDateRange")
        @ApiMember(Name="ClassificationContainerHasDateRange", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ContainerHasDateRange = null;

        @DataMember(Name="ClassificationContainerPerOwner")
        @SerializedName("ClassificationContainerPerOwner")
        @ApiMember(Name="ClassificationContainerPerOwner", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ContainerPerOwner = null;

        @DataMember(Name="ClassificationContainerPerUserField")
        @SerializedName("ClassificationContainerPerUserField")
        @ApiMember(Name="ClassificationContainerPerUserField", ParameterType="form", DataType="long", Verb="POST")
        public FieldDefinitionRef ContainerPerUserField = null;

        @DataMember(Name="ClassificationContainerSizeThreshold")
        @SerializedName("ClassificationContainerSizeThreshold")
        @ApiMember(Name="ClassificationContainerSizeThreshold", ParameterType="form", DataType="int")
        public TrimProperty<Integer> ContainerSizeThreshold = null;

        @DataMember(Name="ClassificationContainerType")
        @SerializedName("ClassificationContainerType")
        @ApiMember(Name="ClassificationContainerType", ParameterType="form", DataType="long", Verb="POST")
        public RecordTypeRef ContainerType = null;

        @DataMember(Name="ClassificationDefaultJurisdiction")
        @SerializedName("ClassificationDefaultJurisdiction")
        @ApiMember(Name="ClassificationDefaultJurisdiction", ParameterType="form", DataType="long", Verb="POST")
        public JurisdictionRef DefaultJurisdiction = null;

        @DataMember(Name="ClassificationHomeLocation")
        @SerializedName("ClassificationHomeLocation")
        @ApiMember(Name="ClassificationHomeLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef HomeLocation = null;

        @DataMember(Name="ClassificationIdNumber")
        @SerializedName("ClassificationIdNumber")
        @ApiMember(Name="ClassificationIdNumber", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty IdNumber = null;

        @DataMember(Name="ClassificationIdNumberUncompressed")
        @SerializedName("ClassificationIdNumberUncompressed")
        @ApiMember(Name="ClassificationIdNumberUncompressed", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty IdNumberUncompressed = null;

        @DataMember(Name="ClassificationIdolCategory")
        @SerializedName("ClassificationIdolCategory")
        @ApiMember(Name="ClassificationIdolCategory", ParameterType="form", DataType="long")
        public TrimProperty<Long> IdolCategory = null;

        @DataMember(Name="ClassificationIsApproved")
        @SerializedName("ClassificationIsApproved")
        @ApiMember(Name="ClassificationIsApproved", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsApproved = null;

        @DataMember(Name="ClassificationLevelNumber")
        @SerializedName("ClassificationLevelNumber")
        @ApiMember(Name="ClassificationLevelNumber", ParameterType="form", DataType="string")
        public TrimStringProperty LevelNumber = null;

        @DataMember(Name="ClassificationLevelNumberUncompressed")
        @SerializedName("ClassificationLevelNumberUncompressed")
        @ApiMember(Name="ClassificationLevelNumberUncompressed", ParameterType="form", DataType="string")
        public TrimStringProperty LevelNumberUncompressed = null;

        @DataMember(Name="ClassificationMinimumConfidenceLevel")
        @SerializedName("ClassificationMinimumConfidenceLevel")
        @ApiMember(Name="ClassificationMinimumConfidenceLevel", ParameterType="form", DataType="int")
        public TrimProperty<Integer> MinimumConfidenceLevel = null;

        @DataMember(Name="ClassificationName")
        @SerializedName("ClassificationName")
        @ApiMember(Name="ClassificationName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="ClassificationNotes")
        @SerializedName("ClassificationNotes")
        @ApiMember(Name="ClassificationNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="ClassificationNumberingIsManual")
        @SerializedName("ClassificationNumberingIsManual")
        @ApiMember(Name="ClassificationNumberingIsManual", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> NumberingIsManual = null;

        @DataMember(Name="ClassificationOnlyRecordType")
        @SerializedName("ClassificationOnlyRecordType")
        @ApiMember(Name="ClassificationOnlyRecordType", ParameterType="form", DataType="long", Verb="POST")
        public RecordTypeRef OnlyRecordType = null;

        @DataMember(Name="ClassificationOwnerLocation")
        @SerializedName("ClassificationOwnerLocation")
        @ApiMember(Name="ClassificationOwnerLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef OwnerLocation = null;

        @DataMember(Name="ClassificationParentClassification")
        @SerializedName("ClassificationParentClassification")
        @ApiMember(Name="ClassificationParentClassification", ParameterType="form", DataType="long", Verb="POST")
        public ClassificationRef ParentClassification = null;

        @DataMember(Name="ClassificationPendingAutoClassification")
        @SerializedName("ClassificationPendingAutoClassification")
        @ApiMember(Name="ClassificationPendingAutoClassification", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> PendingAutoClassification = null;

        @DataMember(Name="ClassificationPolicyCentreGUID")
        @SerializedName("ClassificationPolicyCentreGUID")
        @ApiMember(Name="ClassificationPolicyCentreGUID", ParameterType="form", DataType="string")
        public TrimStringProperty PolicyCentreGUID = null;

        @DataMember(Name="ClassificationPreventAutoClassification")
        @SerializedName("ClassificationPreventAutoClassification")
        @ApiMember(Name="ClassificationPreventAutoClassification", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> PreventAutoClassification = null;

        @DataMember(Name="ClassificationRecordLastNumber")
        @SerializedName("ClassificationRecordLastNumber")
        @ApiMember(Name="ClassificationRecordLastNumber", ParameterType="form", DataType="string")
        public TrimStringProperty RecordLastNumber = null;

        @DataMember(Name="ClassificationRecordPattern")
        @SerializedName("ClassificationRecordPattern")
        @ApiMember(Name="ClassificationRecordPattern", ParameterType="form", DataType="string")
        public TrimStringProperty RecordPattern = null;

        @DataMember(Name="ClassificationRetentionSchedule")
        @SerializedName("ClassificationRetentionSchedule")
        @ApiMember(Name="ClassificationRetentionSchedule", ParameterType="form", DataType="long", Verb="POST")
        public ScheduleRef RetentionSchedule = null;

        @DataMember(Name="ClassificationTitle")
        @SerializedName("ClassificationTitle")
        @ApiMember(Name="ClassificationTitle", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Title = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Classification setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Classification setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public MoveClassification getMoveClassification() { return MoveClassification; }
        public Classification setMoveClassification(MoveClassification value) { this.MoveClassification = value; return this; }
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public Classification setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Classification setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Classification setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public Boolean isNewLowerLevel() { return NewLowerLevel; }
        public Classification setNewLowerLevel(Boolean value) { this.NewLowerLevel = value; return this; }
        public TrimSecurityProfile getSecurityProfile() { return SecurityProfile; }
        public Classification setSecurityProfile(TrimSecurityProfile value) { this.SecurityProfile = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Classification setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<ClassificationSapBusinessObject> getChildSapBusinessObjects() { return ChildSapBusinessObjects; }
        public Classification setChildSapBusinessObjects(ArrayList<ClassificationSapBusinessObject> value) { this.ChildSapBusinessObjects = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Classification setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Classification setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public Classification setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public Classification setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public Classification setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public Classification setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public LocationRef getApprover() { return Approver; }
        public Classification setApprover(LocationRef value) { this.Approver = value; return this; }
        public TrimProperty<Boolean> getCanAttachRecords() { return CanAttachRecords; }
        public Classification setCanAttachRecords(TrimProperty<Boolean> value) { this.CanAttachRecords = value; return this; }
        public TrimStringProperty getChildLastNumber() { return ChildLastNumber; }
        public Classification setChildLastNumber(TrimStringProperty value) { this.ChildLastNumber = value; return this; }
        public TrimStringProperty getChildPattern() { return ChildPattern; }
        public Classification setChildPattern(TrimStringProperty value) { this.ChildPattern = value; return this; }
        public TrimProperty<RecordClass> getClassOfRecord() { return ClassOfRecord; }
        public Classification setClassOfRecord(TrimProperty<RecordClass> value) { this.ClassOfRecord = value; return this; }
        public TrimProperty<Boolean> getContainerCreation() { return ContainerCreation; }
        public Classification setContainerCreation(TrimProperty<Boolean> value) { this.ContainerCreation = value; return this; }
        public TrimProperty<DateIntervalSing> getContainerDateInterval() { return ContainerDateInterval; }
        public Classification setContainerDateInterval(TrimProperty<DateIntervalSing> value) { this.ContainerDateInterval = value; return this; }
        public TrimProperty<Boolean> getContainerHasDateRange() { return ContainerHasDateRange; }
        public Classification setContainerHasDateRange(TrimProperty<Boolean> value) { this.ContainerHasDateRange = value; return this; }
        public TrimProperty<Boolean> getContainerPerOwner() { return ContainerPerOwner; }
        public Classification setContainerPerOwner(TrimProperty<Boolean> value) { this.ContainerPerOwner = value; return this; }
        public FieldDefinitionRef getContainerPerUserField() { return ContainerPerUserField; }
        public Classification setContainerPerUserField(FieldDefinitionRef value) { this.ContainerPerUserField = value; return this; }
        public TrimProperty<Integer> getContainerSizeThreshold() { return ContainerSizeThreshold; }
        public Classification setContainerSizeThreshold(TrimProperty<Integer> value) { this.ContainerSizeThreshold = value; return this; }
        public RecordTypeRef getContainerType() { return ContainerType; }
        public Classification setContainerType(RecordTypeRef value) { this.ContainerType = value; return this; }
        public JurisdictionRef getDefaultJurisdiction() { return DefaultJurisdiction; }
        public Classification setDefaultJurisdiction(JurisdictionRef value) { this.DefaultJurisdiction = value; return this; }
        public LocationRef getHomeLocation() { return HomeLocation; }
        public Classification setHomeLocation(LocationRef value) { this.HomeLocation = value; return this; }
        public TrimStringProperty getIdNumber() { return IdNumber; }
        public Classification setIdNumber(TrimStringProperty value) { this.IdNumber = value; return this; }
        public TrimStringProperty getIdNumberUncompressed() { return IdNumberUncompressed; }
        public Classification setIdNumberUncompressed(TrimStringProperty value) { this.IdNumberUncompressed = value; return this; }
        public TrimProperty<Long> getIdolCategory() { return IdolCategory; }
        public Classification setIdolCategory(TrimProperty<Long> value) { this.IdolCategory = value; return this; }
        public TrimProperty<Boolean> getIsApproved() { return IsApproved; }
        public Classification setIsApproved(TrimProperty<Boolean> value) { this.IsApproved = value; return this; }
        public TrimStringProperty getLevelNumber() { return LevelNumber; }
        public Classification setLevelNumber(TrimStringProperty value) { this.LevelNumber = value; return this; }
        public TrimStringProperty getLevelNumberUncompressed() { return LevelNumberUncompressed; }
        public Classification setLevelNumberUncompressed(TrimStringProperty value) { this.LevelNumberUncompressed = value; return this; }
        public TrimProperty<Integer> getMinimumConfidenceLevel() { return MinimumConfidenceLevel; }
        public Classification setMinimumConfidenceLevel(TrimProperty<Integer> value) { this.MinimumConfidenceLevel = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Classification setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Classification setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Classification setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getNumberingIsManual() { return NumberingIsManual; }
        public Classification setNumberingIsManual(TrimProperty<Boolean> value) { this.NumberingIsManual = value; return this; }
        public RecordTypeRef getOnlyRecordType() { return OnlyRecordType; }
        public Classification setOnlyRecordType(RecordTypeRef value) { this.OnlyRecordType = value; return this; }
        public LocationRef getOwnerLocation() { return OwnerLocation; }
        public Classification setOwnerLocation(LocationRef value) { this.OwnerLocation = value; return this; }
        public ClassificationRef getParentClassification() { return ParentClassification; }
        public Classification setParentClassification(ClassificationRef value) { this.ParentClassification = value; return this; }
        public TrimProperty<Boolean> getPendingAutoClassification() { return PendingAutoClassification; }
        public Classification setPendingAutoClassification(TrimProperty<Boolean> value) { this.PendingAutoClassification = value; return this; }
        public TrimStringProperty getPolicyCentreGUID() { return PolicyCentreGUID; }
        public Classification setPolicyCentreGUID(TrimStringProperty value) { this.PolicyCentreGUID = value; return this; }
        public TrimProperty<Boolean> getPreventAutoClassification() { return PreventAutoClassification; }
        public Classification setPreventAutoClassification(TrimProperty<Boolean> value) { this.PreventAutoClassification = value; return this; }
        public TrimStringProperty getRecordLastNumber() { return RecordLastNumber; }
        public Classification setRecordLastNumber(TrimStringProperty value) { this.RecordLastNumber = value; return this; }
        public TrimStringProperty getRecordPattern() { return RecordPattern; }
        public Classification setRecordPattern(TrimStringProperty value) { this.RecordPattern = value; return this; }
        public ScheduleRef getRetentionSchedule() { return RetentionSchedule; }
        public Classification setRetentionSchedule(ScheduleRef value) { this.RetentionSchedule = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public Classification setTitle(TrimStringProperty value) { this.Title = value; return this; }
        private static Object responseType = ClassificationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Classification by Uri or Name.
    */
    @Route(Path="/Classification/{Id*}", Verbs="GET")
    @Api("Fetch a single Classification by Uri or Name.")
    public static class ClassificationFind extends TrimMainObjectByUri implements IReturn<ClassificationsResponse>
    {
        
        private static Object responseType = ClassificationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Communications filtered using a search string.
    */
    @Route(Path="/Communication", Verbs="GET")
    @Api("Fetch a collection of Communications filtered using a search string.")
    public static class Communications extends TrimMainObjectSearch implements IReturn<CommunicationsResponse>
    {
        
        private static Object responseType = CommunicationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Communication object.
    */
    @Route(Path="/Communication", Verbs="POST")
    @Api("Update a Communication object.")
    @DataContract
    public static class Communication extends TrimMainObject implements IReturn<CommunicationsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildDetails")
        @SerializedName("ChildDetails")
        public ArrayList<CommunicationDetail> ChildDetails = null;

        @DataMember(Name="CommunicationDated")
        @SerializedName("CommunicationDated")
        @ApiMember(Name="CommunicationDated", ParameterType="form", DataType="TrimDateTime", IsRequired=true)
        public TrimDateTime Dated = null;

        @DataMember(Name="CommunicationDescription")
        @SerializedName("CommunicationDescription")
        @ApiMember(Name="CommunicationDescription", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="CommunicationDirection")
        @SerializedName("CommunicationDirection")
        @ApiMember(Name="CommunicationDirection", ParameterType="form", DataType="string")
        public TrimProperty<CommunicationDirection> Direction = null;

        @DataMember(Name="CommunicationMedium")
        @SerializedName("CommunicationMedium")
        @ApiMember(Name="CommunicationMedium", ParameterType="form", DataType="string")
        public TrimProperty<CommunicationMedium> Medium = null;

        @DataMember(Name="CommunicationRecipients")
        @SerializedName("CommunicationRecipients")
        @ApiMember(Name="CommunicationRecipients", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Recipients = null;

        @DataMember(Name="CommunicationRecord")
        @SerializedName("CommunicationRecord")
        @ApiMember(Name="CommunicationRecord", ParameterType="form", DataType="long", IsRequired=true, Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="CommunicationSender")
        @SerializedName("CommunicationSender")
        @ApiMember(Name="CommunicationSender", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Sender = null;

        @DataMember(Name="CommunicationViewable")
        @SerializedName("CommunicationViewable")
        @ApiMember(Name="CommunicationViewable", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> Viewable = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Communication setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<CommunicationDetail> getChildDetails() { return ChildDetails; }
        public Communication setChildDetails(ArrayList<CommunicationDetail> value) { this.ChildDetails = value; return this; }
        public TrimDateTime getDated() { return Dated; }
        public Communication setDated(TrimDateTime value) { this.Dated = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public Communication setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<CommunicationDirection> getDirection() { return Direction; }
        public Communication setDirection(TrimProperty<CommunicationDirection> value) { this.Direction = value; return this; }
        public TrimProperty<CommunicationMedium> getMedium() { return Medium; }
        public Communication setMedium(TrimProperty<CommunicationMedium> value) { this.Medium = value; return this; }
        public TrimStringProperty getRecipients() { return Recipients; }
        public Communication setRecipients(TrimStringProperty value) { this.Recipients = value; return this; }
        public RecordRef getRecord() { return Record; }
        public Communication setRecord(RecordRef value) { this.Record = value; return this; }
        public TrimStringProperty getSender() { return Sender; }
        public Communication setSender(TrimStringProperty value) { this.Sender = value; return this; }
        public TrimProperty<Boolean> getViewable() { return Viewable; }
        public Communication setViewable(TrimProperty<Boolean> value) { this.Viewable = value; return this; }
        private static Object responseType = CommunicationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Communication by Uri or Name.
    */
    @Route(Path="/Communication/{Id*}", Verbs="GET")
    @Api("Fetch a single Communication by Uri or Name.")
    public static class CommunicationFind extends TrimMainObjectByUri implements IReturn<CommunicationsResponse>
    {
        
        private static Object responseType = CommunicationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Consignments filtered using a search string.
    */
    @Route(Path="/Consignment", Verbs="GET")
    @Api("Fetch a collection of Consignments filtered using a search string.")
    public static class Consignments extends TrimMainObjectSearch implements IReturn<ConsignmentsResponse>
    {
        
        private static Object responseType = ConsignmentsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Consignment object.
    */
    @Route(Path="/Consignment", Verbs="POST")
    @Api("Update a Consignment object.")
    @DataContract
    public static class Consignment extends TrimMainObject implements IReturn<ConsignmentsResponse>
    {
        /**
        * Removes the specified record from this consignment.
        */
        @DataMember
        @ApiMember(Name="RemoveRecord", ParameterType="form", Verb="POST", Description="Removes the specified record from this consignment.")
        public RemoveRecord RemoveRecord = null;

        /**
        * Updates the consignment to indicate that archivist review activity is complete. Note, all issues need to be resolved before this can be done.
        */
        @DataMember
        @ApiMember(Name="SetArchivistReviewComplete", ParameterType="form", Verb="POST", Description="Updates the consignment to indicate that archivist review activity is complete. Note, all issues need to be resolved before this can be done.")
        public SetArchivistReviewComplete SetArchivistReviewComplete = null;

        /**
        * First step of disposal processing for Transfers - initializes the log record and sets the status of the consignment to be waiting for the acknowledgment of receipt of the consignment by the agency the data is being transferred to.
        */
        @DataMember
        @ApiMember(Name="PrepareForTransfer", ParameterType="form", Verb="POST", Description="First step of disposal processing for Transfers - initializes the log record and sets the status of the consignment to be waiting for the acknowledgment of receipt of the consignment by the agency the data is being transferred to.")
        public PrepareForTransfer PrepareForTransfer = null;

        /**
        * Second step of disposal processing for Transfers - updates the consignment with the supplied receipt date and then completes the disposal operation.
        */
        @DataMember
        @ApiMember(Name="CompleteTransfer", ParameterType="form", Verb="POST", Description="Second step of disposal processing for Transfers - updates the consignment with the supplied receipt date and then completes the disposal operation.")
        public CompleteTransfer CompleteTransfer = null;

        /**
        * Performs the disposal operation for this consignment, use this for Archive or Destroy, you can also use it for Transfers that do not need to be acknowledged.
        */
        @DataMember
        @ApiMember(Name="DoDisposal", ParameterType="form", Verb="POST", Description="Performs the disposal operation for this consignment, use this for Archive or Destroy, you can also use it for Transfers that do not need to be acknowledged.")
        public DoDisposal DoDisposal = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ConsignmentAckTransferDate")
        @SerializedName("ConsignmentAckTransferDate")
        @ApiMember(Name="ConsignmentAckTransferDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime AckTransferDate = null;

        @DataMember(Name="ConsignmentAllowOnHold")
        @SerializedName("ConsignmentAllowOnHold")
        @ApiMember(Name="ConsignmentAllowOnHold", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> AllowOnHold = null;

        @DataMember(Name="ConsignmentAllowOutsideSchedule")
        @SerializedName("ConsignmentAllowOutsideSchedule")
        @ApiMember(Name="ConsignmentAllowOutsideSchedule", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> AllowOutsideSchedule = null;

        @DataMember(Name="ConsignmentArchivist")
        @SerializedName("ConsignmentArchivist")
        @ApiMember(Name="ConsignmentArchivist", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Archivist = null;

        @DataMember(Name="ConsignmentCutoffDate")
        @SerializedName("ConsignmentCutoffDate")
        @ApiMember(Name="ConsignmentCutoffDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime CutoffDate = null;

        @DataMember(Name="ConsignmentDateApproved")
        @SerializedName("ConsignmentDateApproved")
        @ApiMember(Name="ConsignmentDateApproved", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateApproved = null;

        @DataMember(Name="ConsignmentDateReviewed")
        @SerializedName("ConsignmentDateReviewed")
        @ApiMember(Name="ConsignmentDateReviewed", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DateReviewed = null;

        @DataMember(Name="ConsignmentDescription")
        @SerializedName("ConsignmentDescription")
        @ApiMember(Name="ConsignmentDescription", ParameterType="form", DataType="string")
        public TrimStringProperty Description = null;

        @DataMember(Name="ConsignmentDisposalDate")
        @SerializedName("ConsignmentDisposalDate")
        @ApiMember(Name="ConsignmentDisposalDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DisposalDate = null;

        @DataMember(Name="ConsignmentDisposalMethod")
        @SerializedName("ConsignmentDisposalMethod")
        @ApiMember(Name="ConsignmentDisposalMethod", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<ConsignmentDisposalType> DisposalMethod = null;

        @DataMember(Name="ConsignmentFilterString")
        @SerializedName("ConsignmentFilterString")
        @ApiMember(Name="ConsignmentFilterString", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty FilterString = null;

        @DataMember(Name="ConsignmentIsComplete")
        @SerializedName("ConsignmentIsComplete")
        @ApiMember(Name="ConsignmentIsComplete", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="ConsignmentLogRecord")
        @SerializedName("ConsignmentLogRecord")
        @ApiMember(Name="ConsignmentLogRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef LogRecord = null;

        @DataMember(Name="ConsignmentNbrDisposalErrors")
        @SerializedName("ConsignmentNbrDisposalErrors")
        @ApiMember(Name="ConsignmentNbrDisposalErrors", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> NbrDisposalErrors = null;

        @DataMember(Name="ConsignmentNbrDisposed")
        @SerializedName("ConsignmentNbrDisposed")
        @ApiMember(Name="ConsignmentNbrDisposed", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> NbrDisposed = null;

        @DataMember(Name="ConsignmentNbrIssuesNow")
        @SerializedName("ConsignmentNbrIssuesNow")
        @ApiMember(Name="ConsignmentNbrIssuesNow", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> NbrIssuesNow = null;

        @DataMember(Name="ConsignmentNbrIssuesStart")
        @SerializedName("ConsignmentNbrIssuesStart")
        @ApiMember(Name="ConsignmentNbrIssuesStart", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> NbrIssuesStart = null;

        @DataMember(Name="ConsignmentNbrRecordsNow")
        @SerializedName("ConsignmentNbrRecordsNow")
        @ApiMember(Name="ConsignmentNbrRecordsNow", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> NbrRecordsNow = null;

        @DataMember(Name="ConsignmentNbrRecordsStart")
        @SerializedName("ConsignmentNbrRecordsStart")
        @ApiMember(Name="ConsignmentNbrRecordsStart", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> NbrRecordsStart = null;

        @DataMember(Name="ConsignmentNbrRejected")
        @SerializedName("ConsignmentNbrRejected")
        @ApiMember(Name="ConsignmentNbrRejected", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> NbrRejected = null;

        @DataMember(Name="ConsignmentNbrRemoved")
        @SerializedName("ConsignmentNbrRemoved")
        @ApiMember(Name="ConsignmentNbrRemoved", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> NbrRemoved = null;

        @DataMember(Name="ConsignmentNumber")
        @SerializedName("ConsignmentNumber")
        @ApiMember(Name="ConsignmentNumber", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Number = null;

        @DataMember(Name="ConsignmentOnlyScheduledDisposal")
        @SerializedName("ConsignmentOnlyScheduledDisposal")
        @ApiMember(Name="ConsignmentOnlyScheduledDisposal", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> OnlyScheduledDisposal = null;

        @DataMember(Name="ConsignmentOwnerAdminApproval")
        @SerializedName("ConsignmentOwnerAdminApproval")
        @ApiMember(Name="ConsignmentOwnerAdminApproval", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> OwnerAdminApproval = null;

        @DataMember(Name="ConsignmentOwnerApproval")
        @SerializedName("ConsignmentOwnerApproval")
        @ApiMember(Name="ConsignmentOwnerApproval", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> OwnerApproval = null;

        @DataMember(Name="ConsignmentQueryString")
        @SerializedName("ConsignmentQueryString")
        @ApiMember(Name="ConsignmentQueryString", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty QueryString = null;

        @DataMember(Name="ConsignmentSelectingTopContainers")
        @SerializedName("ConsignmentSelectingTopContainers")
        @ApiMember(Name="ConsignmentSelectingTopContainers", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> SelectingTopContainers = null;

        @DataMember(Name="ConsignmentStateDescription")
        @SerializedName("ConsignmentStateDescription")
        @ApiMember(Name="ConsignmentStateDescription", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty StateDescription = null;

        @DataMember(Name="ConsignmentTransferLocation")
        @SerializedName("ConsignmentTransferLocation")
        @ApiMember(Name="ConsignmentTransferLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef TransferLocation = null;

        @DataMember(Name="ConsignmentWaitingAcknowledgement")
        @SerializedName("ConsignmentWaitingAcknowledgement")
        @ApiMember(Name="ConsignmentWaitingAcknowledgement", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> WaitingAcknowledgement = null;
        
        public RemoveRecord getRemoveRecord() { return RemoveRecord; }
        public Consignment setRemoveRecord(RemoveRecord value) { this.RemoveRecord = value; return this; }
        public SetArchivistReviewComplete getSetArchivistReviewComplete() { return SetArchivistReviewComplete; }
        public Consignment setSetArchivistReviewComplete(SetArchivistReviewComplete value) { this.SetArchivistReviewComplete = value; return this; }
        public PrepareForTransfer getPrepareForTransfer() { return PrepareForTransfer; }
        public Consignment setPrepareForTransfer(PrepareForTransfer value) { this.PrepareForTransfer = value; return this; }
        public CompleteTransfer getCompleteTransfer() { return CompleteTransfer; }
        public Consignment setCompleteTransfer(CompleteTransfer value) { this.CompleteTransfer = value; return this; }
        public DoDisposal getDoDisposal() { return DoDisposal; }
        public Consignment setDoDisposal(DoDisposal value) { this.DoDisposal = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Consignment setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getAckTransferDate() { return AckTransferDate; }
        public Consignment setAckTransferDate(TrimDateTime value) { this.AckTransferDate = value; return this; }
        public TrimProperty<Boolean> getAllowOnHold() { return AllowOnHold; }
        public Consignment setAllowOnHold(TrimProperty<Boolean> value) { this.AllowOnHold = value; return this; }
        public TrimProperty<Boolean> getAllowOutsideSchedule() { return AllowOutsideSchedule; }
        public Consignment setAllowOutsideSchedule(TrimProperty<Boolean> value) { this.AllowOutsideSchedule = value; return this; }
        public LocationRef getArchivist() { return Archivist; }
        public Consignment setArchivist(LocationRef value) { this.Archivist = value; return this; }
        public TrimDateTime getCutoffDate() { return CutoffDate; }
        public Consignment setCutoffDate(TrimDateTime value) { this.CutoffDate = value; return this; }
        public TrimDateTime getDateApproved() { return DateApproved; }
        public Consignment setDateApproved(TrimDateTime value) { this.DateApproved = value; return this; }
        public TrimDateTime getDateReviewed() { return DateReviewed; }
        public Consignment setDateReviewed(TrimDateTime value) { this.DateReviewed = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public Consignment setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getDisposalDate() { return DisposalDate; }
        public Consignment setDisposalDate(TrimDateTime value) { this.DisposalDate = value; return this; }
        public TrimProperty<ConsignmentDisposalType> getDisposalMethod() { return DisposalMethod; }
        public Consignment setDisposalMethod(TrimProperty<ConsignmentDisposalType> value) { this.DisposalMethod = value; return this; }
        public TrimStringProperty getFilterString() { return FilterString; }
        public Consignment setFilterString(TrimStringProperty value) { this.FilterString = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public Consignment setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public RecordRef getLogRecord() { return LogRecord; }
        public Consignment setLogRecord(RecordRef value) { this.LogRecord = value; return this; }
        public TrimProperty<Long> getNbrDisposalErrors() { return NbrDisposalErrors; }
        public Consignment setNbrDisposalErrors(TrimProperty<Long> value) { this.NbrDisposalErrors = value; return this; }
        public TrimProperty<Long> getNbrDisposed() { return NbrDisposed; }
        public Consignment setNbrDisposed(TrimProperty<Long> value) { this.NbrDisposed = value; return this; }
        public TrimProperty<Long> getNbrIssuesNow() { return NbrIssuesNow; }
        public Consignment setNbrIssuesNow(TrimProperty<Long> value) { this.NbrIssuesNow = value; return this; }
        public TrimProperty<Long> getNbrIssuesStart() { return NbrIssuesStart; }
        public Consignment setNbrIssuesStart(TrimProperty<Long> value) { this.NbrIssuesStart = value; return this; }
        public TrimProperty<Long> getNbrRecordsNow() { return NbrRecordsNow; }
        public Consignment setNbrRecordsNow(TrimProperty<Long> value) { this.NbrRecordsNow = value; return this; }
        public TrimProperty<Long> getNbrRecordsStart() { return NbrRecordsStart; }
        public Consignment setNbrRecordsStart(TrimProperty<Long> value) { this.NbrRecordsStart = value; return this; }
        public TrimProperty<Long> getNbrRejected() { return NbrRejected; }
        public Consignment setNbrRejected(TrimProperty<Long> value) { this.NbrRejected = value; return this; }
        public TrimProperty<Long> getNbrRemoved() { return NbrRemoved; }
        public Consignment setNbrRemoved(TrimProperty<Long> value) { this.NbrRemoved = value; return this; }
        public TrimStringProperty getNumber() { return Number; }
        public Consignment setNumber(TrimStringProperty value) { this.Number = value; return this; }
        public TrimProperty<Boolean> getOnlyScheduledDisposal() { return OnlyScheduledDisposal; }
        public Consignment setOnlyScheduledDisposal(TrimProperty<Boolean> value) { this.OnlyScheduledDisposal = value; return this; }
        public TrimProperty<Boolean> getOwnerAdminApproval() { return OwnerAdminApproval; }
        public Consignment setOwnerAdminApproval(TrimProperty<Boolean> value) { this.OwnerAdminApproval = value; return this; }
        public TrimProperty<Boolean> getOwnerApproval() { return OwnerApproval; }
        public Consignment setOwnerApproval(TrimProperty<Boolean> value) { this.OwnerApproval = value; return this; }
        public TrimStringProperty getQueryString() { return QueryString; }
        public Consignment setQueryString(TrimStringProperty value) { this.QueryString = value; return this; }
        public TrimProperty<Boolean> getSelectingTopContainers() { return SelectingTopContainers; }
        public Consignment setSelectingTopContainers(TrimProperty<Boolean> value) { this.SelectingTopContainers = value; return this; }
        public TrimStringProperty getStateDescription() { return StateDescription; }
        public Consignment setStateDescription(TrimStringProperty value) { this.StateDescription = value; return this; }
        public LocationRef getTransferLocation() { return TransferLocation; }
        public Consignment setTransferLocation(LocationRef value) { this.TransferLocation = value; return this; }
        public TrimProperty<Boolean> getWaitingAcknowledgement() { return WaitingAcknowledgement; }
        public Consignment setWaitingAcknowledgement(TrimProperty<Boolean> value) { this.WaitingAcknowledgement = value; return this; }
        private static Object responseType = ConsignmentsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Consignment by Uri or Name.
    */
    @Route(Path="/Consignment/{Id*}", Verbs="GET")
    @Api("Fetch a single Consignment by Uri or Name.")
    public static class ConsignmentFind extends TrimMainObjectByUri implements IReturn<ConsignmentsResponse>
    {
        
        private static Object responseType = ConsignmentsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of ConsignmentApprovers filtered using a search string.
    */
    @Route(Path="/ConsignmentApprover", Verbs="GET")
    @Api("Fetch a collection of ConsignmentApprovers filtered using a search string.")
    public static class ConsignmentApprovers extends TrimMainObjectSearch implements IReturn<ConsignmentApproversResponse>
    {
        
        private static Object responseType = ConsignmentApproversResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a ConsignmentApprover object.
    */
    @Route(Path="/ConsignmentApprover", Verbs="POST")
    @Api("Update a ConsignmentApprover object.")
    @DataContract
    public static class ConsignmentApprover extends TrimMainObject implements IReturn<ConsignmentApproversResponse>
    {
        /**
        * Updates the approval status of the associated record to 'Approved'.
        */
        @DataMember
        @ApiMember(Name="Approve", ParameterType="form", Verb="POST", Description="Updates the approval status of the associated record to 'Approved'.")
        public Approve Approve = null;

        /**
        * Updates the approval status of the associated record to 'Rejected'.
        */
        @DataMember
        @ApiMember(Name="Reject", ParameterType="form", Verb="POST", Description="Updates the approval status of the associated record to 'Rejected'.")
        public Reject Reject = null;

        /**
        * Updates the approval status of the associated record to 'Removed'.
        */
        @DataMember
        @ApiMember(Name="ConfirmRejection", ParameterType="form", Verb="POST", Description="Updates the approval status of the associated record to 'Removed'.")
        public ConfirmRejection ConfirmRejection = null;

        /**
        * Reverts any approval activity for the associated record.
        */
        @DataMember
        @ApiMember(Name="Reset", ParameterType="form", Verb="POST", Description="Reverts any approval activity for the associated record.")
        public Reset Reset = null;

        /**
        * Updates the approval status of the associated record to 'Rejected'.
        */
        @DataMember
        @ApiMember(Name="Reassign", ParameterType="form", Verb="POST", Description="Updates the approval status of the associated record to 'Rejected'.")
        public Reassign Reassign = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ConsignmentApproverApprovedOn")
        @SerializedName("ConsignmentApproverApprovedOn")
        @ApiMember(Name="ConsignmentApproverApprovedOn", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime ApprovedOn = null;

        @DataMember(Name="ConsignmentApproverApprover")
        @SerializedName("ConsignmentApproverApprover")
        @ApiMember(Name="ConsignmentApproverApprover", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Approver = null;

        @DataMember(Name="ConsignmentApproverConsignment")
        @SerializedName("ConsignmentApproverConsignment")
        @ApiMember(Name="ConsignmentApproverConsignment", ParameterType="form", DataType="long", Verb="POST")
        public ConsignmentRef Consignment = null;

        @DataMember(Name="ConsignmentApproverOrder")
        @SerializedName("ConsignmentApproverOrder")
        @ApiMember(Name="ConsignmentApproverOrder", ParameterType="form", DataType="int")
        public TrimProperty<Integer> Order = null;

        @DataMember(Name="ConsignmentApproverRecDateClosed")
        @SerializedName("ConsignmentApproverRecDateClosed")
        @ApiMember(Name="ConsignmentApproverRecDateClosed", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime RecDateClosed = null;

        @DataMember(Name="ConsignmentApproverRecDateLastUpdated")
        @SerializedName("ConsignmentApproverRecDateLastUpdated")
        @ApiMember(Name="ConsignmentApproverRecDateLastUpdated", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime RecDateLastUpdated = null;

        @DataMember(Name="ConsignmentApproverRecord")
        @SerializedName("ConsignmentApproverRecord")
        @ApiMember(Name="ConsignmentApproverRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="ConsignmentApproverRecRecType")
        @SerializedName("ConsignmentApproverRecRecType")
        @ApiMember(Name="ConsignmentApproverRecRecType", ParameterType="form", DataType="long", Verb="POST")
        public RecordTypeRef RecRecType = null;

        @DataMember(Name="ConsignmentApproverRecTitle")
        @SerializedName("ConsignmentApproverRecTitle")
        @ApiMember(Name="ConsignmentApproverRecTitle", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty RecTitle = null;

        @DataMember(Name="ConsignmentApproverRejectedOn")
        @SerializedName("ConsignmentApproverRejectedOn")
        @ApiMember(Name="ConsignmentApproverRejectedOn", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime RejectedOn = null;

        @DataMember(Name="ConsignmentApproverRejectReason")
        @SerializedName("ConsignmentApproverRejectReason")
        @ApiMember(Name="ConsignmentApproverRejectReason", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty RejectReason = null;

        @DataMember(Name="ConsignmentApproverStatus")
        @SerializedName("ConsignmentApproverStatus")
        @ApiMember(Name="ConsignmentApproverStatus", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<ConsignmentItemApprovalStatus> Status = null;
        
        public Approve getApprove() { return Approve; }
        public ConsignmentApprover setApprove(Approve value) { this.Approve = value; return this; }
        public Reject getReject() { return Reject; }
        public ConsignmentApprover setReject(Reject value) { this.Reject = value; return this; }
        public ConfirmRejection getConfirmRejection() { return ConfirmRejection; }
        public ConsignmentApprover setConfirmRejection(ConfirmRejection value) { this.ConfirmRejection = value; return this; }
        public Reset getReset() { return Reset; }
        public ConsignmentApprover setReset(Reset value) { this.Reset = value; return this; }
        public Reassign getReassign() { return Reassign; }
        public ConsignmentApprover setReassign(Reassign value) { this.Reassign = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ConsignmentApprover setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getApprovedOn() { return ApprovedOn; }
        public ConsignmentApprover setApprovedOn(TrimDateTime value) { this.ApprovedOn = value; return this; }
        public LocationRef getApprover() { return Approver; }
        public ConsignmentApprover setApprover(LocationRef value) { this.Approver = value; return this; }
        public ConsignmentRef getConsignment() { return Consignment; }
        public ConsignmentApprover setConsignment(ConsignmentRef value) { this.Consignment = value; return this; }
        public TrimProperty<Integer> getOrder() { return Order; }
        public ConsignmentApprover setOrder(TrimProperty<Integer> value) { this.Order = value; return this; }
        public TrimDateTime getRecDateClosed() { return RecDateClosed; }
        public ConsignmentApprover setRecDateClosed(TrimDateTime value) { this.RecDateClosed = value; return this; }
        public TrimDateTime getRecDateLastUpdated() { return RecDateLastUpdated; }
        public ConsignmentApprover setRecDateLastUpdated(TrimDateTime value) { this.RecDateLastUpdated = value; return this; }
        public RecordRef getRecord() { return Record; }
        public ConsignmentApprover setRecord(RecordRef value) { this.Record = value; return this; }
        public RecordTypeRef getRecRecType() { return RecRecType; }
        public ConsignmentApprover setRecRecType(RecordTypeRef value) { this.RecRecType = value; return this; }
        public TrimStringProperty getRecTitle() { return RecTitle; }
        public ConsignmentApprover setRecTitle(TrimStringProperty value) { this.RecTitle = value; return this; }
        public TrimDateTime getRejectedOn() { return RejectedOn; }
        public ConsignmentApprover setRejectedOn(TrimDateTime value) { this.RejectedOn = value; return this; }
        public TrimStringProperty getRejectReason() { return RejectReason; }
        public ConsignmentApprover setRejectReason(TrimStringProperty value) { this.RejectReason = value; return this; }
        public TrimProperty<ConsignmentItemApprovalStatus> getStatus() { return Status; }
        public ConsignmentApprover setStatus(TrimProperty<ConsignmentItemApprovalStatus> value) { this.Status = value; return this; }
        private static Object responseType = ConsignmentApproversResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single ConsignmentApprover by Uri or Name.
    */
    @Route(Path="/ConsignmentApprover/{Id*}", Verbs="GET")
    @Api("Fetch a single ConsignmentApprover by Uri or Name.")
    public static class ConsignmentApproverFind extends TrimMainObjectByUri implements IReturn<ConsignmentApproversResponse>
    {
        
        private static Object responseType = ConsignmentApproversResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of ConsignmentIssues filtered using a search string.
    */
    @Route(Path="/ConsignmentIssue", Verbs="GET")
    @Api("Fetch a collection of ConsignmentIssues filtered using a search string.")
    public static class ConsignmentIssues extends TrimMainObjectSearch implements IReturn<ConsignmentIssuesResponse>
    {
        
        private static Object responseType = ConsignmentIssuesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a ConsignmentIssue object.
    */
    @Route(Path="/ConsignmentIssue", Verbs="POST")
    @Api("Update a ConsignmentIssue object.")
    @DataContract
    public static class ConsignmentIssue extends TrimMainObject implements IReturn<ConsignmentIssuesResponse>
    {
        /**
        * Resolves this issue by removing the associated record from its container.  Only applies for issues that are raised for contained items.
        */
        @DataMember
        @ApiMember(Name="ResolveByRemovingRecordFromContainer", ParameterType="form", Verb="POST", Description="Resolves this issue by removing the associated record from its container.  Only applies for issues that are raised for contained items.")
        public ResolveByRemovingRecordFromContainer ResolveByRemovingRecordFromContainer = null;

        /**
        * Resolves this issue by removing the associated record from the consignment. Cannot be used for issues that are raised for contained items.
        */
        @DataMember
        @ApiMember(Name="ResolveByRemovingRecord", ParameterType="form", Verb="POST", Description="Resolves this issue by removing the associated record from the consignment. Cannot be used for issues that are raised for contained items.")
        public ResolveByRemovingRecord ResolveByRemovingRecord = null;

        /**
        * Checks if the issue is now resolved, and will remove it if that is the case. Will automatically remove any issue that is a warning.
        */
        @DataMember
        @ApiMember(Name="RemoveIfResolved", ParameterType="form", Verb="POST", Description="Checks if the issue is now resolved, and will remove it if that is the case. Will automatically remove any issue that is a warning.")
        public RemoveIfResolved RemoveIfResolved = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ConsignmentIssueConsignment")
        @SerializedName("ConsignmentIssueConsignment")
        @ApiMember(Name="ConsignmentIssueConsignment", ParameterType="form", DataType="long", Verb="POST")
        public ConsignmentRef Consignment = null;

        @DataMember(Name="ConsignmentIssueDescription")
        @SerializedName("ConsignmentIssueDescription")
        @ApiMember(Name="ConsignmentIssueDescription", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="ConsignmentIssueIssueId")
        @SerializedName("ConsignmentIssueIssueId")
        @ApiMember(Name="ConsignmentIssueIssueId", ParameterType="form", DataType="int", Verb="GET")
        public TrimProperty<Integer> IssueId = null;

        @DataMember(Name="ConsignmentIssueIssueType")
        @SerializedName("ConsignmentIssueIssueType")
        @ApiMember(Name="ConsignmentIssueIssueType", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<ConsignmentItemIssueType> IssueType = null;

        @DataMember(Name="ConsignmentIssueParentRecord")
        @SerializedName("ConsignmentIssueParentRecord")
        @ApiMember(Name="ConsignmentIssueParentRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef ParentRecord = null;

        @DataMember(Name="ConsignmentIssueRecord")
        @SerializedName("ConsignmentIssueRecord")
        @ApiMember(Name="ConsignmentIssueRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="ConsignmentIssueReviewer")
        @SerializedName("ConsignmentIssueReviewer")
        @ApiMember(Name="ConsignmentIssueReviewer", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Reviewer = null;
        
        public ResolveByRemovingRecordFromContainer getResolveByRemovingRecordFromContainer() { return ResolveByRemovingRecordFromContainer; }
        public ConsignmentIssue setResolveByRemovingRecordFromContainer(ResolveByRemovingRecordFromContainer value) { this.ResolveByRemovingRecordFromContainer = value; return this; }
        public ResolveByRemovingRecord getResolveByRemovingRecord() { return ResolveByRemovingRecord; }
        public ConsignmentIssue setResolveByRemovingRecord(ResolveByRemovingRecord value) { this.ResolveByRemovingRecord = value; return this; }
        public RemoveIfResolved getRemoveIfResolved() { return RemoveIfResolved; }
        public ConsignmentIssue setRemoveIfResolved(RemoveIfResolved value) { this.RemoveIfResolved = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ConsignmentIssue setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ConsignmentRef getConsignment() { return Consignment; }
        public ConsignmentIssue setConsignment(ConsignmentRef value) { this.Consignment = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public ConsignmentIssue setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Integer> getIssueId() { return IssueId; }
        public ConsignmentIssue setIssueId(TrimProperty<Integer> value) { this.IssueId = value; return this; }
        public TrimProperty<ConsignmentItemIssueType> getIssueType() { return IssueType; }
        public ConsignmentIssue setIssueType(TrimProperty<ConsignmentItemIssueType> value) { this.IssueType = value; return this; }
        public RecordRef getParentRecord() { return ParentRecord; }
        public ConsignmentIssue setParentRecord(RecordRef value) { this.ParentRecord = value; return this; }
        public RecordRef getRecord() { return Record; }
        public ConsignmentIssue setRecord(RecordRef value) { this.Record = value; return this; }
        public LocationRef getReviewer() { return Reviewer; }
        public ConsignmentIssue setReviewer(LocationRef value) { this.Reviewer = value; return this; }
        private static Object responseType = ConsignmentIssuesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single ConsignmentIssue by Uri or Name.
    */
    @Route(Path="/ConsignmentIssue/{Id*}", Verbs="GET")
    @Api("Fetch a single ConsignmentIssue by Uri or Name.")
    public static class ConsignmentIssueFind extends TrimMainObjectByUri implements IReturn<ConsignmentIssuesResponse>
    {
        
        private static Object responseType = ConsignmentIssuesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of DocumentQueues filtered using a search string.
    */
    @Route(Path="/DocumentQueue", Verbs="GET")
    @Api("Fetch a collection of DocumentQueues filtered using a search string.")
    public static class DocumentQueues extends TrimMainObjectSearch implements IReturn<DocumentQueuesResponse>
    {
        
        private static Object responseType = DocumentQueuesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a DocumentQueue object.
    */
    @Route(Path="/DocumentQueue", Verbs="POST")
    @Api("Update a DocumentQueue object.")
    @DataContract
    public static class DocumentQueue extends TrimMainObject implements IReturn<DocumentQueuesResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="DocumentQueueNewType")
        @SerializedName("DocumentQueueNewType")
        @ApiMember(Name="DocumentQueueNewType", ParameterType="form", DataType="string", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="DocumentQueueAccessControl")
        @SerializedName("DocumentQueueAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="DocumentQueueAllowAutomaticProcessing")
        @SerializedName("DocumentQueueAllowAutomaticProcessing")
        @ApiMember(Name="DocumentQueueAllowAutomaticProcessing", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AllowAutomaticProcessing = null;

        @DataMember(Name="DocumentQueueAutoViewDocuments")
        @SerializedName("DocumentQueueAutoViewDocuments")
        @ApiMember(Name="DocumentQueueAutoViewDocuments", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AutoViewDocuments = null;

        @DataMember(Name="DocumentQueueCheckLinks")
        @SerializedName("DocumentQueueCheckLinks")
        @ApiMember(Name="DocumentQueueCheckLinks", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> CheckLinks = null;

        @DataMember(Name="DocumentQueueClassification")
        @SerializedName("DocumentQueueClassification")
        @ApiMember(Name="DocumentQueueClassification", ParameterType="form", DataType="long", Verb="POST")
        public ClassificationRef Classification = null;

        @DataMember(Name="DocumentQueueConfirmCheckIn")
        @SerializedName("DocumentQueueConfirmCheckIn")
        @ApiMember(Name="DocumentQueueConfirmCheckIn", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ConfirmCheckIn = null;

        @DataMember(Name="DocumentQueueContainer")
        @SerializedName("DocumentQueueContainer")
        @ApiMember(Name="DocumentQueueContainer", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef Container = null;

        @DataMember(Name="DocumentQueueDisplayEntryForm")
        @SerializedName("DocumentQueueDisplayEntryForm")
        @ApiMember(Name="DocumentQueueDisplayEntryForm", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DisplayEntryForm = null;

        @DataMember(Name="DocumentQueueDocumentUpdateStyle")
        @SerializedName("DocumentQueueDocumentUpdateStyle")
        @ApiMember(Name="DocumentQueueDocumentUpdateStyle", ParameterType="form", DataType="string")
        public TrimProperty<DocumentUpdateStyles> DocumentUpdateStyle = null;

        @DataMember(Name="DocumentQueueEmailUpdateStyle")
        @SerializedName("DocumentQueueEmailUpdateStyle")
        @ApiMember(Name="DocumentQueueEmailUpdateStyle", ParameterType="form", DataType="string")
        public TrimProperty<EmailUpdateStyles> EmailUpdateStyle = null;

        @DataMember(Name="DocumentQueueIgnoreOriginals")
        @SerializedName("DocumentQueueIgnoreOriginals")
        @ApiMember(Name="DocumentQueueIgnoreOriginals", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IgnoreOriginals = null;

        @DataMember(Name="DocumentQueueLastProcessed")
        @SerializedName("DocumentQueueLastProcessed")
        @ApiMember(Name="DocumentQueueLastProcessed", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime LastProcessed = null;

        @DataMember(Name="DocumentQueueLocation")
        @SerializedName("DocumentQueueLocation")
        @ApiMember(Name="DocumentQueueLocation", ParameterType="form", DataType="string")
        public TrimStringProperty Location = null;

        @DataMember(Name="DocumentQueueLocationDisplay")
        @SerializedName("DocumentQueueLocationDisplay")
        @ApiMember(Name="DocumentQueueLocationDisplay", ParameterType="form", DataType="string")
        public TrimStringProperty LocationDisplay = null;

        @DataMember(Name="DocumentQueueMachine")
        @SerializedName("DocumentQueueMachine")
        @ApiMember(Name="DocumentQueueMachine", ParameterType="form", DataType="string")
        public TrimStringProperty Machine = null;

        @DataMember(Name="DocumentQueueName")
        @SerializedName("DocumentQueueName")
        @ApiMember(Name="DocumentQueueName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="DocumentQueueNotes")
        @SerializedName("DocumentQueueNotes")
        @ApiMember(Name="DocumentQueueNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="DocumentQueueQueueType")
        @SerializedName("DocumentQueueQueueType")
        @ApiMember(Name="DocumentQueueQueueType", ParameterType="form", DataType="string")
        public TrimProperty<QueueTypes> QueueType = null;

        @DataMember(Name="DocumentQueueRecordType")
        @SerializedName("DocumentQueueRecordType")
        @ApiMember(Name="DocumentQueueRecordType", ParameterType="form", DataType="long", Verb="POST")
        public RecordTypeRef RecordType = null;

        @DataMember(Name="DocumentQueueSelectFilter")
        @SerializedName("DocumentQueueSelectFilter")
        @ApiMember(Name="DocumentQueueSelectFilter", ParameterType="form", DataType="string")
        public TrimStringProperty SelectFilter = null;

        @DataMember(Name="DocumentQueueShowBinaryFiles")
        @SerializedName("DocumentQueueShowBinaryFiles")
        @ApiMember(Name="DocumentQueueShowBinaryFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowBinaryFiles = null;

        @DataMember(Name="DocumentQueueShowHiddenFiles")
        @SerializedName("DocumentQueueShowHiddenFiles")
        @ApiMember(Name="DocumentQueueShowHiddenFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowHiddenFiles = null;

        @DataMember(Name="DocumentQueueShowReferenceFiles")
        @SerializedName("DocumentQueueShowReferenceFiles")
        @ApiMember(Name="DocumentQueueShowReferenceFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowReferenceFiles = null;

        @DataMember(Name="DocumentQueueShowRenditions")
        @SerializedName("DocumentQueueShowRenditions")
        @ApiMember(Name="DocumentQueueShowRenditions", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowRenditions = null;

        @DataMember(Name="DocumentQueueShowSystemFiles")
        @SerializedName("DocumentQueueShowSystemFiles")
        @ApiMember(Name="DocumentQueueShowSystemFiles", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> ShowSystemFiles = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public DocumentQueue setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public DocumentQueue setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public DocumentQueue setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public DocumentQueue setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public DocumentQueue setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public DocumentQueue setNewType(NewType value) { this.NewType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public DocumentQueue setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public DocumentQueue setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Boolean> getAllowAutomaticProcessing() { return AllowAutomaticProcessing; }
        public DocumentQueue setAllowAutomaticProcessing(TrimProperty<Boolean> value) { this.AllowAutomaticProcessing = value; return this; }
        public TrimProperty<Boolean> getAutoViewDocuments() { return AutoViewDocuments; }
        public DocumentQueue setAutoViewDocuments(TrimProperty<Boolean> value) { this.AutoViewDocuments = value; return this; }
        public TrimProperty<Boolean> getCheckLinks() { return CheckLinks; }
        public DocumentQueue setCheckLinks(TrimProperty<Boolean> value) { this.CheckLinks = value; return this; }
        public ClassificationRef getClassification() { return Classification; }
        public DocumentQueue setClassification(ClassificationRef value) { this.Classification = value; return this; }
        public TrimProperty<Boolean> getConfirmCheckIn() { return ConfirmCheckIn; }
        public DocumentQueue setConfirmCheckIn(TrimProperty<Boolean> value) { this.ConfirmCheckIn = value; return this; }
        public RecordRef getContainer() { return Container; }
        public DocumentQueue setContainer(RecordRef value) { this.Container = value; return this; }
        public TrimProperty<Boolean> getDisplayEntryForm() { return DisplayEntryForm; }
        public DocumentQueue setDisplayEntryForm(TrimProperty<Boolean> value) { this.DisplayEntryForm = value; return this; }
        public TrimProperty<DocumentUpdateStyles> getDocumentUpdateStyle() { return DocumentUpdateStyle; }
        public DocumentQueue setDocumentUpdateStyle(TrimProperty<DocumentUpdateStyles> value) { this.DocumentUpdateStyle = value; return this; }
        public TrimProperty<EmailUpdateStyles> getEmailUpdateStyle() { return EmailUpdateStyle; }
        public DocumentQueue setEmailUpdateStyle(TrimProperty<EmailUpdateStyles> value) { this.EmailUpdateStyle = value; return this; }
        public TrimProperty<Boolean> getIgnoreOriginals() { return IgnoreOriginals; }
        public DocumentQueue setIgnoreOriginals(TrimProperty<Boolean> value) { this.IgnoreOriginals = value; return this; }
        public TrimDateTime getLastProcessed() { return LastProcessed; }
        public DocumentQueue setLastProcessed(TrimDateTime value) { this.LastProcessed = value; return this; }
        public TrimStringProperty getLocation() { return Location; }
        public DocumentQueue setLocation(TrimStringProperty value) { this.Location = value; return this; }
        public TrimStringProperty getLocationDisplay() { return LocationDisplay; }
        public DocumentQueue setLocationDisplay(TrimStringProperty value) { this.LocationDisplay = value; return this; }
        public TrimStringProperty getMachine() { return Machine; }
        public DocumentQueue setMachine(TrimStringProperty value) { this.Machine = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public DocumentQueue setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public DocumentQueue setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public DocumentQueue setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<QueueTypes> getQueueType() { return QueueType; }
        public DocumentQueue setQueueType(TrimProperty<QueueTypes> value) { this.QueueType = value; return this; }
        public RecordTypeRef getRecordType() { return RecordType; }
        public DocumentQueue setRecordType(RecordTypeRef value) { this.RecordType = value; return this; }
        public TrimStringProperty getSelectFilter() { return SelectFilter; }
        public DocumentQueue setSelectFilter(TrimStringProperty value) { this.SelectFilter = value; return this; }
        public TrimProperty<Boolean> getShowBinaryFiles() { return ShowBinaryFiles; }
        public DocumentQueue setShowBinaryFiles(TrimProperty<Boolean> value) { this.ShowBinaryFiles = value; return this; }
        public TrimProperty<Boolean> getShowHiddenFiles() { return ShowHiddenFiles; }
        public DocumentQueue setShowHiddenFiles(TrimProperty<Boolean> value) { this.ShowHiddenFiles = value; return this; }
        public TrimProperty<Boolean> getShowReferenceFiles() { return ShowReferenceFiles; }
        public DocumentQueue setShowReferenceFiles(TrimProperty<Boolean> value) { this.ShowReferenceFiles = value; return this; }
        public TrimProperty<Boolean> getShowRenditions() { return ShowRenditions; }
        public DocumentQueue setShowRenditions(TrimProperty<Boolean> value) { this.ShowRenditions = value; return this; }
        public TrimProperty<Boolean> getShowSystemFiles() { return ShowSystemFiles; }
        public DocumentQueue setShowSystemFiles(TrimProperty<Boolean> value) { this.ShowSystemFiles = value; return this; }
        private static Object responseType = DocumentQueuesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single DocumentQueue by Uri or Name.
    */
    @Route(Path="/DocumentQueue/{Id*}", Verbs="GET")
    @Api("Fetch a single DocumentQueue by Uri or Name.")
    public static class DocumentQueueFind extends TrimMainObjectByUri implements IReturn<DocumentQueuesResponse>
    {
        
        private static Object responseType = DocumentQueuesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of ElectronicStores filtered using a search string.
    */
    @Route(Path="/ElectronicStore", Verbs="GET")
    @Api("Fetch a collection of ElectronicStores filtered using a search string.")
    public static class ElectronicStores extends TrimMainObjectSearch implements IReturn<ElectronicStoresResponse>
    {
        
        private static Object responseType = ElectronicStoresResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a ElectronicStore object.
    */
    @Route(Path="/ElectronicStore", Verbs="POST")
    @Api("Update a ElectronicStore object.")
    @DataContract
    public static class ElectronicStore extends TrimMainObject implements IReturn<ElectronicStoresResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ElectronicStoreAlertLevel")
        @SerializedName("ElectronicStoreAlertLevel")
        @ApiMember(Name="ElectronicStoreAlertLevel", ParameterType="form", DataType="int")
        public TrimProperty<Integer> AlertLevel = null;

        @DataMember(Name="ElectronicStoreAutnGroup")
        @SerializedName("ElectronicStoreAutnGroup")
        @ApiMember(Name="ElectronicStoreAutnGroup", ParameterType="form", DataType="string")
        public TrimStringProperty AutnGroup = null;

        @DataMember(Name="ElectronicStoreBytesRemaining")
        @SerializedName("ElectronicStoreBytesRemaining")
        @ApiMember(Name="ElectronicStoreBytesRemaining", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> BytesRemaining = null;

        @DataMember(Name="ElectronicStoreBytesUsed")
        @SerializedName("ElectronicStoreBytesUsed")
        @ApiMember(Name="ElectronicStoreBytesUsed", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> BytesUsed = null;

        @DataMember(Name="ElectronicStoreCapacity")
        @SerializedName("ElectronicStoreCapacity")
        @ApiMember(Name="ElectronicStoreCapacity", ParameterType="form", DataType="long")
        public TrimProperty<Long> Capacity = null;

        @DataMember(Name="ElectronicStoreCompress")
        @SerializedName("ElectronicStoreCompress")
        @ApiMember(Name="ElectronicStoreCompress", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> Compress = null;

        @DataMember(Name="ElectronicStoreDefaultAccessDate")
        @SerializedName("ElectronicStoreDefaultAccessDate")
        @ApiMember(Name="ElectronicStoreDefaultAccessDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DefaultAccessDate = null;

        @DataMember(Name="ElectronicStoreDeleteRetriesQueued")
        @SerializedName("ElectronicStoreDeleteRetriesQueued")
        @ApiMember(Name="ElectronicStoreDeleteRetriesQueued", ParameterType="form", DataType="long", Verb="GET")
        public TrimProperty<Long> DeleteRetriesQueued = null;

        @DataMember(Name="ElectronicStoreDeploymentStatus")
        @SerializedName("ElectronicStoreDeploymentStatus")
        @ApiMember(Name="ElectronicStoreDeploymentStatus", ParameterType="form", DataType="string")
        public TrimProperty<StoreStatus> DeploymentStatus = null;

        @DataMember(Name="ElectronicStoreEncrypt")
        @SerializedName("ElectronicStoreEncrypt")
        @ApiMember(Name="ElectronicStoreEncrypt", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> Encrypt = null;

        @DataMember(Name="ElectronicStoreExternalConfig")
        @SerializedName("ElectronicStoreExternalConfig")
        @ApiMember(Name="ElectronicStoreExternalConfig", ParameterType="form", DataType="string")
        public TrimStringProperty ExternalConfig = null;

        @DataMember(Name="ElectronicStoreExternalProgId")
        @SerializedName("ElectronicStoreExternalProgId")
        @ApiMember(Name="ElectronicStoreExternalProgId", ParameterType="form", DataType="string")
        public TrimStringProperty ExternalProgId = null;

        @DataMember(Name="ElectronicStoreFilesPerFolder")
        @SerializedName("ElectronicStoreFilesPerFolder")
        @ApiMember(Name="ElectronicStoreFilesPerFolder", ParameterType="form", DataType="int")
        public TrimProperty<Integer> FilesPerFolder = null;

        @DataMember(Name="ElectronicStoreInPool")
        @SerializedName("ElectronicStoreInPool")
        @ApiMember(Name="ElectronicStoreInPool", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> InPool = null;

        @DataMember(Name="ElectronicStoreKeepAccessDates")
        @SerializedName("ElectronicStoreKeepAccessDates")
        @ApiMember(Name="ElectronicStoreKeepAccessDates", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> KeepAccessDates = null;

        @DataMember(Name="ElectronicStoreLoginName")
        @SerializedName("ElectronicStoreLoginName")
        @ApiMember(Name="ElectronicStoreLoginName", ParameterType="form", DataType="string")
        public TrimStringProperty LoginName = null;

        @DataMember(Name="ElectronicStoreLoginPassword")
        @SerializedName("ElectronicStoreLoginPassword")
        @ApiMember(Name="ElectronicStoreLoginPassword", ParameterType="form", DataType="string")
        public TrimStringProperty LoginPassword = null;

        @DataMember(Name="ElectronicStoreMaxFolderSize")
        @SerializedName("ElectronicStoreMaxFolderSize")
        @ApiMember(Name="ElectronicStoreMaxFolderSize", ParameterType="form", DataType="long")
        public TrimProperty<Long> MaxFolderSize = null;

        @DataMember(Name="ElectronicStoreName")
        @SerializedName("ElectronicStoreName")
        @ApiMember(Name="ElectronicStoreName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="ElectronicStorePath")
        @SerializedName("ElectronicStorePath")
        @ApiMember(Name="ElectronicStorePath", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Path = null;

        @DataMember(Name="ElectronicStoreStorageTier")
        @SerializedName("ElectronicStoreStorageTier")
        @ApiMember(Name="ElectronicStoreStorageTier", ParameterType="form", DataType="string")
        public TrimProperty<TieredStorageType> StorageTier = null;

        @DataMember(Name="ElectronicStoreStoreLocation")
        @SerializedName("ElectronicStoreStoreLocation")
        @ApiMember(Name="ElectronicStoreStoreLocation", ParameterType="form", DataType="string")
        public TrimStringProperty StoreLocation = null;

        @DataMember(Name="ElectronicStoreStoreType")
        @SerializedName("ElectronicStoreStoreType")
        @ApiMember(Name="ElectronicStoreStoreType", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<EstoreTypes> StoreType = null;

        @DataMember(Name="ElectronicStoreUpdateAccessDateOnAdd")
        @SerializedName("ElectronicStoreUpdateAccessDateOnAdd")
        @ApiMember(Name="ElectronicStoreUpdateAccessDateOnAdd", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UpdateAccessDateOnAdd = null;

        @DataMember(Name="ElectronicStoreWriteProtected")
        @SerializedName("ElectronicStoreWriteProtected")
        @ApiMember(Name="ElectronicStoreWriteProtected", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> WriteProtected = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ElectronicStore setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Integer> getAlertLevel() { return AlertLevel; }
        public ElectronicStore setAlertLevel(TrimProperty<Integer> value) { this.AlertLevel = value; return this; }
        public TrimStringProperty getAutnGroup() { return AutnGroup; }
        public ElectronicStore setAutnGroup(TrimStringProperty value) { this.AutnGroup = value; return this; }
        public TrimProperty<Long> getBytesRemaining() { return BytesRemaining; }
        public ElectronicStore setBytesRemaining(TrimProperty<Long> value) { this.BytesRemaining = value; return this; }
        public TrimProperty<Long> getBytesUsed() { return BytesUsed; }
        public ElectronicStore setBytesUsed(TrimProperty<Long> value) { this.BytesUsed = value; return this; }
        public TrimProperty<Long> getCapacity() { return Capacity; }
        public ElectronicStore setCapacity(TrimProperty<Long> value) { this.Capacity = value; return this; }
        public TrimProperty<Boolean> getCompress() { return Compress; }
        public ElectronicStore setCompress(TrimProperty<Boolean> value) { this.Compress = value; return this; }
        public TrimDateTime getDefaultAccessDate() { return DefaultAccessDate; }
        public ElectronicStore setDefaultAccessDate(TrimDateTime value) { this.DefaultAccessDate = value; return this; }
        public TrimProperty<Long> getDeleteRetriesQueued() { return DeleteRetriesQueued; }
        public ElectronicStore setDeleteRetriesQueued(TrimProperty<Long> value) { this.DeleteRetriesQueued = value; return this; }
        public TrimProperty<StoreStatus> getDeploymentStatus() { return DeploymentStatus; }
        public ElectronicStore setDeploymentStatus(TrimProperty<StoreStatus> value) { this.DeploymentStatus = value; return this; }
        public TrimProperty<Boolean> getEncrypt() { return Encrypt; }
        public ElectronicStore setEncrypt(TrimProperty<Boolean> value) { this.Encrypt = value; return this; }
        public TrimStringProperty getExternalConfig() { return ExternalConfig; }
        public ElectronicStore setExternalConfig(TrimStringProperty value) { this.ExternalConfig = value; return this; }
        public TrimStringProperty getExternalProgId() { return ExternalProgId; }
        public ElectronicStore setExternalProgId(TrimStringProperty value) { this.ExternalProgId = value; return this; }
        public TrimProperty<Integer> getFilesPerFolder() { return FilesPerFolder; }
        public ElectronicStore setFilesPerFolder(TrimProperty<Integer> value) { this.FilesPerFolder = value; return this; }
        public TrimProperty<Boolean> getInPool() { return InPool; }
        public ElectronicStore setInPool(TrimProperty<Boolean> value) { this.InPool = value; return this; }
        public TrimProperty<Boolean> getKeepAccessDates() { return KeepAccessDates; }
        public ElectronicStore setKeepAccessDates(TrimProperty<Boolean> value) { this.KeepAccessDates = value; return this; }
        public TrimStringProperty getLoginName() { return LoginName; }
        public ElectronicStore setLoginName(TrimStringProperty value) { this.LoginName = value; return this; }
        public TrimStringProperty getLoginPassword() { return LoginPassword; }
        public ElectronicStore setLoginPassword(TrimStringProperty value) { this.LoginPassword = value; return this; }
        public TrimProperty<Long> getMaxFolderSize() { return MaxFolderSize; }
        public ElectronicStore setMaxFolderSize(TrimProperty<Long> value) { this.MaxFolderSize = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public ElectronicStore setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getPath() { return Path; }
        public ElectronicStore setPath(TrimStringProperty value) { this.Path = value; return this; }
        public TrimProperty<TieredStorageType> getStorageTier() { return StorageTier; }
        public ElectronicStore setStorageTier(TrimProperty<TieredStorageType> value) { this.StorageTier = value; return this; }
        public TrimStringProperty getStoreLocation() { return StoreLocation; }
        public ElectronicStore setStoreLocation(TrimStringProperty value) { this.StoreLocation = value; return this; }
        public TrimProperty<EstoreTypes> getStoreType() { return StoreType; }
        public ElectronicStore setStoreType(TrimProperty<EstoreTypes> value) { this.StoreType = value; return this; }
        public TrimProperty<Boolean> getUpdateAccessDateOnAdd() { return UpdateAccessDateOnAdd; }
        public ElectronicStore setUpdateAccessDateOnAdd(TrimProperty<Boolean> value) { this.UpdateAccessDateOnAdd = value; return this; }
        public TrimProperty<Boolean> getWriteProtected() { return WriteProtected; }
        public ElectronicStore setWriteProtected(TrimProperty<Boolean> value) { this.WriteProtected = value; return this; }
        private static Object responseType = ElectronicStoresResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single ElectronicStore by Uri or Name.
    */
    @Route(Path="/ElectronicStore/{Id*}", Verbs="GET")
    @Api("Fetch a single ElectronicStore by Uri or Name.")
    public static class ElectronicStoreFind extends TrimMainObjectByUri implements IReturn<ElectronicStoresResponse>
    {
        
        private static Object responseType = ElectronicStoresResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of FieldDefinitions filtered using a search string.
    */
    @Route(Path="/FieldDefinition", Verbs="GET")
    @Api("Fetch a collection of FieldDefinitions filtered using a search string.")
    public static class FieldDefinitions extends TrimMainObjectSearch implements IReturn<FieldDefinitionsResponse>
    {
        
        private static Object responseType = FieldDefinitionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a FieldDefinition object.
    */
    @Route(Path="/FieldDefinition", Verbs="POST")
    @Api("Update a FieldDefinition object.")
    @DataContract
    public static class FieldDefinition extends TrimMainObject implements IReturn<FieldDefinitionsResponse>
    {
        @DataMember(Name="ValidLocationTypes")
        @SerializedName("ValidLocationTypes")
        public ArrayList<LocationType> ValidLocationTypes = null;

        /**
        * Set the object that a Field Definition is used for.
        */
        @DataMember
        @ApiMember(Name="SetIsUsedFor", ParameterType="form", Verb="POST", Description="Set the object that a Field Definition is used for.")
        public SetIsUsedFor SetIsUsedFor = null;

        /**
        * Remove the object that a Field Definition is used for.
        */
        @DataMember
        @ApiMember(Name="RemoveIsUsedFor", ParameterType="form", Verb="POST", Description="Remove the object that a Field Definition is used for.")
        public RemoveIsUsedFor RemoveIsUsedFor = null;

        /**
        * Sets which type of location is valid for this user field (if it is a field of type 'Object (Location)'
        */
        @DataMember
        @ApiMember(Name="SetValidLocationType", ParameterType="form", Verb="POST", Description="Sets which type of location is valid for this user field (if it is a field of type 'Object (Location)'")
        public SetValidLocationType SetValidLocationType = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="FieldDefinitionNewType")
        @SerializedName("FieldDefinitionNewType")
        @ApiMember(Name="FieldDefinitionNewType", ParameterType="form", DataType="string", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="FieldDefinitionAccessControl")
        @SerializedName("FieldDefinitionAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="FieldDefinitionAbbreviation")
        @SerializedName("FieldDefinitionAbbreviation")
        @ApiMember(Name="FieldDefinitionAbbreviation", ParameterType="form", DataType="string")
        public TrimStringProperty Abbreviation = null;

        @DataMember(Name="FieldDefinitionCurrencySymbol")
        @SerializedName("FieldDefinitionCurrencySymbol")
        @ApiMember(Name="FieldDefinitionCurrencySymbol", ParameterType="form", DataType="string")
        public TrimStringProperty CurrencySymbol = null;

        @DataMember(Name="FieldDefinitionDateTimeIsUTC")
        @SerializedName("FieldDefinitionDateTimeIsUTC")
        @ApiMember(Name="FieldDefinitionDateTimeIsUTC", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DateTimeIsUTC = null;

        @DataMember(Name="FieldDefinitionDefaultBoolean")
        @SerializedName("FieldDefinitionDefaultBoolean")
        @ApiMember(Name="FieldDefinitionDefaultBoolean", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> DefaultBoolean = null;

        @DataMember(Name="FieldDefinitionDefaultCurrency")
        @SerializedName("FieldDefinitionDefaultCurrency")
        @ApiMember(Name="FieldDefinitionDefaultCurrency", ParameterType="form", DataType="double", Verb="GET")
        public TrimProperty<BigDecimal> DefaultCurrency = null;

        @DataMember(Name="FieldDefinitionDefaultDate")
        @SerializedName("FieldDefinitionDefaultDate")
        @ApiMember(Name="FieldDefinitionDefaultDate", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DefaultDate = null;

        @DataMember(Name="FieldDefinitionDefaultDecimal")
        @SerializedName("FieldDefinitionDefaultDecimal")
        @ApiMember(Name="FieldDefinitionDefaultDecimal", ParameterType="form", DataType="double", Verb="GET")
        public TrimProperty<BigDecimal> DefaultDecimal = null;

        @DataMember(Name="FieldDefinitionDefaultDisplay")
        @SerializedName("FieldDefinitionDefaultDisplay")
        @ApiMember(Name="FieldDefinitionDefaultDisplay", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DefaultDisplay = null;

        @DataMember(Name="FieldDefinitionDefaultInternal")
        @SerializedName("FieldDefinitionDefaultInternal")
        @ApiMember(Name="FieldDefinitionDefaultInternal", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DefaultInternal = null;

        @DataMember(Name="FieldDefinitionDefaultNumber")
        @SerializedName("FieldDefinitionDefaultNumber")
        @ApiMember(Name="FieldDefinitionDefaultNumber", ParameterType="form", DataType="int", Verb="GET")
        public TrimProperty<Integer> DefaultNumber = null;

        @DataMember(Name="FieldDefinitionDefaultString")
        @SerializedName("FieldDefinitionDefaultString")
        @ApiMember(Name="FieldDefinitionDefaultString", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DefaultString = null;

        @DataMember(Name="FieldDefinitionExternalId")
        @SerializedName("FieldDefinitionExternalId")
        @ApiMember(Name="FieldDefinitionExternalId", ParameterType="form", DataType="string")
        public TrimStringProperty ExternalId = null;

        @DataMember(Name="FieldDefinitionFormat")
        @SerializedName("FieldDefinitionFormat")
        @ApiMember(Name="FieldDefinitionFormat", ParameterType="form", DataType="string")
        public TrimProperty<UserFieldFormats> Format = null;

        @DataMember(Name="FieldDefinitionIconId")
        @SerializedName("FieldDefinitionIconId")
        @ApiMember(Name="FieldDefinitionIconId", ParameterType="form", DataType="string")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="FieldDefinitionInIDOLtext")
        @SerializedName("FieldDefinitionInIDOLtext")
        @ApiMember(Name="FieldDefinitionInIDOLtext", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> InIDOLtext = null;

        @DataMember(Name="FieldDefinitionIsSearchable")
        @SerializedName("FieldDefinitionIsSearchable")
        @ApiMember(Name="FieldDefinitionIsSearchable", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsSearchable = null;

        @DataMember(Name="FieldDefinitionIsUsedBy")
        @SerializedName("FieldDefinitionIsUsedBy")
        @ApiMember(Name="FieldDefinitionIsUsedBy", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty IsUsedBy = null;

        @DataMember(Name="FieldDefinitionIsUsedByRecordTypes")
        @SerializedName("FieldDefinitionIsUsedByRecordTypes")
        @ApiMember(Name="FieldDefinitionIsUsedByRecordTypes", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty IsUsedByRecordTypes = null;

        @DataMember(Name="FieldDefinitionIsVisible")
        @SerializedName("FieldDefinitionIsVisible")
        @ApiMember(Name="FieldDefinitionIsVisible", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsVisible = null;

        @DataMember(Name="FieldDefinitionLength")
        @SerializedName("FieldDefinitionLength")
        @ApiMember(Name="FieldDefinitionLength", ParameterType="form", DataType="int")
        public TrimProperty<Integer> Length = null;

        @DataMember(Name="FieldDefinitionLocationRestriction")
        @SerializedName("FieldDefinitionLocationRestriction")
        @ApiMember(Name="FieldDefinitionLocationRestriction", ParameterType="form", DataType="string")
        public TrimProperty<LocationFieldType> LocationRestriction = null;

        @DataMember(Name="FieldDefinitionLookupSet")
        @SerializedName("FieldDefinitionLookupSet")
        @ApiMember(Name="FieldDefinitionLookupSet", ParameterType="form", DataType="long", Verb="POST")
        public LookupSetRef LookupSet = null;

        @DataMember(Name="FieldDefinitionLowerLimit")
        @SerializedName("FieldDefinitionLowerLimit")
        @ApiMember(Name="FieldDefinitionLowerLimit", ParameterType="form", DataType="string")
        public TrimStringProperty LowerLimit = null;

        @DataMember(Name="FieldDefinitionMask")
        @SerializedName("FieldDefinitionMask")
        @ApiMember(Name="FieldDefinitionMask", ParameterType="form", DataType="string")
        public TrimStringProperty Mask = null;

        @DataMember(Name="FieldDefinitionName")
        @SerializedName("FieldDefinitionName")
        @ApiMember(Name="FieldDefinitionName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="FieldDefinitionNotes")
        @SerializedName("FieldDefinitionNotes")
        @ApiMember(Name="FieldDefinitionNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="FieldDefinitionObjectType")
        @SerializedName("FieldDefinitionObjectType")
        @ApiMember(Name="FieldDefinitionObjectType", ParameterType="form", DataType="string")
        public TrimProperty<BaseObjectTypes> ObjectType = null;

        @DataMember(Name="FieldDefinitionPluginId")
        @SerializedName("FieldDefinitionPluginId")
        @ApiMember(Name="FieldDefinitionPluginId", ParameterType="form", DataType="string")
        public TrimStringProperty PluginId = null;

        @DataMember(Name="FieldDefinitionSapKeySetField")
        @SerializedName("FieldDefinitionSapKeySetField")
        @ApiMember(Name="FieldDefinitionSapKeySetField", ParameterType="form", DataType="string")
        public TrimStringProperty SapKeySetField = null;

        @DataMember(Name="FieldDefinitionSearchClause")
        @SerializedName("FieldDefinitionSearchClause")
        @ApiMember(Name="FieldDefinitionSearchClause", ParameterType="form", DataType="string")
        public TrimStringProperty SearchClause = null;

        @DataMember(Name="FieldDefinitionSearchClauseName")
        @SerializedName("FieldDefinitionSearchClauseName")
        @ApiMember(Name="FieldDefinitionSearchClauseName", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty SearchClauseName = null;

        @DataMember(Name="FieldDefinitionUpperLimit")
        @SerializedName("FieldDefinitionUpperLimit")
        @ApiMember(Name="FieldDefinitionUpperLimit", ParameterType="form", DataType="string")
        public TrimStringProperty UpperLimit = null;
        
        public ArrayList<LocationType> getValidLocationTypes() { return ValidLocationTypes; }
        public FieldDefinition setValidLocationTypes(ArrayList<LocationType> value) { this.ValidLocationTypes = value; return this; }
        public SetIsUsedFor getSetIsUsedFor() { return SetIsUsedFor; }
        public FieldDefinition setSetIsUsedFor(SetIsUsedFor value) { this.SetIsUsedFor = value; return this; }
        public RemoveIsUsedFor getRemoveIsUsedFor() { return RemoveIsUsedFor; }
        public FieldDefinition setRemoveIsUsedFor(RemoveIsUsedFor value) { this.RemoveIsUsedFor = value; return this; }
        public SetValidLocationType getSetValidLocationType() { return SetValidLocationType; }
        public FieldDefinition setSetValidLocationType(SetValidLocationType value) { this.SetValidLocationType = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public FieldDefinition setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public FieldDefinition setNewType(NewType value) { this.NewType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public FieldDefinition setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public FieldDefinition setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimStringProperty getAbbreviation() { return Abbreviation; }
        public FieldDefinition setAbbreviation(TrimStringProperty value) { this.Abbreviation = value; return this; }
        public TrimStringProperty getCurrencySymbol() { return CurrencySymbol; }
        public FieldDefinition setCurrencySymbol(TrimStringProperty value) { this.CurrencySymbol = value; return this; }
        public TrimProperty<Boolean> getDateTimeIsUTC() { return DateTimeIsUTC; }
        public FieldDefinition setDateTimeIsUTC(TrimProperty<Boolean> value) { this.DateTimeIsUTC = value; return this; }
        public TrimProperty<Boolean> getDefaultBoolean() { return DefaultBoolean; }
        public FieldDefinition setDefaultBoolean(TrimProperty<Boolean> value) { this.DefaultBoolean = value; return this; }
        public TrimProperty<BigDecimal> getDefaultCurrency() { return DefaultCurrency; }
        public FieldDefinition setDefaultCurrency(TrimProperty<BigDecimal> value) { this.DefaultCurrency = value; return this; }
        public TrimDateTime getDefaultDate() { return DefaultDate; }
        public FieldDefinition setDefaultDate(TrimDateTime value) { this.DefaultDate = value; return this; }
        public TrimProperty<BigDecimal> getDefaultDecimal() { return DefaultDecimal; }
        public FieldDefinition setDefaultDecimal(TrimProperty<BigDecimal> value) { this.DefaultDecimal = value; return this; }
        public TrimStringProperty getDefaultDisplay() { return DefaultDisplay; }
        public FieldDefinition setDefaultDisplay(TrimStringProperty value) { this.DefaultDisplay = value; return this; }
        public TrimStringProperty getDefaultInternal() { return DefaultInternal; }
        public FieldDefinition setDefaultInternal(TrimStringProperty value) { this.DefaultInternal = value; return this; }
        public TrimProperty<Integer> getDefaultNumber() { return DefaultNumber; }
        public FieldDefinition setDefaultNumber(TrimProperty<Integer> value) { this.DefaultNumber = value; return this; }
        public TrimStringProperty getDefaultString() { return DefaultString; }
        public FieldDefinition setDefaultString(TrimStringProperty value) { this.DefaultString = value; return this; }
        public TrimStringProperty getExternalId() { return ExternalId; }
        public FieldDefinition setExternalId(TrimStringProperty value) { this.ExternalId = value; return this; }
        public TrimProperty<UserFieldFormats> getFormat() { return Format; }
        public FieldDefinition setFormat(TrimProperty<UserFieldFormats> value) { this.Format = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public FieldDefinition setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimProperty<Boolean> getInIDOLtext() { return InIDOLtext; }
        public FieldDefinition setInIDOLtext(TrimProperty<Boolean> value) { this.InIDOLtext = value; return this; }
        public TrimProperty<Boolean> getIsSearchable() { return IsSearchable; }
        public FieldDefinition setIsSearchable(TrimProperty<Boolean> value) { this.IsSearchable = value; return this; }
        public TrimStringProperty getIsUsedBy() { return IsUsedBy; }
        public FieldDefinition setIsUsedBy(TrimStringProperty value) { this.IsUsedBy = value; return this; }
        public TrimStringProperty getIsUsedByRecordTypes() { return IsUsedByRecordTypes; }
        public FieldDefinition setIsUsedByRecordTypes(TrimStringProperty value) { this.IsUsedByRecordTypes = value; return this; }
        public TrimProperty<Boolean> getIsVisible() { return IsVisible; }
        public FieldDefinition setIsVisible(TrimProperty<Boolean> value) { this.IsVisible = value; return this; }
        public TrimProperty<Integer> getLength() { return Length; }
        public FieldDefinition setLength(TrimProperty<Integer> value) { this.Length = value; return this; }
        public TrimProperty<LocationFieldType> getLocationRestriction() { return LocationRestriction; }
        public FieldDefinition setLocationRestriction(TrimProperty<LocationFieldType> value) { this.LocationRestriction = value; return this; }
        public LookupSetRef getLookupSet() { return LookupSet; }
        public FieldDefinition setLookupSet(LookupSetRef value) { this.LookupSet = value; return this; }
        public TrimStringProperty getLowerLimit() { return LowerLimit; }
        public FieldDefinition setLowerLimit(TrimStringProperty value) { this.LowerLimit = value; return this; }
        public TrimStringProperty getMask() { return Mask; }
        public FieldDefinition setMask(TrimStringProperty value) { this.Mask = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public FieldDefinition setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public FieldDefinition setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public FieldDefinition setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<BaseObjectTypes> getObjectType() { return ObjectType; }
        public FieldDefinition setObjectType(TrimProperty<BaseObjectTypes> value) { this.ObjectType = value; return this; }
        public TrimStringProperty getPluginId() { return PluginId; }
        public FieldDefinition setPluginId(TrimStringProperty value) { this.PluginId = value; return this; }
        public TrimStringProperty getSapKeySetField() { return SapKeySetField; }
        public FieldDefinition setSapKeySetField(TrimStringProperty value) { this.SapKeySetField = value; return this; }
        public TrimStringProperty getSearchClause() { return SearchClause; }
        public FieldDefinition setSearchClause(TrimStringProperty value) { this.SearchClause = value; return this; }
        public TrimStringProperty getSearchClauseName() { return SearchClauseName; }
        public FieldDefinition setSearchClauseName(TrimStringProperty value) { this.SearchClauseName = value; return this; }
        public TrimStringProperty getUpperLimit() { return UpperLimit; }
        public FieldDefinition setUpperLimit(TrimStringProperty value) { this.UpperLimit = value; return this; }
        private static Object responseType = FieldDefinitionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single FieldDefinition by Uri or Name.
    */
    @Route(Path="/FieldDefinition/{Id*}", Verbs="GET")
    @Api("Fetch a single FieldDefinition by Uri or Name.")
    public static class FieldDefinitionFind extends TrimMainObjectByUri implements IReturn<FieldDefinitionsResponse>
    {
        
        private static Object responseType = FieldDefinitionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of HistoryCollection filtered using a search string.
    */
    @Route(Path="/History", Verbs="GET")
    @Api("Fetch a collection of HistoryCollection filtered using a search string.")
    public static class HistoryCollection extends TrimMainObjectSearch implements IReturn<HistoryCollectionResponse>
    {
        
        private static Object responseType = HistoryCollectionResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a History object.
    */
    @Route(Path="/History", Verbs="POST")
    @Api("Update a History object.")
    @DataContract
    public static class History extends TrimMainObject implements IReturn<HistoryCollectionResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="HistoryActivity")
        @SerializedName("HistoryActivity")
        @ApiMember(Name="HistoryActivity", ParameterType="form", DataType="long", Verb="POST")
        public ActivityRef Activity = null;

        @DataMember(Name="HistoryClientIPAddress")
        @SerializedName("HistoryClientIPAddress")
        @ApiMember(Name="HistoryClientIPAddress", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ClientIPAddress = null;

        @DataMember(Name="HistoryConnectionIPAddress")
        @SerializedName("HistoryConnectionIPAddress")
        @ApiMember(Name="HistoryConnectionIPAddress", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ConnectionIPAddress = null;

        @DataMember(Name="HistoryDoneOn")
        @SerializedName("HistoryDoneOn")
        @ApiMember(Name="HistoryDoneOn", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DoneOn = null;

        @DataMember(Name="HistoryDoneOnGMT")
        @SerializedName("HistoryDoneOnGMT")
        @ApiMember(Name="HistoryDoneOnGMT", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DoneOnGMT = null;

        @DataMember(Name="HistoryDoneOnLocal")
        @SerializedName("HistoryDoneOnLocal")
        @ApiMember(Name="HistoryDoneOnLocal", ParameterType="form", DataType="TrimDateTime", Verb="GET")
        public TrimDateTime DoneOnLocal = null;

        @DataMember(Name="HistoryDoneOnMachine")
        @SerializedName("HistoryDoneOnMachine")
        @ApiMember(Name="HistoryDoneOnMachine", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty DoneOnMachine = null;

        @DataMember(Name="HistoryEventDescription")
        @SerializedName("HistoryEventDescription")
        @ApiMember(Name="HistoryEventDescription", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty EventDescription = null;

        @DataMember(Name="HistoryEventObject")
        @SerializedName("HistoryEventObject")
        @ApiMember(Name="HistoryEventObject", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty EventObject = null;

        @DataMember(Name="HistoryEventType")
        @SerializedName("HistoryEventType")
        @ApiMember(Name="HistoryEventType", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<HistoryTypes> EventType = null;

        @DataMember(Name="HistoryForObjectType")
        @SerializedName("HistoryForObjectType")
        @ApiMember(Name="HistoryForObjectType", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<BaseObjectTypes> ForObjectType = null;

        @DataMember(Name="HistoryForObjectUri")
        @SerializedName("HistoryForObjectUri")
        @ApiMember(Name="HistoryForObjectUri", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ForObjectUri = null;

        @DataMember(Name="HistoryIsSecurityViolation")
        @SerializedName("HistoryIsSecurityViolation")
        @ApiMember(Name="HistoryIsSecurityViolation", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsSecurityViolation = null;

        @DataMember(Name="HistoryLocation")
        @SerializedName("HistoryLocation")
        @ApiMember(Name="HistoryLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Location = null;

        @DataMember(Name="HistoryLogin")
        @SerializedName("HistoryLogin")
        @ApiMember(Name="HistoryLogin", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty Login = null;

        @DataMember(Name="HistoryLoginLocation")
        @SerializedName("HistoryLoginLocation")
        @ApiMember(Name="HistoryLoginLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef LoginLocation = null;

        @DataMember(Name="HistoryMovementLocation")
        @SerializedName("HistoryMovementLocation")
        @ApiMember(Name="HistoryMovementLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef MovementLocation = null;

        @DataMember(Name="HistoryOtherEventType")
        @SerializedName("HistoryOtherEventType")
        @ApiMember(Name="HistoryOtherEventType", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<Events> OtherEventType = null;

        @DataMember(Name="HistoryRawEventDescription")
        @SerializedName("HistoryRawEventDescription")
        @ApiMember(Name="HistoryRawEventDescription", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty RawEventDescription = null;

        @DataMember(Name="HistoryRecord")
        @SerializedName("HistoryRecord")
        @ApiMember(Name="HistoryRecord", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="HistoryTextSummary")
        @SerializedName("HistoryTextSummary")
        @ApiMember(Name="HistoryTextSummary", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty TextSummary = null;

        @DataMember(Name="HistoryUpdateComments")
        @SerializedName("HistoryUpdateComments")
        @ApiMember(Name="HistoryUpdateComments", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty UpdateComments = null;

        @DataMember(Name="HistoryWorkflow")
        @SerializedName("HistoryWorkflow")
        @ApiMember(Name="HistoryWorkflow", ParameterType="form", DataType="long", Verb="POST")
        public WorkflowRef Workflow = null;

        @DataMember(Name="HistoryXmlSummary")
        @SerializedName("HistoryXmlSummary")
        @ApiMember(Name="HistoryXmlSummary", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty XmlSummary = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public History setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ActivityRef getActivity() { return Activity; }
        public History setActivity(ActivityRef value) { this.Activity = value; return this; }
        public TrimStringProperty getClientIPAddress() { return ClientIPAddress; }
        public History setClientIPAddress(TrimStringProperty value) { this.ClientIPAddress = value; return this; }
        public TrimStringProperty getConnectionIPAddress() { return ConnectionIPAddress; }
        public History setConnectionIPAddress(TrimStringProperty value) { this.ConnectionIPAddress = value; return this; }
        public TrimDateTime getDoneOn() { return DoneOn; }
        public History setDoneOn(TrimDateTime value) { this.DoneOn = value; return this; }
        public TrimDateTime getDoneOnGMT() { return DoneOnGMT; }
        public History setDoneOnGMT(TrimDateTime value) { this.DoneOnGMT = value; return this; }
        public TrimDateTime getDoneOnLocal() { return DoneOnLocal; }
        public History setDoneOnLocal(TrimDateTime value) { this.DoneOnLocal = value; return this; }
        public TrimStringProperty getDoneOnMachine() { return DoneOnMachine; }
        public History setDoneOnMachine(TrimStringProperty value) { this.DoneOnMachine = value; return this; }
        public TrimStringProperty getEventDescription() { return EventDescription; }
        public History setEventDescription(TrimStringProperty value) { this.EventDescription = value; return this; }
        public TrimStringProperty getEventObject() { return EventObject; }
        public History setEventObject(TrimStringProperty value) { this.EventObject = value; return this; }
        public TrimProperty<HistoryTypes> getEventType() { return EventType; }
        public History setEventType(TrimProperty<HistoryTypes> value) { this.EventType = value; return this; }
        public TrimProperty<BaseObjectTypes> getForObjectType() { return ForObjectType; }
        public History setForObjectType(TrimProperty<BaseObjectTypes> value) { this.ForObjectType = value; return this; }
        public TrimStringProperty getForObjectUri() { return ForObjectUri; }
        public History setForObjectUri(TrimStringProperty value) { this.ForObjectUri = value; return this; }
        public TrimProperty<Boolean> getIsSecurityViolation() { return IsSecurityViolation; }
        public History setIsSecurityViolation(TrimProperty<Boolean> value) { this.IsSecurityViolation = value; return this; }
        public LocationRef getLocation() { return Location; }
        public History setLocation(LocationRef value) { this.Location = value; return this; }
        public TrimStringProperty getLogin() { return Login; }
        public History setLogin(TrimStringProperty value) { this.Login = value; return this; }
        public LocationRef getLoginLocation() { return LoginLocation; }
        public History setLoginLocation(LocationRef value) { this.LoginLocation = value; return this; }
        public LocationRef getMovementLocation() { return MovementLocation; }
        public History setMovementLocation(LocationRef value) { this.MovementLocation = value; return this; }
        public TrimProperty<Events> getOtherEventType() { return OtherEventType; }
        public History setOtherEventType(TrimProperty<Events> value) { this.OtherEventType = value; return this; }
        public TrimStringProperty getRawEventDescription() { return RawEventDescription; }
        public History setRawEventDescription(TrimStringProperty value) { this.RawEventDescription = value; return this; }
        public RecordRef getRecord() { return Record; }
        public History setRecord(RecordRef value) { this.Record = value; return this; }
        public TrimStringProperty getTextSummary() { return TextSummary; }
        public History setTextSummary(TrimStringProperty value) { this.TextSummary = value; return this; }
        public TrimStringProperty getUpdateComments() { return UpdateComments; }
        public History setUpdateComments(TrimStringProperty value) { this.UpdateComments = value; return this; }
        public WorkflowRef getWorkflow() { return Workflow; }
        public History setWorkflow(WorkflowRef value) { this.Workflow = value; return this; }
        public TrimStringProperty getXmlSummary() { return XmlSummary; }
        public History setXmlSummary(TrimStringProperty value) { this.XmlSummary = value; return this; }
        private static Object responseType = HistoryCollectionResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single History by Uri or Name.
    */
    @Route(Path="/History/{Id*}", Verbs="GET")
    @Api("Fetch a single History by Uri or Name.")
    public static class HistoryFind extends TrimMainObjectByUri implements IReturn<HistoryCollectionResponse>
    {
        
        private static Object responseType = HistoryCollectionResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Holds filtered using a search string.
    */
    @Route(Path="/Hold", Verbs="GET")
    @Api("Fetch a collection of Holds filtered using a search string.")
    public static class Holds extends TrimMainObjectSearch implements IReturn<HoldsResponse>
    {
        
        private static Object responseType = HoldsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Hold object.
    */
    @Route(Path="/Hold", Verbs="POST")
    @Api("Update a Hold object.")
    @DataContract
    public static class Hold extends TrimMainObject implements IReturn<HoldsResponse>
    {
        /**
        * Adds a set of records to this hold. Provides an efficient way for adding multiple records to a hold. Returns the number of records that were added in the AddedCount property.
        */
        @DataMember
        @ApiMember(Name="AddRecordsToHold", ParameterType="form", Verb="POST", Description="Adds a set of records to this hold. Provides an efficient way for adding multiple records to a hold. Returns the number of records that were added in the AddedCount property.")
        public AddRecordsToHold AddRecordsToHold = null;

        /**
        * Removes all records from this hold. Provides an efficient way for removing all records from a hold. Returns the number of records that were removed from the hold in the RemovedCount property.
        */
        @DataMember
        @ApiMember(Name="RemoveAllRecordsFromHold", ParameterType="form", Verb="POST", Description="Removes all records from this hold. Provides an efficient way for removing all records from a hold. Returns the number of records that were removed from the hold in the RemovedCount property.")
        public RemoveAllRecordsFromHold RemoveAllRecordsFromHold = null;

        /**
        * Removes a set of records from this hold. Provides an efficient way for removing multiple records from a hold. Returns the number of records that were removed from the hold in the RemovedCount property.
        */
        @DataMember
        @ApiMember(Name="RemoveRecordsFromHold", ParameterType="form", Verb="POST", Description="Removes a set of records from this hold. Provides an efficient way for removing multiple records from a hold. Returns the number of records that were removed from the hold in the RemovedCount property.")
        public RemoveRecordsFromHold RemoveRecordsFromHold = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        @DataMember(Name="AddedCount")
        @SerializedName("AddedCount")
        public Long AddedCount = null;

        @DataMember(Name="RemovedCount")
        @SerializedName("RemovedCount")
        public Long RemovedCount = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="HoldActiveFrom")
        @SerializedName("HoldActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="HoldActiveTo")
        @SerializedName("HoldActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="HoldActiveDescription")
        @SerializedName("HoldActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="HoldIsActive")
        @SerializedName("HoldIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="HoldAffectsDispositionOnly")
        @SerializedName("HoldAffectsDispositionOnly")
        @ApiMember(Name="HoldAffectsDispositionOnly", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> AffectsDispositionOnly = null;

        @DataMember(Name="HoldContact")
        @SerializedName("HoldContact")
        @ApiMember(Name="HoldContact", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Contact = null;

        @DataMember(Name="HoldExternalId")
        @SerializedName("HoldExternalId")
        @ApiMember(Name="HoldExternalId", ParameterType="form", DataType="string")
        public TrimStringProperty ExternalId = null;

        @DataMember(Name="HoldName")
        @SerializedName("HoldName")
        @ApiMember(Name="HoldName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="HoldNotes")
        @SerializedName("HoldNotes")
        @ApiMember(Name="HoldNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="HoldSearchCriteria")
        @SerializedName("HoldSearchCriteria")
        @ApiMember(Name="HoldSearchCriteria", ParameterType="form", DataType="string")
        public TrimStringProperty SearchCriteria = null;

        @DataMember(Name="HoldSearchLastRunOn")
        @SerializedName("HoldSearchLastRunOn")
        @ApiMember(Name="HoldSearchLastRunOn", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime SearchLastRunOn = null;
        
        public AddRecordsToHold getAddRecordsToHold() { return AddRecordsToHold; }
        public Hold setAddRecordsToHold(AddRecordsToHold value) { this.AddRecordsToHold = value; return this; }
        public RemoveAllRecordsFromHold getRemoveAllRecordsFromHold() { return RemoveAllRecordsFromHold; }
        public Hold setRemoveAllRecordsFromHold(RemoveAllRecordsFromHold value) { this.RemoveAllRecordsFromHold = value; return this; }
        public RemoveRecordsFromHold getRemoveRecordsFromHold() { return RemoveRecordsFromHold; }
        public Hold setRemoveRecordsFromHold(RemoveRecordsFromHold value) { this.RemoveRecordsFromHold = value; return this; }
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public Hold setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public Long getAddedCount() { return AddedCount; }
        public Hold setAddedCount(Long value) { this.AddedCount = value; return this; }
        public Long getRemovedCount() { return RemovedCount; }
        public Hold setRemovedCount(Long value) { this.RemovedCount = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Hold setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public Hold setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public Hold setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public Hold setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public Hold setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getAffectsDispositionOnly() { return AffectsDispositionOnly; }
        public Hold setAffectsDispositionOnly(TrimProperty<Boolean> value) { this.AffectsDispositionOnly = value; return this; }
        public LocationRef getContact() { return Contact; }
        public Hold setContact(LocationRef value) { this.Contact = value; return this; }
        public TrimStringProperty getExternalId() { return ExternalId; }
        public Hold setExternalId(TrimStringProperty value) { this.ExternalId = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Hold setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Hold setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Hold setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getSearchCriteria() { return SearchCriteria; }
        public Hold setSearchCriteria(TrimStringProperty value) { this.SearchCriteria = value; return this; }
        public TrimDateTime getSearchLastRunOn() { return SearchLastRunOn; }
        public Hold setSearchLastRunOn(TrimDateTime value) { this.SearchLastRunOn = value; return this; }
        private static Object responseType = HoldsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Hold by Uri or Name.
    */
    @Route(Path="/Hold/{Id*}", Verbs="GET")
    @Api("Fetch a single Hold by Uri or Name.")
    public static class HoldFind extends TrimMainObjectByUri implements IReturn<HoldsResponse>
    {
        
        private static Object responseType = HoldsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of HtmlLayouts filtered using a search string.
    */
    @Route(Path="/HtmlLayout", Verbs="GET")
    @Api("Fetch a collection of HtmlLayouts filtered using a search string.")
    public static class HtmlLayouts extends TrimMainObjectSearch implements IReturn<HtmlLayoutsResponse>
    {
        
        private static Object responseType = HtmlLayoutsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a HtmlLayout object.
    */
    @Route(Path="/HtmlLayout", Verbs="POST")
    @Api("Update a HtmlLayout object.")
    @DataContract
    public static class HtmlLayout extends TrimMainObject implements IReturn<HtmlLayoutsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="HtmlLayoutNewType")
        @SerializedName("HtmlLayoutNewType")
        @ApiMember(Name="HtmlLayoutNewType", ParameterType="form", DataType="string", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="HtmlLayoutExtension")
        @SerializedName("HtmlLayoutExtension")
        @ApiMember(Name="HtmlLayoutExtension", ParameterType="form", DataType="string")
        public TrimStringProperty Extension = null;

        @DataMember(Name="HtmlLayoutForType")
        @SerializedName("HtmlLayoutForType")
        @ApiMember(Name="HtmlLayoutForType", ParameterType="form", DataType="string", IsRequired=true)
        public TrimProperty<BaseObjectTypes> ForType = null;

        @DataMember(Name="HtmlLayoutName")
        @SerializedName("HtmlLayoutName")
        @ApiMember(Name="HtmlLayoutName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="HtmlLayoutTemplate")
        @SerializedName("HtmlLayoutTemplate")
        @ApiMember(Name="HtmlLayoutTemplate", ParameterType="form", DataType="string")
        public TrimStringProperty Template = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public HtmlLayout setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public HtmlLayout setNewType(NewType value) { this.NewType = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public HtmlLayout setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimProperty<BaseObjectTypes> getForType() { return ForType; }
        public HtmlLayout setForType(TrimProperty<BaseObjectTypes> value) { this.ForType = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public HtmlLayout setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getTemplate() { return Template; }
        public HtmlLayout setTemplate(TrimStringProperty value) { this.Template = value; return this; }
        private static Object responseType = HtmlLayoutsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single HtmlLayout by Uri or Name.
    */
    @Route(Path="/HtmlLayout/{Id*}", Verbs="GET")
    @Api("Fetch a single HtmlLayout by Uri or Name.")
    public static class HtmlLayoutFind extends TrimMainObjectByUri implements IReturn<HtmlLayoutsResponse>
    {
        
        private static Object responseType = HtmlLayoutsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Jurisdictions filtered using a search string.
    */
    @Route(Path="/Jurisdiction", Verbs="GET")
    @Api("Fetch a collection of Jurisdictions filtered using a search string.")
    public static class Jurisdictions extends TrimMainObjectSearch implements IReturn<JurisdictionsResponse>
    {
        
        private static Object responseType = JurisdictionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Jurisdiction object.
    */
    @Route(Path="/Jurisdiction", Verbs="POST")
    @Api("Update a Jurisdiction object.")
    @DataContract
    public static class Jurisdiction extends TrimMainObject implements IReturn<JurisdictionsResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildMembers")
        @SerializedName("ChildMembers")
        public ArrayList<JurisdictionMember> ChildMembers = null;

        @DataMember(Name="JurisdictionActiveFrom")
        @SerializedName("JurisdictionActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="JurisdictionActiveTo")
        @SerializedName("JurisdictionActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="JurisdictionActiveDescription")
        @SerializedName("JurisdictionActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="JurisdictionIsActive")
        @SerializedName("JurisdictionIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="JurisdictionComments")
        @SerializedName("JurisdictionComments")
        @ApiMember(Name="JurisdictionComments", ParameterType="form", DataType="string")
        public TrimStringProperty Comments = null;

        @DataMember(Name="JurisdictionDescription")
        @SerializedName("JurisdictionDescription")
        @ApiMember(Name="JurisdictionDescription", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Description = null;

        @DataMember(Name="JurisdictionJurisdictionType")
        @SerializedName("JurisdictionJurisdictionType")
        @ApiMember(Name="JurisdictionJurisdictionType", ParameterType="form", DataType="string")
        public TrimProperty<JurisdictionTypes> JurisdictionType = null;

        @DataMember(Name="JurisdictionMembers")
        @SerializedName("JurisdictionMembers")
        @ApiMember(Name="JurisdictionMembers", ParameterType="form", DataType="string")
        public TrimStringProperty Members = null;

        @DataMember(Name="JurisdictionName")
        @SerializedName("JurisdictionName")
        @ApiMember(Name="JurisdictionName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Jurisdiction setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Jurisdiction setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public Jurisdiction setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Jurisdiction setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Jurisdiction setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Jurisdiction setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<JurisdictionMember> getChildMembers() { return ChildMembers; }
        public Jurisdiction setChildMembers(ArrayList<JurisdictionMember> value) { this.ChildMembers = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public Jurisdiction setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public Jurisdiction setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public Jurisdiction setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public Jurisdiction setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Jurisdiction setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getComments() { return Comments; }
        public Jurisdiction setComments(TrimStringProperty value) { this.Comments = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public Jurisdiction setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<JurisdictionTypes> getJurisdictionType() { return JurisdictionType; }
        public Jurisdiction setJurisdictionType(TrimProperty<JurisdictionTypes> value) { this.JurisdictionType = value; return this; }
        public TrimStringProperty getMembers() { return Members; }
        public Jurisdiction setMembers(TrimStringProperty value) { this.Members = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Jurisdiction setName(TrimStringProperty value) { this.Name = value; return this; }
        private static Object responseType = JurisdictionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Jurisdiction by Uri or Name.
    */
    @Route(Path="/Jurisdiction/{Id*}", Verbs="GET")
    @Api("Fetch a single Jurisdiction by Uri or Name.")
    public static class JurisdictionFind extends TrimMainObjectByUri implements IReturn<JurisdictionsResponse>
    {
        
        private static Object responseType = JurisdictionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Keywords filtered using a search string.
    */
    @Route(Path="/Keyword", Verbs="GET")
    @Api("Fetch a collection of Keywords filtered using a search string.")
    public static class Keywords extends TrimMainObjectSearch implements IReturn<KeywordsResponse>
    {
        
        private static Object responseType = KeywordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Keyword object.
    */
    @Route(Path="/Keyword", Verbs="POST")
    @Api("Update a Keyword object.")
    @DataContract
    public static class Keyword extends TrimMainObject implements IReturn<KeywordsResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * Add a related Thesaurus term.
        */
        @DataMember
        @ApiMember(Name="AddKeywordRelationship", ParameterType="form", Verb="POST", Description="Add a related Thesaurus term.")
        public AddKeywordRelationship AddKeywordRelationship = null;

        /**
        * Remove a related Thesaurus term.
        */
        @DataMember
        @ApiMember(Name="RemoveKeywordRelationship", ParameterType="form", Verb="POST", Description="Remove a related Thesaurus term.")
        public RemoveKeywordRelationship RemoveKeywordRelationship = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="KeywordAccessControl")
        @SerializedName("KeywordAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="KeywordActiveFrom")
        @SerializedName("KeywordActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="KeywordActiveTo")
        @SerializedName("KeywordActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="KeywordActiveDescription")
        @SerializedName("KeywordActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="KeywordIsActive")
        @SerializedName("KeywordIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="KeywordHasRelatedKeywords")
        @SerializedName("KeywordHasRelatedKeywords")
        @ApiMember(Name="KeywordHasRelatedKeywords", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> HasRelatedKeywords = null;

        @DataMember(Name="KeywordIdentificationNumber")
        @SerializedName("KeywordIdentificationNumber")
        @ApiMember(Name="KeywordIdentificationNumber", ParameterType="form", DataType="string")
        public TrimStringProperty IdentificationNumber = null;

        @DataMember(Name="KeywordIsAPrimaryTerm")
        @SerializedName("KeywordIsAPrimaryTerm")
        @ApiMember(Name="KeywordIsAPrimaryTerm", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsAPrimaryTerm = null;

        @DataMember(Name="KeywordIsForbidden")
        @SerializedName("KeywordIsForbidden")
        @ApiMember(Name="KeywordIsForbidden", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> IsForbidden = null;

        @DataMember(Name="KeywordIsNodeLabel")
        @SerializedName("KeywordIsNodeLabel")
        @ApiMember(Name="KeywordIsNodeLabel", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsNodeLabel = null;

        @DataMember(Name="KeywordIsPrompt")
        @SerializedName("KeywordIsPrompt")
        @ApiMember(Name="KeywordIsPrompt", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsPrompt = null;

        @DataMember(Name="KeywordName")
        @SerializedName("KeywordName")
        @ApiMember(Name="KeywordName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="KeywordNotes")
        @SerializedName("KeywordNotes")
        @ApiMember(Name="KeywordNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="KeywordSource")
        @SerializedName("KeywordSource")
        @ApiMember(Name="KeywordSource", ParameterType="form", DataType="string")
        public TrimStringProperty Source = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Keyword setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Keyword setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public Keyword setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Keyword setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Keyword setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public AddKeywordRelationship getAddKeywordRelationship() { return AddKeywordRelationship; }
        public Keyword setAddKeywordRelationship(AddKeywordRelationship value) { this.AddKeywordRelationship = value; return this; }
        public RemoveKeywordRelationship getRemoveKeywordRelationship() { return RemoveKeywordRelationship; }
        public Keyword setRemoveKeywordRelationship(RemoveKeywordRelationship value) { this.RemoveKeywordRelationship = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Keyword setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Keyword setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Keyword setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public Keyword setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public Keyword setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public Keyword setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public Keyword setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getHasRelatedKeywords() { return HasRelatedKeywords; }
        public Keyword setHasRelatedKeywords(TrimProperty<Boolean> value) { this.HasRelatedKeywords = value; return this; }
        public TrimStringProperty getIdentificationNumber() { return IdentificationNumber; }
        public Keyword setIdentificationNumber(TrimStringProperty value) { this.IdentificationNumber = value; return this; }
        public TrimProperty<Boolean> getIsAPrimaryTerm() { return IsAPrimaryTerm; }
        public Keyword setIsAPrimaryTerm(TrimProperty<Boolean> value) { this.IsAPrimaryTerm = value; return this; }
        public TrimProperty<Boolean> getIsForbidden() { return IsForbidden; }
        public Keyword setIsForbidden(TrimProperty<Boolean> value) { this.IsForbidden = value; return this; }
        public TrimProperty<Boolean> getIsNodeLabel() { return IsNodeLabel; }
        public Keyword setIsNodeLabel(TrimProperty<Boolean> value) { this.IsNodeLabel = value; return this; }
        public TrimProperty<Boolean> getIsPrompt() { return IsPrompt; }
        public Keyword setIsPrompt(TrimProperty<Boolean> value) { this.IsPrompt = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Keyword setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Keyword setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Keyword setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getSource() { return Source; }
        public Keyword setSource(TrimStringProperty value) { this.Source = value; return this; }
        private static Object responseType = KeywordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Keyword by Uri or Name.
    */
    @Route(Path="/Keyword/{Id*}", Verbs="GET")
    @Api("Fetch a single Keyword by Uri or Name.")
    public static class KeywordFind extends TrimMainObjectByUri implements IReturn<KeywordsResponse>
    {
        
        private static Object responseType = KeywordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Locations filtered using a search string.
    */
    @Route(Path="/Location", Verbs="GET")
    @Api("Fetch a collection of Locations filtered using a search string.")
    public static class Locations extends TrimMainObjectSearch implements IReturn<LocationsResponse>
    {
        
        private static Object responseType = LocationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Location object.
    */
    @Route(Path="/Location", Verbs="POST")
    @Api("Update a Location object.")
    @DataContract
    public static class Location extends TrimMainObject implements IReturn<LocationsResponse>
    {
        @DataMember(Name="SearchDefaults")
        @SerializedName("SearchDefaults")
        public SearchDefaultsDictionary SearchDefaults = null;

        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * Delete a Location.
        */
        @DataMember
        @ApiMember(Name="DeleteLocation", ParameterType="form", Verb="POST", Description="Delete a Location.")
        public DeleteLocation DeleteLocation = null;

        /**
        * Remove all relationships.
        */
        @DataMember
        @ApiMember(Name="RemoveAllRelationships", ParameterType="form", Verb="POST", Description="Remove all relationships.")
        public RemoveAllRelationships RemoveAllRelationships = null;

        /**
        * Remove a relationship.
        */
        @DataMember
        @ApiMember(Name="RemoveRelationship", ParameterType="form", Verb="POST", Description="Remove a relationship.")
        public RemoveRelationship RemoveRelationship = null;

        /**
        * Remove a relationship.
        */
        @DataMember
        @ApiMember(Name="RemoveRelationshipByType", ParameterType="form", Verb="POST", Description="Remove a relationship.")
        public RemoveRelationshipByType RemoveRelationshipByType = null;

        /**
        * Add a relationship.
        */
        @DataMember
        @ApiMember(Name="AddRelationship", ParameterType="form", Verb="POST", Description="Add a relationship.")
        public AddRelationship AddRelationship = null;

        /**
        * Set the permission.
        */
        @DataMember
        @ApiMember(Name="SetPermission", ParameterType="form", Verb="POST", Description="Set the permission.")
        public SetPermission SetPermission = null;

        @DataMember(Name="SecurityProfile")
        @SerializedName("SecurityProfile")
        public TrimSecurityProfile SecurityProfile = null;

        @DataMember(Name="Permissions")
        @SerializedName("Permissions")
        public PermissionsDictionary Permissions = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="LocationNewType")
        @SerializedName("LocationNewType")
        @ApiMember(Name="LocationNewType", ParameterType="form", DataType="string", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="ChildAddresses")
        @SerializedName("ChildAddresses")
        public ArrayList<LocationAddress> ChildAddresses = null;

        @DataMember(Name="ChildEAddresses")
        @SerializedName("ChildEAddresses")
        public ArrayList<LocationEAddress> ChildEAddresses = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="LocationAccessControl")
        @SerializedName("LocationAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="LocationActiveFrom")
        @SerializedName("LocationActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="LocationActiveTo")
        @SerializedName("LocationActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="LocationActiveDescription")
        @SerializedName("LocationActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="LocationIsActive")
        @SerializedName("LocationIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="LocationActualBarcode")
        @SerializedName("LocationActualBarcode")
        @ApiMember(Name="LocationActualBarcode", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ActualBarcode = null;

        @DataMember(Name="LocationAdditionalLogin")
        @SerializedName("LocationAdditionalLogin")
        @ApiMember(Name="LocationAdditionalLogin", ParameterType="form", DataType="string")
        public TrimStringProperty AdditionalLogin = null;

        @DataMember(Name="LocationAdministrator")
        @SerializedName("LocationAdministrator")
        @ApiMember(Name="LocationAdministrator", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Administrator = null;

        @DataMember(Name="LocationAfterHoursPhoneNumber")
        @SerializedName("LocationAfterHoursPhoneNumber")
        @ApiMember(Name="LocationAfterHoursPhoneNumber", ParameterType="form", DataType="string")
        public TrimStringProperty AfterHoursPhoneNumber = null;

        @DataMember(Name="LocationAllAdministrators")
        @SerializedName("LocationAllAdministrators")
        @ApiMember(Name="LocationAllAdministrators", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllAdministrators = null;

        @DataMember(Name="LocationAllMembers")
        @SerializedName("LocationAllMembers")
        @ApiMember(Name="LocationAllMembers", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllMembers = null;

        @DataMember(Name="LocationAllMemberships")
        @SerializedName("LocationAllMemberships")
        @ApiMember(Name="LocationAllMemberships", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllMemberships = null;

        @DataMember(Name="LocationAllMembershipsRecursive")
        @SerializedName("LocationAllMembershipsRecursive")
        @ApiMember(Name="LocationAllMembershipsRecursive", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty AllMembershipsRecursive = null;

        @DataMember(Name="LocationCanDeliverDirect")
        @SerializedName("LocationCanDeliverDirect")
        @ApiMember(Name="LocationCanDeliverDirect", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> CanDeliverDirect = null;

        @DataMember(Name="LocationCanLogin")
        @SerializedName("LocationCanLogin")
        @ApiMember(Name="LocationCanLogin", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> CanLogin = null;

        @DataMember(Name="LocationCommittee")
        @SerializedName("LocationCommittee")
        @ApiMember(Name="LocationCommittee", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Committee = null;

        @DataMember(Name="LocationCutoffTime")
        @SerializedName("LocationCutoffTime")
        @ApiMember(Name="LocationCutoffTime", ParameterType="form", DataType="int")
        public TrimProperty<Integer> CutoffTime = null;

        @DataMember(Name="LocationDateOfBirth")
        @SerializedName("LocationDateOfBirth")
        @ApiMember(Name="LocationDateOfBirth", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime DateOfBirth = null;

        @DataMember(Name="LocationDefaultJurisdiction")
        @SerializedName("LocationDefaultJurisdiction")
        @ApiMember(Name="LocationDefaultJurisdiction", ParameterType="form", DataType="long", Verb="POST")
        public JurisdictionRef DefaultJurisdiction = null;

        @DataMember(Name="LocationDeliverContainersOnly")
        @SerializedName("LocationDeliverContainersOnly")
        @ApiMember(Name="LocationDeliverContainersOnly", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> DeliverContainersOnly = null;

        @DataMember(Name="LocationDeliveryLocation")
        @SerializedName("LocationDeliveryLocation")
        @ApiMember(Name="LocationDeliveryLocation", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef DeliveryLocation = null;

        @DataMember(Name="LocationEmailAddress")
        @SerializedName("LocationEmailAddress")
        @ApiMember(Name="LocationEmailAddress", ParameterType="form", DataType="string")
        public TrimStringProperty EmailAddress = null;

        @DataMember(Name="LocationFaxNumber")
        @SerializedName("LocationFaxNumber")
        @ApiMember(Name="LocationFaxNumber", ParameterType="form", DataType="string")
        public TrimStringProperty FaxNumber = null;

        @DataMember(Name="LocationFirstInitial")
        @SerializedName("LocationFirstInitial")
        @ApiMember(Name="LocationFirstInitial", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty FirstInitial = null;

        @DataMember(Name="LocationForeignBarcode")
        @SerializedName("LocationForeignBarcode")
        @ApiMember(Name="LocationForeignBarcode", ParameterType="form", DataType="string")
        public TrimStringProperty ForeignBarcode = null;

        @DataMember(Name="LocationFormalPreamble")
        @SerializedName("LocationFormalPreamble")
        @ApiMember(Name="LocationFormalPreamble", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty FormalPreamble = null;

        @DataMember(Name="LocationFormattedAddress")
        @SerializedName("LocationFormattedAddress")
        @ApiMember(Name="LocationFormattedAddress", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty FormattedAddress = null;

        @DataMember(Name="LocationFormattedName")
        @SerializedName("LocationFormattedName")
        @ApiMember(Name="LocationFormattedName", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty FormattedName = null;

        @DataMember(Name="LocationFullFormattedName")
        @SerializedName("LocationFullFormattedName")
        @ApiMember(Name="LocationFullFormattedName", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty FullFormattedName = null;

        @DataMember(Name="LocationGenderValue")
        @SerializedName("LocationGenderValue")
        @ApiMember(Name="LocationGenderValue", ParameterType="form", DataType="string")
        public TrimProperty<Gender> GenderValue = null;

        @DataMember(Name="LocationGivenNames")
        @SerializedName("LocationGivenNames")
        @ApiMember(Name="LocationGivenNames", ParameterType="form", DataType="string")
        public TrimStringProperty GivenNames = null;

        @DataMember(Name="LocationGpsLocation")
        @SerializedName("LocationGpsLocation")
        @ApiMember(Name="LocationGpsLocation", ParameterType="form", DataType="string")
        public TrimStringProperty GpsLocation = null;

        @DataMember(Name="LocationHasAValidLogin")
        @SerializedName("LocationHasAValidLogin")
        @ApiMember(Name="LocationHasAValidLogin", ParameterType="form", DataType="boolean", Verb="GET")
        public TrimProperty<Boolean> HasAValidLogin = null;

        @DataMember(Name="LocationHoldingOrganizationName")
        @SerializedName("LocationHoldingOrganizationName")
        @ApiMember(Name="LocationHoldingOrganizationName", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty HoldingOrganizationName = null;

        @DataMember(Name="LocationHomeDataset")
        @SerializedName("LocationHomeDataset")
        @ApiMember(Name="LocationHomeDataset", ParameterType="form", DataType="string")
        public TrimStringProperty HomeDataset = null;

        @DataMember(Name="LocationHonorific")
        @SerializedName("LocationHonorific")
        @ApiMember(Name="LocationHonorific", ParameterType="form", DataType="string")
        public TrimStringProperty Honorific = null;

        @DataMember(Name="LocationIdNumber")
        @SerializedName("LocationIdNumber")
        @ApiMember(Name="LocationIdNumber", ParameterType="form", DataType="string")
        public TrimStringProperty IdNumber = null;

        @DataMember(Name="LocationInformalPreamble")
        @SerializedName("LocationInformalPreamble")
        @ApiMember(Name="LocationInformalPreamble", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty InformalPreamble = null;

        @DataMember(Name="LocationInitials")
        @SerializedName("LocationInitials")
        @ApiMember(Name="LocationInitials", ParameterType="form", DataType="string")
        public TrimStringProperty Initials = null;

        @DataMember(Name="LocationInternetMailAddress")
        @SerializedName("LocationInternetMailAddress")
        @ApiMember(Name="LocationInternetMailAddress", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty InternetMailAddress = null;

        @DataMember(Name="LocationIsVisitor")
        @SerializedName("LocationIsVisitor")
        @ApiMember(Name="LocationIsVisitor", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsVisitor = null;

        @DataMember(Name="LocationIsWithin")
        @SerializedName("LocationIsWithin")
        @ApiMember(Name="LocationIsWithin", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> IsWithin = null;

        @DataMember(Name="LocationJobDescription")
        @SerializedName("LocationJobDescription")
        @ApiMember(Name="LocationJobDescription", ParameterType="form", DataType="string")
        public TrimStringProperty JobDescription = null;

        @DataMember(Name="LocationKeepAddressHistory")
        @SerializedName("LocationKeepAddressHistory")
        @ApiMember(Name="LocationKeepAddressHistory", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> KeepAddressHistory = null;

        @DataMember(Name="LocationLdapSynchDN")
        @SerializedName("LocationLdapSynchDN")
        @ApiMember(Name="LocationLdapSynchDN", ParameterType="form", DataType="string")
        public TrimStringProperty LdapSynchDN = null;

        @DataMember(Name="LocationLdapSynchEnabled")
        @SerializedName("LocationLdapSynchEnabled")
        @ApiMember(Name="LocationLdapSynchEnabled", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> LdapSynchEnabled = null;

        @DataMember(Name="LocationLdapSynchLastUpdated")
        @SerializedName("LocationLdapSynchLastUpdated")
        @ApiMember(Name="LocationLdapSynchLastUpdated", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime LdapSynchLastUpdated = null;

        @DataMember(Name="LocationLoginDetails")
        @SerializedName("LocationLoginDetails")
        @ApiMember(Name="LocationLoginDetails", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty LoginDetails = null;

        @DataMember(Name="LocationLoginExpires")
        @SerializedName("LocationLoginExpires")
        @ApiMember(Name="LocationLoginExpires", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime LoginExpires = null;

        @DataMember(Name="LocationLogsInAs")
        @SerializedName("LocationLogsInAs")
        @ApiMember(Name="LocationLogsInAs", ParameterType="form", DataType="string")
        public TrimStringProperty LogsInAs = null;

        @DataMember(Name="LocationLongHonorific")
        @SerializedName("LocationLongHonorific")
        @ApiMember(Name="LocationLongHonorific", ParameterType="form", DataType="string")
        public TrimStringProperty LongHonorific = null;

        @DataMember(Name="LocationMobileNumber")
        @SerializedName("LocationMobileNumber")
        @ApiMember(Name="LocationMobileNumber", ParameterType="form", DataType="string")
        public TrimStringProperty MobileNumber = null;

        @DataMember(Name="LocationNickName")
        @SerializedName("LocationNickName")
        @ApiMember(Name="LocationNickName", ParameterType="form", DataType="string")
        public TrimStringProperty NickName = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", ParameterType="form", DataType="string")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="LocationNotes")
        @SerializedName("LocationNotes")
        @ApiMember(Name="LocationNotes", ParameterType="form", DataType="string")
        public TrimStringProperty Notes = null;

        @DataMember(Name="LocationOldPostalAddresses")
        @SerializedName("LocationOldPostalAddresses")
        @ApiMember(Name="LocationOldPostalAddresses", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty OldPostalAddresses = null;

        @DataMember(Name="LocationOldPostalAddressesISO")
        @SerializedName("LocationOldPostalAddressesISO")
        @ApiMember(Name="LocationOldPostalAddressesISO", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty OldPostalAddressesISO = null;

        @DataMember(Name="LocationOldStreetAddresses")
        @SerializedName("LocationOldStreetAddresses")
        @ApiMember(Name="LocationOldStreetAddresses", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty OldStreetAddresses = null;

        @DataMember(Name="LocationOldStreetAddressesISO")
        @SerializedName("LocationOldStreetAddressesISO")
        @ApiMember(Name="LocationOldStreetAddressesISO", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty OldStreetAddressesISO = null;

        @DataMember(Name="LocationPhoneNumber")
        @SerializedName("LocationPhoneNumber")
        @ApiMember(Name="LocationPhoneNumber", ParameterType="form", DataType="string")
        public TrimStringProperty PhoneNumber = null;

        @DataMember(Name="LocationPosition")
        @SerializedName("LocationPosition")
        @ApiMember(Name="LocationPosition", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Position = null;

        @DataMember(Name="LocationPostalAddress")
        @SerializedName("LocationPostalAddress")
        @ApiMember(Name="LocationPostalAddress", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty PostalAddress = null;

        @DataMember(Name="LocationPostNominal")
        @SerializedName("LocationPostNominal")
        @ApiMember(Name="LocationPostNominal", ParameterType="form", DataType="string")
        public TrimStringProperty PostNominal = null;

        @DataMember(Name="LocationProjectTeam")
        @SerializedName("LocationProjectTeam")
        @ApiMember(Name="LocationProjectTeam", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef ProjectTeam = null;

        @DataMember(Name="LocationProviderContainer")
        @SerializedName("LocationProviderContainer")
        @ApiMember(Name="LocationProviderContainer", ParameterType="form", DataType="long", Verb="POST")
        public RecordRef ProviderContainer = null;

        @DataMember(Name="LocationProviderLogRecordType")
        @SerializedName("LocationProviderLogRecordType")
        @ApiMember(Name="LocationProviderLogRecordType", ParameterType="form", DataType="long", Verb="POST")
        public RecordTypeRef ProviderLogRecordType = null;

        @DataMember(Name="LocationRequestResponseHigh")
        @SerializedName("LocationRequestResponseHigh")
        @ApiMember(Name="LocationRequestResponseHigh", ParameterType="form", DataType="long")
        public TrimProperty<Long> RequestResponseHigh = null;

        @DataMember(Name="LocationRequestResponseLow")
        @SerializedName("LocationRequestResponseLow")
        @ApiMember(Name="LocationRequestResponseLow", ParameterType="form", DataType="long")
        public TrimProperty<Long> RequestResponseLow = null;

        @DataMember(Name="LocationRequestResponseMedium")
        @SerializedName("LocationRequestResponseMedium")
        @ApiMember(Name="LocationRequestResponseMedium", ParameterType="form", DataType="long")
        public TrimProperty<Long> RequestResponseMedium = null;

        @DataMember(Name="LocationRequestsNeedApproval")
        @SerializedName("LocationRequestsNeedApproval")
        @ApiMember(Name="LocationRequestsNeedApproval", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> RequestsNeedApproval = null;

        @DataMember(Name="LocationReviewDate")
        @SerializedName("LocationReviewDate")
        @ApiMember(Name="LocationReviewDate", ParameterType="form", DataType="TrimDateTime")
        public TrimDateTime ReviewDate = null;

        @DataMember(Name="LocationSalutation")
        @SerializedName("LocationSalutation")
        @ApiMember(Name="LocationSalutation", ParameterType="form", DataType="string")
        public TrimStringProperty Salutation = null;

        @DataMember(Name="LocationSecurityKeys")
        @SerializedName("LocationSecurityKeys")
        @ApiMember(Name="LocationSecurityKeys", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty SecurityKeys = null;

        @DataMember(Name="LocationSecurityString")
        @SerializedName("LocationSecurityString")
        @ApiMember(Name="LocationSecurityString", ParameterType="form", DataType="string")
        public TrimStringProperty SecurityString = null;

        @DataMember(Name="LocationSortName")
        @SerializedName("LocationSortName")
        @ApiMember(Name="LocationSortName", ParameterType="form", DataType="string", IsRequired=true)
        public TrimStringProperty SortName = null;

        @DataMember(Name="LocationStreetAddress")
        @SerializedName("LocationStreetAddress")
        @ApiMember(Name="LocationStreetAddress", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty StreetAddress = null;

        @DataMember(Name="LocationSupervisor")
        @SerializedName("LocationSupervisor")
        @ApiMember(Name="LocationSupervisor", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Supervisor = null;

        @DataMember(Name="LocationSurname")
        @SerializedName("LocationSurname")
        @ApiMember(Name="LocationSurname", ParameterType="form", DataType="string")
        public TrimStringProperty Surname = null;

        @DataMember(Name="LocationSurnameNoPrefix")
        @SerializedName("LocationSurnameNoPrefix")
        @ApiMember(Name="LocationSurnameNoPrefix", ParameterType="form", DataType="string")
        public TrimStringProperty SurnameNoPrefix = null;

        @DataMember(Name="LocationSurnamePrefix")
        @SerializedName("LocationSurnamePrefix")
        @ApiMember(Name="LocationSurnamePrefix", ParameterType="form", DataType="string")
        public TrimStringProperty SurnamePrefix = null;

        @DataMember(Name="LocationTypeOfLocation")
        @SerializedName("LocationTypeOfLocation")
        @ApiMember(Name="LocationTypeOfLocation", ParameterType="form", DataType="string")
        public TrimProperty<LocationType> TypeOfLocation = null;

        @DataMember(Name="LocationUnit")
        @SerializedName("LocationUnit")
        @ApiMember(Name="LocationUnit", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Unit = null;

        @DataMember(Name="LocationUseAddressOf")
        @SerializedName("LocationUseAddressOf")
        @ApiMember(Name="LocationUseAddressOf", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef UseAddressOf = null;

        @DataMember(Name="LocationUsedForStatistics")
        @SerializedName("LocationUsedForStatistics")
        @ApiMember(Name="LocationUsedForStatistics", ParameterType="form", DataType="boolean")
        public TrimProperty<Boolean> UsedForStatistics = null;

        @DataMember(Name="LocationUseProfileOf")
        @SerializedName("LocationUseProfileOf")
        @ApiMember(Name="LocationUseProfileOf", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef UseProfileOf = null;

        @DataMember(Name="LocationUserLicenseType")
        @SerializedName("LocationUserLicenseType")
        @ApiMember(Name="LocationUserLicenseType", ParameterType="form", DataType="string", Verb="GET")
        public TrimProperty<UserLicenseTypes> UserLicenseType = null;

        @DataMember(Name="LocationUserType")
        @SerializedName("LocationUserType")
        @ApiMember(Name="LocationUserType", ParameterType="form", DataType="string")
        public TrimProperty<UserTypes> UserType = null;

        @DataMember(Name="LocationViewPaneId")
        @SerializedName("LocationViewPaneId")
        @ApiMember(Name="LocationViewPaneId", ParameterType="form", DataType="string", Verb="GET")
        public TrimStringProperty ViewPaneId = null;

        @DataMember(Name="LocationWebPage")
        @SerializedName("LocationWebPage")
        @ApiMember(Name="LocationWebPage", ParameterType="form", DataType="string")
        public TrimStringProperty WebPage = null;

        @DataMember(Name="LocationWorkgroup")
        @SerializedName("LocationWorkgroup")
        @ApiMember(Name="LocationWorkgroup", ParameterType="form", DataType="long", Verb="POST")
        public LocationRef Workgroup = null;
        
        public SearchDefaultsDictionary getSearchDefaults() { return SearchDefaults; }
        public Location setSearchDefaults(SearchDefaultsDictionary value) { this.SearchDefaults = value; return this; }
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Location setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Location setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public Location setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Location setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Location setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public DeleteLocation getDeleteLocation() { return DeleteLocation; }
        public Location setDeleteLocation(DeleteLocation value) { this.DeleteLocation = value; return this; }
        public RemoveAllRelationships getRemoveAllRelationships() { return RemoveAllRelationships; }
        public Location setRemoveAllRelationships(RemoveAllRelationships value) { this.RemoveAllRelationships = value; return this; }
        public RemoveRelationship getRemoveRelationship() { return RemoveRelationship; }
        public Location setRemoveRelationship(RemoveRelationship value) { this.RemoveRelationship = value; return this; }
        public RemoveRelationshipByType getRemoveRelationshipByType() { return RemoveRelationshipByType; }
        public Location setRemoveRelationshipByType(RemoveRelationshipByType value) { this.RemoveRelationshipByType = value; return this; }
        public AddRelationship getAddRelationship() { return AddRelationship; }
        public Location setAddRelationship(AddRelationship value) { this.AddRelationship = value; return this; }
        public SetPermission getSetPermission() { return SetPermission; }
        public Location setSetPermission(SetPermission value) { this.SetPermission = value; return this; }
        public TrimSecurityProfile getSecurityProfile() { return SecurityProfile; }
        public Location setSecurityProfile(TrimSecurityProfile value) { this.SecurityProfile = value; return this; }
        public PermissionsDictionary getPermissions() { return Permissions; }
        public Location setPermissions(PermissionsDictionary value) { this.Permissions = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Location setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public Location setNewType(NewType value) { this.NewType = value; return this; }
        public ArrayList<LocationAddress> getChildAddresses() { return ChildAddresses; }
        public Location setChildAddresses(ArrayList<LocationAddress> value) { this.ChildAddresses = value; return this; }
        public ArrayList<LocationEAddress> getChildEAddresses() { return ChildEAddresses; }
        public Location setChildEAddresses(ArrayList<LocationEAddress> value) { this.ChildEAddresses = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Location setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Location setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public Location setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public Location setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public Location setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public Location setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getActualBarcode() { return ActualBarcode; }
        public Location setActualBarcode(TrimStringProperty value) { this.ActualBarcode = value; return this; }
        public TrimStringProperty getAdditionalLogin() { return AdditionalLogin; }
        public Location setAdditionalLogin(TrimStringProperty value) { this.AdditionalLogin = value; return this; }
        public LocationRef getAdministrator() { return Administrator; }
        public Location setAdministrator(LocationRef value) { this.Administrator = value; return this; }
        public TrimStringProperty getAfterHoursPhoneNumber() { return AfterHoursPhoneNumber; }
        public Location setAfterHoursPhoneNumber(TrimStringProperty value) { this.AfterHoursPhoneNumber = value; return this; }
        public TrimStringProperty getAllAdministrators() { return AllAdministrators; }
        public Location setAllAdministrators(TrimStringProperty value) { this.AllAdministrators = value; return this; }
        public TrimStringProperty getAllMembers() { return AllMembers; }
        public Location setAllMembers(TrimStringProperty value) { this.AllMembers = value; return this; }
        public TrimStringProperty getAllMemberships() { return AllMemberships; }
        public Location setAllMemberships(TrimStringProperty value) { this.AllMemberships = value; return this; }
        public TrimStringProperty getAllMembershipsRecursive() { return AllMembershipsRecursive; }
        public Location setAllMembershipsRecursive(TrimStringProperty value) { this.AllMembershipsRecursive = value; return this; }
        public TrimProperty<Boolean> getCanDeliverDirect() { return CanDeliverDirect; }
        public Location setCanDeliverDirect(TrimProperty<Boolean> value) { this.CanDeliverDirect = value; return this; }
        public TrimProperty<Boolean> getCanLogin() { return CanLogin; }
        public Location setCanLogin(TrimProperty<Boolean> value) { this.CanLogin = value; return this; }
        public LocationRef getCommittee() { return Committee; }
        public Location setCommittee(LocationRef value) { this.Committee = value; return this; }
        public TrimProperty<Integer> getCutoffTime() { return CutoffTime; }
        public Location setCutoffTime(TrimProperty<Integer> value) { this.CutoffTime = value; return this; }
        public TrimDateTime getDateOfBirth() { return DateOfBirth; }
        public Location setDateOfBirth(TrimDateTime value) { this.DateOfBirth = value; return this; }
        public JurisdictionRef getDefaultJurisdiction() { return DefaultJurisdiction; }
        public Location setDefaultJurisdiction(JurisdictionRef value) { this.DefaultJurisdiction = value; return this; }
        public TrimProperty<Boolean> getDeliverContainersOnly() { return DeliverContainersOnly; }
        public Location setDeliverContainersOnly(TrimProperty<Boolean> value) { this.DeliverContainersOnly = value; return this; }
        public LocationRef getDeliveryLocation() { return DeliveryLocation; }
        public Location setDeliveryLocation(LocationRef value) { this.DeliveryLocation = value; return this; }
        public TrimStringProperty getEmailAddress() { return EmailAddress; }
        public Location setEmailAddress(TrimStringProperty value) { this.EmailAddress = value; return this; }
        public TrimStringProperty getFaxNumber() { return FaxNumber; }
        public Location setFaxNumber(TrimStringProperty value) { this.FaxNumber = value; return this; }
        public TrimStringProperty getFirstInitial() { return FirstInitial; }
        public Location setFirstInitial(TrimStringProperty value) { this.FirstInitial = value; return this; }
        public TrimStringProperty getForeignBarcode() { return ForeignBarcode; }
        public Location setForeignBarcode(TrimStringProperty value) { this.ForeignBarcode = value; return this; }
        public TrimStringProperty getFormalPreamble() { return FormalPreamble; }
        public Location setFormalPreamble(TrimStringProperty value) { this.FormalPreamble = value; return this; }
        public TrimStringProperty getFormattedAddress() { return FormattedAddress; }
        public Location setFormattedAddress(TrimStringProperty value) { this.FormattedAddress = value; return this; }
        public TrimStringProperty getFormattedName() { return FormattedName; }
        public Location setFormattedName(TrimStringProperty value) { this.FormattedName = value; return this; }
        public TrimStringProperty getFullFormattedName() { return FullFormattedName; }
        public Location setFullFormattedName(TrimStringProperty value) { this.FullFormattedName = value; return this; }
        public TrimProperty<Gender> getGenderValue() { return GenderValue; }
        public Location setGenderValue(TrimProperty<Gender> value) { this.GenderValue = value; return this; }
        public TrimStringProperty getGivenNames() { return GivenNames; }
        public Location setGivenNames(TrimStringProperty value) { this.GivenNames = value; return this; }
        public TrimStringProperty getGpsLocation() { return GpsLocation; }
        public Location setGpsLocation(TrimStringProperty value) { this.GpsLocation = value; return this; }
        public TrimProperty<Boolean> getHasAValidLogin() { return HasAValidLogin; }
        public Location setHasAValidLogin(TrimProperty<Boolean> value) { this.HasAValidLogin = value; return this; }
        public TrimStringProperty getHoldingOrganizationName() { return HoldingOrganizationName; }
        public Location setHoldingOrganizationName(TrimStringProperty value) { this.HoldingOrganizationName = value; return this; }
        public TrimStringProperty getHomeDataset() { return HomeDataset; }
        public Location setHomeDataset(TrimStringProperty value) { this.HomeDataset = value; return this; }
        public TrimStringProperty getHonorific() { return Honorific; }
        public Location setHonorific(TrimStringProperty value) { this.Honorific = value; return this; }
        public TrimStringProperty getIdNumber() { return IdNumber; }
        public Location setIdNumber(TrimStringProperty value) { this.IdNumber = value; return this; }
        public TrimStringProperty getInformalPreamble() { return InformalPreamble; }
        public Location setInformalPreamble(TrimStringProperty value) { this.InformalPreamble = value; return this; }
        public TrimStringProperty getInitials() { return Initials; }
        public Location setInitials(TrimStringProperty value) { this.Initials = value; return this; }
        public TrimStringProperty getInternetMailAddress() { return InternetMailAddress; }
        public Location setInternetMailAddress(TrimStringProperty value) { this.InternetMailAddress = value; return this; }
        public TrimProperty<Boolean> getIsVisitor() { return IsVisitor; }
        public Location setIsVisitor(TrimProperty<Boolean> value) { this.IsVisitor = value; return this; }
        public TrimProperty<Boolean> getIsWithin() { return IsWithin; }
        public Location setIsWithin(TrimProperty<Boolean> value) { this.IsWithin = value; return this; }
        public TrimStringProperty getJobDescription() { return JobDescription; }
        public Location setJobDescription(TrimStringProperty value) { this.JobDescription = value; return this; }
        public TrimProperty<Boolean> getKeepAddressHistory() { return KeepAddressHistory; }
        public Location setKeepAddressHistory(TrimProperty<Boolean> value) { this.KeepAddressHistory = value; return this; }
        public TrimStringProperty getLdapSynchDN() { return LdapSynchDN; }
        public Location setLdapSynchDN(TrimStringProperty value) { this.LdapSynchDN = value; return this; }
        public TrimProperty<Boolean> getLdapSynchEnabled() { return LdapSynchEnabled; }
        public Location setLdapSynchEnabled(TrimProperty<Boolean> value) { this.LdapSynchEnabled = value; return this; }
        public TrimDateTime getLdapSynchLastUpdated() { return LdapSynchLastUpdated; }
        public Location setLdapSynchLastUpdated(TrimDateTime value) { this.LdapSynchLastUpdated = value; return this; }
        public TrimStringProperty getLoginDetails() { return LoginDetails; }
        public Location setLoginDetails(TrimStringProperty value) { this.LoginDetails = value; return this; }
        public TrimDateTime getLoginExpires() { return LoginExpires; }
        public Location setLoginExpires(TrimDateTime value) { this.LoginExpires = value; return this; }
        public TrimStringProperty getLogsInAs() { return LogsInAs; }
        public Location setLogsInAs(TrimStringProperty value) { this.LogsInAs = value; return this; }
        public TrimStringProperty getLongHonorific() { return LongHonorific; }
        public Location setLongHonorific(TrimStringProperty value) { this.LongHonorific = value; return this; }
        public TrimStringProperty getMobileNumber() { return MobileNumber; }
        public Location setMobileNumber(TrimStringProperty value) { this.MobileNumber = value; return this; }
        public TrimStringProperty getNickName() { return NickName; }
        public Location setNickName(TrimStringProperty value) { this.NickName = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Location setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Location setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getOldPostalAddresses() { return OldPostalAddresses; }
        public Location setOldPostalAddresses(TrimStringProperty value) { this.OldPostalAddresses = value; return this; }
        public TrimStringProperty getOldPostalAddressesISO() { return OldPostalAddressesISO; }
        public Location setOldPostalAddressesISO(TrimStringProperty value) { this.OldPostalAddressesISO = value; return this; }
        public TrimStringProperty getOldStreetAddresses() { return OldStreetAddresses; }
        public Location setOldStreetAddresses(TrimStringProperty value) { this.OldStreetAddresses = value; return this; }
        public TrimStringProperty getOldStreetAddressesISO() { return OldStreetAddressesISO; }
        public Location setOldStreetAddressesISO(TrimStringProperty value) { this.OldStreetAddressesISO = value; return this; }
        public TrimStringProperty getPhoneNumber() { return PhoneNumber; }
        public Location setPhoneNumber(TrimStringProperty value) { this.PhoneNumber = value; return this; }
        public LocationRef getPosition() { return Position; }
        public Location setPosition(LocationRef value) { this.Position = value; return this; }
        public TrimStringProperty getPostalAddress() { return PostalAddress; }
        public Location setPostalAddress(TrimStringProperty value) { this.PostalAddress = value; return this; }
        public TrimStringProperty getPostNominal() { return PostNominal; }
        public Location setPostNominal(TrimStringProperty value) { this.PostNominal = value; return this; }
        public LocationRef getProjectTeam() { return ProjectTeam; }
        public Location setProjectTeam(LocationRef value) { this.ProjectTeam = value; return this; }
        public RecordRef getProviderContainer() { return ProviderContainer; }
        public Location setProviderContainer(RecordRef value) { this.ProviderContainer = value; return this; }
        public RecordTypeRef getProviderLogRecordType() { return ProviderLogRecordType; }
        public Location setProviderLogRecordType(RecordTypeRef value) { this.ProviderLogRecordType = value; return this; }
        public TrimProperty<Long> getRequestResponseHigh() { return RequestResponseHigh; }
        public Location setRequestResponseHigh(TrimProperty<Long> value) { this.RequestResponseHigh = value; return this; }
        public TrimProperty<Long> getRequestResponseLow() { return RequestResponseLow; }
        public Location setRequestResponseLow(TrimProperty<Long> value) { this.RequestResponseLow = value; return this; }
        public TrimProperty<Long> getRequestResponseMedium() { return RequestResponseMedium; }
        public Location setRequestResponseMedium(TrimProperty<Long> value) { this.RequestResponseMedium = value; return this; }
        public TrimProperty<Boolean> getRequestsNeedApproval() { return RequestsNeedApproval; }
        public Location setRequestsNeedApproval(TrimProperty<Boolean> value) { this.RequestsNeedApproval = value; return this; }
        public TrimDateTime getReviewDate() { return ReviewDate; }
        public Location setReviewDate(TrimDateTime value) { this.ReviewDate = value; return this; }
        public TrimStringProperty getSalutation() { return Salutation; }
        public Location setSalutation(TrimStringProperty value) { this.Salutation = value; return this; }
        public TrimStringProperty getSecurityKeys() { return SecurityKeys; }
        public Location setSecurityKeys(TrimStringProperty value) { this.SecurityKeys = value; return this; }
        public TrimStringProperty getSecurityString() { return SecurityString; }
        public Location setSecurityString(TrimStringProperty value) { this.SecurityString = value; return this; }
        public TrimStringProperty getSortName() { return SortName; }
        public Location setSortName(TrimStringProperty value) { this.SortName = value; return this; }
        public TrimStringProperty getStreetAddress() { return StreetAddress; }
        public Location setStreetAddress(TrimStringProperty value) { this.StreetAddress = value; return this; }
        public LocationRef getSupervisor() { return Supervisor; }
        public Location setSupervisor(LocationRef value) { this.Supervisor = value; return this; }
        public TrimStringProperty getSurname() { return Surname; }
        public Location setSurname(TrimStringProperty value) { this.Surname = value; return this; }
        public TrimStringProperty getSurnameNoPrefix() { return SurnameNoPrefix; }
        public Location setSurnameNoPrefix(TrimStringProperty value) { this.SurnameNoPrefix = value; return this; }
        public TrimStringProperty getSurnamePrefix() { return SurnamePrefix; }
        public Location setSurnamePrefix(TrimStringProperty value) { this.SurnamePrefix = value; return this; }
        public TrimProperty<LocationType> getTypeOfLocation() { return TypeOfLocation; }
        public Location setTypeOfLocation(TrimProperty<LocationType> value) { this.TypeOfLocation = value; return this; }
        public LocationRef getUnit() { return Unit; }
        public Location setUnit(LocationRef value) { this.Unit = value; return this; }
        public LocationRef getUseAddressOf() { return UseAddressOf; }
        public Location setUseAddressOf(LocationRef value) { this.UseAddressOf = value; return this; }
        public TrimProperty<Boolean> getUsedForStatistics() { return UsedForStatistics; }
        public Location setUsedForStatistics(TrimProperty<Boolean> value) { this.UsedForStatistics = value; return this; }
        public LocationRef getUseProfileOf() { return UseProfileOf; }
        public Location setUseProfileOf(LocationRef value) { this.UseProfileOf = value; return this; }
        public TrimProperty<UserLicenseTypes> getUserLicenseType() { return UserLicenseType; }
        public Location setUserLicenseType(TrimProperty<UserLicenseTypes> value) { this.UserLicenseType = value; return this; }
        public TrimProperty<UserTypes> getUserType() { return UserType; }
        public Location setUserType(TrimProperty<UserTypes> value) { this.UserType = value; return this; }
        public TrimStringProperty getViewPaneId() { return ViewPaneId; }
        public Location setViewPaneId(TrimStringProperty value) { this.ViewPaneId = value; return this; }
        public TrimStringProperty getWebPage() { return WebPage; }
        public Location setWebPage(TrimStringProperty value) { this.WebPage = value; return this; }
        public LocationRef getWorkgroup() { return Workgroup; }
        public Location setWorkgroup(LocationRef value) { this.Workgroup = value; return this; }
        private static Object responseType = LocationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Location by Uri or Name.
    */
    @Route(Path="/Location/{Id*}", Verbs="GET")
    @Api("Fetch a single Location by Uri or Name.")
    public static class LocationFind extends TrimMainObjectByUri implements IReturn<LocationsResponse>
    {
        
        private static Object responseType = LocationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of LookupItems filtered using a search string.
    */
    @Route(Path="/LookupItem", Verbs="GET")
    @Api("Fetch a collection of LookupItems filtered using a search string.")
    public static class LookupItems extends TrimMainObjectSearch implements IReturn<LookupItemsResponse>
    {
        
        private static Object responseType = LookupItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a LookupItem object.
    */
    @Route(Path="/LookupItem", Verbs="POST")
    @Api("Update a LookupItem object.")
    @DataContract
    public static class LookupItem extends TrimMainObject implements IReturn<LookupItemsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="LookupItemAccessControl")
        @SerializedName("LookupItemAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="LookupItemAbbreviation")
        @SerializedName("LookupItemAbbreviation")
        @ApiMember(ParameterType="form", Name="LookupItemAbbreviation", DataType="string")
        public TrimStringProperty Abbreviation = null;

        @DataMember(Name="LookupItemAuthorityComments")
        @SerializedName("LookupItemAuthorityComments")
        @ApiMember(Name="LookupItemAuthorityComments", DataType="string", ParameterType="form")
        public TrimStringProperty AuthorityComments = null;

        @DataMember(Name="LookupItemAuthorityDescription")
        @SerializedName("LookupItemAuthorityDescription")
        @ApiMember(Name="LookupItemAuthorityDescription", DataType="string", ParameterType="form")
        public TrimStringProperty AuthorityDescription = null;

        @DataMember(Name="LookupItemAuthorityReference")
        @SerializedName("LookupItemAuthorityReference")
        @ApiMember(Name="LookupItemAuthorityReference", DataType="string", ParameterType="form")
        public TrimStringProperty AuthorityReference = null;

        @DataMember(Name="LookupItemDescription")
        @SerializedName("LookupItemDescription")
        @ApiMember(Name="LookupItemDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="LookupItemIconId")
        @SerializedName("LookupItemIconId")
        @ApiMember(Name="LookupItemIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="LookupItemName")
        @SerializedName("LookupItemName")
        @ApiMember(Name="LookupItemName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="LookupItemParentSet")
        @SerializedName("LookupItemParentSet")
        @ApiMember(Name="LookupItemParentSet", DataType="long", ParameterType="form", Verb="POST")
        public LookupSetRef ParentSet = null;

        @DataMember(Name="LookupItemUsesAuthorityStyle")
        @SerializedName("LookupItemUsesAuthorityStyle")
        @ApiMember(Name="LookupItemUsesAuthorityStyle", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> UsesAuthorityStyle = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public LookupItem setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public LookupItem setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public LookupItem setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimStringProperty getAbbreviation() { return Abbreviation; }
        public LookupItem setAbbreviation(TrimStringProperty value) { this.Abbreviation = value; return this; }
        public TrimStringProperty getAuthorityComments() { return AuthorityComments; }
        public LookupItem setAuthorityComments(TrimStringProperty value) { this.AuthorityComments = value; return this; }
        public TrimStringProperty getAuthorityDescription() { return AuthorityDescription; }
        public LookupItem setAuthorityDescription(TrimStringProperty value) { this.AuthorityDescription = value; return this; }
        public TrimStringProperty getAuthorityReference() { return AuthorityReference; }
        public LookupItem setAuthorityReference(TrimStringProperty value) { this.AuthorityReference = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public LookupItem setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public LookupItem setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public LookupItem setName(TrimStringProperty value) { this.Name = value; return this; }
        public LookupSetRef getParentSet() { return ParentSet; }
        public LookupItem setParentSet(LookupSetRef value) { this.ParentSet = value; return this; }
        public TrimProperty<Boolean> getUsesAuthorityStyle() { return UsesAuthorityStyle; }
        public LookupItem setUsesAuthorityStyle(TrimProperty<Boolean> value) { this.UsesAuthorityStyle = value; return this; }
        private static Object responseType = LookupItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single LookupItem by Uri or Name.
    */
    @Route(Path="/LookupItem/{Id*}", Verbs="GET")
    @Api("Fetch a single LookupItem by Uri or Name.")
    public static class LookupItemFind extends TrimMainObjectByUri implements IReturn<LookupItemsResponse>
    {
        
        private static Object responseType = LookupItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of LookupSets filtered using a search string.
    */
    @Route(Path="/LookupSet", Verbs="GET")
    @Api("Fetch a collection of LookupSets filtered using a search string.")
    public static class LookupSets extends TrimMainObjectSearch implements IReturn<LookupSetsResponse>
    {
        
        private static Object responseType = LookupSetsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a LookupSet object.
    */
    @Route(Path="/LookupSet", Verbs="POST")
    @Api("Update a LookupSet object.")
    @DataContract
    public static class LookupSet extends TrimMainObject implements IReturn<LookupSetsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="LookupSetAccessControl")
        @SerializedName("LookupSetAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="LookupSetIconId")
        @SerializedName("LookupSetIconId")
        @ApiMember(Name="LookupSetIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="LookupSetIsUsedByAdditionalFields")
        @SerializedName("LookupSetIsUsedByAdditionalFields")
        @ApiMember(Name="LookupSetIsUsedByAdditionalFields", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty IsUsedByAdditionalFields = null;

        @DataMember(Name="LookupSetLookupSetType")
        @SerializedName("LookupSetLookupSetType")
        @ApiMember(Name="LookupSetLookupSetType", DataType="string", ParameterType="form")
        public TrimProperty<LookupSetType> LookupSetType = null;

        @DataMember(Name="LookupSetName")
        @SerializedName("LookupSetName")
        @ApiMember(Name="LookupSetName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="LookupSetNotes")
        @SerializedName("LookupSetNotes")
        @ApiMember(Name="LookupSetNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="LookupSetUsesAuthorityStyle")
        @SerializedName("LookupSetUsesAuthorityStyle")
        @ApiMember(Name="LookupSetUsesAuthorityStyle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UsesAuthorityStyle = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public LookupSet setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public LookupSet setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public LookupSet setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public LookupSet setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimStringProperty getIsUsedByAdditionalFields() { return IsUsedByAdditionalFields; }
        public LookupSet setIsUsedByAdditionalFields(TrimStringProperty value) { this.IsUsedByAdditionalFields = value; return this; }
        public TrimProperty<LookupSetType> getLookupSetType() { return LookupSetType; }
        public LookupSet setLookupSetType(TrimProperty<LookupSetType> value) { this.LookupSetType = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public LookupSet setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public LookupSet setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public LookupSet setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getUsesAuthorityStyle() { return UsesAuthorityStyle; }
        public LookupSet setUsesAuthorityStyle(TrimProperty<Boolean> value) { this.UsesAuthorityStyle = value; return this; }
        private static Object responseType = LookupSetsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single LookupSet by Uri or Name.
    */
    @Route(Path="/LookupSet/{Id*}", Verbs="GET")
    @Api("Fetch a single LookupSet by Uri or Name.")
    public static class LookupSetFind extends TrimMainObjectByUri implements IReturn<LookupSetsResponse>
    {
        
        private static Object responseType = LookupSetsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of MailTemplates filtered using a search string.
    */
    @Route(Path="/MailTemplate", Verbs="GET")
    @Api("Fetch a collection of MailTemplates filtered using a search string.")
    public static class MailTemplates extends TrimMainObjectSearch implements IReturn<MailTemplatesResponse>
    {
        
        private static Object responseType = MailTemplatesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a MailTemplate object.
    */
    @Route(Path="/MailTemplate", Verbs="POST")
    @Api("Update a MailTemplate object.")
    @DataContract
    public static class MailTemplate extends TrimMainObject implements IReturn<MailTemplatesResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="MailTemplateNewType")
        @SerializedName("MailTemplateNewType")
        @ApiMember(Name="MailTemplateNewType", DataType="string", ParameterType="form", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="MailTemplateAttachReference")
        @SerializedName("MailTemplateAttachReference")
        @ApiMember(Name="MailTemplateAttachReference", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AttachReference = null;

        @DataMember(Name="MailTemplateContentTemplate")
        @SerializedName("MailTemplateContentTemplate")
        @ApiMember(Name="MailTemplateContentTemplate", DataType="string", ParameterType="form")
        public TrimStringProperty ContentTemplate = null;

        @DataMember(Name="MailTemplateForEventType")
        @SerializedName("MailTemplateForEventType")
        @ApiMember(Name="MailTemplateForEventType", DataType="string", ParameterType="form")
        public TrimProperty<MailEventType> ForEventType = null;

        @DataMember(Name="MailTemplateForPropertyId")
        @SerializedName("MailTemplateForPropertyId")
        @ApiMember(Name="MailTemplateForPropertyId", DataType="string", ParameterType="form")
        public TrimProperty<PropertyIds> ForPropertyId = null;

        @DataMember(Name="MailTemplateForRecipientPropertyId")
        @SerializedName("MailTemplateForRecipientPropertyId")
        @ApiMember(Name="MailTemplateForRecipientPropertyId", DataType="string", ParameterType="form")
        public TrimProperty<PropertyIds> ForRecipientPropertyId = null;

        @DataMember(Name="MailTemplateForRecipientUserDefinedField")
        @SerializedName("MailTemplateForRecipientUserDefinedField")
        @ApiMember(Name="MailTemplateForRecipientUserDefinedField", DataType="long", ParameterType="form", Verb="POST")
        public FieldDefinitionRef ForRecipientUserDefinedField = null;

        @DataMember(Name="MailTemplateForRecipientWithValue")
        @SerializedName("MailTemplateForRecipientWithValue")
        @ApiMember(Name="MailTemplateForRecipientWithValue", DataType="string", ParameterType="form")
        public TrimStringProperty ForRecipientWithValue = null;

        @DataMember(Name="MailTemplateForUserDefinedField")
        @SerializedName("MailTemplateForUserDefinedField")
        @ApiMember(Name="MailTemplateForUserDefinedField", DataType="long", ParameterType="form", Verb="POST")
        public FieldDefinitionRef ForUserDefinedField = null;

        @DataMember(Name="MailTemplateName")
        @SerializedName("MailTemplateName")
        @ApiMember(Name="MailTemplateName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="MailTemplateObjectsSelected")
        @SerializedName("MailTemplateObjectsSelected")
        @ApiMember(Name="MailTemplateObjectsSelected", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ObjectsSelected = null;

        @DataMember(Name="MailTemplateRecipientsSelected")
        @SerializedName("MailTemplateRecipientsSelected")
        @ApiMember(Name="MailTemplateRecipientsSelected", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RecipientsSelected = null;

        @DataMember(Name="MailTemplateRelatingToObjectType")
        @SerializedName("MailTemplateRelatingToObjectType")
        @ApiMember(Name="MailTemplateRelatingToObjectType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<BaseObjectTypes> RelatingToObjectType = null;

        @DataMember(Name="MailTemplateReplyTo")
        @SerializedName("MailTemplateReplyTo")
        @ApiMember(Name="MailTemplateReplyTo", DataType="string", ParameterType="form")
        public TrimStringProperty ReplyTo = null;

        @DataMember(Name="MailTemplateSubjectTemplate")
        @SerializedName("MailTemplateSubjectTemplate")
        @ApiMember(Name="MailTemplateSubjectTemplate", DataType="string", ParameterType="form")
        public TrimStringProperty SubjectTemplate = null;

        @DataMember(Name="MailTemplateUseHTMLformat")
        @SerializedName("MailTemplateUseHTMLformat")
        @ApiMember(Name="MailTemplateUseHTMLformat", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseHTMLformat = null;

        @DataMember(Name="MailTemplateWithValue")
        @SerializedName("MailTemplateWithValue")
        @ApiMember(Name="MailTemplateWithValue", DataType="string", ParameterType="form")
        public TrimStringProperty WithValue = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MailTemplate setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public MailTemplate setNewType(NewType value) { this.NewType = value; return this; }
        public TrimProperty<Boolean> getAttachReference() { return AttachReference; }
        public MailTemplate setAttachReference(TrimProperty<Boolean> value) { this.AttachReference = value; return this; }
        public TrimStringProperty getContentTemplate() { return ContentTemplate; }
        public MailTemplate setContentTemplate(TrimStringProperty value) { this.ContentTemplate = value; return this; }
        public TrimProperty<MailEventType> getForEventType() { return ForEventType; }
        public MailTemplate setForEventType(TrimProperty<MailEventType> value) { this.ForEventType = value; return this; }
        public TrimProperty<PropertyIds> getForPropertyId() { return ForPropertyId; }
        public MailTemplate setForPropertyId(TrimProperty<PropertyIds> value) { this.ForPropertyId = value; return this; }
        public TrimProperty<PropertyIds> getForRecipientPropertyId() { return ForRecipientPropertyId; }
        public MailTemplate setForRecipientPropertyId(TrimProperty<PropertyIds> value) { this.ForRecipientPropertyId = value; return this; }
        public FieldDefinitionRef getForRecipientUserDefinedField() { return ForRecipientUserDefinedField; }
        public MailTemplate setForRecipientUserDefinedField(FieldDefinitionRef value) { this.ForRecipientUserDefinedField = value; return this; }
        public TrimStringProperty getForRecipientWithValue() { return ForRecipientWithValue; }
        public MailTemplate setForRecipientWithValue(TrimStringProperty value) { this.ForRecipientWithValue = value; return this; }
        public FieldDefinitionRef getForUserDefinedField() { return ForUserDefinedField; }
        public MailTemplate setForUserDefinedField(FieldDefinitionRef value) { this.ForUserDefinedField = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public MailTemplate setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getObjectsSelected() { return ObjectsSelected; }
        public MailTemplate setObjectsSelected(TrimStringProperty value) { this.ObjectsSelected = value; return this; }
        public TrimStringProperty getRecipientsSelected() { return RecipientsSelected; }
        public MailTemplate setRecipientsSelected(TrimStringProperty value) { this.RecipientsSelected = value; return this; }
        public TrimProperty<BaseObjectTypes> getRelatingToObjectType() { return RelatingToObjectType; }
        public MailTemplate setRelatingToObjectType(TrimProperty<BaseObjectTypes> value) { this.RelatingToObjectType = value; return this; }
        public TrimStringProperty getReplyTo() { return ReplyTo; }
        public MailTemplate setReplyTo(TrimStringProperty value) { this.ReplyTo = value; return this; }
        public TrimStringProperty getSubjectTemplate() { return SubjectTemplate; }
        public MailTemplate setSubjectTemplate(TrimStringProperty value) { this.SubjectTemplate = value; return this; }
        public TrimProperty<Boolean> getUseHTMLformat() { return UseHTMLformat; }
        public MailTemplate setUseHTMLformat(TrimProperty<Boolean> value) { this.UseHTMLformat = value; return this; }
        public TrimStringProperty getWithValue() { return WithValue; }
        public MailTemplate setWithValue(TrimStringProperty value) { this.WithValue = value; return this; }
        private static Object responseType = MailTemplatesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single MailTemplate by Uri or Name.
    */
    @Route(Path="/MailTemplate/{Id*}", Verbs="GET")
    @Api("Fetch a single MailTemplate by Uri or Name.")
    public static class MailTemplateFind extends TrimMainObjectByUri implements IReturn<MailTemplatesResponse>
    {
        
        private static Object responseType = MailTemplatesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Meetings filtered using a search string.
    */
    @Route(Path="/Meeting", Verbs="GET")
    @Api("Fetch a collection of Meetings filtered using a search string.")
    public static class Meetings extends TrimMainObjectSearch implements IReturn<MeetingsResponse>
    {
        
        private static Object responseType = MeetingsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Meeting object.
    */
    @Route(Path="/Meeting", Verbs="POST")
    @Api("Update a Meeting object.")
    @DataContract
    public static class Meeting extends TrimMainObject implements IReturn<MeetingsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildDocuments")
        @SerializedName("ChildDocuments")
        public ArrayList<MeetingDocument> ChildDocuments = null;

        @DataMember(Name="ChildInvitations")
        @SerializedName("ChildInvitations")
        public ArrayList<MeetingInvitation> ChildInvitations = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="MeetingAccessControl")
        @SerializedName("MeetingAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="MeetingAgendaIssueDate")
        @SerializedName("MeetingAgendaIssueDate")
        @ApiMember(Name="MeetingAgendaIssueDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime AgendaIssueDate = null;

        @DataMember(Name="MeetingAgendaOpen")
        @SerializedName("MeetingAgendaOpen")
        @ApiMember(Name="MeetingAgendaOpen", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> AgendaOpen = null;

        @DataMember(Name="MeetingAgendaRecord")
        @SerializedName("MeetingAgendaRecord")
        @ApiMember(Name="MeetingAgendaRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef AgendaRecord = null;

        @DataMember(Name="MeetingApologies")
        @SerializedName("MeetingApologies")
        @ApiMember(Name="MeetingApologies", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Apologies = null;

        @DataMember(Name="MeetingAttendees")
        @SerializedName("MeetingAttendees")
        @ApiMember(Name="MeetingAttendees", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Attendees = null;

        @DataMember(Name="MeetingChair")
        @SerializedName("MeetingChair")
        @ApiMember(Name="MeetingChair", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Chair = null;

        @DataMember(Name="MeetingInvitations")
        @SerializedName("MeetingInvitations")
        @ApiMember(Name="MeetingInvitations", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Invitations = null;

        @DataMember(Name="MeetingMeetingDate")
        @SerializedName("MeetingMeetingDate")
        @ApiMember(Name="MeetingMeetingDate", DataType="TrimDateTime", IsRequired=true, ParameterType="form")
        public TrimDateTime MeetingDate = null;

        @DataMember(Name="MeetingMeetingDuration")
        @SerializedName("MeetingMeetingDuration")
        @ApiMember(Name="MeetingMeetingDuration", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingDuration = null;

        @DataMember(Name="MeetingMeetingPlace")
        @SerializedName("MeetingMeetingPlace")
        @ApiMember(Name="MeetingMeetingPlace", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef MeetingPlace = null;

        @DataMember(Name="MeetingMeetingType")
        @SerializedName("MeetingMeetingType")
        @ApiMember(Name="MeetingMeetingType", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public MeetingTypeRef MeetingType = null;

        @DataMember(Name="MeetingMinutesRecord")
        @SerializedName("MeetingMinutesRecord")
        @ApiMember(Name="MeetingMinutesRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef MinutesRecord = null;

        @DataMember(Name="MeetingName")
        @SerializedName("MeetingName")
        @ApiMember(Name="MeetingName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="MeetingNotes")
        @SerializedName("MeetingNotes")
        @ApiMember(Name="MeetingNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="MeetingPending")
        @SerializedName("MeetingPending")
        @ApiMember(Name="MeetingPending", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Pending = null;

        @DataMember(Name="MeetingSubmissionsCutoffDate")
        @SerializedName("MeetingSubmissionsCutoffDate")
        @ApiMember(Name="MeetingSubmissionsCutoffDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime SubmissionsCutoffDate = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Meeting setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<MeetingDocument> getChildDocuments() { return ChildDocuments; }
        public Meeting setChildDocuments(ArrayList<MeetingDocument> value) { this.ChildDocuments = value; return this; }
        public ArrayList<MeetingInvitation> getChildInvitations() { return ChildInvitations; }
        public Meeting setChildInvitations(ArrayList<MeetingInvitation> value) { this.ChildInvitations = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Meeting setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Meeting setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getAgendaIssueDate() { return AgendaIssueDate; }
        public Meeting setAgendaIssueDate(TrimDateTime value) { this.AgendaIssueDate = value; return this; }
        public TrimProperty<Boolean> getAgendaOpen() { return AgendaOpen; }
        public Meeting setAgendaOpen(TrimProperty<Boolean> value) { this.AgendaOpen = value; return this; }
        public RecordRef getAgendaRecord() { return AgendaRecord; }
        public Meeting setAgendaRecord(RecordRef value) { this.AgendaRecord = value; return this; }
        public TrimStringProperty getApologies() { return Apologies; }
        public Meeting setApologies(TrimStringProperty value) { this.Apologies = value; return this; }
        public TrimStringProperty getAttendees() { return Attendees; }
        public Meeting setAttendees(TrimStringProperty value) { this.Attendees = value; return this; }
        public LocationRef getChair() { return Chair; }
        public Meeting setChair(LocationRef value) { this.Chair = value; return this; }
        public TrimStringProperty getInvitations() { return Invitations; }
        public Meeting setInvitations(TrimStringProperty value) { this.Invitations = value; return this; }
        public TrimDateTime getMeetingDate() { return MeetingDate; }
        public Meeting setMeetingDate(TrimDateTime value) { this.MeetingDate = value; return this; }
        public TrimProperty<Integer> getMeetingDuration() { return MeetingDuration; }
        public Meeting setMeetingDuration(TrimProperty<Integer> value) { this.MeetingDuration = value; return this; }
        public LocationRef getMeetingPlace() { return MeetingPlace; }
        public Meeting setMeetingPlace(LocationRef value) { this.MeetingPlace = value; return this; }
        public MeetingTypeRef getMeetingType() { return MeetingType; }
        public Meeting setMeetingType(MeetingTypeRef value) { this.MeetingType = value; return this; }
        public RecordRef getMinutesRecord() { return MinutesRecord; }
        public Meeting setMinutesRecord(RecordRef value) { this.MinutesRecord = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Meeting setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Meeting setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Meeting setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getPending() { return Pending; }
        public Meeting setPending(TrimProperty<Boolean> value) { this.Pending = value; return this; }
        public TrimDateTime getSubmissionsCutoffDate() { return SubmissionsCutoffDate; }
        public Meeting setSubmissionsCutoffDate(TrimDateTime value) { this.SubmissionsCutoffDate = value; return this; }
        private static Object responseType = MeetingsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Meeting by Uri or Name.
    */
    @Route(Path="/Meeting/{Id*}", Verbs="GET")
    @Api("Fetch a single Meeting by Uri or Name.")
    public static class MeetingFind extends TrimMainObjectByUri implements IReturn<MeetingsResponse>
    {
        
        private static Object responseType = MeetingsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of MeetingTypes filtered using a search string.
    */
    @Route(Path="/MeetingType", Verbs="GET")
    @Api("Fetch a collection of MeetingTypes filtered using a search string.")
    public static class MeetingTypes extends TrimMainObjectSearch implements IReturn<MeetingTypesResponse>
    {
        
        private static Object responseType = MeetingTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a MeetingType object.
    */
    @Route(Path="/MeetingType", Verbs="POST")
    @Api("Update a MeetingType object.")
    @DataContract
    public static class MeetingType extends TrimMainObject implements IReturn<MeetingTypesResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildUsualParticipants")
        @SerializedName("ChildUsualParticipants")
        public ArrayList<MeetingTypeUsualParticipant> ChildUsualParticipants = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="MeetingTypeAccessControl")
        @SerializedName("MeetingTypeAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="MeetingTypeAgendaClassification")
        @SerializedName("MeetingTypeAgendaClassification")
        @ApiMember(Name="MeetingTypeAgendaClassification", DataType="long", ParameterType="form", Verb="POST")
        public ClassificationRef AgendaClassification = null;

        @DataMember(Name="MeetingTypeAgendaContainer")
        @SerializedName("MeetingTypeAgendaContainer")
        @ApiMember(Name="MeetingTypeAgendaContainer", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef AgendaContainer = null;

        @DataMember(Name="MeetingTypeAgendaIssue")
        @SerializedName("MeetingTypeAgendaIssue")
        @ApiMember(Name="MeetingTypeAgendaIssue", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AgendaIssue = null;

        @DataMember(Name="MeetingTypeAgendaIssueDesc")
        @SerializedName("MeetingTypeAgendaIssueDesc")
        @ApiMember(Name="MeetingTypeAgendaIssueDesc", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AgendaIssueDesc = null;

        @DataMember(Name="MeetingTypeAgendaIssueInterval")
        @SerializedName("MeetingTypeAgendaIssueInterval")
        @ApiMember(Name="MeetingTypeAgendaIssueInterval", DataType="string", ParameterType="form")
        public TrimProperty<TimeInterval> AgendaIssueInterval = null;

        @DataMember(Name="MeetingTypeAgendaRecordType")
        @SerializedName("MeetingTypeAgendaRecordType")
        @ApiMember(Name="MeetingTypeAgendaRecordType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef AgendaRecordType = null;

        @DataMember(Name="MeetingTypeAtDocDateModified")
        @SerializedName("MeetingTypeAtDocDateModified")
        @ApiMember(Name="MeetingTypeAtDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime AtDocDateModified = null;

        @DataMember(Name="MeetingTypeAtDocExtension")
        @SerializedName("MeetingTypeAtDocExtension")
        @ApiMember(Name="MeetingTypeAtDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AtDocExtension = null;

        @DataMember(Name="MeetingTypeAtDocSize")
        @SerializedName("MeetingTypeAtDocSize")
        @ApiMember(Name="MeetingTypeAtDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> AtDocSize = null;

        @DataMember(Name="MeetingTypeAtDocStore")
        @SerializedName("MeetingTypeAtDocStore")
        @ApiMember(Name="MeetingTypeAtDocStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef AtDocStore = null;

        @DataMember(Name="MeetingTypeAtDocStoreId")
        @SerializedName("MeetingTypeAtDocStoreId")
        @ApiMember(Name="MeetingTypeAtDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AtDocStoreId = null;

        @DataMember(Name="MeetingTypeDefaultAgendaItemType")
        @SerializedName("MeetingTypeDefaultAgendaItemType")
        @ApiMember(Name="MeetingTypeDefaultAgendaItemType", DataType="long", ParameterType="form", Verb="POST")
        public AgendaItemTypeRef DefaultAgendaItemType = null;

        @DataMember(Name="MeetingTypeDefaultMinuteItemType")
        @SerializedName("MeetingTypeDefaultMinuteItemType")
        @ApiMember(Name="MeetingTypeDefaultMinuteItemType", DataType="long", ParameterType="form", Verb="POST")
        public MinuteItemTypeRef DefaultMinuteItemType = null;

        @DataMember(Name="MeetingTypeItemsApprovedBy")
        @SerializedName("MeetingTypeItemsApprovedBy")
        @ApiMember(Name="MeetingTypeItemsApprovedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef ItemsApprovedBy = null;

        @DataMember(Name="MeetingTypeLatestMeeting")
        @SerializedName("MeetingTypeLatestMeeting")
        @ApiMember(Name="MeetingTypeLatestMeeting", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime LatestMeeting = null;

        @DataMember(Name="MeetingTypeMeeetingFrequencyDesc")
        @SerializedName("MeetingTypeMeeetingFrequencyDesc")
        @ApiMember(Name="MeetingTypeMeeetingFrequencyDesc", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MeeetingFrequencyDesc = null;

        @DataMember(Name="MeetingTypeMeetingDuration")
        @SerializedName("MeetingTypeMeetingDuration")
        @ApiMember(Name="MeetingTypeMeetingDuration", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingDuration = null;

        @DataMember(Name="MeetingTypeMeetingFrequency")
        @SerializedName("MeetingTypeMeetingFrequency")
        @ApiMember(Name="MeetingTypeMeetingFrequency", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingFrequency = null;

        @DataMember(Name="MeetingTypeMeetingFrequencyType")
        @SerializedName("MeetingTypeMeetingFrequencyType")
        @ApiMember(Name="MeetingTypeMeetingFrequencyType", DataType="string", ParameterType="form")
        public TrimProperty<DateInterval> MeetingFrequencyType = null;

        @DataMember(Name="MeetingTypeMeetingPlace")
        @SerializedName("MeetingTypeMeetingPlace")
        @ApiMember(Name="MeetingTypeMeetingPlace", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef MeetingPlace = null;

        @DataMember(Name="MeetingTypeMeetingSnapDay")
        @SerializedName("MeetingTypeMeetingSnapDay")
        @ApiMember(Name="MeetingTypeMeetingSnapDay", DataType="string", ParameterType="form")
        public TrimProperty<DayOfTheWeek> MeetingSnapDay = null;

        @DataMember(Name="MeetingTypeMeetingSnapDayCount")
        @SerializedName("MeetingTypeMeetingSnapDayCount")
        @ApiMember(Name="MeetingTypeMeetingSnapDayCount", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingSnapDayCount = null;

        @DataMember(Name="MeetingTypeMeetingTime")
        @SerializedName("MeetingTypeMeetingTime")
        @ApiMember(Name="MeetingTypeMeetingTime", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingTime = null;

        @DataMember(Name="MeetingTypeMinuteClassification")
        @SerializedName("MeetingTypeMinuteClassification")
        @ApiMember(Name="MeetingTypeMinuteClassification", DataType="long", ParameterType="form", Verb="POST")
        public ClassificationRef MinuteClassification = null;

        @DataMember(Name="MeetingTypeMinuteContainer")
        @SerializedName("MeetingTypeMinuteContainer")
        @ApiMember(Name="MeetingTypeMinuteContainer", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef MinuteContainer = null;

        @DataMember(Name="MeetingTypeMinuteRecordType")
        @SerializedName("MeetingTypeMinuteRecordType")
        @ApiMember(Name="MeetingTypeMinuteRecordType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef MinuteRecordType = null;

        @DataMember(Name="MeetingTypeMtDocDateModified")
        @SerializedName("MeetingTypeMtDocDateModified")
        @ApiMember(Name="MeetingTypeMtDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime MtDocDateModified = null;

        @DataMember(Name="MeetingTypeMtDocExtension")
        @SerializedName("MeetingTypeMtDocExtension")
        @ApiMember(Name="MeetingTypeMtDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MtDocExtension = null;

        @DataMember(Name="MeetingTypeMtDocSize")
        @SerializedName("MeetingTypeMtDocSize")
        @ApiMember(Name="MeetingTypeMtDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> MtDocSize = null;

        @DataMember(Name="MeetingTypeMtDocStore")
        @SerializedName("MeetingTypeMtDocStore")
        @ApiMember(Name="MeetingTypeMtDocStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef MtDocStore = null;

        @DataMember(Name="MeetingTypeMtDocStoreId")
        @SerializedName("MeetingTypeMtDocStoreId")
        @ApiMember(Name="MeetingTypeMtDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MtDocStoreId = null;

        @DataMember(Name="MeetingTypeName")
        @SerializedName("MeetingTypeName")
        @ApiMember(Name="MeetingTypeName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="MeetingTypeNextMeeting")
        @SerializedName("MeetingTypeNextMeeting")
        @ApiMember(Name="MeetingTypeNextMeeting", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime NextMeeting = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="MeetingTypeNotes")
        @SerializedName("MeetingTypeNotes")
        @ApiMember(Name="MeetingTypeNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="MeetingTypeOutlineNumbering")
        @SerializedName("MeetingTypeOutlineNumbering")
        @ApiMember(Name="MeetingTypeOutlineNumbering", DataType="string", ParameterType="form")
        public TrimProperty<OutlineNumberType> OutlineNumbering = null;

        @DataMember(Name="MeetingTypeSubmissionCutoff")
        @SerializedName("MeetingTypeSubmissionCutoff")
        @ApiMember(Name="MeetingTypeSubmissionCutoff", DataType="int", ParameterType="form")
        public TrimProperty<Integer> SubmissionCutoff = null;

        @DataMember(Name="MeetingTypeSubmissionCutoffDesc")
        @SerializedName("MeetingTypeSubmissionCutoffDesc")
        @ApiMember(Name="MeetingTypeSubmissionCutoffDesc", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty SubmissionCutoffDesc = null;

        @DataMember(Name="MeetingTypeSubmissionCutoffInterval")
        @SerializedName("MeetingTypeSubmissionCutoffInterval")
        @ApiMember(Name="MeetingTypeSubmissionCutoffInterval", DataType="string", ParameterType="form")
        public TrimProperty<TimeInterval> SubmissionCutoffInterval = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MeetingType setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<MeetingTypeUsualParticipant> getChildUsualParticipants() { return ChildUsualParticipants; }
        public MeetingType setChildUsualParticipants(ArrayList<MeetingTypeUsualParticipant> value) { this.ChildUsualParticipants = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public MeetingType setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public MeetingType setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public ClassificationRef getAgendaClassification() { return AgendaClassification; }
        public MeetingType setAgendaClassification(ClassificationRef value) { this.AgendaClassification = value; return this; }
        public RecordRef getAgendaContainer() { return AgendaContainer; }
        public MeetingType setAgendaContainer(RecordRef value) { this.AgendaContainer = value; return this; }
        public TrimProperty<Integer> getAgendaIssue() { return AgendaIssue; }
        public MeetingType setAgendaIssue(TrimProperty<Integer> value) { this.AgendaIssue = value; return this; }
        public TrimStringProperty getAgendaIssueDesc() { return AgendaIssueDesc; }
        public MeetingType setAgendaIssueDesc(TrimStringProperty value) { this.AgendaIssueDesc = value; return this; }
        public TrimProperty<TimeInterval> getAgendaIssueInterval() { return AgendaIssueInterval; }
        public MeetingType setAgendaIssueInterval(TrimProperty<TimeInterval> value) { this.AgendaIssueInterval = value; return this; }
        public RecordTypeRef getAgendaRecordType() { return AgendaRecordType; }
        public MeetingType setAgendaRecordType(RecordTypeRef value) { this.AgendaRecordType = value; return this; }
        public TrimDateTime getAtDocDateModified() { return AtDocDateModified; }
        public MeetingType setAtDocDateModified(TrimDateTime value) { this.AtDocDateModified = value; return this; }
        public TrimStringProperty getAtDocExtension() { return AtDocExtension; }
        public MeetingType setAtDocExtension(TrimStringProperty value) { this.AtDocExtension = value; return this; }
        public TrimProperty<Long> getAtDocSize() { return AtDocSize; }
        public MeetingType setAtDocSize(TrimProperty<Long> value) { this.AtDocSize = value; return this; }
        public ElectronicStoreRef getAtDocStore() { return AtDocStore; }
        public MeetingType setAtDocStore(ElectronicStoreRef value) { this.AtDocStore = value; return this; }
        public TrimStringProperty getAtDocStoreId() { return AtDocStoreId; }
        public MeetingType setAtDocStoreId(TrimStringProperty value) { this.AtDocStoreId = value; return this; }
        public AgendaItemTypeRef getDefaultAgendaItemType() { return DefaultAgendaItemType; }
        public MeetingType setDefaultAgendaItemType(AgendaItemTypeRef value) { this.DefaultAgendaItemType = value; return this; }
        public MinuteItemTypeRef getDefaultMinuteItemType() { return DefaultMinuteItemType; }
        public MeetingType setDefaultMinuteItemType(MinuteItemTypeRef value) { this.DefaultMinuteItemType = value; return this; }
        public LocationRef getItemsApprovedBy() { return ItemsApprovedBy; }
        public MeetingType setItemsApprovedBy(LocationRef value) { this.ItemsApprovedBy = value; return this; }
        public TrimDateTime getLatestMeeting() { return LatestMeeting; }
        public MeetingType setLatestMeeting(TrimDateTime value) { this.LatestMeeting = value; return this; }
        public TrimStringProperty getMeeetingFrequencyDesc() { return MeeetingFrequencyDesc; }
        public MeetingType setMeeetingFrequencyDesc(TrimStringProperty value) { this.MeeetingFrequencyDesc = value; return this; }
        public TrimProperty<Integer> getMeetingDuration() { return MeetingDuration; }
        public MeetingType setMeetingDuration(TrimProperty<Integer> value) { this.MeetingDuration = value; return this; }
        public TrimProperty<Integer> getMeetingFrequency() { return MeetingFrequency; }
        public MeetingType setMeetingFrequency(TrimProperty<Integer> value) { this.MeetingFrequency = value; return this; }
        public TrimProperty<DateInterval> getMeetingFrequencyType() { return MeetingFrequencyType; }
        public MeetingType setMeetingFrequencyType(TrimProperty<DateInterval> value) { this.MeetingFrequencyType = value; return this; }
        public LocationRef getMeetingPlace() { return MeetingPlace; }
        public MeetingType setMeetingPlace(LocationRef value) { this.MeetingPlace = value; return this; }
        public TrimProperty<DayOfTheWeek> getMeetingSnapDay() { return MeetingSnapDay; }
        public MeetingType setMeetingSnapDay(TrimProperty<DayOfTheWeek> value) { this.MeetingSnapDay = value; return this; }
        public TrimProperty<Integer> getMeetingSnapDayCount() { return MeetingSnapDayCount; }
        public MeetingType setMeetingSnapDayCount(TrimProperty<Integer> value) { this.MeetingSnapDayCount = value; return this; }
        public TrimProperty<Integer> getMeetingTime() { return MeetingTime; }
        public MeetingType setMeetingTime(TrimProperty<Integer> value) { this.MeetingTime = value; return this; }
        public ClassificationRef getMinuteClassification() { return MinuteClassification; }
        public MeetingType setMinuteClassification(ClassificationRef value) { this.MinuteClassification = value; return this; }
        public RecordRef getMinuteContainer() { return MinuteContainer; }
        public MeetingType setMinuteContainer(RecordRef value) { this.MinuteContainer = value; return this; }
        public RecordTypeRef getMinuteRecordType() { return MinuteRecordType; }
        public MeetingType setMinuteRecordType(RecordTypeRef value) { this.MinuteRecordType = value; return this; }
        public TrimDateTime getMtDocDateModified() { return MtDocDateModified; }
        public MeetingType setMtDocDateModified(TrimDateTime value) { this.MtDocDateModified = value; return this; }
        public TrimStringProperty getMtDocExtension() { return MtDocExtension; }
        public MeetingType setMtDocExtension(TrimStringProperty value) { this.MtDocExtension = value; return this; }
        public TrimProperty<Long> getMtDocSize() { return MtDocSize; }
        public MeetingType setMtDocSize(TrimProperty<Long> value) { this.MtDocSize = value; return this; }
        public ElectronicStoreRef getMtDocStore() { return MtDocStore; }
        public MeetingType setMtDocStore(ElectronicStoreRef value) { this.MtDocStore = value; return this; }
        public TrimStringProperty getMtDocStoreId() { return MtDocStoreId; }
        public MeetingType setMtDocStoreId(TrimStringProperty value) { this.MtDocStoreId = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public MeetingType setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimDateTime getNextMeeting() { return NextMeeting; }
        public MeetingType setNextMeeting(TrimDateTime value) { this.NextMeeting = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public MeetingType setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public MeetingType setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<OutlineNumberType> getOutlineNumbering() { return OutlineNumbering; }
        public MeetingType setOutlineNumbering(TrimProperty<OutlineNumberType> value) { this.OutlineNumbering = value; return this; }
        public TrimProperty<Integer> getSubmissionCutoff() { return SubmissionCutoff; }
        public MeetingType setSubmissionCutoff(TrimProperty<Integer> value) { this.SubmissionCutoff = value; return this; }
        public TrimStringProperty getSubmissionCutoffDesc() { return SubmissionCutoffDesc; }
        public MeetingType setSubmissionCutoffDesc(TrimStringProperty value) { this.SubmissionCutoffDesc = value; return this; }
        public TrimProperty<TimeInterval> getSubmissionCutoffInterval() { return SubmissionCutoffInterval; }
        public MeetingType setSubmissionCutoffInterval(TrimProperty<TimeInterval> value) { this.SubmissionCutoffInterval = value; return this; }
        private static Object responseType = MeetingTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single MeetingType by Uri or Name.
    */
    @Route(Path="/MeetingType/{Id*}", Verbs="GET")
    @Api("Fetch a single MeetingType by Uri or Name.")
    public static class MeetingTypeFind extends TrimMainObjectByUri implements IReturn<MeetingTypesResponse>
    {
        
        private static Object responseType = MeetingTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of MinuteItems filtered using a search string.
    */
    @Route(Path="/MinuteItem", Verbs="GET")
    @Api("Fetch a collection of MinuteItems filtered using a search string.")
    public static class MinuteItems extends TrimMainObjectSearch implements IReturn<MinuteItemsResponse>
    {
        
        private static Object responseType = MinuteItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a MinuteItem object.
    */
    @Route(Path="/MinuteItem", Verbs="POST")
    @Api("Update a MinuteItem object.")
    @DataContract
    public static class MinuteItem extends TrimMainObject implements IReturn<MinuteItemsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildActionArisings")
        @SerializedName("ChildActionArisings")
        public ArrayList<MinuteItemActionArising> ChildActionArisings = null;

        @DataMember(Name="MinuteItemDescription")
        @SerializedName("MinuteItemDescription")
        @ApiMember(Name="MinuteItemDescription", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="MinuteItemDocDateModified")
        @SerializedName("MinuteItemDocDateModified")
        @ApiMember(Name="MinuteItemDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DocDateModified = null;

        @DataMember(Name="MinuteItemDocExtension")
        @SerializedName("MinuteItemDocExtension")
        @ApiMember(Name="MinuteItemDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocExtension = null;

        @DataMember(Name="MinuteItemDocSize")
        @SerializedName("MinuteItemDocSize")
        @ApiMember(Name="MinuteItemDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DocSize = null;

        @DataMember(Name="MinuteItemDocStore")
        @SerializedName("MinuteItemDocStore")
        @ApiMember(Name="MinuteItemDocStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef DocStore = null;

        @DataMember(Name="MinuteItemDocStoreId")
        @SerializedName("MinuteItemDocStoreId")
        @ApiMember(Name="MinuteItemDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocStoreId = null;

        @DataMember(Name="MinuteItemIsMotion")
        @SerializedName("MinuteItemIsMotion")
        @ApiMember(Name="MinuteItemIsMotion", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsMotion = null;

        @DataMember(Name="MinuteItemItemType")
        @SerializedName("MinuteItemItemType")
        @ApiMember(Name="MinuteItemItemType", DataType="long", ParameterType="form", Verb="POST")
        public MinuteItemTypeRef ItemType = null;

        @DataMember(Name="MinuteItemMeeting")
        @SerializedName("MinuteItemMeeting")
        @ApiMember(Name="MinuteItemMeeting", DataType="long", ParameterType="form", Verb="POST")
        public MeetingRef Meeting = null;

        @DataMember(Name="MinuteItemMinuteItemOrderNumber")
        @SerializedName("MinuteItemMinuteItemOrderNumber")
        @ApiMember(Name="MinuteItemMinuteItemOrderNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MinuteItemOrderNumber = null;

        @DataMember(Name="MinuteItemOutcome")
        @SerializedName("MinuteItemOutcome")
        @ApiMember(Name="MinuteItemOutcome", DataType="string", ParameterType="form")
        public TrimProperty<MotionOutcome> Outcome = null;

        @DataMember(Name="MinuteItemParentAgendaItem")
        @SerializedName("MinuteItemParentAgendaItem")
        @ApiMember(Name="MinuteItemParentAgendaItem", DataType="long", ParameterType="form", Verb="POST")
        public AgendaItemRef ParentAgendaItem = null;

        @DataMember(Name="MinuteItemProposedBy")
        @SerializedName("MinuteItemProposedBy")
        @ApiMember(Name="MinuteItemProposedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef ProposedBy = null;

        @DataMember(Name="MinuteItemSecondedBy")
        @SerializedName("MinuteItemSecondedBy")
        @ApiMember(Name="MinuteItemSecondedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef SecondedBy = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MinuteItem setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<MinuteItemActionArising> getChildActionArisings() { return ChildActionArisings; }
        public MinuteItem setChildActionArisings(ArrayList<MinuteItemActionArising> value) { this.ChildActionArisings = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public MinuteItem setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getDocDateModified() { return DocDateModified; }
        public MinuteItem setDocDateModified(TrimDateTime value) { this.DocDateModified = value; return this; }
        public TrimStringProperty getDocExtension() { return DocExtension; }
        public MinuteItem setDocExtension(TrimStringProperty value) { this.DocExtension = value; return this; }
        public TrimProperty<Long> getDocSize() { return DocSize; }
        public MinuteItem setDocSize(TrimProperty<Long> value) { this.DocSize = value; return this; }
        public ElectronicStoreRef getDocStore() { return DocStore; }
        public MinuteItem setDocStore(ElectronicStoreRef value) { this.DocStore = value; return this; }
        public TrimStringProperty getDocStoreId() { return DocStoreId; }
        public MinuteItem setDocStoreId(TrimStringProperty value) { this.DocStoreId = value; return this; }
        public TrimProperty<Boolean> getIsMotion() { return IsMotion; }
        public MinuteItem setIsMotion(TrimProperty<Boolean> value) { this.IsMotion = value; return this; }
        public MinuteItemTypeRef getItemType() { return ItemType; }
        public MinuteItem setItemType(MinuteItemTypeRef value) { this.ItemType = value; return this; }
        public MeetingRef getMeeting() { return Meeting; }
        public MinuteItem setMeeting(MeetingRef value) { this.Meeting = value; return this; }
        public TrimProperty<Integer> getMinuteItemOrderNumber() { return MinuteItemOrderNumber; }
        public MinuteItem setMinuteItemOrderNumber(TrimProperty<Integer> value) { this.MinuteItemOrderNumber = value; return this; }
        public TrimProperty<MotionOutcome> getOutcome() { return Outcome; }
        public MinuteItem setOutcome(TrimProperty<MotionOutcome> value) { this.Outcome = value; return this; }
        public AgendaItemRef getParentAgendaItem() { return ParentAgendaItem; }
        public MinuteItem setParentAgendaItem(AgendaItemRef value) { this.ParentAgendaItem = value; return this; }
        public LocationRef getProposedBy() { return ProposedBy; }
        public MinuteItem setProposedBy(LocationRef value) { this.ProposedBy = value; return this; }
        public LocationRef getSecondedBy() { return SecondedBy; }
        public MinuteItem setSecondedBy(LocationRef value) { this.SecondedBy = value; return this; }
        private static Object responseType = MinuteItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single MinuteItem by Uri or Name.
    */
    @Route(Path="/MinuteItem/{Id*}", Verbs="GET")
    @Api("Fetch a single MinuteItem by Uri or Name.")
    public static class MinuteItemFind extends TrimMainObjectByUri implements IReturn<MinuteItemsResponse>
    {
        
        private static Object responseType = MinuteItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of MinuteItemTypes filtered using a search string.
    */
    @Route(Path="/MinuteItemType", Verbs="GET")
    @Api("Fetch a collection of MinuteItemTypes filtered using a search string.")
    public static class MinuteItemTypes extends TrimMainObjectSearch implements IReturn<MinuteItemTypesResponse>
    {
        
        private static Object responseType = MinuteItemTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a MinuteItemType object.
    */
    @Route(Path="/MinuteItemType", Verbs="POST")
    @Api("Update a MinuteItemType object.")
    @DataContract
    public static class MinuteItemType extends TrimMainObject implements IReturn<MinuteItemTypesResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="MinuteItemTypeAccessControl")
        @SerializedName("MinuteItemTypeAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="MinuteItemTypeDocDateModified")
        @SerializedName("MinuteItemTypeDocDateModified")
        @ApiMember(Name="MinuteItemTypeDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DocDateModified = null;

        @DataMember(Name="MinuteItemTypeDocExtension")
        @SerializedName("MinuteItemTypeDocExtension")
        @ApiMember(Name="MinuteItemTypeDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocExtension = null;

        @DataMember(Name="MinuteItemTypeDocSize")
        @SerializedName("MinuteItemTypeDocSize")
        @ApiMember(Name="MinuteItemTypeDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DocSize = null;

        @DataMember(Name="MinuteItemTypeDocStore")
        @SerializedName("MinuteItemTypeDocStore")
        @ApiMember(Name="MinuteItemTypeDocStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef DocStore = null;

        @DataMember(Name="MinuteItemTypeDocStoreId")
        @SerializedName("MinuteItemTypeDocStoreId")
        @ApiMember(Name="MinuteItemTypeDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocStoreId = null;

        @DataMember(Name="MinuteItemTypeName")
        @SerializedName("MinuteItemTypeName")
        @ApiMember(Name="MinuteItemTypeName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MinuteItemType setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public MinuteItemType setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public MinuteItemType setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getDocDateModified() { return DocDateModified; }
        public MinuteItemType setDocDateModified(TrimDateTime value) { this.DocDateModified = value; return this; }
        public TrimStringProperty getDocExtension() { return DocExtension; }
        public MinuteItemType setDocExtension(TrimStringProperty value) { this.DocExtension = value; return this; }
        public TrimProperty<Long> getDocSize() { return DocSize; }
        public MinuteItemType setDocSize(TrimProperty<Long> value) { this.DocSize = value; return this; }
        public ElectronicStoreRef getDocStore() { return DocStore; }
        public MinuteItemType setDocStore(ElectronicStoreRef value) { this.DocStore = value; return this; }
        public TrimStringProperty getDocStoreId() { return DocStoreId; }
        public MinuteItemType setDocStoreId(TrimStringProperty value) { this.DocStoreId = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public MinuteItemType setName(TrimStringProperty value) { this.Name = value; return this; }
        private static Object responseType = MinuteItemTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single MinuteItemType by Uri or Name.
    */
    @Route(Path="/MinuteItemType/{Id*}", Verbs="GET")
    @Api("Fetch a single MinuteItemType by Uri or Name.")
    public static class MinuteItemTypeFind extends TrimMainObjectByUri implements IReturn<MinuteItemTypesResponse>
    {
        
        private static Object responseType = MinuteItemTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Notifications filtered using a search string.
    */
    @Route(Path="/Notification", Verbs="GET")
    @Api("Fetch a collection of Notifications filtered using a search string.")
    public static class Notifications extends TrimMainObjectSearch implements IReturn<NotificationsResponse>
    {
        
        private static Object responseType = NotificationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Notification object.
    */
    @Route(Path="/Notification", Verbs="POST")
    @Api("Update a Notification object.")
    @DataContract
    public static class Notification extends TrimMainObject implements IReturn<NotificationsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="NotificationDescription")
        @SerializedName("NotificationDescription")
        @ApiMember(Name="NotificationDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="NotificationEventDate")
        @SerializedName("NotificationEventDate")
        @ApiMember(Name="NotificationEventDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime EventDate = null;

        @DataMember(Name="NotificationEventType")
        @SerializedName("NotificationEventType")
        @ApiMember(Name="NotificationEventType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<Events> EventType = null;

        @DataMember(Name="NotificationObjectType")
        @SerializedName("NotificationObjectType")
        @ApiMember(Name="NotificationObjectType", DataType="string", ParameterType="form")
        public TrimProperty<BaseObjectTypes> ObjectType = null;

        @DataMember(Name="NotificationObjectUri")
        @SerializedName("NotificationObjectUri")
        @ApiMember(Name="NotificationObjectUri", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ObjectUri = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Notification setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public Notification setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getEventDate() { return EventDate; }
        public Notification setEventDate(TrimDateTime value) { this.EventDate = value; return this; }
        public TrimProperty<Events> getEventType() { return EventType; }
        public Notification setEventType(TrimProperty<Events> value) { this.EventType = value; return this; }
        public TrimProperty<BaseObjectTypes> getObjectType() { return ObjectType; }
        public Notification setObjectType(TrimProperty<BaseObjectTypes> value) { this.ObjectType = value; return this; }
        public TrimStringProperty getObjectUri() { return ObjectUri; }
        public Notification setObjectUri(TrimStringProperty value) { this.ObjectUri = value; return this; }
        private static Object responseType = NotificationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Notification by Uri or Name.
    */
    @Route(Path="/Notification/{Id*}", Verbs="GET")
    @Api("Fetch a single Notification by Uri or Name.")
    public static class NotificationFind extends TrimMainObjectByUri implements IReturn<NotificationsResponse>
    {
        
        private static Object responseType = NotificationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of OfflineRecords filtered using a search string.
    */
    @Route(Path="/OfflineRecord", Verbs="GET")
    @Api("Fetch a collection of OfflineRecords filtered using a search string.")
    public static class OfflineRecords extends TrimMainObjectSearch implements IReturn<OfflineRecordsResponse>
    {
        
        private static Object responseType = OfflineRecordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a OfflineRecord object.
    */
    @Route(Path="/OfflineRecord", Verbs="POST")
    @Api("Update a OfflineRecord object.")
    @DataContract
    public static class OfflineRecord extends TrimMainObject implements IReturn<OfflineRecordsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="OfflineRecordAuthorName")
        @SerializedName("OfflineRecordAuthorName")
        @ApiMember(Name="OfflineRecordAuthorName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AuthorName = null;

        @DataMember(Name="OfflineRecordContainedItemsCount")
        @SerializedName("OfflineRecordContainedItemsCount")
        @ApiMember(Name="OfflineRecordContainedItemsCount", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ContainedItemsCount = null;

        @DataMember(Name="OfflineRecordContainer")
        @SerializedName("OfflineRecordContainer")
        @ApiMember(Name="OfflineRecordContainer", DataType="long", ParameterType="form", Verb="POST")
        public OfflineRecordRef Container = null;

        @DataMember(Name="OfflineRecordContainerRecord")
        @SerializedName("OfflineRecordContainerRecord")
        @ApiMember(Name="OfflineRecordContainerRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef ContainerRecord = null;

        @DataMember(Name="OfflineRecordContainerTitle")
        @SerializedName("OfflineRecordContainerTitle")
        @ApiMember(Name="OfflineRecordContainerTitle", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ContainerTitle = null;

        @DataMember(Name="OfflineRecordDateCheckedOut")
        @SerializedName("OfflineRecordDateCheckedOut")
        @ApiMember(Name="OfflineRecordDateCheckedOut", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCheckedOut = null;

        @DataMember(Name="OfflineRecordDateCreated")
        @SerializedName("OfflineRecordDateCreated")
        @ApiMember(Name="OfflineRecordDateCreated", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="OfflineRecordDateModified")
        @SerializedName("OfflineRecordDateModified")
        @ApiMember(Name="OfflineRecordDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="OfflineRecordDateModifiedAtCheckout")
        @SerializedName("OfflineRecordDateModifiedAtCheckout")
        @ApiMember(Name="OfflineRecordDateModifiedAtCheckout", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModifiedAtCheckout = null;

        @DataMember(Name="OfflineRecordExtension")
        @SerializedName("OfflineRecordExtension")
        @ApiMember(Name="OfflineRecordExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="OfflineRecordFileName")
        @SerializedName("OfflineRecordFileName")
        @ApiMember(Name="OfflineRecordFileName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FileName = null;

        @DataMember(Name="OfflineRecordFileType")
        @SerializedName("OfflineRecordFileType")
        @ApiMember(Name="OfflineRecordFileType", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FileType = null;

        @DataMember(Name="OfflineRecordFullFileName")
        @SerializedName("OfflineRecordFullFileName")
        @ApiMember(Name="OfflineRecordFullFileName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FullFileName = null;

        @DataMember(Name="OfflineRecordIsADocument")
        @SerializedName("OfflineRecordIsADocument")
        @ApiMember(Name="OfflineRecordIsADocument", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsADocument = null;

        @DataMember(Name="OfflineRecordIsAFolder")
        @SerializedName("OfflineRecordIsAFolder")
        @ApiMember(Name="OfflineRecordIsAFolder", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsAFolder = null;

        @DataMember(Name="OfflineRecordNextRevision")
        @SerializedName("OfflineRecordNextRevision")
        @ApiMember(Name="OfflineRecordNextRevision", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> NextRevision = null;

        @DataMember(Name="OfflineRecordRecord")
        @SerializedName("OfflineRecordRecord")
        @ApiMember(Name="OfflineRecordRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="OfflineRecordRecordNumber")
        @SerializedName("OfflineRecordRecordNumber")
        @ApiMember(Name="OfflineRecordRecordNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RecordNumber = null;

        @DataMember(Name="OfflineRecordRecordUri")
        @SerializedName("OfflineRecordRecordUri")
        @ApiMember(Name="OfflineRecordRecordUri", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RecordUri = null;

        @DataMember(Name="OfflineRecordSize")
        @SerializedName("OfflineRecordSize")
        @ApiMember(Name="OfflineRecordSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Size = null;

        @DataMember(Name="OfflineRecordStatus")
        @SerializedName("OfflineRecordStatus")
        @ApiMember(Name="OfflineRecordStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<OfflineStatus> Status = null;

        @DataMember(Name="OfflineRecordTitle")
        @SerializedName("OfflineRecordTitle")
        @ApiMember(Name="OfflineRecordTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public OfflineRecord setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getAuthorName() { return AuthorName; }
        public OfflineRecord setAuthorName(TrimStringProperty value) { this.AuthorName = value; return this; }
        public TrimProperty<Integer> getContainedItemsCount() { return ContainedItemsCount; }
        public OfflineRecord setContainedItemsCount(TrimProperty<Integer> value) { this.ContainedItemsCount = value; return this; }
        public OfflineRecordRef getContainer() { return Container; }
        public OfflineRecord setContainer(OfflineRecordRef value) { this.Container = value; return this; }
        public RecordRef getContainerRecord() { return ContainerRecord; }
        public OfflineRecord setContainerRecord(RecordRef value) { this.ContainerRecord = value; return this; }
        public TrimStringProperty getContainerTitle() { return ContainerTitle; }
        public OfflineRecord setContainerTitle(TrimStringProperty value) { this.ContainerTitle = value; return this; }
        public TrimDateTime getDateCheckedOut() { return DateCheckedOut; }
        public OfflineRecord setDateCheckedOut(TrimDateTime value) { this.DateCheckedOut = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public OfflineRecord setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public OfflineRecord setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimDateTime getDateModifiedAtCheckout() { return DateModifiedAtCheckout; }
        public OfflineRecord setDateModifiedAtCheckout(TrimDateTime value) { this.DateModifiedAtCheckout = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public OfflineRecord setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimStringProperty getFileName() { return FileName; }
        public OfflineRecord setFileName(TrimStringProperty value) { this.FileName = value; return this; }
        public TrimStringProperty getFileType() { return FileType; }
        public OfflineRecord setFileType(TrimStringProperty value) { this.FileType = value; return this; }
        public TrimStringProperty getFullFileName() { return FullFileName; }
        public OfflineRecord setFullFileName(TrimStringProperty value) { this.FullFileName = value; return this; }
        public TrimProperty<Boolean> getIsADocument() { return IsADocument; }
        public OfflineRecord setIsADocument(TrimProperty<Boolean> value) { this.IsADocument = value; return this; }
        public TrimProperty<Boolean> getIsAFolder() { return IsAFolder; }
        public OfflineRecord setIsAFolder(TrimProperty<Boolean> value) { this.IsAFolder = value; return this; }
        public TrimProperty<Integer> getNextRevision() { return NextRevision; }
        public OfflineRecord setNextRevision(TrimProperty<Integer> value) { this.NextRevision = value; return this; }
        public RecordRef getRecord() { return Record; }
        public OfflineRecord setRecord(RecordRef value) { this.Record = value; return this; }
        public TrimStringProperty getRecordNumber() { return RecordNumber; }
        public OfflineRecord setRecordNumber(TrimStringProperty value) { this.RecordNumber = value; return this; }
        public TrimStringProperty getRecordUri() { return RecordUri; }
        public OfflineRecord setRecordUri(TrimStringProperty value) { this.RecordUri = value; return this; }
        public TrimProperty<Long> getSize() { return Size; }
        public OfflineRecord setSize(TrimProperty<Long> value) { this.Size = value; return this; }
        public TrimProperty<OfflineStatus> getStatus() { return Status; }
        public OfflineRecord setStatus(TrimProperty<OfflineStatus> value) { this.Status = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public OfflineRecord setTitle(TrimStringProperty value) { this.Title = value; return this; }
        private static Object responseType = OfflineRecordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single OfflineRecord by Uri or Name.
    */
    @Route(Path="/OfflineRecord/{Id*}", Verbs="GET")
    @Api("Fetch a single OfflineRecord by Uri or Name.")
    public static class OfflineRecordFind extends TrimMainObjectByUri implements IReturn<OfflineRecordsResponse>
    {
        
        private static Object responseType = OfflineRecordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Origins filtered using a search string.
    */
    @Route(Path="/Origin", Verbs="GET")
    @Api("Fetch a collection of Origins filtered using a search string.")
    public static class Origins extends TrimMainObjectSearch implements IReturn<OriginsResponse>
    {
        
        private static Object responseType = OriginsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Origin object.
    */
    @Route(Path="/Origin", Verbs="POST")
    @Api("Update a Origin object.")
    @DataContract
    public static class Origin extends TrimMainObject implements IReturn<OriginsResponse>
    {
        /**
        * Indicates the end of an import batch.
        */
        @DataMember
        @ApiMember(Name="EndBatch", ParameterType="form", Verb="POST", Description="Indicates the end of an import batch.")
        public EndBatch EndBatch = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="OriginAccessControl")
        @SerializedName("OriginAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="OriginAutoStart")
        @SerializedName("OriginAutoStart")
        @ApiMember(Name="OriginAutoStart", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoStart = null;

        @DataMember(Name="OriginContainerCreation")
        @SerializedName("OriginContainerCreation")
        @ApiMember(Name="OriginContainerCreation", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerCreation = null;

        @DataMember(Name="OriginContainerDateInterval")
        @SerializedName("OriginContainerDateInterval")
        @ApiMember(Name="OriginContainerDateInterval", DataType="string", ParameterType="form")
        public TrimProperty<DateIntervalSing> ContainerDateInterval = null;

        @DataMember(Name="OriginContainerHasDateRange")
        @SerializedName("OriginContainerHasDateRange")
        @ApiMember(Name="OriginContainerHasDateRange", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerHasDateRange = null;

        @DataMember(Name="OriginContainerPerOwner")
        @SerializedName("OriginContainerPerOwner")
        @ApiMember(Name="OriginContainerPerOwner", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerPerOwner = null;

        @DataMember(Name="OriginContainerPerUserField")
        @SerializedName("OriginContainerPerUserField")
        @ApiMember(Name="OriginContainerPerUserField", DataType="long", ParameterType="form", Verb="POST")
        public FieldDefinitionRef ContainerPerUserField = null;

        @DataMember(Name="OriginContainerSizeThreshold")
        @SerializedName("OriginContainerSizeThreshold")
        @ApiMember(Name="OriginContainerSizeThreshold", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ContainerSizeThreshold = null;

        @DataMember(Name="OriginContainerType")
        @SerializedName("OriginContainerType")
        @ApiMember(Name="OriginContainerType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef ContainerType = null;

        @DataMember(Name="OriginDateLastLoaded")
        @SerializedName("OriginDateLastLoaded")
        @ApiMember(Name="OriginDateLastLoaded", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateLastLoaded = null;

        @DataMember(Name="OriginDateModified")
        @SerializedName("OriginDateModified")
        @ApiMember(Name="OriginDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="OriginDefaultAuthor")
        @SerializedName("OriginDefaultAuthor")
        @ApiMember(Name="OriginDefaultAuthor", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef DefaultAuthor = null;

        @DataMember(Name="OriginDefaultClassification")
        @SerializedName("OriginDefaultClassification")
        @ApiMember(Name="OriginDefaultClassification", DataType="long", ParameterType="form", Verb="POST")
        public ClassificationRef DefaultClassification = null;

        @DataMember(Name="OriginDefaultContainer")
        @SerializedName("OriginDefaultContainer")
        @ApiMember(Name="OriginDefaultContainer", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef DefaultContainer = null;

        @DataMember(Name="OriginDefaultCreator")
        @SerializedName("OriginDefaultCreator")
        @ApiMember(Name="OriginDefaultCreator", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef DefaultCreator = null;

        @DataMember(Name="OriginDefaultHomeLocation")
        @SerializedName("OriginDefaultHomeLocation")
        @ApiMember(Name="OriginDefaultHomeLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef DefaultHomeLocation = null;

        @DataMember(Name="OriginDefaultOwnerLocation")
        @SerializedName("OriginDefaultOwnerLocation")
        @ApiMember(Name="OriginDefaultOwnerLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef DefaultOwnerLocation = null;

        @DataMember(Name="OriginDefaultRecordType")
        @SerializedName("OriginDefaultRecordType")
        @ApiMember(Name="OriginDefaultRecordType", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public RecordTypeRef DefaultRecordType = null;

        @DataMember(Name="OriginDefaultSchedule")
        @SerializedName("OriginDefaultSchedule")
        @ApiMember(Name="OriginDefaultSchedule", DataType="long", ParameterType="form", Verb="POST")
        public ScheduleRef DefaultSchedule = null;

        @DataMember(Name="OriginExtension")
        @SerializedName("OriginExtension")
        @ApiMember(Name="OriginExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="OriginKeepCheckedOut")
        @SerializedName("OriginKeepCheckedOut")
        @ApiMember(Name="OriginKeepCheckedOut", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> KeepCheckedOut = null;

        @DataMember(Name="OriginLocationMatching")
        @SerializedName("OriginLocationMatching")
        @ApiMember(Name="OriginLocationMatching", DataType="string", ParameterType="form")
        public TrimProperty<LocationMatchType> LocationMatching = null;

        @DataMember(Name="OriginMakeNewRevision")
        @SerializedName("OriginMakeNewRevision")
        @ApiMember(Name="OriginMakeNewRevision", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MakeNewRevision = null;

        @DataMember(Name="OriginName")
        @SerializedName("OriginName")
        @ApiMember(Name="OriginName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="OriginNotes")
        @SerializedName("OriginNotes")
        @ApiMember(Name="OriginNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="OriginOriginLocation")
        @SerializedName("OriginOriginLocation")
        @ApiMember(Name="OriginOriginLocation", DataType="string", ParameterType="form")
        public TrimStringProperty OriginLocation = null;

        @DataMember(Name="OriginRunsOnMachine")
        @SerializedName("OriginRunsOnMachine")
        @ApiMember(Name="OriginRunsOnMachine", DataType="string", ParameterType="form")
        public TrimStringProperty RunsOnMachine = null;

        @DataMember(Name="OriginSize")
        @SerializedName("OriginSize")
        @ApiMember(Name="OriginSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Size = null;

        @DataMember(Name="OriginStore")
        @SerializedName("OriginStore")
        @ApiMember(Name="OriginStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef Store = null;

        @DataMember(Name="OriginStoreId")
        @SerializedName("OriginStoreId")
        @ApiMember(Name="OriginStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty StoreId = null;

        @DataMember(Name="OriginTimeFrom")
        @SerializedName("OriginTimeFrom")
        @ApiMember(Name="OriginTimeFrom", DataType="int", ParameterType="form")
        public TrimProperty<Integer> TimeFrom = null;

        @DataMember(Name="OriginTimeTo")
        @SerializedName("OriginTimeTo")
        @ApiMember(Name="OriginTimeTo", DataType="int", ParameterType="form")
        public TrimProperty<Integer> TimeTo = null;

        @DataMember(Name="OriginTypeOfOrigin")
        @SerializedName("OriginTypeOfOrigin")
        @ApiMember(Name="OriginTypeOfOrigin", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<OriginType> TypeOfOrigin = null;
        
        public EndBatch getEndBatch() { return EndBatch; }
        public Origin setEndBatch(EndBatch value) { this.EndBatch = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Origin setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Origin setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Origin setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Boolean> getAutoStart() { return AutoStart; }
        public Origin setAutoStart(TrimProperty<Boolean> value) { this.AutoStart = value; return this; }
        public TrimProperty<Boolean> getContainerCreation() { return ContainerCreation; }
        public Origin setContainerCreation(TrimProperty<Boolean> value) { this.ContainerCreation = value; return this; }
        public TrimProperty<DateIntervalSing> getContainerDateInterval() { return ContainerDateInterval; }
        public Origin setContainerDateInterval(TrimProperty<DateIntervalSing> value) { this.ContainerDateInterval = value; return this; }
        public TrimProperty<Boolean> getContainerHasDateRange() { return ContainerHasDateRange; }
        public Origin setContainerHasDateRange(TrimProperty<Boolean> value) { this.ContainerHasDateRange = value; return this; }
        public TrimProperty<Boolean> getContainerPerOwner() { return ContainerPerOwner; }
        public Origin setContainerPerOwner(TrimProperty<Boolean> value) { this.ContainerPerOwner = value; return this; }
        public FieldDefinitionRef getContainerPerUserField() { return ContainerPerUserField; }
        public Origin setContainerPerUserField(FieldDefinitionRef value) { this.ContainerPerUserField = value; return this; }
        public TrimProperty<Integer> getContainerSizeThreshold() { return ContainerSizeThreshold; }
        public Origin setContainerSizeThreshold(TrimProperty<Integer> value) { this.ContainerSizeThreshold = value; return this; }
        public RecordTypeRef getContainerType() { return ContainerType; }
        public Origin setContainerType(RecordTypeRef value) { this.ContainerType = value; return this; }
        public TrimDateTime getDateLastLoaded() { return DateLastLoaded; }
        public Origin setDateLastLoaded(TrimDateTime value) { this.DateLastLoaded = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public Origin setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public LocationRef getDefaultAuthor() { return DefaultAuthor; }
        public Origin setDefaultAuthor(LocationRef value) { this.DefaultAuthor = value; return this; }
        public ClassificationRef getDefaultClassification() { return DefaultClassification; }
        public Origin setDefaultClassification(ClassificationRef value) { this.DefaultClassification = value; return this; }
        public RecordRef getDefaultContainer() { return DefaultContainer; }
        public Origin setDefaultContainer(RecordRef value) { this.DefaultContainer = value; return this; }
        public LocationRef getDefaultCreator() { return DefaultCreator; }
        public Origin setDefaultCreator(LocationRef value) { this.DefaultCreator = value; return this; }
        public LocationRef getDefaultHomeLocation() { return DefaultHomeLocation; }
        public Origin setDefaultHomeLocation(LocationRef value) { this.DefaultHomeLocation = value; return this; }
        public LocationRef getDefaultOwnerLocation() { return DefaultOwnerLocation; }
        public Origin setDefaultOwnerLocation(LocationRef value) { this.DefaultOwnerLocation = value; return this; }
        public RecordTypeRef getDefaultRecordType() { return DefaultRecordType; }
        public Origin setDefaultRecordType(RecordTypeRef value) { this.DefaultRecordType = value; return this; }
        public ScheduleRef getDefaultSchedule() { return DefaultSchedule; }
        public Origin setDefaultSchedule(ScheduleRef value) { this.DefaultSchedule = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public Origin setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimProperty<Boolean> getKeepCheckedOut() { return KeepCheckedOut; }
        public Origin setKeepCheckedOut(TrimProperty<Boolean> value) { this.KeepCheckedOut = value; return this; }
        public TrimProperty<LocationMatchType> getLocationMatching() { return LocationMatching; }
        public Origin setLocationMatching(TrimProperty<LocationMatchType> value) { this.LocationMatching = value; return this; }
        public TrimProperty<Boolean> getMakeNewRevision() { return MakeNewRevision; }
        public Origin setMakeNewRevision(TrimProperty<Boolean> value) { this.MakeNewRevision = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Origin setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Origin setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Origin setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getOriginLocation() { return OriginLocation; }
        public Origin setOriginLocation(TrimStringProperty value) { this.OriginLocation = value; return this; }
        public TrimStringProperty getRunsOnMachine() { return RunsOnMachine; }
        public Origin setRunsOnMachine(TrimStringProperty value) { this.RunsOnMachine = value; return this; }
        public TrimProperty<Long> getSize() { return Size; }
        public Origin setSize(TrimProperty<Long> value) { this.Size = value; return this; }
        public ElectronicStoreRef getStore() { return Store; }
        public Origin setStore(ElectronicStoreRef value) { this.Store = value; return this; }
        public TrimStringProperty getStoreId() { return StoreId; }
        public Origin setStoreId(TrimStringProperty value) { this.StoreId = value; return this; }
        public TrimProperty<Integer> getTimeFrom() { return TimeFrom; }
        public Origin setTimeFrom(TrimProperty<Integer> value) { this.TimeFrom = value; return this; }
        public TrimProperty<Integer> getTimeTo() { return TimeTo; }
        public Origin setTimeTo(TrimProperty<Integer> value) { this.TimeTo = value; return this; }
        public TrimProperty<OriginType> getTypeOfOrigin() { return TypeOfOrigin; }
        public Origin setTypeOfOrigin(TrimProperty<OriginType> value) { this.TypeOfOrigin = value; return this; }
        private static Object responseType = OriginsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Origin by Uri or Name.
    */
    @Route(Path="/Origin/{Id*}", Verbs="GET")
    @Api("Fetch a single Origin by Uri or Name.")
    public static class OriginFind extends TrimMainObjectByUri implements IReturn<OriginsResponse>
    {
        
        private static Object responseType = OriginsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of OriginHistorys filtered using a search string.
    */
    @Route(Path="/OriginHistory", Verbs="GET")
    @Api("Fetch a collection of OriginHistorys filtered using a search string.")
    public static class OriginHistorys extends TrimMainObjectSearch implements IReturn<OriginHistorysResponse>
    {
        
        private static Object responseType = OriginHistorysResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a OriginHistory object.
    */
    @Route(Path="/OriginHistory", Verbs="POST")
    @Api("Update a OriginHistory object.")
    @DataContract
    public static class OriginHistory extends TrimMainObject implements IReturn<OriginHistorysResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="OriginHistoryDateRun")
        @SerializedName("OriginHistoryDateRun")
        @ApiMember(Name="OriginHistoryDateRun", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateRun = null;

        @DataMember(Name="OriginHistoryLocationsCreated")
        @SerializedName("OriginHistoryLocationsCreated")
        @ApiMember(Name="OriginHistoryLocationsCreated", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> LocationsCreated = null;

        @DataMember(Name="OriginHistoryLocationsInError")
        @SerializedName("OriginHistoryLocationsInError")
        @ApiMember(Name="OriginHistoryLocationsInError", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> LocationsInError = null;

        @DataMember(Name="OriginHistoryName")
        @SerializedName("OriginHistoryName")
        @ApiMember(Name="OriginHistoryName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Name = null;

        @DataMember(Name="OriginHistoryOrigin")
        @SerializedName("OriginHistoryOrigin")
        @ApiMember(Name="OriginHistoryOrigin", DataType="long", ParameterType="form", Verb="POST")
        public OriginRef Origin = null;

        @DataMember(Name="OriginHistoryOriginLocationUsed")
        @SerializedName("OriginHistoryOriginLocationUsed")
        @ApiMember(Name="OriginHistoryOriginLocationUsed", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty OriginLocationUsed = null;

        @DataMember(Name="OriginHistoryRecordsCreated")
        @SerializedName("OriginHistoryRecordsCreated")
        @ApiMember(Name="OriginHistoryRecordsCreated", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsCreated = null;

        @DataMember(Name="OriginHistoryRecordsInError")
        @SerializedName("OriginHistoryRecordsInError")
        @ApiMember(Name="OriginHistoryRecordsInError", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsInError = null;

        @DataMember(Name="OriginHistoryRecordsUpdated")
        @SerializedName("OriginHistoryRecordsUpdated")
        @ApiMember(Name="OriginHistoryRecordsUpdated", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsUpdated = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public OriginHistory setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getDateRun() { return DateRun; }
        public OriginHistory setDateRun(TrimDateTime value) { this.DateRun = value; return this; }
        public TrimProperty<Long> getLocationsCreated() { return LocationsCreated; }
        public OriginHistory setLocationsCreated(TrimProperty<Long> value) { this.LocationsCreated = value; return this; }
        public TrimProperty<Long> getLocationsInError() { return LocationsInError; }
        public OriginHistory setLocationsInError(TrimProperty<Long> value) { this.LocationsInError = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public OriginHistory setName(TrimStringProperty value) { this.Name = value; return this; }
        public OriginRef getOrigin() { return Origin; }
        public OriginHistory setOrigin(OriginRef value) { this.Origin = value; return this; }
        public TrimStringProperty getOriginLocationUsed() { return OriginLocationUsed; }
        public OriginHistory setOriginLocationUsed(TrimStringProperty value) { this.OriginLocationUsed = value; return this; }
        public TrimProperty<Long> getRecordsCreated() { return RecordsCreated; }
        public OriginHistory setRecordsCreated(TrimProperty<Long> value) { this.RecordsCreated = value; return this; }
        public TrimProperty<Long> getRecordsInError() { return RecordsInError; }
        public OriginHistory setRecordsInError(TrimProperty<Long> value) { this.RecordsInError = value; return this; }
        public TrimProperty<Long> getRecordsUpdated() { return RecordsUpdated; }
        public OriginHistory setRecordsUpdated(TrimProperty<Long> value) { this.RecordsUpdated = value; return this; }
        private static Object responseType = OriginHistorysResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single OriginHistory by Uri or Name.
    */
    @Route(Path="/OriginHistory/{Id*}", Verbs="GET")
    @Api("Fetch a single OriginHistory by Uri or Name.")
    public static class OriginHistoryFind extends TrimMainObjectByUri implements IReturn<OriginHistorysResponse>
    {
        
        private static Object responseType = OriginHistorysResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Records filtered using a search string.
    */
    @Route(Path="/Record", Verbs="GET")
    // @Route(Path="/Expenses", Verbs="GET,POST")
    // @Route(Path="/RecordUploadExample", Verbs="GET,POST")
    @Api("Fetch a collection of Records filtered using a search string.")
    public static class Records extends TrimMainObjectSearch implements IReturn<RecordsResponse>
    {
        
        private static Object responseType = RecordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Record by Uri or Name.
    */
    @Route(Path="/Record/{Id*}", Verbs="GET")
    // @Route(Path="/ExpenseClaim/{id}", Verbs="GET")
    // @Route(Path="/ExpenseItem/{id}", Verbs="GET")
    @Api("Fetch a single Record by Uri or Name.")
    public static class RecordFind extends TrimMainObjectByUri implements IReturn<RecordsResponse>
    {
        
        private static Object responseType = RecordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of RecordActions filtered using a search string.
    */
    @Route(Path="/RecordAction", Verbs="GET")
    @Api("Fetch a collection of RecordActions filtered using a search string.")
    public static class RecordActions extends TrimMainObjectSearch implements IReturn<RecordActionsResponse>
    {
        
        private static Object responseType = RecordActionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a RecordAction object.
    */
    @Route(Path="/RecordAction", Verbs="POST")
    @Api("Update a RecordAction object.")
    @DataContract
    public static class RecordAction extends TrimMainObject implements IReturn<RecordActionsResponse>
    {
        /**
        * Complete the record Action
        */
        @DataMember
        @ApiMember(Name="CompleteRecordAction", ParameterType="form", Verb="POST", Description="Complete the record Action")
        public CompleteRecordAction CompleteRecordAction = null;

        /**
        * Uncomplete the record Action
        */
        @DataMember
        @ApiMember(Name="UncompleteRecordAction", ParameterType="form", Verb="POST", Description="Uncomplete the record Action")
        public UncompleteRecordAction UncompleteRecordAction = null;

        /**
        * Reassign the record Action
        */
        @DataMember
        @ApiMember(Name="ReassignRecordAction", ParameterType="form", Verb="POST", Description="Reassign the record Action")
        public ReassignRecordAction ReassignRecordAction = null;

        /**
        * Set the cost of a record Action
        */
        @DataMember
        @ApiMember(Name="SetRecordActionCost", ParameterType="form", Verb="POST", Description="Set the cost of a record Action")
        public SetRecordActionCost SetRecordActionCost = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordActionActionName")
        @SerializedName("RecordActionActionName")
        @ApiMember(Name="RecordActionActionName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ActionName = null;

        @DataMember(Name="RecordActionActualDays")
        @SerializedName("RecordActionActualDays")
        @ApiMember(Name="RecordActionActualDays", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ActualDays = null;

        @DataMember(Name="RecordActionActualDuration")
        @SerializedName("RecordActionActualDuration")
        @ApiMember(Name="RecordActionActualDuration", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ActualDuration = null;

        @DataMember(Name="RecordActionActualHours")
        @SerializedName("RecordActionActualHours")
        @ApiMember(Name="RecordActionActualHours", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ActualHours = null;

        @DataMember(Name="RecordActionActualMinutes")
        @SerializedName("RecordActionActualMinutes")
        @ApiMember(Name="RecordActionActualMinutes", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ActualMinutes = null;

        @DataMember(Name="RecordActionAssignedBy")
        @SerializedName("RecordActionAssignedBy")
        @ApiMember(Name="RecordActionAssignedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef AssignedBy = null;

        @DataMember(Name="RecordActionAttachDate")
        @SerializedName("RecordActionAttachDate")
        @ApiMember(Name="RecordActionAttachDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime AttachDate = null;

        @DataMember(Name="RecordActionBarcode")
        @SerializedName("RecordActionBarcode")
        @ApiMember(Name="RecordActionBarcode", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Barcode = null;

        @DataMember(Name="RecordActionCompletedBy")
        @SerializedName("RecordActionCompletedBy")
        @ApiMember(Name="RecordActionCompletedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef CompletedBy = null;

        @DataMember(Name="RecordActionCompletedOnTime")
        @SerializedName("RecordActionCompletedOnTime")
        @ApiMember(Name="RecordActionCompletedOnTime", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> CompletedOnTime = null;

        @DataMember(Name="RecordActionCost")
        @SerializedName("RecordActionCost")
        @ApiMember(Name="RecordActionCost", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> Cost = null;

        @DataMember(Name="RecordActionDays")
        @SerializedName("RecordActionDays")
        @ApiMember(Name="RecordActionDays", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> Days = null;

        @DataMember(Name="RecordActionDone")
        @SerializedName("RecordActionDone")
        @ApiMember(Name="RecordActionDone", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Done = null;

        @DataMember(Name="RecordActionDueDate")
        @SerializedName("RecordActionDueDate")
        @ApiMember(Name="RecordActionDueDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DueDate = null;

        @DataMember(Name="RecordActionDuration")
        @SerializedName("RecordActionDuration")
        @ApiMember(Name="RecordActionDuration", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Duration = null;

        @DataMember(Name="RecordActionEndDate")
        @SerializedName("RecordActionEndDate")
        @ApiMember(Name="RecordActionEndDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime EndDate = null;

        @DataMember(Name="RecordActionHours")
        @SerializedName("RecordActionHours")
        @ApiMember(Name="RecordActionHours", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> Hours = null;

        @DataMember(Name="RecordActionIsReadyToStart")
        @SerializedName("RecordActionIsReadyToStart")
        @ApiMember(Name="RecordActionIsReadyToStart", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsReadyToStart = null;

        @DataMember(Name="RecordActionMinutes")
        @SerializedName("RecordActionMinutes")
        @ApiMember(Name="RecordActionMinutes", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> Minutes = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="RecordActionNotes")
        @SerializedName("RecordActionNotes")
        @ApiMember(Name="RecordActionNotes", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Notes = null;

        @DataMember(Name="RecordActionOverdue")
        @SerializedName("RecordActionOverdue")
        @ApiMember(Name="RecordActionOverdue", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Overdue = null;

        @DataMember(Name="RecordActionParentRecordAction")
        @SerializedName("RecordActionParentRecordAction")
        @ApiMember(Name="RecordActionParentRecordAction", DataType="long", ParameterType="form", Verb="POST")
        public RecordActionRef ParentRecordAction = null;

        @DataMember(Name="RecordActionPercentComplete")
        @SerializedName("RecordActionPercentComplete")
        @ApiMember(Name="RecordActionPercentComplete", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> PercentComplete = null;

        @DataMember(Name="RecordActionProcedure")
        @SerializedName("RecordActionProcedure")
        @ApiMember(Name="RecordActionProcedure", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Procedure = null;

        @DataMember(Name="RecordActionRecord")
        @SerializedName("RecordActionRecord")
        @ApiMember(Name="RecordActionRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="RecordActionResponsibility")
        @SerializedName("RecordActionResponsibility")
        @ApiMember(Name="RecordActionResponsibility", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Responsibility = null;

        @DataMember(Name="RecordActionStartDate")
        @SerializedName("RecordActionStartDate")
        @ApiMember(Name="RecordActionStartDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime StartDate = null;

        @DataMember(Name="RecordActionStatus")
        @SerializedName("RecordActionStatus")
        @ApiMember(Name="RecordActionStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Status = null;
        
        public CompleteRecordAction getCompleteRecordAction() { return CompleteRecordAction; }
        public RecordAction setCompleteRecordAction(CompleteRecordAction value) { this.CompleteRecordAction = value; return this; }
        public UncompleteRecordAction getUncompleteRecordAction() { return UncompleteRecordAction; }
        public RecordAction setUncompleteRecordAction(UncompleteRecordAction value) { this.UncompleteRecordAction = value; return this; }
        public ReassignRecordAction getReassignRecordAction() { return ReassignRecordAction; }
        public RecordAction setReassignRecordAction(ReassignRecordAction value) { this.ReassignRecordAction = value; return this; }
        public SetRecordActionCost getSetRecordActionCost() { return SetRecordActionCost; }
        public RecordAction setSetRecordActionCost(SetRecordActionCost value) { this.SetRecordActionCost = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordAction setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getActionName() { return ActionName; }
        public RecordAction setActionName(TrimStringProperty value) { this.ActionName = value; return this; }
        public TrimProperty<Integer> getActualDays() { return ActualDays; }
        public RecordAction setActualDays(TrimProperty<Integer> value) { this.ActualDays = value; return this; }
        public TrimStringProperty getActualDuration() { return ActualDuration; }
        public RecordAction setActualDuration(TrimStringProperty value) { this.ActualDuration = value; return this; }
        public TrimProperty<Integer> getActualHours() { return ActualHours; }
        public RecordAction setActualHours(TrimProperty<Integer> value) { this.ActualHours = value; return this; }
        public TrimProperty<Integer> getActualMinutes() { return ActualMinutes; }
        public RecordAction setActualMinutes(TrimProperty<Integer> value) { this.ActualMinutes = value; return this; }
        public LocationRef getAssignedBy() { return AssignedBy; }
        public RecordAction setAssignedBy(LocationRef value) { this.AssignedBy = value; return this; }
        public TrimDateTime getAttachDate() { return AttachDate; }
        public RecordAction setAttachDate(TrimDateTime value) { this.AttachDate = value; return this; }
        public TrimStringProperty getBarcode() { return Barcode; }
        public RecordAction setBarcode(TrimStringProperty value) { this.Barcode = value; return this; }
        public LocationRef getCompletedBy() { return CompletedBy; }
        public RecordAction setCompletedBy(LocationRef value) { this.CompletedBy = value; return this; }
        public TrimProperty<Boolean> getCompletedOnTime() { return CompletedOnTime; }
        public RecordAction setCompletedOnTime(TrimProperty<Boolean> value) { this.CompletedOnTime = value; return this; }
        public TrimProperty<BigDecimal> getCost() { return Cost; }
        public RecordAction setCost(TrimProperty<BigDecimal> value) { this.Cost = value; return this; }
        public TrimProperty<Integer> getDays() { return Days; }
        public RecordAction setDays(TrimProperty<Integer> value) { this.Days = value; return this; }
        public TrimProperty<Boolean> getDone() { return Done; }
        public RecordAction setDone(TrimProperty<Boolean> value) { this.Done = value; return this; }
        public TrimDateTime getDueDate() { return DueDate; }
        public RecordAction setDueDate(TrimDateTime value) { this.DueDate = value; return this; }
        public TrimStringProperty getDuration() { return Duration; }
        public RecordAction setDuration(TrimStringProperty value) { this.Duration = value; return this; }
        public TrimDateTime getEndDate() { return EndDate; }
        public RecordAction setEndDate(TrimDateTime value) { this.EndDate = value; return this; }
        public TrimProperty<Integer> getHours() { return Hours; }
        public RecordAction setHours(TrimProperty<Integer> value) { this.Hours = value; return this; }
        public TrimProperty<Boolean> getIsReadyToStart() { return IsReadyToStart; }
        public RecordAction setIsReadyToStart(TrimProperty<Boolean> value) { this.IsReadyToStart = value; return this; }
        public TrimProperty<Integer> getMinutes() { return Minutes; }
        public RecordAction setMinutes(TrimProperty<Integer> value) { this.Minutes = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public RecordAction setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public RecordAction setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getOverdue() { return Overdue; }
        public RecordAction setOverdue(TrimProperty<Boolean> value) { this.Overdue = value; return this; }
        public RecordActionRef getParentRecordAction() { return ParentRecordAction; }
        public RecordAction setParentRecordAction(RecordActionRef value) { this.ParentRecordAction = value; return this; }
        public TrimProperty<Integer> getPercentComplete() { return PercentComplete; }
        public RecordAction setPercentComplete(TrimProperty<Integer> value) { this.PercentComplete = value; return this; }
        public TrimProperty<Boolean> getProcedure() { return Procedure; }
        public RecordAction setProcedure(TrimProperty<Boolean> value) { this.Procedure = value; return this; }
        public RecordRef getRecord() { return Record; }
        public RecordAction setRecord(RecordRef value) { this.Record = value; return this; }
        public LocationRef getResponsibility() { return Responsibility; }
        public RecordAction setResponsibility(LocationRef value) { this.Responsibility = value; return this; }
        public TrimDateTime getStartDate() { return StartDate; }
        public RecordAction setStartDate(TrimDateTime value) { this.StartDate = value; return this; }
        public TrimStringProperty getStatus() { return Status; }
        public RecordAction setStatus(TrimStringProperty value) { this.Status = value; return this; }
        private static Object responseType = RecordActionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single RecordAction by Uri or Name.
    */
    @Route(Path="/RecordAction/{Id*}", Verbs="GET")
    @Api("Fetch a single RecordAction by Uri or Name.")
    public static class RecordActionFind extends TrimMainObjectByUri implements IReturn<RecordActionsResponse>
    {
        
        private static Object responseType = RecordActionsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of RecordTypes filtered using a search string.
    */
    @Route(Path="/RecordType", Verbs="GET")
    // @Route(Path="/NewExpenseClaim", Verbs="GET,POST")
    // @Route(Path="/NewExpenseItem", Verbs="GET,POST")
    // @Route(Path="/CreateRecordExample", Verbs="GET,POST")
    @Api("Fetch a collection of RecordTypes filtered using a search string.")
    public static class RecordTypes extends TrimMainObjectSearch implements IReturn<RecordTypesResponse>
    {
        
        private static Object responseType = RecordTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a RecordType object.
    */
    @Route(Path="/RecordType", Verbs="POST")
    @Api("Update a RecordType object.")
    @DataContract
    public static class RecordType extends TrimMainObject implements IReturn<RecordTypesResponse>
    {
        @DataMember(Name="DefaultAccessControlList")
        @SerializedName("DefaultAccessControlList")
        public TrimAccessControlList DefaultAccessControlList = null;

        @DataMember(Name="EnabledActiveAuditEvents")
        @SerializedName("EnabledActiveAuditEvents")
        public ArrayList<HistoryTypes> EnabledActiveAuditEvents = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        /**
        * Set a Field Definition to be used by a Record Type.
        */
        @DataMember
        @ApiMember(Name="SetUsesField", ParameterType="form", Verb="POST", Description="Set a Field Definition to be used by a Record Type.")
        public SetUsesField SetUsesField = null;

        /**
        * Remove a Field Definition to be used by a Record Type.
        */
        @DataMember
        @ApiMember(Name="RemoveUsesField", ParameterType="form", Verb="POST", Description="Remove a Field Definition to be used by a Record Type.")
        public RemoveUsesField RemoveUsesField = null;

        /**
        * Turns on or off the logging of the nominated event within the active audit event log
        */
        @DataMember
        @ApiMember(Name="EnableActiveAuditEvent", ParameterType="form", Verb="POST", Description="Turns on or off the logging of the nominated event within the active audit event log")
        public EnableActiveAuditEvent EnableActiveAuditEvent = null;

        @DataMember(Name="SecurityProfile")
        @SerializedName("SecurityProfile")
        public TrimSecurityProfile SecurityProfile = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="RecordTypeNewType")
        @SerializedName("RecordTypeNewType")
        @ApiMember(Name="RecordTypeNewType", DataType="string", ParameterType="form", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="ChildAutoSubFolders")
        @SerializedName("ChildAutoSubFolders")
        public ArrayList<RecordTypeAutoSubFolder> ChildAutoSubFolders = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="RecordTypeAccessControl")
        @SerializedName("RecordTypeAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="RecordTypeActiveFrom")
        @SerializedName("RecordTypeActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="RecordTypeActiveTo")
        @SerializedName("RecordTypeActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="RecordTypeActiveDescription")
        @SerializedName("RecordTypeActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="RecordTypeIsActive")
        @SerializedName("RecordTypeIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="RecordTypeAcknowledgeRequests")
        @SerializedName("RecordTypeAcknowledgeRequests")
        @ApiMember(Name="RecordTypeAcknowledgeRequests", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AcknowledgeRequests = null;

        @DataMember(Name="RecordTypeAction")
        @SerializedName("RecordTypeAction")
        @ApiMember(Name="RecordTypeAction", DataType="long", ParameterType="form", Verb="POST")
        public ActionDefRef Action = null;

        @DataMember(Name="RecordTypeAllowBlankFreeTextTitle")
        @SerializedName("RecordTypeAllowBlankFreeTextTitle")
        @ApiMember(Name="RecordTypeAllowBlankFreeTextTitle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowBlankFreeTextTitle = null;

        @DataMember(Name="RecordTypeAllowMultipleExtensions")
        @SerializedName("RecordTypeAllowMultipleExtensions")
        @ApiMember(Name="RecordTypeAllowMultipleExtensions", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowMultipleExtensions = null;

        @DataMember(Name="RecordTypeAllowParts")
        @SerializedName("RecordTypeAllowParts")
        @ApiMember(Name="RecordTypeAllowParts", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowParts = null;

        @DataMember(Name="RecordTypeAllowReplace")
        @SerializedName("RecordTypeAllowReplace")
        @ApiMember(Name="RecordTypeAllowReplace", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowReplace = null;

        @DataMember(Name="RecordTypeAllowVersions")
        @SerializedName("RecordTypeAllowVersions")
        @ApiMember(Name="RecordTypeAllowVersions", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowVersions = null;

        @DataMember(Name="RecordTypeAlwaysAuditSecurityBreaches")
        @SerializedName("RecordTypeAlwaysAuditSecurityBreaches")
        @ApiMember(Name="RecordTypeAlwaysAuditSecurityBreaches", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AlwaysAuditSecurityBreaches = null;

        @DataMember(Name="RecordTypeAnnotateOnly")
        @SerializedName("RecordTypeAnnotateOnly")
        @ApiMember(Name="RecordTypeAnnotateOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnnotateOnly = null;

        @DataMember(Name="RecordTypeAnnotateWhenReadOnly")
        @SerializedName("RecordTypeAnnotateWhenReadOnly")
        @ApiMember(Name="RecordTypeAnnotateWhenReadOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnnotateWhenReadOnly = null;

        @DataMember(Name="RecordTypeAssignee")
        @SerializedName("RecordTypeAssignee")
        @ApiMember(Name="RecordTypeAssignee", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Assignee = null;

        @DataMember(Name="RecordTypeAuditCreateEventsOffline")
        @SerializedName("RecordTypeAuditCreateEventsOffline")
        @ApiMember(Name="RecordTypeAuditCreateEventsOffline", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AuditCreateEventsOffline = null;

        @DataMember(Name="RecordTypeAuditDeleteEventsOffline")
        @SerializedName("RecordTypeAuditDeleteEventsOffline")
        @ApiMember(Name="RecordTypeAuditDeleteEventsOffline", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AuditDeleteEventsOffline = null;

        @DataMember(Name="RecordTypeAuditModifyEventsOffline")
        @SerializedName("RecordTypeAuditModifyEventsOffline")
        @ApiMember(Name="RecordTypeAuditModifyEventsOffline", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AuditModifyEventsOffline = null;

        @DataMember(Name="RecordTypeAuthorizationMethod")
        @SerializedName("RecordTypeAuthorizationMethod")
        @ApiMember(Name="RecordTypeAuthorizationMethod", DataType="string", ParameterType="form")
        public TrimProperty<AuthorizationMethods> AuthorizationMethod = null;

        @DataMember(Name="RecordTypeAuthorizerReminderDays")
        @SerializedName("RecordTypeAuthorizerReminderDays")
        @ApiMember(Name="RecordTypeAuthorizerReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AuthorizerReminderDays = null;

        @DataMember(Name="RecordTypeBelongsToAMatter")
        @SerializedName("RecordTypeBelongsToAMatter")
        @ApiMember(Name="RecordTypeBelongsToAMatter", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> BelongsToAMatter = null;

        @DataMember(Name="RecordTypeBorrowingLimit")
        @SerializedName("RecordTypeBorrowingLimit")
        @ApiMember(Name="RecordTypeBorrowingLimit", DataType="int", ParameterType="form")
        public TrimProperty<Integer> BorrowingLimit = null;

        @DataMember(Name="RecordTypeCanHaveSharePointItems")
        @SerializedName("RecordTypeCanHaveSharePointItems")
        @ApiMember(Name="RecordTypeCanHaveSharePointItems", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanHaveSharePointItems = null;

        @DataMember(Name="RecordTypeChangeTitleWhenReadOnly")
        @SerializedName("RecordTypeChangeTitleWhenReadOnly")
        @ApiMember(Name="RecordTypeChangeTitleWhenReadOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ChangeTitleWhenReadOnly = null;

        @DataMember(Name="RecordTypeCheckDuplicateTitles")
        @SerializedName("RecordTypeCheckDuplicateTitles")
        @ApiMember(Name="RecordTypeCheckDuplicateTitles", DataType="string", ParameterType="form")
        public TrimProperty<GeneralExceptionHandling> CheckDuplicateTitles = null;

        @DataMember(Name="RecordTypeClassification")
        @SerializedName("RecordTypeClassification")
        @ApiMember(Name="RecordTypeClassification", DataType="long", ParameterType="form", Verb="POST")
        public ClassificationRef Classification = null;

        @DataMember(Name="RecordTypeClassificationMandatory")
        @SerializedName("RecordTypeClassificationMandatory")
        @ApiMember(Name="RecordTypeClassificationMandatory", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ClassificationMandatory = null;

        @DataMember(Name="RecordTypeClassOfRecord")
        @SerializedName("RecordTypeClassOfRecord")
        @ApiMember(Name="RecordTypeClassOfRecord", DataType="string", ParameterType="form")
        public TrimProperty<RecordClass> ClassOfRecord = null;

        @DataMember(Name="RecordTypeCompressPartNumber")
        @SerializedName("RecordTypeCompressPartNumber")
        @ApiMember(Name="RecordTypeCompressPartNumber", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CompressPartNumber = null;

        @DataMember(Name="RecordTypeConfirmEachNumber")
        @SerializedName("RecordTypeConfirmEachNumber")
        @ApiMember(Name="RecordTypeConfirmEachNumber", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ConfirmEachNumber = null;

        @DataMember(Name="RecordTypeContainerRule")
        @SerializedName("RecordTypeContainerRule")
        @ApiMember(Name="RecordTypeContainerRule", DataType="string", ParameterType="form")
        public TrimProperty<ContainmentRule> ContainerRule = null;

        @DataMember(Name="RecordTypeContentsRule")
        @SerializedName("RecordTypeContentsRule")
        @ApiMember(Name="RecordTypeContentsRule", DataType="string", ParameterType="form")
        public TrimProperty<ContainmentRule> ContentsRule = null;

        @DataMember(Name="RecordTypeDaysDue")
        @SerializedName("RecordTypeDaysDue")
        @ApiMember(Name="RecordTypeDaysDue", DataType="int", ParameterType="form")
        public TrimProperty<Integer> DaysDue = null;

        @DataMember(Name="RecordTypeDefaultJurisdiction")
        @SerializedName("RecordTypeDefaultJurisdiction")
        @ApiMember(Name="RecordTypeDefaultJurisdiction", DataType="long", ParameterType="form", Verb="POST")
        public JurisdictionRef DefaultJurisdiction = null;

        @DataMember(Name="RecordTypeDefaultSeries")
        @SerializedName("RecordTypeDefaultSeries")
        @ApiMember(Name="RecordTypeDefaultSeries", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef DefaultSeries = null;

        @DataMember(Name="RecordTypeDisposition")
        @SerializedName("RecordTypeDisposition")
        @ApiMember(Name="RecordTypeDisposition", DataType="string", ParameterType="form")
        public TrimProperty<RecordDisp> Disposition = null;

        @DataMember(Name="RecordTypeEditorReminderDays")
        @SerializedName("RecordTypeEditorReminderDays")
        @ApiMember(Name="RecordTypeEditorReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> EditorReminderDays = null;

        @DataMember(Name="RecordTypeEndUsersCanModify")
        @SerializedName("RecordTypeEndUsersCanModify")
        @ApiMember(Name="RecordTypeEndUsersCanModify", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EndUsersCanModify = null;

        @DataMember(Name="RecordTypeEsoActionType")
        @SerializedName("RecordTypeEsoActionType")
        @ApiMember(Name="RecordTypeEsoActionType", DataType="string", ParameterType="form")
        public TrimProperty<EsoActionType> EsoActionType = null;

        @DataMember(Name="RecordTypeEsoAllowEvents")
        @SerializedName("RecordTypeEsoAllowEvents")
        @ApiMember(Name="RecordTypeEsoAllowEvents", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EsoAllowEvents = null;

        @DataMember(Name="RecordTypeEsoDateType")
        @SerializedName("RecordTypeEsoDateType")
        @ApiMember(Name="RecordTypeEsoDateType", DataType="string", ParameterType="form")
        public TrimProperty<EsoDateType> EsoDateType = null;

        @DataMember(Name="RecordTypeEsoEnable")
        @SerializedName("RecordTypeEsoEnable")
        @ApiMember(Name="RecordTypeEsoEnable", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EsoEnable = null;

        @DataMember(Name="RecordTypeEsoMonths")
        @SerializedName("RecordTypeEsoMonths")
        @ApiMember(Name="RecordTypeEsoMonths", DataType="int", ParameterType="form")
        public TrimProperty<Integer> EsoMonths = null;

        @DataMember(Name="RecordTypeEsoStoreUri")
        @SerializedName("RecordTypeEsoStoreUri")
        @ApiMember(Name="RecordTypeEsoStoreUri", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef EsoStoreUri = null;

        @DataMember(Name="RecordTypeEsoYears")
        @SerializedName("RecordTypeEsoYears")
        @ApiMember(Name="RecordTypeEsoYears", DataType="int", ParameterType="form")
        public TrimProperty<Integer> EsoYears = null;

        @DataMember(Name="RecordTypeEStore")
        @SerializedName("RecordTypeEStore")
        @ApiMember(Name="RecordTypeEStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef EStore = null;

        @DataMember(Name="RecordTypeExtensionLimit")
        @SerializedName("RecordTypeExtensionLimit")
        @ApiMember(Name="RecordTypeExtensionLimit", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ExtensionLimit = null;

        @DataMember(Name="RecordTypeExternalId")
        @SerializedName("RecordTypeExternalId")
        @ApiMember(Name="RecordTypeExternalId", DataType="string", ParameterType="form")
        public TrimStringProperty ExternalId = null;

        @DataMember(Name="RecordTypeFinalisePreviousVersion")
        @SerializedName("RecordTypeFinalisePreviousVersion")
        @ApiMember(Name="RecordTypeFinalisePreviousVersion", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> FinalisePreviousVersion = null;

        @DataMember(Name="RecordTypeFinalReminderDays")
        @SerializedName("RecordTypeFinalReminderDays")
        @ApiMember(Name="RecordTypeFinalReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> FinalReminderDays = null;

        @DataMember(Name="RecordTypeFollowupReminderDays")
        @SerializedName("RecordTypeFollowupReminderDays")
        @ApiMember(Name="RecordTypeFollowupReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> FollowupReminderDays = null;

        @DataMember(Name="RecordTypeHideFreeTextTitle")
        @SerializedName("RecordTypeHideFreeTextTitle")
        @ApiMember(Name="RecordTypeHideFreeTextTitle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HideFreeTextTitle = null;

        @DataMember(Name="RecordTypeHomeCanBeSpace")
        @SerializedName("RecordTypeHomeCanBeSpace")
        @ApiMember(Name="RecordTypeHomeCanBeSpace", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HomeCanBeSpace = null;

        @DataMember(Name="RecordTypeHomeLocation")
        @SerializedName("RecordTypeHomeLocation")
        @ApiMember(Name="RecordTypeHomeLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef HomeLocation = null;

        @DataMember(Name="RecordTypeInsecureContainer")
        @SerializedName("RecordTypeInsecureContainer")
        @ApiMember(Name="RecordTypeInsecureContainer", DataType="string", ParameterType="form")
        public TrimProperty<ContainerSecurityHandling> InsecureContainer = null;

        @DataMember(Name="RecordTypeInsecureDocument")
        @SerializedName("RecordTypeInsecureDocument")
        @ApiMember(Name="RecordTypeInsecureDocument", DataType="string", ParameterType="form")
        public TrimProperty<DocumentSecurityHandling> InsecureDocument = null;

        @DataMember(Name="RecordTypeLastNumber")
        @SerializedName("RecordTypeLastNumber")
        @ApiMember(Name="RecordTypeLastNumber", DataType="string", ParameterType="form")
        public TrimStringProperty LastNumber = null;

        @DataMember(Name="RecordTypeLevel")
        @SerializedName("RecordTypeLevel")
        @ApiMember(Name="RecordTypeLevel", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Level = null;

        @DataMember(Name="RecordTypeMediaType")
        @SerializedName("RecordTypeMediaType")
        @ApiMember(Name="RecordTypeMediaType", DataType="string", ParameterType="form")
        public TrimProperty<MediaTypes> MediaType = null;

        @DataMember(Name="RecordTypeMoveWhenReadOnly")
        @SerializedName("RecordTypeMoveWhenReadOnly")
        @ApiMember(Name="RecordTypeMoveWhenReadOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MoveWhenReadOnly = null;

        @DataMember(Name="RecordTypeName")
        @SerializedName("RecordTypeName")
        @ApiMember(Name="RecordTypeName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="RecordTypeNeedsAuthorizationProcess")
        @SerializedName("RecordTypeNeedsAuthorizationProcess")
        @ApiMember(Name="RecordTypeNeedsAuthorizationProcess", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NeedsAuthorizationProcess = null;

        @DataMember(Name="RecordTypeNeedsClassification")
        @SerializedName("RecordTypeNeedsClassification")
        @ApiMember(Name="RecordTypeNeedsClassification", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> NeedsClassification = null;

        @DataMember(Name="RecordTypeNeedsReviewProcess")
        @SerializedName("RecordTypeNeedsReviewProcess")
        @ApiMember(Name="RecordTypeNeedsReviewProcess", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NeedsReviewProcess = null;

        @DataMember(Name="RecordTypeNewPartCreationRule")
        @SerializedName("RecordTypeNewPartCreationRule")
        @ApiMember(Name="RecordTypeNewPartCreationRule", DataType="long", ParameterType="form", Verb="POST")
        public AutoPartRuleRef NewPartCreationRule = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="RecordTypeNotes")
        @SerializedName("RecordTypeNotes")
        @ApiMember(Name="RecordTypeNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="RecordTypeNotesInsertStyle")
        @SerializedName("RecordTypeNotesInsertStyle")
        @ApiMember(Name="RecordTypeNotesInsertStyle", DataType="string", ParameterType="form")
        public TrimProperty<NotesInsertStyles> NotesInsertStyle = null;

        @DataMember(Name="RecordTypeNumberFromType")
        @SerializedName("RecordTypeNumberFromType")
        @ApiMember(Name="RecordTypeNumberFromType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef NumberFromType = null;

        @DataMember(Name="RecordTypeNumberingIsManual")
        @SerializedName("RecordTypeNumberingIsManual")
        @ApiMember(Name="RecordTypeNumberingIsManual", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> NumberingIsManual = null;

        @DataMember(Name="RecordTypeNumberMethod")
        @SerializedName("RecordTypeNumberMethod")
        @ApiMember(Name="RecordTypeNumberMethod", DataType="string", ParameterType="form")
        public TrimProperty<NumberingMethods> NumberMethod = null;

        @DataMember(Name="RecordTypeNumberPattern")
        @SerializedName("RecordTypeNumberPattern")
        @ApiMember(Name="RecordTypeNumberPattern", DataType="string", ParameterType="form")
        public TrimStringProperty NumberPattern = null;

        @DataMember(Name="RecordTypeOldVersionPurgeStyle")
        @SerializedName("RecordTypeOldVersionPurgeStyle")
        @ApiMember(Name="RecordTypeOldVersionPurgeStyle", DataType="string", ParameterType="form")
        public TrimProperty<OldVersionPurgeOptions> OldVersionPurgeStyle = null;

        @DataMember(Name="RecordTypeOwnerLocation")
        @SerializedName("RecordTypeOwnerLocation")
        @ApiMember(Name="RecordTypeOwnerLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef OwnerLocation = null;

        @DataMember(Name="RecordTypePartSeparator")
        @SerializedName("RecordTypePartSeparator")
        @ApiMember(Name="RecordTypePartSeparator", DataType="string", ParameterType="form")
        public TrimStringProperty PartSeparator = null;

        @DataMember(Name="RecordTypePreventDispChangeIfNoSchedule")
        @SerializedName("RecordTypePreventDispChangeIfNoSchedule")
        @ApiMember(Name="RecordTypePreventDispChangeIfNoSchedule", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PreventDispChangeIfNoSchedule = null;

        @DataMember(Name="RecordTypePsoActionType")
        @SerializedName("RecordTypePsoActionType")
        @ApiMember(Name="RecordTypePsoActionType", DataType="string", ParameterType="form")
        public TrimProperty<PsoActionType> PsoActionType = null;

        @DataMember(Name="RecordTypePsoBoxRTY")
        @SerializedName("RecordTypePsoBoxRTY")
        @ApiMember(Name="RecordTypePsoBoxRTY", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef PsoBoxRTY = null;

        @DataMember(Name="RecordTypePsoDateType")
        @SerializedName("RecordTypePsoDateType")
        @ApiMember(Name="RecordTypePsoDateType", DataType="string", ParameterType="form")
        public TrimProperty<PsoDateType> PsoDateType = null;

        @DataMember(Name="RecordTypePsoEnable")
        @SerializedName("RecordTypePsoEnable")
        @ApiMember(Name="RecordTypePsoEnable", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PsoEnable = null;

        @DataMember(Name="RecordTypePsoMonths")
        @SerializedName("RecordTypePsoMonths")
        @ApiMember(Name="RecordTypePsoMonths", DataType="int", ParameterType="form")
        public TrimProperty<Integer> PsoMonths = null;

        @DataMember(Name="RecordTypePsoNewHomeLoc")
        @SerializedName("RecordTypePsoNewHomeLoc")
        @ApiMember(Name="RecordTypePsoNewHomeLoc", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef PsoNewHomeLoc = null;

        @DataMember(Name="RecordTypePsoYears")
        @SerializedName("RecordTypePsoYears")
        @ApiMember(Name="RecordTypePsoYears", DataType="int", ParameterType="form")
        public TrimProperty<Integer> PsoYears = null;

        @DataMember(Name="RecordTypePurgePreviousVersion")
        @SerializedName("RecordTypePurgePreviousVersion")
        @ApiMember(Name="RecordTypePurgePreviousVersion", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PurgePreviousVersion = null;

        @DataMember(Name="RecordTypeResetAtYearEnd")
        @SerializedName("RecordTypeResetAtYearEnd")
        @ApiMember(Name="RecordTypeResetAtYearEnd", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ResetAtYearEnd = null;

        @DataMember(Name="RecordTypeRetentionSchedule")
        @SerializedName("RecordTypeRetentionSchedule")
        @ApiMember(Name="RecordTypeRetentionSchedule", DataType="long", ParameterType="form", Verb="POST")
        public ScheduleRef RetentionSchedule = null;

        @DataMember(Name="RecordTypeReviewerReminderDays")
        @SerializedName("RecordTypeReviewerReminderDays")
        @ApiMember(Name="RecordTypeReviewerReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ReviewerReminderDays = null;

        @DataMember(Name="RecordTypeSapContainerRecordType")
        @SerializedName("RecordTypeSapContainerRecordType")
        @ApiMember(Name="RecordTypeSapContainerRecordType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef SapContainerRecordType = null;

        @DataMember(Name="RecordTypeSapCreateContact")
        @SerializedName("RecordTypeSapCreateContact")
        @ApiMember(Name="RecordTypeSapCreateContact", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapCreateContact = null;

        @DataMember(Name="RecordTypeSapCreateContainers")
        @SerializedName("RecordTypeSapCreateContainers")
        @ApiMember(Name="RecordTypeSapCreateContainers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapCreateContainers = null;

        @DataMember(Name="RecordTypeSapCreateCountries")
        @SerializedName("RecordTypeSapCreateCountries")
        @ApiMember(Name="RecordTypeSapCreateCountries", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapCreateCountries = null;

        @DataMember(Name="RecordTypeSapCreateCreatorLoc")
        @SerializedName("RecordTypeSapCreateCreatorLoc")
        @ApiMember(Name="RecordTypeSapCreateCreatorLoc", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapCreateCreatorLoc = null;

        @DataMember(Name="RecordTypeSapForceDeleteDate")
        @SerializedName("RecordTypeSapForceDeleteDate")
        @ApiMember(Name="RecordTypeSapForceDeleteDate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapForceDeleteDate = null;

        @DataMember(Name="RecordTypeSapRepositoryId")
        @SerializedName("RecordTypeSapRepositoryId")
        @ApiMember(Name="RecordTypeSapRepositoryId", DataType="string", ParameterType="form")
        public TrimStringProperty SapRepositoryId = null;

        @DataMember(Name="RecordTypeSapTitleTemplate")
        @SerializedName("RecordTypeSapTitleTemplate")
        @ApiMember(Name="RecordTypeSapTitleTemplate", DataType="string", ParameterType="form")
        public TrimStringProperty SapTitleTemplate = null;

        @DataMember(Name="RecordTypeSapTitleTemplateKS")
        @SerializedName("RecordTypeSapTitleTemplateKS")
        @ApiMember(Name="RecordTypeSapTitleTemplateKS", DataType="string", ParameterType="form")
        public TrimStringProperty SapTitleTemplateKS = null;

        @DataMember(Name="RecordTypeSapUseCountryCode")
        @SerializedName("RecordTypeSapUseCountryCode")
        @ApiMember(Name="RecordTypeSapUseCountryCode", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapUseCountryCode = null;

        @DataMember(Name="RecordTypeSapUseDeleteDate")
        @SerializedName("RecordTypeSapUseDeleteDate")
        @ApiMember(Name="RecordTypeSapUseDeleteDate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapUseDeleteDate = null;

        @DataMember(Name="RecordTypeSetDueDateFromActions")
        @SerializedName("RecordTypeSetDueDateFromActions")
        @ApiMember(Name="RecordTypeSetDueDateFromActions", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SetDueDateFromActions = null;

        @DataMember(Name="RecordTypeSortOrder")
        @SerializedName("RecordTypeSortOrder")
        @ApiMember(Name="RecordTypeSortOrder", DataType="string", ParameterType="form")
        public TrimStringProperty SortOrder = null;

        @DataMember(Name="RecordTypeStartupTemplate")
        @SerializedName("RecordTypeStartupTemplate")
        @ApiMember(Name="RecordTypeStartupTemplate", DataType="long", ParameterType="form", Verb="POST")
        public WorkflowTemplateRef StartupTemplate = null;

        @DataMember(Name="RecordTypeStoreType")
        @SerializedName("RecordTypeStoreType")
        @ApiMember(Name="RecordTypeStoreType", DataType="string", ParameterType="form")
        public TrimProperty<UseStoreType> StoreType = null;

        @DataMember(Name="RecordTypeSuppressContentIndexing")
        @SerializedName("RecordTypeSuppressContentIndexing")
        @ApiMember(Name="RecordTypeSuppressContentIndexing", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SuppressContentIndexing = null;

        @DataMember(Name="RecordTypeTitlingMethod")
        @SerializedName("RecordTypeTitlingMethod")
        @ApiMember(Name="RecordTypeTitlingMethod", DataType="string", ParameterType="form")
        public TrimProperty<TitlingMethods> TitlingMethod = null;

        @DataMember(Name="RecordTypeTrimIconId")
        @SerializedName("RecordTypeTrimIconId")
        @ApiMember(Name="RecordTypeTrimIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> TrimIconId = null;

        @DataMember(Name="RecordTypeUseCensus")
        @SerializedName("RecordTypeUseCensus")
        @ApiMember(Name="RecordTypeUseCensus", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseCensus = null;

        @DataMember(Name="RecordTypeUsePartNumber")
        @SerializedName("RecordTypeUsePartNumber")
        @ApiMember(Name="RecordTypeUsePartNumber", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UsePartNumber = null;

        @DataMember(Name="RecordTypeUseRetention")
        @SerializedName("RecordTypeUseRetention")
        @ApiMember(Name="RecordTypeUseRetention", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseRetention = null;

        @DataMember(Name="RecordTypeUsualBehaviour")
        @SerializedName("RecordTypeUsualBehaviour")
        @ApiMember(Name="RecordTypeUsualBehaviour", DataType="string", ParameterType="form")
        public TrimProperty<RecordBehaviour> UsualBehaviour = null;

        @DataMember(Name="RecordTypeVersionNumbering")
        @SerializedName("RecordTypeVersionNumbering")
        @ApiMember(Name="RecordTypeVersionNumbering", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> VersionNumbering = null;

        @DataMember(Name="RecordTypeWithinSeries")
        @SerializedName("RecordTypeWithinSeries")
        @ApiMember(Name="RecordTypeWithinSeries", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> WithinSeries = null;
        
        public TrimAccessControlList getDefaultAccessControlList() { return DefaultAccessControlList; }
        public RecordType setDefaultAccessControlList(TrimAccessControlList value) { this.DefaultAccessControlList = value; return this; }
        public ArrayList<HistoryTypes> getEnabledActiveAuditEvents() { return EnabledActiveAuditEvents; }
        public RecordType setEnabledActiveAuditEvents(ArrayList<HistoryTypes> value) { this.EnabledActiveAuditEvents = value; return this; }
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public RecordType setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public SetUsesField getSetUsesField() { return SetUsesField; }
        public RecordType setSetUsesField(SetUsesField value) { this.SetUsesField = value; return this; }
        public RemoveUsesField getRemoveUsesField() { return RemoveUsesField; }
        public RecordType setRemoveUsesField(RemoveUsesField value) { this.RemoveUsesField = value; return this; }
        public EnableActiveAuditEvent getEnableActiveAuditEvent() { return EnableActiveAuditEvent; }
        public RecordType setEnableActiveAuditEvent(EnableActiveAuditEvent value) { this.EnableActiveAuditEvent = value; return this; }
        public TrimSecurityProfile getSecurityProfile() { return SecurityProfile; }
        public RecordType setSecurityProfile(TrimSecurityProfile value) { this.SecurityProfile = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordType setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public RecordType setNewType(NewType value) { this.NewType = value; return this; }
        public ArrayList<RecordTypeAutoSubFolder> getChildAutoSubFolders() { return ChildAutoSubFolders; }
        public RecordType setChildAutoSubFolders(ArrayList<RecordTypeAutoSubFolder> value) { this.ChildAutoSubFolders = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public RecordType setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public RecordType setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public RecordType setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public RecordType setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public RecordType setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public RecordType setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getAcknowledgeRequests() { return AcknowledgeRequests; }
        public RecordType setAcknowledgeRequests(TrimProperty<Boolean> value) { this.AcknowledgeRequests = value; return this; }
        public ActionDefRef getAction() { return Action; }
        public RecordType setAction(ActionDefRef value) { this.Action = value; return this; }
        public TrimProperty<Boolean> getAllowBlankFreeTextTitle() { return AllowBlankFreeTextTitle; }
        public RecordType setAllowBlankFreeTextTitle(TrimProperty<Boolean> value) { this.AllowBlankFreeTextTitle = value; return this; }
        public TrimProperty<Boolean> getAllowMultipleExtensions() { return AllowMultipleExtensions; }
        public RecordType setAllowMultipleExtensions(TrimProperty<Boolean> value) { this.AllowMultipleExtensions = value; return this; }
        public TrimProperty<Boolean> getAllowParts() { return AllowParts; }
        public RecordType setAllowParts(TrimProperty<Boolean> value) { this.AllowParts = value; return this; }
        public TrimProperty<Boolean> getAllowReplace() { return AllowReplace; }
        public RecordType setAllowReplace(TrimProperty<Boolean> value) { this.AllowReplace = value; return this; }
        public TrimProperty<Boolean> getAllowVersions() { return AllowVersions; }
        public RecordType setAllowVersions(TrimProperty<Boolean> value) { this.AllowVersions = value; return this; }
        public TrimProperty<Boolean> getAlwaysAuditSecurityBreaches() { return AlwaysAuditSecurityBreaches; }
        public RecordType setAlwaysAuditSecurityBreaches(TrimProperty<Boolean> value) { this.AlwaysAuditSecurityBreaches = value; return this; }
        public TrimProperty<Boolean> getAnnotateOnly() { return AnnotateOnly; }
        public RecordType setAnnotateOnly(TrimProperty<Boolean> value) { this.AnnotateOnly = value; return this; }
        public TrimProperty<Boolean> getAnnotateWhenReadOnly() { return AnnotateWhenReadOnly; }
        public RecordType setAnnotateWhenReadOnly(TrimProperty<Boolean> value) { this.AnnotateWhenReadOnly = value; return this; }
        public LocationRef getAssignee() { return Assignee; }
        public RecordType setAssignee(LocationRef value) { this.Assignee = value; return this; }
        public TrimProperty<Boolean> getAuditCreateEventsOffline() { return AuditCreateEventsOffline; }
        public RecordType setAuditCreateEventsOffline(TrimProperty<Boolean> value) { this.AuditCreateEventsOffline = value; return this; }
        public TrimProperty<Boolean> getAuditDeleteEventsOffline() { return AuditDeleteEventsOffline; }
        public RecordType setAuditDeleteEventsOffline(TrimProperty<Boolean> value) { this.AuditDeleteEventsOffline = value; return this; }
        public TrimProperty<Boolean> getAuditModifyEventsOffline() { return AuditModifyEventsOffline; }
        public RecordType setAuditModifyEventsOffline(TrimProperty<Boolean> value) { this.AuditModifyEventsOffline = value; return this; }
        public TrimProperty<AuthorizationMethods> getAuthorizationMethod() { return AuthorizationMethod; }
        public RecordType setAuthorizationMethod(TrimProperty<AuthorizationMethods> value) { this.AuthorizationMethod = value; return this; }
        public TrimProperty<Integer> getAuthorizerReminderDays() { return AuthorizerReminderDays; }
        public RecordType setAuthorizerReminderDays(TrimProperty<Integer> value) { this.AuthorizerReminderDays = value; return this; }
        public TrimProperty<Boolean> getBelongsToAMatter() { return BelongsToAMatter; }
        public RecordType setBelongsToAMatter(TrimProperty<Boolean> value) { this.BelongsToAMatter = value; return this; }
        public TrimProperty<Integer> getBorrowingLimit() { return BorrowingLimit; }
        public RecordType setBorrowingLimit(TrimProperty<Integer> value) { this.BorrowingLimit = value; return this; }
        public TrimProperty<Boolean> getCanHaveSharePointItems() { return CanHaveSharePointItems; }
        public RecordType setCanHaveSharePointItems(TrimProperty<Boolean> value) { this.CanHaveSharePointItems = value; return this; }
        public TrimProperty<Boolean> getChangeTitleWhenReadOnly() { return ChangeTitleWhenReadOnly; }
        public RecordType setChangeTitleWhenReadOnly(TrimProperty<Boolean> value) { this.ChangeTitleWhenReadOnly = value; return this; }
        public TrimProperty<GeneralExceptionHandling> getCheckDuplicateTitles() { return CheckDuplicateTitles; }
        public RecordType setCheckDuplicateTitles(TrimProperty<GeneralExceptionHandling> value) { this.CheckDuplicateTitles = value; return this; }
        public ClassificationRef getClassification() { return Classification; }
        public RecordType setClassification(ClassificationRef value) { this.Classification = value; return this; }
        public TrimProperty<Boolean> getClassificationMandatory() { return ClassificationMandatory; }
        public RecordType setClassificationMandatory(TrimProperty<Boolean> value) { this.ClassificationMandatory = value; return this; }
        public TrimProperty<RecordClass> getClassOfRecord() { return ClassOfRecord; }
        public RecordType setClassOfRecord(TrimProperty<RecordClass> value) { this.ClassOfRecord = value; return this; }
        public TrimProperty<Boolean> getCompressPartNumber() { return CompressPartNumber; }
        public RecordType setCompressPartNumber(TrimProperty<Boolean> value) { this.CompressPartNumber = value; return this; }
        public TrimProperty<Boolean> getConfirmEachNumber() { return ConfirmEachNumber; }
        public RecordType setConfirmEachNumber(TrimProperty<Boolean> value) { this.ConfirmEachNumber = value; return this; }
        public TrimProperty<ContainmentRule> getContainerRule() { return ContainerRule; }
        public RecordType setContainerRule(TrimProperty<ContainmentRule> value) { this.ContainerRule = value; return this; }
        public TrimProperty<ContainmentRule> getContentsRule() { return ContentsRule; }
        public RecordType setContentsRule(TrimProperty<ContainmentRule> value) { this.ContentsRule = value; return this; }
        public TrimProperty<Integer> getDaysDue() { return DaysDue; }
        public RecordType setDaysDue(TrimProperty<Integer> value) { this.DaysDue = value; return this; }
        public JurisdictionRef getDefaultJurisdiction() { return DefaultJurisdiction; }
        public RecordType setDefaultJurisdiction(JurisdictionRef value) { this.DefaultJurisdiction = value; return this; }
        public RecordRef getDefaultSeries() { return DefaultSeries; }
        public RecordType setDefaultSeries(RecordRef value) { this.DefaultSeries = value; return this; }
        public TrimProperty<RecordDisp> getDisposition() { return Disposition; }
        public RecordType setDisposition(TrimProperty<RecordDisp> value) { this.Disposition = value; return this; }
        public TrimProperty<Integer> getEditorReminderDays() { return EditorReminderDays; }
        public RecordType setEditorReminderDays(TrimProperty<Integer> value) { this.EditorReminderDays = value; return this; }
        public TrimProperty<Boolean> getEndUsersCanModify() { return EndUsersCanModify; }
        public RecordType setEndUsersCanModify(TrimProperty<Boolean> value) { this.EndUsersCanModify = value; return this; }
        public TrimProperty<EsoActionType> getEsoActionType() { return EsoActionType; }
        public RecordType setEsoActionType(TrimProperty<EsoActionType> value) { this.EsoActionType = value; return this; }
        public TrimProperty<Boolean> getEsoAllowEvents() { return EsoAllowEvents; }
        public RecordType setEsoAllowEvents(TrimProperty<Boolean> value) { this.EsoAllowEvents = value; return this; }
        public TrimProperty<EsoDateType> getEsoDateType() { return EsoDateType; }
        public RecordType setEsoDateType(TrimProperty<EsoDateType> value) { this.EsoDateType = value; return this; }
        public TrimProperty<Boolean> getEsoEnable() { return EsoEnable; }
        public RecordType setEsoEnable(TrimProperty<Boolean> value) { this.EsoEnable = value; return this; }
        public TrimProperty<Integer> getEsoMonths() { return EsoMonths; }
        public RecordType setEsoMonths(TrimProperty<Integer> value) { this.EsoMonths = value; return this; }
        public ElectronicStoreRef getEsoStoreUri() { return EsoStoreUri; }
        public RecordType setEsoStoreUri(ElectronicStoreRef value) { this.EsoStoreUri = value; return this; }
        public TrimProperty<Integer> getEsoYears() { return EsoYears; }
        public RecordType setEsoYears(TrimProperty<Integer> value) { this.EsoYears = value; return this; }
        public ElectronicStoreRef getEStore() { return EStore; }
        public RecordType setEStore(ElectronicStoreRef value) { this.EStore = value; return this; }
        public TrimProperty<Integer> getExtensionLimit() { return ExtensionLimit; }
        public RecordType setExtensionLimit(TrimProperty<Integer> value) { this.ExtensionLimit = value; return this; }
        public TrimStringProperty getExternalId() { return ExternalId; }
        public RecordType setExternalId(TrimStringProperty value) { this.ExternalId = value; return this; }
        public TrimProperty<Boolean> getFinalisePreviousVersion() { return FinalisePreviousVersion; }
        public RecordType setFinalisePreviousVersion(TrimProperty<Boolean> value) { this.FinalisePreviousVersion = value; return this; }
        public TrimProperty<Integer> getFinalReminderDays() { return FinalReminderDays; }
        public RecordType setFinalReminderDays(TrimProperty<Integer> value) { this.FinalReminderDays = value; return this; }
        public TrimProperty<Integer> getFollowupReminderDays() { return FollowupReminderDays; }
        public RecordType setFollowupReminderDays(TrimProperty<Integer> value) { this.FollowupReminderDays = value; return this; }
        public TrimProperty<Boolean> getHideFreeTextTitle() { return HideFreeTextTitle; }
        public RecordType setHideFreeTextTitle(TrimProperty<Boolean> value) { this.HideFreeTextTitle = value; return this; }
        public TrimProperty<Boolean> getHomeCanBeSpace() { return HomeCanBeSpace; }
        public RecordType setHomeCanBeSpace(TrimProperty<Boolean> value) { this.HomeCanBeSpace = value; return this; }
        public LocationRef getHomeLocation() { return HomeLocation; }
        public RecordType setHomeLocation(LocationRef value) { this.HomeLocation = value; return this; }
        public TrimProperty<ContainerSecurityHandling> getInsecureContainer() { return InsecureContainer; }
        public RecordType setInsecureContainer(TrimProperty<ContainerSecurityHandling> value) { this.InsecureContainer = value; return this; }
        public TrimProperty<DocumentSecurityHandling> getInsecureDocument() { return InsecureDocument; }
        public RecordType setInsecureDocument(TrimProperty<DocumentSecurityHandling> value) { this.InsecureDocument = value; return this; }
        public TrimStringProperty getLastNumber() { return LastNumber; }
        public RecordType setLastNumber(TrimStringProperty value) { this.LastNumber = value; return this; }
        public TrimProperty<Integer> getLevel() { return Level; }
        public RecordType setLevel(TrimProperty<Integer> value) { this.Level = value; return this; }
        public TrimProperty<MediaTypes> getMediaType() { return MediaType; }
        public RecordType setMediaType(TrimProperty<MediaTypes> value) { this.MediaType = value; return this; }
        public TrimProperty<Boolean> getMoveWhenReadOnly() { return MoveWhenReadOnly; }
        public RecordType setMoveWhenReadOnly(TrimProperty<Boolean> value) { this.MoveWhenReadOnly = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public RecordType setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<Boolean> getNeedsAuthorizationProcess() { return NeedsAuthorizationProcess; }
        public RecordType setNeedsAuthorizationProcess(TrimProperty<Boolean> value) { this.NeedsAuthorizationProcess = value; return this; }
        public TrimProperty<Boolean> getNeedsClassification() { return NeedsClassification; }
        public RecordType setNeedsClassification(TrimProperty<Boolean> value) { this.NeedsClassification = value; return this; }
        public TrimProperty<Boolean> getNeedsReviewProcess() { return NeedsReviewProcess; }
        public RecordType setNeedsReviewProcess(TrimProperty<Boolean> value) { this.NeedsReviewProcess = value; return this; }
        public AutoPartRuleRef getNewPartCreationRule() { return NewPartCreationRule; }
        public RecordType setNewPartCreationRule(AutoPartRuleRef value) { this.NewPartCreationRule = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public RecordType setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public RecordType setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<NotesInsertStyles> getNotesInsertStyle() { return NotesInsertStyle; }
        public RecordType setNotesInsertStyle(TrimProperty<NotesInsertStyles> value) { this.NotesInsertStyle = value; return this; }
        public RecordTypeRef getNumberFromType() { return NumberFromType; }
        public RecordType setNumberFromType(RecordTypeRef value) { this.NumberFromType = value; return this; }
        public TrimProperty<Boolean> getNumberingIsManual() { return NumberingIsManual; }
        public RecordType setNumberingIsManual(TrimProperty<Boolean> value) { this.NumberingIsManual = value; return this; }
        public TrimProperty<NumberingMethods> getNumberMethod() { return NumberMethod; }
        public RecordType setNumberMethod(TrimProperty<NumberingMethods> value) { this.NumberMethod = value; return this; }
        public TrimStringProperty getNumberPattern() { return NumberPattern; }
        public RecordType setNumberPattern(TrimStringProperty value) { this.NumberPattern = value; return this; }
        public TrimProperty<OldVersionPurgeOptions> getOldVersionPurgeStyle() { return OldVersionPurgeStyle; }
        public RecordType setOldVersionPurgeStyle(TrimProperty<OldVersionPurgeOptions> value) { this.OldVersionPurgeStyle = value; return this; }
        public LocationRef getOwnerLocation() { return OwnerLocation; }
        public RecordType setOwnerLocation(LocationRef value) { this.OwnerLocation = value; return this; }
        public TrimStringProperty getPartSeparator() { return PartSeparator; }
        public RecordType setPartSeparator(TrimStringProperty value) { this.PartSeparator = value; return this; }
        public TrimProperty<Boolean> getPreventDispChangeIfNoSchedule() { return PreventDispChangeIfNoSchedule; }
        public RecordType setPreventDispChangeIfNoSchedule(TrimProperty<Boolean> value) { this.PreventDispChangeIfNoSchedule = value; return this; }
        public TrimProperty<PsoActionType> getPsoActionType() { return PsoActionType; }
        public RecordType setPsoActionType(TrimProperty<PsoActionType> value) { this.PsoActionType = value; return this; }
        public RecordTypeRef getPsoBoxRTY() { return PsoBoxRTY; }
        public RecordType setPsoBoxRTY(RecordTypeRef value) { this.PsoBoxRTY = value; return this; }
        public TrimProperty<PsoDateType> getPsoDateType() { return PsoDateType; }
        public RecordType setPsoDateType(TrimProperty<PsoDateType> value) { this.PsoDateType = value; return this; }
        public TrimProperty<Boolean> getPsoEnable() { return PsoEnable; }
        public RecordType setPsoEnable(TrimProperty<Boolean> value) { this.PsoEnable = value; return this; }
        public TrimProperty<Integer> getPsoMonths() { return PsoMonths; }
        public RecordType setPsoMonths(TrimProperty<Integer> value) { this.PsoMonths = value; return this; }
        public LocationRef getPsoNewHomeLoc() { return PsoNewHomeLoc; }
        public RecordType setPsoNewHomeLoc(LocationRef value) { this.PsoNewHomeLoc = value; return this; }
        public TrimProperty<Integer> getPsoYears() { return PsoYears; }
        public RecordType setPsoYears(TrimProperty<Integer> value) { this.PsoYears = value; return this; }
        public TrimProperty<Boolean> getPurgePreviousVersion() { return PurgePreviousVersion; }
        public RecordType setPurgePreviousVersion(TrimProperty<Boolean> value) { this.PurgePreviousVersion = value; return this; }
        public TrimProperty<Boolean> getResetAtYearEnd() { return ResetAtYearEnd; }
        public RecordType setResetAtYearEnd(TrimProperty<Boolean> value) { this.ResetAtYearEnd = value; return this; }
        public ScheduleRef getRetentionSchedule() { return RetentionSchedule; }
        public RecordType setRetentionSchedule(ScheduleRef value) { this.RetentionSchedule = value; return this; }
        public TrimProperty<Integer> getReviewerReminderDays() { return ReviewerReminderDays; }
        public RecordType setReviewerReminderDays(TrimProperty<Integer> value) { this.ReviewerReminderDays = value; return this; }
        public RecordTypeRef getSapContainerRecordType() { return SapContainerRecordType; }
        public RecordType setSapContainerRecordType(RecordTypeRef value) { this.SapContainerRecordType = value; return this; }
        public TrimProperty<Boolean> getSapCreateContact() { return SapCreateContact; }
        public RecordType setSapCreateContact(TrimProperty<Boolean> value) { this.SapCreateContact = value; return this; }
        public TrimProperty<Boolean> getSapCreateContainers() { return SapCreateContainers; }
        public RecordType setSapCreateContainers(TrimProperty<Boolean> value) { this.SapCreateContainers = value; return this; }
        public TrimProperty<Boolean> getSapCreateCountries() { return SapCreateCountries; }
        public RecordType setSapCreateCountries(TrimProperty<Boolean> value) { this.SapCreateCountries = value; return this; }
        public TrimProperty<Boolean> getSapCreateCreatorLoc() { return SapCreateCreatorLoc; }
        public RecordType setSapCreateCreatorLoc(TrimProperty<Boolean> value) { this.SapCreateCreatorLoc = value; return this; }
        public TrimProperty<Boolean> getSapForceDeleteDate() { return SapForceDeleteDate; }
        public RecordType setSapForceDeleteDate(TrimProperty<Boolean> value) { this.SapForceDeleteDate = value; return this; }
        public TrimStringProperty getSapRepositoryId() { return SapRepositoryId; }
        public RecordType setSapRepositoryId(TrimStringProperty value) { this.SapRepositoryId = value; return this; }
        public TrimStringProperty getSapTitleTemplate() { return SapTitleTemplate; }
        public RecordType setSapTitleTemplate(TrimStringProperty value) { this.SapTitleTemplate = value; return this; }
        public TrimStringProperty getSapTitleTemplateKS() { return SapTitleTemplateKS; }
        public RecordType setSapTitleTemplateKS(TrimStringProperty value) { this.SapTitleTemplateKS = value; return this; }
        public TrimProperty<Boolean> getSapUseCountryCode() { return SapUseCountryCode; }
        public RecordType setSapUseCountryCode(TrimProperty<Boolean> value) { this.SapUseCountryCode = value; return this; }
        public TrimProperty<Boolean> getSapUseDeleteDate() { return SapUseDeleteDate; }
        public RecordType setSapUseDeleteDate(TrimProperty<Boolean> value) { this.SapUseDeleteDate = value; return this; }
        public TrimProperty<Boolean> getSetDueDateFromActions() { return SetDueDateFromActions; }
        public RecordType setSetDueDateFromActions(TrimProperty<Boolean> value) { this.SetDueDateFromActions = value; return this; }
        public TrimStringProperty getSortOrder() { return SortOrder; }
        public RecordType setSortOrder(TrimStringProperty value) { this.SortOrder = value; return this; }
        public WorkflowTemplateRef getStartupTemplate() { return StartupTemplate; }
        public RecordType setStartupTemplate(WorkflowTemplateRef value) { this.StartupTemplate = value; return this; }
        public TrimProperty<UseStoreType> getStoreType() { return StoreType; }
        public RecordType setStoreType(TrimProperty<UseStoreType> value) { this.StoreType = value; return this; }
        public TrimProperty<Boolean> getSuppressContentIndexing() { return SuppressContentIndexing; }
        public RecordType setSuppressContentIndexing(TrimProperty<Boolean> value) { this.SuppressContentIndexing = value; return this; }
        public TrimProperty<TitlingMethods> getTitlingMethod() { return TitlingMethod; }
        public RecordType setTitlingMethod(TrimProperty<TitlingMethods> value) { this.TitlingMethod = value; return this; }
        public TrimProperty<Icons> getTrimIconId() { return TrimIconId; }
        public RecordType setTrimIconId(TrimProperty<Icons> value) { this.TrimIconId = value; return this; }
        public TrimProperty<Boolean> getUseCensus() { return UseCensus; }
        public RecordType setUseCensus(TrimProperty<Boolean> value) { this.UseCensus = value; return this; }
        public TrimProperty<Boolean> getUsePartNumber() { return UsePartNumber; }
        public RecordType setUsePartNumber(TrimProperty<Boolean> value) { this.UsePartNumber = value; return this; }
        public TrimProperty<Boolean> getUseRetention() { return UseRetention; }
        public RecordType setUseRetention(TrimProperty<Boolean> value) { this.UseRetention = value; return this; }
        public TrimProperty<RecordBehaviour> getUsualBehaviour() { return UsualBehaviour; }
        public RecordType setUsualBehaviour(TrimProperty<RecordBehaviour> value) { this.UsualBehaviour = value; return this; }
        public TrimProperty<Boolean> getVersionNumbering() { return VersionNumbering; }
        public RecordType setVersionNumbering(TrimProperty<Boolean> value) { this.VersionNumbering = value; return this; }
        public TrimProperty<Boolean> getWithinSeries() { return WithinSeries; }
        public RecordType setWithinSeries(TrimProperty<Boolean> value) { this.WithinSeries = value; return this; }
        private static Object responseType = RecordTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single RecordType by Uri or Name.
    */
    @Route(Path="/RecordType/{Id*}", Verbs="GET")
    @Api("Fetch a single RecordType by Uri or Name.")
    public static class RecordTypeFind extends TrimMainObjectByUri implements IReturn<RecordTypesResponse>
    {
        
        private static Object responseType = RecordTypesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Reports filtered using a search string.
    */
    @Route(Path="/Report", Verbs="GET")
    @Api("Fetch a collection of Reports filtered using a search string.")
    public static class Reports extends TrimMainObjectSearch implements IReturn<ReportsResponse>
    {
        
        private static Object responseType = ReportsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Report object.
    */
    @Route(Path="/Report", Verbs="POST")
    @Api("Update a Report object.")
    @DataContract
    public static class Report extends TrimMainObject implements IReturn<ReportsResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * Print a Report for a selection of Main Object types.
        */
        @DataMember
        @ApiMember(Name="PrintReport", ParameterType="form", Verb="POST", Description="Print a Report for a selection of Main Object types.")
        public PrintReport PrintReport = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="ReportNewType")
        @SerializedName("ReportNewType")
        @ApiMember(Name="ReportNewType", DataType="string", ParameterType="form", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="ReportAccessControl")
        @SerializedName("ReportAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="ReportDefaultDevice")
        @SerializedName("ReportDefaultDevice")
        @ApiMember(Name="ReportDefaultDevice", DataType="string", ParameterType="form")
        public TrimStringProperty DefaultDevice = null;

        @DataMember(Name="ReportDefaultDriver")
        @SerializedName("ReportDefaultDriver")
        @ApiMember(Name="ReportDefaultDriver", DataType="string", ParameterType="form")
        public TrimStringProperty DefaultDriver = null;

        @DataMember(Name="ReportDefaultPort")
        @SerializedName("ReportDefaultPort")
        @ApiMember(Name="ReportDefaultPort", DataType="string", ParameterType="form")
        public TrimStringProperty DefaultPort = null;

        @DataMember(Name="ReportDefaultTray")
        @SerializedName("ReportDefaultTray")
        @ApiMember(Name="ReportDefaultTray", DataType="string", ParameterType="form")
        public TrimStringProperty DefaultTray = null;

        @DataMember(Name="ReportForObject")
        @SerializedName("ReportForObject")
        @ApiMember(Name="ReportForObject", DataType="string", IsRequired=true, ParameterType="form")
        public TrimProperty<BaseObjectTypes> ForObject = null;

        @DataMember(Name="ReportName")
        @SerializedName("ReportName")
        @ApiMember(Name="ReportName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Report setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Report setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Report setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Report setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public PrintReport getPrintReport() { return PrintReport; }
        public Report setPrintReport(PrintReport value) { this.PrintReport = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Report setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public Report setNewType(NewType value) { this.NewType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Report setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Report setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimStringProperty getDefaultDevice() { return DefaultDevice; }
        public Report setDefaultDevice(TrimStringProperty value) { this.DefaultDevice = value; return this; }
        public TrimStringProperty getDefaultDriver() { return DefaultDriver; }
        public Report setDefaultDriver(TrimStringProperty value) { this.DefaultDriver = value; return this; }
        public TrimStringProperty getDefaultPort() { return DefaultPort; }
        public Report setDefaultPort(TrimStringProperty value) { this.DefaultPort = value; return this; }
        public TrimStringProperty getDefaultTray() { return DefaultTray; }
        public Report setDefaultTray(TrimStringProperty value) { this.DefaultTray = value; return this; }
        public TrimProperty<BaseObjectTypes> getForObject() { return ForObject; }
        public Report setForObject(TrimProperty<BaseObjectTypes> value) { this.ForObject = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Report setName(TrimStringProperty value) { this.Name = value; return this; }
        private static Object responseType = ReportsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Report by Uri or Name.
    */
    @Route(Path="/Report/{Id*}", Verbs="GET")
    @Api("Fetch a single Report by Uri or Name.")
    public static class ReportFind extends TrimMainObjectByUri implements IReturn<ReportsResponse>
    {
        
        private static Object responseType = ReportsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of ReportBitmaps filtered using a search string.
    */
    @Route(Path="/ReportBitmap", Verbs="GET")
    @Api("Fetch a collection of ReportBitmaps filtered using a search string.")
    public static class ReportBitmaps extends TrimMainObjectSearch implements IReturn<ReportBitmapsResponse>
    {
        
        private static Object responseType = ReportBitmapsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a ReportBitmap object.
    */
    @Route(Path="/ReportBitmap", Verbs="POST")
    @Api("Update a ReportBitmap object.")
    @DataContract
    public static class ReportBitmap extends TrimMainObject implements IReturn<ReportBitmapsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ReportBitmapBitmapFileName")
        @SerializedName("ReportBitmapBitmapFileName")
        @ApiMember(Name="ReportBitmapBitmapFileName", DataType="string", ParameterType="form")
        public TrimStringProperty BitmapFileName = null;

        @DataMember(Name="ReportBitmapDateModified")
        @SerializedName("ReportBitmapDateModified")
        @ApiMember(Name="ReportBitmapDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="ReportBitmapEStore")
        @SerializedName("ReportBitmapEStore")
        @ApiMember(Name="ReportBitmapEStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef EStore = null;

        @DataMember(Name="ReportBitmapExtension")
        @SerializedName("ReportBitmapExtension")
        @ApiMember(Name="ReportBitmapExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="ReportBitmapName")
        @SerializedName("ReportBitmapName")
        @ApiMember(Name="ReportBitmapName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="ReportBitmapSize")
        @SerializedName("ReportBitmapSize")
        @ApiMember(Name="ReportBitmapSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Size = null;

        @DataMember(Name="ReportBitmapStoreId")
        @SerializedName("ReportBitmapStoreId")
        @ApiMember(Name="ReportBitmapStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty StoreId = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ReportBitmap setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getBitmapFileName() { return BitmapFileName; }
        public ReportBitmap setBitmapFileName(TrimStringProperty value) { this.BitmapFileName = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public ReportBitmap setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public ElectronicStoreRef getEStore() { return EStore; }
        public ReportBitmap setEStore(ElectronicStoreRef value) { this.EStore = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public ReportBitmap setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public ReportBitmap setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<Long> getSize() { return Size; }
        public ReportBitmap setSize(TrimProperty<Long> value) { this.Size = value; return this; }
        public TrimStringProperty getStoreId() { return StoreId; }
        public ReportBitmap setStoreId(TrimStringProperty value) { this.StoreId = value; return this; }
        private static Object responseType = ReportBitmapsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single ReportBitmap by Uri or Name.
    */
    @Route(Path="/ReportBitmap/{Id*}", Verbs="GET")
    @Api("Fetch a single ReportBitmap by Uri or Name.")
    public static class ReportBitmapFind extends TrimMainObjectByUri implements IReturn<ReportBitmapsResponse>
    {
        
        private static Object responseType = ReportBitmapsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Requests filtered using a search string.
    */
    @Route(Path="/Request", Verbs="GET")
    @Api("Fetch a collection of Requests filtered using a search string.")
    public static class Requests extends TrimMainObjectSearch implements IReturn<RequestsResponse>
    {
        
        private static Object responseType = RequestsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Request object.
    */
    @Route(Path="/Request", Verbs="POST")
    @Api("Update a Request object.")
    @DataContract
    public static class Request extends TrimMainObject implements IReturn<RequestsResponse>
    {
        /**
        * Completes the request by setting the status to complete and updating the locations of the associated record to match the expected result of processing the request.
        */
        @DataMember
        @ApiMember(Name="CompleteRequest", ParameterType="form", Verb="POST", Description="Completes the request by setting the status to complete and updating the locations of the associated record to match the expected result of processing the request.")
        public CompleteRequest CompleteRequest = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RequestContentReference")
        @SerializedName("RequestContentReference")
        @ApiMember(Name="RequestContentReference", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef ContentReference = null;

        @DataMember(Name="RequestCurrentLocation")
        @SerializedName("RequestCurrentLocation")
        @ApiMember(Name="RequestCurrentLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef CurrentLocation = null;

        @DataMember(Name="RequestDateCompleted")
        @SerializedName("RequestDateCompleted")
        @ApiMember(Name="RequestDateCompleted", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCompleted = null;

        @DataMember(Name="RequestDateCreated")
        @SerializedName("RequestDateCreated")
        @ApiMember(Name="RequestDateCreated", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="RequestDescription")
        @SerializedName("RequestDescription")
        @ApiMember(Name="RequestDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="RequestDueDate")
        @SerializedName("RequestDueDate")
        @ApiMember(Name="RequestDueDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DueDate = null;

        @DataMember(Name="RequestEndDate")
        @SerializedName("RequestEndDate")
        @ApiMember(Name="RequestEndDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime EndDate = null;

        @DataMember(Name="RequestFrequency")
        @SerializedName("RequestFrequency")
        @ApiMember(Name="RequestFrequency", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Frequency = null;

        @DataMember(Name="RequestFrequencyType")
        @SerializedName("RequestFrequencyType")
        @ApiMember(Name="RequestFrequencyType", DataType="string", ParameterType="form")
        public TrimProperty<DateInterval> FrequencyType = null;

        @DataMember(Name="RequestIsComplete")
        @SerializedName("RequestIsComplete")
        @ApiMember(Name="RequestIsComplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="RequestNotes")
        @SerializedName("RequestNotes")
        @ApiMember(Name="RequestNotes", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Notes = null;

        @DataMember(Name="RequestPriority")
        @SerializedName("RequestPriority")
        @ApiMember(Name="RequestPriority", DataType="string", ParameterType="form")
        public TrimProperty<RequestPriority> Priority = null;

        @DataMember(Name="RequestRecord")
        @SerializedName("RequestRecord")
        @ApiMember(Name="RequestRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="RequestRequestor")
        @SerializedName("RequestRequestor")
        @ApiMember(Name="RequestRequestor", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Requestor = null;

        @DataMember(Name="RequestRequestType")
        @SerializedName("RequestRequestType")
        @ApiMember(Name="RequestRequestType", DataType="string", ParameterType="form")
        public TrimProperty<RequestTypes> RequestType = null;

        @DataMember(Name="RequestServiceLocation")
        @SerializedName("RequestServiceLocation")
        @ApiMember(Name="RequestServiceLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef ServiceLocation = null;

        @DataMember(Name="RequestServiceSpace")
        @SerializedName("RequestServiceSpace")
        @ApiMember(Name="RequestServiceSpace", DataType="long", ParameterType="form", Verb="POST")
        public SpaceRef ServiceSpace = null;

        @DataMember(Name="RequestStatus")
        @SerializedName("RequestStatus")
        @ApiMember(Name="RequestStatus", DataType="string", ParameterType="form")
        public TrimProperty<RequestStatus> Status = null;

        @DataMember(Name="RequestStatusChangedDate")
        @SerializedName("RequestStatusChangedDate")
        @ApiMember(Name="RequestStatusChangedDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime StatusChangedDate = null;

        @DataMember(Name="RequestStatusDetails")
        @SerializedName("RequestStatusDetails")
        @ApiMember(Name="RequestStatusDetails", DataType="string", ParameterType="form")
        public TrimStringProperty StatusDetails = null;

        @DataMember(Name="RequestTransitAddress")
        @SerializedName("RequestTransitAddress")
        @ApiMember(Name="RequestTransitAddress", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty TransitAddress = null;

        @DataMember(Name="RequestTransitLocation")
        @SerializedName("RequestTransitLocation")
        @ApiMember(Name="RequestTransitLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef TransitLocation = null;
        
        public CompleteRequest getCompleteRequest() { return CompleteRequest; }
        public Request setCompleteRequest(CompleteRequest value) { this.CompleteRequest = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Request setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public RecordRef getContentReference() { return ContentReference; }
        public Request setContentReference(RecordRef value) { this.ContentReference = value; return this; }
        public LocationRef getCurrentLocation() { return CurrentLocation; }
        public Request setCurrentLocation(LocationRef value) { this.CurrentLocation = value; return this; }
        public TrimDateTime getDateCompleted() { return DateCompleted; }
        public Request setDateCompleted(TrimDateTime value) { this.DateCompleted = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public Request setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public Request setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getDueDate() { return DueDate; }
        public Request setDueDate(TrimDateTime value) { this.DueDate = value; return this; }
        public TrimDateTime getEndDate() { return EndDate; }
        public Request setEndDate(TrimDateTime value) { this.EndDate = value; return this; }
        public TrimProperty<Integer> getFrequency() { return Frequency; }
        public Request setFrequency(TrimProperty<Integer> value) { this.Frequency = value; return this; }
        public TrimProperty<DateInterval> getFrequencyType() { return FrequencyType; }
        public Request setFrequencyType(TrimProperty<DateInterval> value) { this.FrequencyType = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public Request setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Request setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Request setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<RequestPriority> getPriority() { return Priority; }
        public Request setPriority(TrimProperty<RequestPriority> value) { this.Priority = value; return this; }
        public RecordRef getRecord() { return Record; }
        public Request setRecord(RecordRef value) { this.Record = value; return this; }
        public LocationRef getRequestor() { return Requestor; }
        public Request setRequestor(LocationRef value) { this.Requestor = value; return this; }
        public TrimProperty<RequestTypes> getRequestType() { return RequestType; }
        public Request setRequestType(TrimProperty<RequestTypes> value) { this.RequestType = value; return this; }
        public LocationRef getServiceLocation() { return ServiceLocation; }
        public Request setServiceLocation(LocationRef value) { this.ServiceLocation = value; return this; }
        public SpaceRef getServiceSpace() { return ServiceSpace; }
        public Request setServiceSpace(SpaceRef value) { this.ServiceSpace = value; return this; }
        public TrimProperty<RequestStatus> getStatus() { return Status; }
        public Request setStatus(TrimProperty<RequestStatus> value) { this.Status = value; return this; }
        public TrimDateTime getStatusChangedDate() { return StatusChangedDate; }
        public Request setStatusChangedDate(TrimDateTime value) { this.StatusChangedDate = value; return this; }
        public TrimStringProperty getStatusDetails() { return StatusDetails; }
        public Request setStatusDetails(TrimStringProperty value) { this.StatusDetails = value; return this; }
        public TrimStringProperty getTransitAddress() { return TransitAddress; }
        public Request setTransitAddress(TrimStringProperty value) { this.TransitAddress = value; return this; }
        public LocationRef getTransitLocation() { return TransitLocation; }
        public Request setTransitLocation(LocationRef value) { this.TransitLocation = value; return this; }
        private static Object responseType = RequestsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Request by Uri or Name.
    */
    @Route(Path="/Request/{Id*}", Verbs="GET")
    @Api("Fetch a single Request by Uri or Name.")
    public static class RequestFind extends TrimMainObjectByUri implements IReturn<RequestsResponse>
    {
        
        private static Object responseType = RequestsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of SavedSearches filtered using a search string.
    */
    @Route(Path="/SavedSearch", Verbs="GET")
    @Api("Fetch a collection of SavedSearches filtered using a search string.")
    public static class SavedSearches extends TrimMainObjectSearch implements IReturn<SavedSearchesResponse>
    {
        
        private static Object responseType = SavedSearchesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a SavedSearch object.
    */
    @Route(Path="/SavedSearch", Verbs="POST")
    @Api("Update a SavedSearch object.")
    @DataContract
    public static class SavedSearch extends TrimMainObject implements IReturn<SavedSearchesResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        @DataMember(Name="SearchDefinition")
        @SerializedName("SearchDefinition")
        public TrimSearchDefinition SearchDefinition = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="SavedSearchAccessControl")
        @SerializedName("SavedSearchAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="SavedSearchAnyWordContents")
        @SerializedName("SavedSearchAnyWordContents")
        @ApiMember(Name="SavedSearchAnyWordContents", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnyWordContents = null;

        @DataMember(Name="SavedSearchAnyWordNotes")
        @SerializedName("SavedSearchAnyWordNotes")
        @ApiMember(Name="SavedSearchAnyWordNotes", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnyWordNotes = null;

        @DataMember(Name="SavedSearchAnyWordTitle")
        @SerializedName("SavedSearchAnyWordTitle")
        @ApiMember(Name="SavedSearchAnyWordTitle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnyWordTitle = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesAuthorisation")
        @SerializedName("SavedSearchAssigneeSearchIncludesAuthorisation")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesAuthorisation", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesAuthorisation = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesDelegates")
        @SerializedName("SavedSearchAssigneeSearchIncludesDelegates")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesDelegates", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesDelegates = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesEscalated")
        @SerializedName("SavedSearchAssigneeSearchIncludesEscalated")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesEscalated", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesEscalated = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesGroups")
        @SerializedName("SavedSearchAssigneeSearchIncludesGroups")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesGroups", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesGroups = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesPosition")
        @SerializedName("SavedSearchAssigneeSearchIncludesPosition")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesPosition", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesPosition = null;

        @DataMember(Name="SavedSearchCanEdit")
        @SerializedName("SavedSearchCanEdit")
        @ApiMember(Name="SavedSearchCanEdit", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanEdit = null;

        @DataMember(Name="SavedSearchCanExecute")
        @SerializedName("SavedSearchCanExecute")
        @ApiMember(Name="SavedSearchCanExecute", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanExecute = null;

        @DataMember(Name="SavedSearchDefaultIncludesContent")
        @SerializedName("SavedSearchDefaultIncludesContent")
        @ApiMember(Name="SavedSearchDefaultIncludesContent", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultIncludesContent = null;

        @DataMember(Name="SavedSearchDefaultIncludesNotes")
        @SerializedName("SavedSearchDefaultIncludesNotes")
        @ApiMember(Name="SavedSearchDefaultIncludesNotes", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultIncludesNotes = null;

        @DataMember(Name="SavedSearchDefaultIncludesNumber")
        @SerializedName("SavedSearchDefaultIncludesNumber")
        @ApiMember(Name="SavedSearchDefaultIncludesNumber", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultIncludesNumber = null;

        @DataMember(Name="SavedSearchDefaultIncludesTitle")
        @SerializedName("SavedSearchDefaultIncludesTitle")
        @ApiMember(Name="SavedSearchDefaultIncludesTitle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultIncludesTitle = null;

        @DataMember(Name="SavedSearchDescription")
        @SerializedName("SavedSearchDescription")
        @ApiMember(Name="SavedSearchDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="SavedSearchExtendedIDOLOptimization")
        @SerializedName("SavedSearchExtendedIDOLOptimization")
        @ApiMember(Name="SavedSearchExtendedIDOLOptimization", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ExtendedIDOLOptimization = null;

        @DataMember(Name="SavedSearchFilterString")
        @SerializedName("SavedSearchFilterString")
        @ApiMember(Name="SavedSearchFilterString", DataType="string", ParameterType="form")
        public TrimStringProperty FilterString = null;

        @DataMember(Name="SavedSearchFullName")
        @SerializedName("SavedSearchFullName")
        @ApiMember(Name="SavedSearchFullName", DataType="string", ParameterType="form")
        public TrimStringProperty FullName = null;

        @DataMember(Name="SavedSearchIconId")
        @SerializedName("SavedSearchIconId")
        @ApiMember(Name="SavedSearchIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="SavedSearchIdolSearchStyle")
        @SerializedName("SavedSearchIdolSearchStyle")
        @ApiMember(Name="SavedSearchIdolSearchStyle", DataType="string", ParameterType="form")
        public TrimProperty<IdolSearchStyles> IdolSearchStyle = null;

        @DataMember(Name="SavedSearchIsGrouping")
        @SerializedName("SavedSearchIsGrouping")
        @ApiMember(Name="SavedSearchIsGrouping", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsGrouping = null;

        @DataMember(Name="SavedSearchIsOldFormat")
        @SerializedName("SavedSearchIsOldFormat")
        @ApiMember(Name="SavedSearchIsOldFormat", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsOldFormat = null;

        @DataMember(Name="SavedSearchIsPublic")
        @SerializedName("SavedSearchIsPublic")
        @ApiMember(Name="SavedSearchIsPublic", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsPublic = null;

        @DataMember(Name="SavedSearchName")
        @SerializedName("SavedSearchName")
        @ApiMember(Name="SavedSearchName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="SavedSearchObjectType")
        @SerializedName("SavedSearchObjectType")
        @ApiMember(Name="SavedSearchObjectType", DataType="string", ParameterType="form")
        public TrimProperty<BaseObjectTypes> ObjectType = null;

        @DataMember(Name="SavedSearchOwner")
        @SerializedName("SavedSearchOwner")
        @ApiMember(Name="SavedSearchOwner", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Owner = null;

        @DataMember(Name="SavedSearchParent")
        @SerializedName("SavedSearchParent")
        @ApiMember(Name="SavedSearchParent", DataType="long", ParameterType="form", Verb="POST")
        public SavedSearchRef Parent = null;

        @DataMember(Name="SavedSearchQueryString")
        @SerializedName("SavedSearchQueryString")
        @ApiMember(Name="SavedSearchQueryString", DataType="string", ParameterType="form")
        public TrimStringProperty QueryString = null;

        @DataMember(Name="SavedSearchSortString")
        @SerializedName("SavedSearchSortString")
        @ApiMember(Name="SavedSearchSortString", DataType="string", ParameterType="form")
        public TrimStringProperty SortString = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public SavedSearch setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public SavedSearch setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public SavedSearch setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public SavedSearch setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public TrimSearchDefinition getSearchDefinition() { return SearchDefinition; }
        public SavedSearch setSearchDefinition(TrimSearchDefinition value) { this.SearchDefinition = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SavedSearch setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public SavedSearch setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public SavedSearch setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Boolean> getAnyWordContents() { return AnyWordContents; }
        public SavedSearch setAnyWordContents(TrimProperty<Boolean> value) { this.AnyWordContents = value; return this; }
        public TrimProperty<Boolean> getAnyWordNotes() { return AnyWordNotes; }
        public SavedSearch setAnyWordNotes(TrimProperty<Boolean> value) { this.AnyWordNotes = value; return this; }
        public TrimProperty<Boolean> getAnyWordTitle() { return AnyWordTitle; }
        public SavedSearch setAnyWordTitle(TrimProperty<Boolean> value) { this.AnyWordTitle = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesAuthorisation() { return AssigneeSearchIncludesAuthorisation; }
        public SavedSearch setAssigneeSearchIncludesAuthorisation(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesAuthorisation = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesDelegates() { return AssigneeSearchIncludesDelegates; }
        public SavedSearch setAssigneeSearchIncludesDelegates(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesDelegates = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesEscalated() { return AssigneeSearchIncludesEscalated; }
        public SavedSearch setAssigneeSearchIncludesEscalated(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesEscalated = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesGroups() { return AssigneeSearchIncludesGroups; }
        public SavedSearch setAssigneeSearchIncludesGroups(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesGroups = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesPosition() { return AssigneeSearchIncludesPosition; }
        public SavedSearch setAssigneeSearchIncludesPosition(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesPosition = value; return this; }
        public TrimProperty<Boolean> getCanEdit() { return CanEdit; }
        public SavedSearch setCanEdit(TrimProperty<Boolean> value) { this.CanEdit = value; return this; }
        public TrimProperty<Boolean> getCanExecute() { return CanExecute; }
        public SavedSearch setCanExecute(TrimProperty<Boolean> value) { this.CanExecute = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesContent() { return DefaultIncludesContent; }
        public SavedSearch setDefaultIncludesContent(TrimProperty<Boolean> value) { this.DefaultIncludesContent = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesNotes() { return DefaultIncludesNotes; }
        public SavedSearch setDefaultIncludesNotes(TrimProperty<Boolean> value) { this.DefaultIncludesNotes = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesNumber() { return DefaultIncludesNumber; }
        public SavedSearch setDefaultIncludesNumber(TrimProperty<Boolean> value) { this.DefaultIncludesNumber = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesTitle() { return DefaultIncludesTitle; }
        public SavedSearch setDefaultIncludesTitle(TrimProperty<Boolean> value) { this.DefaultIncludesTitle = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public SavedSearch setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getExtendedIDOLOptimization() { return ExtendedIDOLOptimization; }
        public SavedSearch setExtendedIDOLOptimization(TrimProperty<Boolean> value) { this.ExtendedIDOLOptimization = value; return this; }
        public TrimStringProperty getFilterString() { return FilterString; }
        public SavedSearch setFilterString(TrimStringProperty value) { this.FilterString = value; return this; }
        public TrimStringProperty getFullName() { return FullName; }
        public SavedSearch setFullName(TrimStringProperty value) { this.FullName = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public SavedSearch setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimProperty<IdolSearchStyles> getIdolSearchStyle() { return IdolSearchStyle; }
        public SavedSearch setIdolSearchStyle(TrimProperty<IdolSearchStyles> value) { this.IdolSearchStyle = value; return this; }
        public TrimProperty<Boolean> getIsGrouping() { return IsGrouping; }
        public SavedSearch setIsGrouping(TrimProperty<Boolean> value) { this.IsGrouping = value; return this; }
        public TrimProperty<Boolean> getIsOldFormat() { return IsOldFormat; }
        public SavedSearch setIsOldFormat(TrimProperty<Boolean> value) { this.IsOldFormat = value; return this; }
        public TrimProperty<Boolean> getIsPublic() { return IsPublic; }
        public SavedSearch setIsPublic(TrimProperty<Boolean> value) { this.IsPublic = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public SavedSearch setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<BaseObjectTypes> getObjectType() { return ObjectType; }
        public SavedSearch setObjectType(TrimProperty<BaseObjectTypes> value) { this.ObjectType = value; return this; }
        public LocationRef getOwner() { return Owner; }
        public SavedSearch setOwner(LocationRef value) { this.Owner = value; return this; }
        public SavedSearchRef getParent() { return Parent; }
        public SavedSearch setParent(SavedSearchRef value) { this.Parent = value; return this; }
        public TrimStringProperty getQueryString() { return QueryString; }
        public SavedSearch setQueryString(TrimStringProperty value) { this.QueryString = value; return this; }
        public TrimStringProperty getSortString() { return SortString; }
        public SavedSearch setSortString(TrimStringProperty value) { this.SortString = value; return this; }
        private static Object responseType = SavedSearchesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single SavedSearch by Uri or Name.
    */
    @Route(Path="/SavedSearch/{Id*}", Verbs="GET")
    @Api("Fetch a single SavedSearch by Uri or Name.")
    public static class SavedSearchFind extends TrimMainObjectByUri implements IReturn<SavedSearchesResponse>
    {
        
        private static Object responseType = SavedSearchesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Schedules filtered using a search string.
    */
    @Route(Path="/Schedule", Verbs="GET")
    @Api("Fetch a collection of Schedules filtered using a search string.")
    public static class Schedules extends TrimMainObjectSearch implements IReturn<SchedulesResponse>
    {
        
        private static Object responseType = SchedulesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Schedule object.
    */
    @Route(Path="/Schedule", Verbs="POST")
    @Api("Update a Schedule object.")
    @DataContract
    public static class Schedule extends TrimMainObject implements IReturn<SchedulesResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * Replaces all references to this schedule (in records, classifications, record types, origins, check in styles). You can also opt to make the schedule inactive after the references are done and also to keep the existing schedule on records that have been archived or destroyed according this schedule.
        */
        @DataMember
        @ApiMember(Name="ReplaceReferences", ParameterType="form", Verb="POST", Description="Replaces all references to this schedule (in records, classifications, record types, origins, check in styles). You can also opt to make the schedule inactive after the references are done and also to keep the existing schedule on records that have been archived or destroyed according this schedule.")
        public ReplaceReferences ReplaceReferences = null;

        /**
        * True to create and return a new lower level Schedule
        */
        @DataMember(Name="NewLowerLevel")
        @SerializedName("NewLowerLevel")
        @ApiMember(Name="NewLowerLevel", DataType="boolean", ParameterType="form", Verb="POST", Description="True to create and return a new lower level Schedule")
        public Boolean NewLowerLevel = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="ScheduleNewType")
        @SerializedName("ScheduleNewType")
        @ApiMember(Name="ScheduleNewType", DataType="string", ParameterType="form", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="ChildTriggers")
        @SerializedName("ChildTriggers")
        public ArrayList<ScheduleTrigger> ChildTriggers = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="ScheduleAccessControl")
        @SerializedName("ScheduleAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="ScheduleActiveFrom")
        @SerializedName("ScheduleActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="ScheduleActiveTo")
        @SerializedName("ScheduleActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="ScheduleActiveDescription")
        @SerializedName("ScheduleActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="ScheduleIsActive")
        @SerializedName("ScheduleIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="ScheduleActionSummary")
        @SerializedName("ScheduleActionSummary")
        @ApiMember(Name="ScheduleActionSummary", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ActionSummary = null;

        @DataMember(Name="ScheduleCanOnlyDestroyInactive")
        @SerializedName("ScheduleCanOnlyDestroyInactive")
        @ApiMember(Name="ScheduleCanOnlyDestroyInactive", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanOnlyDestroyInactive = null;

        @DataMember(Name="ScheduleExpandedTitle")
        @SerializedName("ScheduleExpandedTitle")
        @ApiMember(Name="ScheduleExpandedTitle", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ExpandedTitle = null;

        @DataMember(Name="ScheduleHasChildSchedules")
        @SerializedName("ScheduleHasChildSchedules")
        @ApiMember(Name="ScheduleHasChildSchedules", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> HasChildSchedules = null;

        @DataMember(Name="ScheduleIgnoreBlankDestroyTriggers")
        @SerializedName("ScheduleIgnoreBlankDestroyTriggers")
        @ApiMember(Name="ScheduleIgnoreBlankDestroyTriggers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IgnoreBlankDestroyTriggers = null;

        @DataMember(Name="ScheduleIsAgencySpecific")
        @SerializedName("ScheduleIsAgencySpecific")
        @ApiMember(Name="ScheduleIsAgencySpecific", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsAgencySpecific = null;

        @DataMember(Name="ScheduleName")
        @SerializedName("ScheduleName")
        @ApiMember(Name="ScheduleName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="ScheduleNotes")
        @SerializedName("ScheduleNotes")
        @ApiMember(Name="ScheduleNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="ScheduleParentSchedule")
        @SerializedName("ScheduleParentSchedule")
        @ApiMember(Name="ScheduleParentSchedule", DataType="long", ParameterType="form", Verb="POST")
        public ScheduleRef ParentSchedule = null;

        @DataMember(Name="SchedulePolicyCentreGUID")
        @SerializedName("SchedulePolicyCentreGUID")
        @ApiMember(Name="SchedulePolicyCentreGUID", DataType="string", ParameterType="form")
        public TrimStringProperty PolicyCentreGUID = null;

        @DataMember(Name="ScheduleRetainJurisdictions")
        @SerializedName("ScheduleRetainJurisdictions")
        @ApiMember(Name="ScheduleRetainJurisdictions", DataType="string", ParameterType="form")
        public TrimStringProperty RetainJurisdictions = null;

        @DataMember(Name="ScheduleRetention")
        @SerializedName("ScheduleRetention")
        @ApiMember(Name="ScheduleRetention", DataType="string", ParameterType="form")
        public TrimProperty<RetainOptions> Retention = null;

        @DataMember(Name="ScheduleSource")
        @SerializedName("ScheduleSource")
        @ApiMember(Name="ScheduleSource", DataType="string", ParameterType="form")
        public TrimStringProperty Source = null;

        @DataMember(Name="ScheduleSuppressTriggerCalculationAlways")
        @SerializedName("ScheduleSuppressTriggerCalculationAlways")
        @ApiMember(Name="ScheduleSuppressTriggerCalculationAlways", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SuppressTriggerCalculationAlways = null;

        @DataMember(Name="ScheduleSuppressTriggerCalculationEventOnCommit")
        @SerializedName("ScheduleSuppressTriggerCalculationEventOnCommit")
        @ApiMember(Name="ScheduleSuppressTriggerCalculationEventOnCommit", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SuppressTriggerCalculationEventOnCommit = null;

        @DataMember(Name="ScheduleTitle")
        @SerializedName("ScheduleTitle")
        @ApiMember(Name="ScheduleTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;

        @DataMember(Name="ScheduleUseEarliestDestroyDate")
        @SerializedName("ScheduleUseEarliestDestroyDate")
        @ApiMember(Name="ScheduleUseEarliestDestroyDate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseEarliestDestroyDate = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Schedule setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Schedule setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public Schedule setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Schedule setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Schedule setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public ReplaceReferences getReplaceReferences() { return ReplaceReferences; }
        public Schedule setReplaceReferences(ReplaceReferences value) { this.ReplaceReferences = value; return this; }
        public Boolean isNewLowerLevel() { return NewLowerLevel; }
        public Schedule setNewLowerLevel(Boolean value) { this.NewLowerLevel = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Schedule setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public Schedule setNewType(NewType value) { this.NewType = value; return this; }
        public ArrayList<ScheduleTrigger> getChildTriggers() { return ChildTriggers; }
        public Schedule setChildTriggers(ArrayList<ScheduleTrigger> value) { this.ChildTriggers = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Schedule setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Schedule setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public Schedule setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public Schedule setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public Schedule setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public Schedule setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getActionSummary() { return ActionSummary; }
        public Schedule setActionSummary(TrimStringProperty value) { this.ActionSummary = value; return this; }
        public TrimProperty<Boolean> getCanOnlyDestroyInactive() { return CanOnlyDestroyInactive; }
        public Schedule setCanOnlyDestroyInactive(TrimProperty<Boolean> value) { this.CanOnlyDestroyInactive = value; return this; }
        public TrimStringProperty getExpandedTitle() { return ExpandedTitle; }
        public Schedule setExpandedTitle(TrimStringProperty value) { this.ExpandedTitle = value; return this; }
        public TrimProperty<Boolean> getHasChildSchedules() { return HasChildSchedules; }
        public Schedule setHasChildSchedules(TrimProperty<Boolean> value) { this.HasChildSchedules = value; return this; }
        public TrimProperty<Boolean> getIgnoreBlankDestroyTriggers() { return IgnoreBlankDestroyTriggers; }
        public Schedule setIgnoreBlankDestroyTriggers(TrimProperty<Boolean> value) { this.IgnoreBlankDestroyTriggers = value; return this; }
        public TrimProperty<Boolean> getIsAgencySpecific() { return IsAgencySpecific; }
        public Schedule setIsAgencySpecific(TrimProperty<Boolean> value) { this.IsAgencySpecific = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Schedule setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Schedule setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Schedule setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public ScheduleRef getParentSchedule() { return ParentSchedule; }
        public Schedule setParentSchedule(ScheduleRef value) { this.ParentSchedule = value; return this; }
        public TrimStringProperty getPolicyCentreGUID() { return PolicyCentreGUID; }
        public Schedule setPolicyCentreGUID(TrimStringProperty value) { this.PolicyCentreGUID = value; return this; }
        public TrimStringProperty getRetainJurisdictions() { return RetainJurisdictions; }
        public Schedule setRetainJurisdictions(TrimStringProperty value) { this.RetainJurisdictions = value; return this; }
        public TrimProperty<RetainOptions> getRetention() { return Retention; }
        public Schedule setRetention(TrimProperty<RetainOptions> value) { this.Retention = value; return this; }
        public TrimStringProperty getSource() { return Source; }
        public Schedule setSource(TrimStringProperty value) { this.Source = value; return this; }
        public TrimProperty<Boolean> getSuppressTriggerCalculationAlways() { return SuppressTriggerCalculationAlways; }
        public Schedule setSuppressTriggerCalculationAlways(TrimProperty<Boolean> value) { this.SuppressTriggerCalculationAlways = value; return this; }
        public TrimProperty<Boolean> getSuppressTriggerCalculationEventOnCommit() { return SuppressTriggerCalculationEventOnCommit; }
        public Schedule setSuppressTriggerCalculationEventOnCommit(TrimProperty<Boolean> value) { this.SuppressTriggerCalculationEventOnCommit = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public Schedule setTitle(TrimStringProperty value) { this.Title = value; return this; }
        public TrimProperty<Boolean> getUseEarliestDestroyDate() { return UseEarliestDestroyDate; }
        public Schedule setUseEarliestDestroyDate(TrimProperty<Boolean> value) { this.UseEarliestDestroyDate = value; return this; }
        private static Object responseType = SchedulesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Schedule by Uri or Name.
    */
    @Route(Path="/Schedule/{Id*}", Verbs="GET")
    @Api("Fetch a single Schedule by Uri or Name.")
    public static class ScheduleFind extends TrimMainObjectByUri implements IReturn<SchedulesResponse>
    {
        
        private static Object responseType = SchedulesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of ScheduledTaskList filtered using a search string.
    */
    @Route(Path="/ScheduledTask", Verbs="GET")
    @Api("Fetch a collection of ScheduledTaskList filtered using a search string.")
    public static class ScheduledTaskList extends TrimMainObjectSearch implements IReturn<ScheduledTaskListResponse>
    {
        
        private static Object responseType = ScheduledTaskListResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a ScheduledTask object.
    */
    @Route(Path="/ScheduledTask", Verbs="POST")
    @Api("Update a ScheduledTask object.")
    @DataContract
    public static class ScheduledTask extends TrimMainObject implements IReturn<ScheduledTaskListResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildHistorys")
        @SerializedName("ChildHistorys")
        public ArrayList<ScheduledTaskHistory> ChildHistorys = null;

        @DataMember(Name="ScheduledTaskAssignee")
        @SerializedName("ScheduledTaskAssignee")
        @ApiMember(Name="ScheduledTaskAssignee", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef Assignee = null;

        @DataMember(Name="ScheduledTaskAttachDate")
        @SerializedName("ScheduledTaskAttachDate")
        @ApiMember(Name="ScheduledTaskAttachDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime AttachDate = null;

        @DataMember(Name="ScheduledTaskAttachedToObject")
        @SerializedName("ScheduledTaskAttachedToObject")
        @ApiMember(Name="ScheduledTaskAttachedToObject", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AttachedToObject = null;

        @DataMember(Name="ScheduledTaskAttachedToObjectType")
        @SerializedName("ScheduledTaskAttachedToObjectType")
        @ApiMember(Name="ScheduledTaskAttachedToObjectType", DataType="string", IsRequired=true, ParameterType="form")
        public TrimProperty<BaseObjectTypes> AttachedToObjectType = null;

        @DataMember(Name="ScheduledTaskAttachedToObjectUri")
        @SerializedName("ScheduledTaskAttachedToObjectUri")
        @ApiMember(Name="ScheduledTaskAttachedToObjectUri", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty AttachedToObjectUri = null;

        @DataMember(Name="ScheduledTaskCompletionDate")
        @SerializedName("ScheduledTaskCompletionDate")
        @ApiMember(Name="ScheduledTaskCompletionDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime CompletionDate = null;

        @DataMember(Name="ScheduledTaskDescription")
        @SerializedName("ScheduledTaskDescription")
        @ApiMember(Name="ScheduledTaskDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="ScheduledTaskIntervalSize")
        @SerializedName("ScheduledTaskIntervalSize")
        @ApiMember(Name="ScheduledTaskIntervalSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> IntervalSize = null;

        @DataMember(Name="ScheduledTaskIntervalType")
        @SerializedName("ScheduledTaskIntervalType")
        @ApiMember(Name="ScheduledTaskIntervalType", DataType="string", ParameterType="form")
        public TrimProperty<DateInterval> IntervalType = null;

        @DataMember(Name="ScheduledTaskIsComplete")
        @SerializedName("ScheduledTaskIsComplete")
        @ApiMember(Name="ScheduledTaskIsComplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="ScheduledTaskLastActionedOn")
        @SerializedName("ScheduledTaskLastActionedOn")
        @ApiMember(Name="ScheduledTaskLastActionedOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime LastActionedOn = null;

        @DataMember(Name="ScheduledTaskNextDueDate")
        @SerializedName("ScheduledTaskNextDueDate")
        @ApiMember(Name="ScheduledTaskNextDueDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime NextDueDate = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="ScheduledTaskNotes")
        @SerializedName("ScheduledTaskNotes")
        @ApiMember(Name="ScheduledTaskNotes", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Notes = null;

        @DataMember(Name="ScheduledTaskRepetitions")
        @SerializedName("ScheduledTaskRepetitions")
        @ApiMember(Name="ScheduledTaskRepetitions", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Repetitions = null;

        @DataMember(Name="ScheduledTaskRepetitionsDone")
        @SerializedName("ScheduledTaskRepetitionsDone")
        @ApiMember(Name="ScheduledTaskRepetitionsDone", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> RepetitionsDone = null;

        @DataMember(Name="ScheduledTaskScheduleDescription")
        @SerializedName("ScheduledTaskScheduleDescription")
        @ApiMember(Name="ScheduledTaskScheduleDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ScheduleDescription = null;

        @DataMember(Name="ScheduledTaskStartDate")
        @SerializedName("ScheduledTaskStartDate")
        @ApiMember(Name="ScheduledTaskStartDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime StartDate = null;

        @DataMember(Name="ScheduledTaskStatus")
        @SerializedName("ScheduledTaskStatus")
        @ApiMember(Name="ScheduledTaskStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<TaskStatus> Status = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ScheduledTask setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<ScheduledTaskHistory> getChildHistorys() { return ChildHistorys; }
        public ScheduledTask setChildHistorys(ArrayList<ScheduledTaskHistory> value) { this.ChildHistorys = value; return this; }
        public LocationRef getAssignee() { return Assignee; }
        public ScheduledTask setAssignee(LocationRef value) { this.Assignee = value; return this; }
        public TrimDateTime getAttachDate() { return AttachDate; }
        public ScheduledTask setAttachDate(TrimDateTime value) { this.AttachDate = value; return this; }
        public TrimStringProperty getAttachedToObject() { return AttachedToObject; }
        public ScheduledTask setAttachedToObject(TrimStringProperty value) { this.AttachedToObject = value; return this; }
        public TrimProperty<BaseObjectTypes> getAttachedToObjectType() { return AttachedToObjectType; }
        public ScheduledTask setAttachedToObjectType(TrimProperty<BaseObjectTypes> value) { this.AttachedToObjectType = value; return this; }
        public TrimStringProperty getAttachedToObjectUri() { return AttachedToObjectUri; }
        public ScheduledTask setAttachedToObjectUri(TrimStringProperty value) { this.AttachedToObjectUri = value; return this; }
        public TrimDateTime getCompletionDate() { return CompletionDate; }
        public ScheduledTask setCompletionDate(TrimDateTime value) { this.CompletionDate = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public ScheduledTask setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Integer> getIntervalSize() { return IntervalSize; }
        public ScheduledTask setIntervalSize(TrimProperty<Integer> value) { this.IntervalSize = value; return this; }
        public TrimProperty<DateInterval> getIntervalType() { return IntervalType; }
        public ScheduledTask setIntervalType(TrimProperty<DateInterval> value) { this.IntervalType = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public ScheduledTask setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimDateTime getLastActionedOn() { return LastActionedOn; }
        public ScheduledTask setLastActionedOn(TrimDateTime value) { this.LastActionedOn = value; return this; }
        public TrimDateTime getNextDueDate() { return NextDueDate; }
        public ScheduledTask setNextDueDate(TrimDateTime value) { this.NextDueDate = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public ScheduledTask setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public ScheduledTask setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Integer> getRepetitions() { return Repetitions; }
        public ScheduledTask setRepetitions(TrimProperty<Integer> value) { this.Repetitions = value; return this; }
        public TrimProperty<Integer> getRepetitionsDone() { return RepetitionsDone; }
        public ScheduledTask setRepetitionsDone(TrimProperty<Integer> value) { this.RepetitionsDone = value; return this; }
        public TrimStringProperty getScheduleDescription() { return ScheduleDescription; }
        public ScheduledTask setScheduleDescription(TrimStringProperty value) { this.ScheduleDescription = value; return this; }
        public TrimDateTime getStartDate() { return StartDate; }
        public ScheduledTask setStartDate(TrimDateTime value) { this.StartDate = value; return this; }
        public TrimProperty<TaskStatus> getStatus() { return Status; }
        public ScheduledTask setStatus(TrimProperty<TaskStatus> value) { this.Status = value; return this; }
        private static Object responseType = ScheduledTaskListResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single ScheduledTask by Uri or Name.
    */
    @Route(Path="/ScheduledTask/{Id*}", Verbs="GET")
    @Api("Fetch a single ScheduledTask by Uri or Name.")
    public static class ScheduledTaskFind extends TrimMainObjectByUri implements IReturn<ScheduledTaskListResponse>
    {
        
        private static Object responseType = ScheduledTaskListResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of SearchForms filtered using a search string.
    */
    @Route(Path="/SearchForm", Verbs="GET")
    @Api("Fetch a collection of SearchForms filtered using a search string.")
    public static class SearchForms extends TrimMainObjectSearch implements IReturn<SearchFormsResponse>
    {
        
        private static Object responseType = SearchFormsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a SearchForm object.
    */
    @Route(Path="/SearchForm", Verbs="POST")
    @Api("Update a SearchForm object.")
    @DataContract
    public static class SearchForm extends TrimMainObject implements IReturn<SearchFormsResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        @DataMember(Name="DefinitionForm")
        @SerializedName("DefinitionForm")
        public MultiFieldSearchForm DefinitionForm = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="SearchFormNewType")
        @SerializedName("SearchFormNewType")
        @ApiMember(Name="SearchFormNewType", DataType="string", ParameterType="form", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="SearchFormAccessControl")
        @SerializedName("SearchFormAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="SearchFormDefinition")
        @SerializedName("SearchFormDefinition")
        @ApiMember(Name="SearchFormDefinition", DataType="string", ParameterType="form")
        public TrimStringProperty Definition = null;

        @DataMember(Name="SearchFormDescription")
        @SerializedName("SearchFormDescription")
        @ApiMember(Name="SearchFormDescription", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="SearchFormFactoryDefinition")
        @SerializedName("SearchFormFactoryDefinition")
        @ApiMember(Name="SearchFormFactoryDefinition", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FactoryDefinition = null;

        @DataMember(Name="SearchFormName")
        @SerializedName("SearchFormName")
        @ApiMember(Name="SearchFormName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="SearchFormObjectType")
        @SerializedName("SearchFormObjectType")
        @ApiMember(Name="SearchFormObjectType", DataType="string", IsRequired=true, ParameterType="form")
        public TrimProperty<BaseObjectTypes> ObjectType = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public SearchForm setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public SearchForm setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public SearchForm setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public SearchForm setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public MultiFieldSearchForm getDefinitionForm() { return DefinitionForm; }
        public SearchForm setDefinitionForm(MultiFieldSearchForm value) { this.DefinitionForm = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SearchForm setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public SearchForm setNewType(NewType value) { this.NewType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public SearchForm setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public SearchForm setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimStringProperty getDefinition() { return Definition; }
        public SearchForm setDefinition(TrimStringProperty value) { this.Definition = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public SearchForm setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimStringProperty getFactoryDefinition() { return FactoryDefinition; }
        public SearchForm setFactoryDefinition(TrimStringProperty value) { this.FactoryDefinition = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public SearchForm setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<BaseObjectTypes> getObjectType() { return ObjectType; }
        public SearchForm setObjectType(TrimProperty<BaseObjectTypes> value) { this.ObjectType = value; return this; }
        private static Object responseType = SearchFormsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single SearchForm by Uri or Name.
    */
    @Route(Path="/SearchForm/{Id*}", Verbs="GET")
    @Api("Fetch a single SearchForm by Uri or Name.")
    public static class SearchFormFind extends TrimMainObjectByUri implements IReturn<SearchFormsResponse>
    {
        
        private static Object responseType = SearchFormsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of SecurityCaveats filtered using a search string.
    */
    @Route(Path="/SecurityCaveat", Verbs="GET")
    @Api("Fetch a collection of SecurityCaveats filtered using a search string.")
    public static class SecurityCaveats extends TrimMainObjectSearch implements IReturn<SecurityCaveatsResponse>
    {
        
        private static Object responseType = SecurityCaveatsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a SecurityCaveat object.
    */
    @Route(Path="/SecurityCaveat", Verbs="POST")
    @Api("Update a SecurityCaveat object.")
    @DataContract
    public static class SecurityCaveat extends TrimMainObject implements IReturn<SecurityCaveatsResponse>
    {
        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="SecurityCaveatActiveFrom")
        @SerializedName("SecurityCaveatActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="SecurityCaveatActiveTo")
        @SerializedName("SecurityCaveatActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="SecurityCaveatActiveDescription")
        @SerializedName("SecurityCaveatActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="SecurityCaveatIsActive")
        @SerializedName("SecurityCaveatIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="SecurityCaveatAbbreviation")
        @SerializedName("SecurityCaveatAbbreviation")
        @ApiMember(Name="SecurityCaveatAbbreviation", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Abbreviation = null;

        @DataMember(Name="SecurityCaveatCaveatNumber")
        @SerializedName("SecurityCaveatCaveatNumber")
        @ApiMember(Name="SecurityCaveatCaveatNumber", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> CaveatNumber = null;

        @DataMember(Name="SecurityCaveatName")
        @SerializedName("SecurityCaveatName")
        @ApiMember(Name="SecurityCaveatName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="SecurityCaveatNotes")
        @SerializedName("SecurityCaveatNotes")
        @ApiMember(Name="SecurityCaveatNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;
        
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public SecurityCaveat setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SecurityCaveat setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public SecurityCaveat setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public SecurityCaveat setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public SecurityCaveat setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public SecurityCaveat setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getAbbreviation() { return Abbreviation; }
        public SecurityCaveat setAbbreviation(TrimStringProperty value) { this.Abbreviation = value; return this; }
        public TrimProperty<Integer> getCaveatNumber() { return CaveatNumber; }
        public SecurityCaveat setCaveatNumber(TrimProperty<Integer> value) { this.CaveatNumber = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public SecurityCaveat setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public SecurityCaveat setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public SecurityCaveat setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        private static Object responseType = SecurityCaveatsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single SecurityCaveat by Uri or Name.
    */
    @Route(Path="/SecurityCaveat/{Id*}", Verbs="GET")
    @Api("Fetch a single SecurityCaveat by Uri or Name.")
    public static class SecurityCaveatFind extends TrimMainObjectByUri implements IReturn<SecurityCaveatsResponse>
    {
        
        private static Object responseType = SecurityCaveatsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of SecurityGuides filtered using a search string.
    */
    @Route(Path="/SecurityGuide", Verbs="GET")
    @Api("Fetch a collection of SecurityGuides filtered using a search string.")
    public static class SecurityGuides extends TrimMainObjectSearch implements IReturn<SecurityGuidesResponse>
    {
        
        private static Object responseType = SecurityGuidesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a SecurityGuide object.
    */
    @Route(Path="/SecurityGuide", Verbs="POST")
    @Api("Update a SecurityGuide object.")
    @DataContract
    public static class SecurityGuide extends TrimMainObject implements IReturn<SecurityGuidesResponse>
    {
        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        @DataMember(Name="SecurityProfile")
        @SerializedName("SecurityProfile")
        public TrimSecurityProfile SecurityProfile = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="SecurityGuideNewType")
        @SerializedName("SecurityGuideNewType")
        @ApiMember(Name="SecurityGuideNewType", DataType="string", ParameterType="form", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="SecurityGuideActiveFrom")
        @SerializedName("SecurityGuideActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="SecurityGuideActiveTo")
        @SerializedName("SecurityGuideActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="SecurityGuideActiveDescription")
        @SerializedName("SecurityGuideActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="SecurityGuideIsActive")
        @SerializedName("SecurityGuideIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="SecurityGuideDeclassify")
        @SerializedName("SecurityGuideDeclassify")
        @ApiMember(Name="SecurityGuideDeclassify", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Declassify = null;

        @DataMember(Name="SecurityGuideDeclassifyDate")
        @SerializedName("SecurityGuideDeclassifyDate")
        @ApiMember(Name="SecurityGuideDeclassifyDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DeclassifyDate = null;

        @DataMember(Name="SecurityGuideDeclassifyEvent")
        @SerializedName("SecurityGuideDeclassifyEvent")
        @ApiMember(Name="SecurityGuideDeclassifyEvent", DataType="string", ParameterType="form")
        public TrimStringProperty DeclassifyEvent = null;

        @DataMember(Name="SecurityGuideDeclassifyExemption")
        @SerializedName("SecurityGuideDeclassifyExemption")
        @ApiMember(Name="SecurityGuideDeclassifyExemption", DataType="string", ParameterType="form")
        public TrimStringProperty DeclassifyExemption = null;

        @DataMember(Name="SecurityGuideDeclassifyYears")
        @SerializedName("SecurityGuideDeclassifyYears")
        @ApiMember(Name="SecurityGuideDeclassifyYears", DataType="int", ParameterType="form")
        public TrimProperty<Integer> DeclassifyYears = null;

        @DataMember(Name="SecurityGuideDescription")
        @SerializedName("SecurityGuideDescription")
        @ApiMember(Name="SecurityGuideDescription", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="SecurityGuideEntryReference")
        @SerializedName("SecurityGuideEntryReference")
        @ApiMember(Name="SecurityGuideEntryReference", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty EntryReference = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="SecurityGuideNotes")
        @SerializedName("SecurityGuideNotes")
        @ApiMember(Name="SecurityGuideNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="SecurityGuideReason")
        @SerializedName("SecurityGuideReason")
        @ApiMember(Name="SecurityGuideReason", DataType="string", ParameterType="form")
        public TrimStringProperty Reason = null;

        @DataMember(Name="SecurityGuideSecurityString")
        @SerializedName("SecurityGuideSecurityString")
        @ApiMember(Name="SecurityGuideSecurityString", DataType="string", ParameterType="form")
        public TrimStringProperty SecurityString = null;

        @DataMember(Name="SecurityGuideTypeOfDeclassification")
        @SerializedName("SecurityGuideTypeOfDeclassification")
        @ApiMember(Name="SecurityGuideTypeOfDeclassification", DataType="string", ParameterType="form")
        public TrimProperty<DeclassifyType> TypeOfDeclassification = null;
        
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public SecurityGuide setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public TrimSecurityProfile getSecurityProfile() { return SecurityProfile; }
        public SecurityGuide setSecurityProfile(TrimSecurityProfile value) { this.SecurityProfile = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SecurityGuide setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public SecurityGuide setNewType(NewType value) { this.NewType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public SecurityGuide setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public SecurityGuide setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public SecurityGuide setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public SecurityGuide setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getDeclassify() { return Declassify; }
        public SecurityGuide setDeclassify(TrimStringProperty value) { this.Declassify = value; return this; }
        public TrimDateTime getDeclassifyDate() { return DeclassifyDate; }
        public SecurityGuide setDeclassifyDate(TrimDateTime value) { this.DeclassifyDate = value; return this; }
        public TrimStringProperty getDeclassifyEvent() { return DeclassifyEvent; }
        public SecurityGuide setDeclassifyEvent(TrimStringProperty value) { this.DeclassifyEvent = value; return this; }
        public TrimStringProperty getDeclassifyExemption() { return DeclassifyExemption; }
        public SecurityGuide setDeclassifyExemption(TrimStringProperty value) { this.DeclassifyExemption = value; return this; }
        public TrimProperty<Integer> getDeclassifyYears() { return DeclassifyYears; }
        public SecurityGuide setDeclassifyYears(TrimProperty<Integer> value) { this.DeclassifyYears = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public SecurityGuide setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimStringProperty getEntryReference() { return EntryReference; }
        public SecurityGuide setEntryReference(TrimStringProperty value) { this.EntryReference = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public SecurityGuide setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public SecurityGuide setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getReason() { return Reason; }
        public SecurityGuide setReason(TrimStringProperty value) { this.Reason = value; return this; }
        public TrimStringProperty getSecurityString() { return SecurityString; }
        public SecurityGuide setSecurityString(TrimStringProperty value) { this.SecurityString = value; return this; }
        public TrimProperty<DeclassifyType> getTypeOfDeclassification() { return TypeOfDeclassification; }
        public SecurityGuide setTypeOfDeclassification(TrimProperty<DeclassifyType> value) { this.TypeOfDeclassification = value; return this; }
        private static Object responseType = SecurityGuidesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single SecurityGuide by Uri or Name.
    */
    @Route(Path="/SecurityGuide/{Id*}", Verbs="GET")
    @Api("Fetch a single SecurityGuide by Uri or Name.")
    public static class SecurityGuideFind extends TrimMainObjectByUri implements IReturn<SecurityGuidesResponse>
    {
        
        private static Object responseType = SecurityGuidesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of SecurityLevels filtered using a search string.
    */
    @Route(Path="/SecurityLevel", Verbs="GET")
    @Api("Fetch a collection of SecurityLevels filtered using a search string.")
    public static class SecurityLevels extends TrimMainObjectSearch implements IReturn<SecurityLevelsResponse>
    {
        
        private static Object responseType = SecurityLevelsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a SecurityLevel object.
    */
    @Route(Path="/SecurityLevel", Verbs="POST")
    @Api("Update a SecurityLevel object.")
    @DataContract
    public static class SecurityLevel extends TrimMainObject implements IReturn<SecurityLevelsResponse>
    {
        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="SecurityLevelActiveFrom")
        @SerializedName("SecurityLevelActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="SecurityLevelActiveTo")
        @SerializedName("SecurityLevelActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="SecurityLevelActiveDescription")
        @SerializedName("SecurityLevelActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="SecurityLevelIsActive")
        @SerializedName("SecurityLevelIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="SecurityLevelAbbreviation")
        @SerializedName("SecurityLevelAbbreviation")
        @ApiMember(Name="SecurityLevelAbbreviation", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Abbreviation = null;

        @DataMember(Name="SecurityLevelLevelNumber")
        @SerializedName("SecurityLevelLevelNumber")
        @ApiMember(Name="SecurityLevelLevelNumber", DataType="int", IsRequired=true, ParameterType="form")
        public TrimProperty<Integer> LevelNumber = null;

        @DataMember(Name="SecurityLevelName")
        @SerializedName("SecurityLevelName")
        @ApiMember(Name="SecurityLevelName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="SecurityLevelNotes")
        @SerializedName("SecurityLevelNotes")
        @ApiMember(Name="SecurityLevelNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;
        
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public SecurityLevel setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SecurityLevel setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public SecurityLevel setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public SecurityLevel setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public SecurityLevel setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public SecurityLevel setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getAbbreviation() { return Abbreviation; }
        public SecurityLevel setAbbreviation(TrimStringProperty value) { this.Abbreviation = value; return this; }
        public TrimProperty<Integer> getLevelNumber() { return LevelNumber; }
        public SecurityLevel setLevelNumber(TrimProperty<Integer> value) { this.LevelNumber = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public SecurityLevel setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public SecurityLevel setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public SecurityLevel setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        private static Object responseType = SecurityLevelsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single SecurityLevel by Uri or Name.
    */
    @Route(Path="/SecurityLevel/{Id*}", Verbs="GET")
    @Api("Fetch a single SecurityLevel by Uri or Name.")
    public static class SecurityLevelFind extends TrimMainObjectByUri implements IReturn<SecurityLevelsResponse>
    {
        
        private static Object responseType = SecurityLevelsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of SharePointItems filtered using a search string.
    */
    @Route(Path="/SharePointItem", Verbs="GET")
    @Api("Fetch a collection of SharePointItems filtered using a search string.")
    public static class SharePointItems extends TrimMainObjectSearch implements IReturn<SharePointItemsResponse>
    {
        
        private static Object responseType = SharePointItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a SharePointItem object.
    */
    @Route(Path="/SharePointItem", Verbs="POST")
    @Api("Update a SharePointItem object.")
    @DataContract
    public static class SharePointItem extends TrimMainObject implements IReturn<SharePointItemsResponse>
    {
        /**
        * Reset the Synchronization flag used by the SharePoint event processor.
        */
        @DataMember
        @ApiMember(Name="ResetSynchronizationFlag", ParameterType="form", Verb="POST", Description="Reset the Synchronization flag used by the SharePoint event processor.")
        public ResetSynchronizationFlag ResetSynchronizationFlag = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="SharePointItemIsDocument")
        @SerializedName("SharePointItemIsDocument")
        @ApiMember(Name="SharePointItemIsDocument", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsDocument = null;

        @DataMember(Name="SharePointItemItemURL")
        @SerializedName("SharePointItemItemURL")
        @ApiMember(Name="SharePointItemItemURL", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ItemURL = null;

        @DataMember(Name="SharePointItemListGUID")
        @SerializedName("SharePointItemListGUID")
        @ApiMember(Name="SharePointItemListGUID", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ListGUID = null;

        @DataMember(Name="SharePointItemListItemId")
        @SerializedName("SharePointItemListItemId")
        @ApiMember(Name="SharePointItemListItemId", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> ListItemId = null;

        @DataMember(Name="SharePointItemListItemRecord")
        @SerializedName("SharePointItemListItemRecord")
        @ApiMember(Name="SharePointItemListItemRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef ListItemRecord = null;

        @DataMember(Name="SharePointItemListRecord")
        @SerializedName("SharePointItemListRecord")
        @ApiMember(Name="SharePointItemListRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef ListRecord = null;

        @DataMember(Name="SharePointItemListType")
        @SerializedName("SharePointItemListType")
        @ApiMember(Name="SharePointItemListType", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ListType = null;

        @DataMember(Name="SharePointItemListURL")
        @SerializedName("SharePointItemListURL")
        @ApiMember(Name="SharePointItemListURL", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ListURL = null;

        @DataMember(Name="SharePointItemModifiedTitle")
        @SerializedName("SharePointItemModifiedTitle")
        @ApiMember(Name="SharePointItemModifiedTitle", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ModifiedTitle = null;

        @DataMember(Name="SharePointItemOriginator")
        @SerializedName("SharePointItemOriginator")
        @ApiMember(Name="SharePointItemOriginator", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<SpListItemOriginator> Originator = null;

        @DataMember(Name="SharePointItemRelationship")
        @SerializedName("SharePointItemRelationship")
        @ApiMember(Name="SharePointItemRelationship", DataType="string", ParameterType="form")
        public TrimStringProperty Relationship = null;

        @DataMember(Name="SharePointItemStatus")
        @SerializedName("SharePointItemStatus")
        @ApiMember(Name="SharePointItemStatus", DataType="string", ParameterType="form")
        public TrimProperty<SpManagedItemStatus> Status = null;

        @DataMember(Name="SharePointItemSynchPending")
        @SerializedName("SharePointItemSynchPending")
        @ApiMember(Name="SharePointItemSynchPending", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> SynchPending = null;

        @DataMember(Name="SharePointItemUniqueId")
        @SerializedName("SharePointItemUniqueId")
        @ApiMember(Name="SharePointItemUniqueId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty UniqueId = null;

        @DataMember(Name="SharePointItemViewable")
        @SerializedName("SharePointItemViewable")
        @ApiMember(Name="SharePointItemViewable", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Viewable = null;
        
        public ResetSynchronizationFlag getResetSynchronizationFlag() { return ResetSynchronizationFlag; }
        public SharePointItem setResetSynchronizationFlag(ResetSynchronizationFlag value) { this.ResetSynchronizationFlag = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SharePointItem setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Boolean> getIsDocument() { return IsDocument; }
        public SharePointItem setIsDocument(TrimProperty<Boolean> value) { this.IsDocument = value; return this; }
        public TrimStringProperty getItemURL() { return ItemURL; }
        public SharePointItem setItemURL(TrimStringProperty value) { this.ItemURL = value; return this; }
        public TrimStringProperty getListGUID() { return ListGUID; }
        public SharePointItem setListGUID(TrimStringProperty value) { this.ListGUID = value; return this; }
        public TrimProperty<Long> getListItemId() { return ListItemId; }
        public SharePointItem setListItemId(TrimProperty<Long> value) { this.ListItemId = value; return this; }
        public RecordRef getListItemRecord() { return ListItemRecord; }
        public SharePointItem setListItemRecord(RecordRef value) { this.ListItemRecord = value; return this; }
        public RecordRef getListRecord() { return ListRecord; }
        public SharePointItem setListRecord(RecordRef value) { this.ListRecord = value; return this; }
        public TrimStringProperty getListType() { return ListType; }
        public SharePointItem setListType(TrimStringProperty value) { this.ListType = value; return this; }
        public TrimStringProperty getListURL() { return ListURL; }
        public SharePointItem setListURL(TrimStringProperty value) { this.ListURL = value; return this; }
        public TrimStringProperty getModifiedTitle() { return ModifiedTitle; }
        public SharePointItem setModifiedTitle(TrimStringProperty value) { this.ModifiedTitle = value; return this; }
        public TrimProperty<SpListItemOriginator> getOriginator() { return Originator; }
        public SharePointItem setOriginator(TrimProperty<SpListItemOriginator> value) { this.Originator = value; return this; }
        public TrimStringProperty getRelationship() { return Relationship; }
        public SharePointItem setRelationship(TrimStringProperty value) { this.Relationship = value; return this; }
        public TrimProperty<SpManagedItemStatus> getStatus() { return Status; }
        public SharePointItem setStatus(TrimProperty<SpManagedItemStatus> value) { this.Status = value; return this; }
        public TrimProperty<Boolean> getSynchPending() { return SynchPending; }
        public SharePointItem setSynchPending(TrimProperty<Boolean> value) { this.SynchPending = value; return this; }
        public TrimStringProperty getUniqueId() { return UniqueId; }
        public SharePointItem setUniqueId(TrimStringProperty value) { this.UniqueId = value; return this; }
        public TrimProperty<Boolean> getViewable() { return Viewable; }
        public SharePointItem setViewable(TrimProperty<Boolean> value) { this.Viewable = value; return this; }
        private static Object responseType = SharePointItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single SharePointItem by Uri or Name.
    */
    @Route(Path="/SharePointItem/{Id*}", Verbs="GET")
    @Api("Fetch a single SharePointItem by Uri or Name.")
    public static class SharePointItemFind extends TrimMainObjectByUri implements IReturn<SharePointItemsResponse>
    {
        
        private static Object responseType = SharePointItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Spaces filtered using a search string.
    */
    @Route(Path="/Space", Verbs="GET")
    @Api("Fetch a collection of Spaces filtered using a search string.")
    public static class Spaces extends TrimMainObjectSearch implements IReturn<SpacesResponse>
    {
        
        private static Object responseType = SpacesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Space object.
    */
    @Route(Path="/Space", Verbs="POST")
    @Api("Update a Space object.")
    @DataContract
    public static class Space extends TrimMainObject implements IReturn<SpacesResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * If you are creating new lower levels then set the number to create here.
        */
        @DataMember(Name="NbrOfSpacesToCreate")
        @SerializedName("NbrOfSpacesToCreate")
        @ApiMember(Name="NbrOfSpacesToCreate", DataType="int", ParameterType="form", Verb="POST", Description="If you are creating new lower levels then set the number to create here.")
        public Integer NbrOfSpacesToCreate = null;

        /**
        * The capacity of each new space created (see NbrOfSpacesToCreate).
        */
        @DataMember(Name="CapacityOfEachSpace")
        @SerializedName("CapacityOfEachSpace")
        @ApiMember(Name="CapacityOfEachSpace", DataType="int", ParameterType="form", Verb="POST", Description="The capacity of each new space created (see NbrOfSpacesToCreate).")
        public Integer CapacityOfEachSpace = null;

        /**
        * Where to start numbering for newly created lower levels (see NbrOfSpacesToCreate).
        */
        @DataMember(Name="StartNumberingFrom")
        @SerializedName("StartNumberingFrom")
        @ApiMember(Name="StartNumberingFrom", DataType="int", ParameterType="form", Verb="POST", Description="Where to start numbering for newly created lower levels (see NbrOfSpacesToCreate).")
        public Integer StartNumberingFrom = null;

        /**
        * The level at which to create new spaces (see NbrOfSpacesToCreate).
        */
        @DataMember(Name="CreateAtLevel")
        @SerializedName("CreateAtLevel")
        @ApiMember(Name="CreateAtLevel", DataType="int", ParameterType="form", Verb="POST", Description="The level at which to create new spaces (see NbrOfSpacesToCreate).")
        public Integer CreateAtLevel = null;

        @DataMember(Name="SecurityProfile")
        @SerializedName("SecurityProfile")
        public TrimSecurityProfile SecurityProfile = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="SpaceAccessControl")
        @SerializedName("SpaceAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="SpaceAdvancedUsageDetails")
        @SerializedName("SpaceAdvancedUsageDetails")
        @ApiMember(Name="SpaceAdvancedUsageDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AdvancedUsageDetails = null;

        @DataMember(Name="SpaceAvailable")
        @SerializedName("SpaceAvailable")
        @ApiMember(Name="SpaceAvailable", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Available = null;

        @DataMember(Name="SpaceCapacity")
        @SerializedName("SpaceCapacity")
        @ApiMember(Name="SpaceCapacity", DataType="long", ParameterType="form")
        public TrimProperty<Long> Capacity = null;

        @DataMember(Name="SpaceDescription")
        @SerializedName("SpaceDescription")
        @ApiMember(Name="SpaceDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="SpaceDestroyedAllBays")
        @SerializedName("SpaceDestroyedAllBays")
        @ApiMember(Name="SpaceDestroyedAllBays", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DestroyedAllBays = null;

        @DataMember(Name="SpaceDestroyedInBay")
        @SerializedName("SpaceDestroyedInBay")
        @ApiMember(Name="SpaceDestroyedInBay", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DestroyedInBay = null;

        @DataMember(Name="SpaceDestroyedRecords")
        @SerializedName("SpaceDestroyedRecords")
        @ApiMember(Name="SpaceDestroyedRecords", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DestroyedRecords = null;

        @DataMember(Name="SpaceForeignBarcode")
        @SerializedName("SpaceForeignBarcode")
        @ApiMember(Name="SpaceForeignBarcode", DataType="string", ParameterType="form")
        public TrimStringProperty ForeignBarcode = null;

        @DataMember(Name="SpaceFullDescription")
        @SerializedName("SpaceFullDescription")
        @ApiMember(Name="SpaceFullDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FullDescription = null;

        @DataMember(Name="SpaceHasHoldingBay")
        @SerializedName("SpaceHasHoldingBay")
        @ApiMember(Name="SpaceHasHoldingBay", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HasHoldingBay = null;

        @DataMember(Name="SpaceIsCaptioned")
        @SerializedName("SpaceIsCaptioned")
        @ApiMember(Name="SpaceIsCaptioned", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsCaptioned = null;

        @DataMember(Name="SpaceIsLowestLevel")
        @SerializedName("SpaceIsLowestLevel")
        @ApiMember(Name="SpaceIsLowestLevel", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsLowestLevel = null;

        @DataMember(Name="SpaceLevel")
        @SerializedName("SpaceLevel")
        @ApiMember(Name="SpaceLevel", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<SpaceLevel> Level = null;

        @DataMember(Name="SpaceNickName")
        @SerializedName("SpaceNickName")
        @ApiMember(Name="SpaceNickName", DataType="string", ParameterType="form")
        public TrimStringProperty NickName = null;

        @DataMember(Name="SpaceNodeAvailable")
        @SerializedName("SpaceNodeAvailable")
        @ApiMember(Name="SpaceNodeAvailable", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NodeAvailable = null;

        @DataMember(Name="SpaceNodeCapacity")
        @SerializedName("SpaceNodeCapacity")
        @ApiMember(Name="SpaceNodeCapacity", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NodeCapacity = null;

        @DataMember(Name="SpaceNodeUsed")
        @SerializedName("SpaceNodeUsed")
        @ApiMember(Name="SpaceNodeUsed", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NodeUsed = null;

        @DataMember(Name="SpaceNumber")
        @SerializedName("SpaceNumber")
        @ApiMember(Name="SpaceNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Number = null;

        @DataMember(Name="SpaceRecordsActualAllBays")
        @SerializedName("SpaceRecordsActualAllBays")
        @ApiMember(Name="SpaceRecordsActualAllBays", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsActualAllBays = null;

        @DataMember(Name="SpaceRecordsActuallyAtHome")
        @SerializedName("SpaceRecordsActuallyAtHome")
        @ApiMember(Name="SpaceRecordsActuallyAtHome", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsActuallyAtHome = null;

        @DataMember(Name="SpaceRecordsActuallyInBay")
        @SerializedName("SpaceRecordsActuallyInBay")
        @ApiMember(Name="SpaceRecordsActuallyInBay", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsActuallyInBay = null;

        @DataMember(Name="SpaceRecordsAdded2YearsAgo")
        @SerializedName("SpaceRecordsAdded2YearsAgo")
        @ApiMember(Name="SpaceRecordsAdded2YearsAgo", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAdded2YearsAgo = null;

        @DataMember(Name="SpaceRecordsAddedLastYear")
        @SerializedName("SpaceRecordsAddedLastYear")
        @ApiMember(Name="SpaceRecordsAddedLastYear", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAddedLastYear = null;

        @DataMember(Name="SpaceRecordsAddedThisYear")
        @SerializedName("SpaceRecordsAddedThisYear")
        @ApiMember(Name="SpaceRecordsAddedThisYear", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAddedThisYear = null;

        @DataMember(Name="SpaceRecordsAllBays")
        @SerializedName("SpaceRecordsAllBays")
        @ApiMember(Name="SpaceRecordsAllBays", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAllBays = null;

        @DataMember(Name="SpaceRecordsAtHome")
        @SerializedName("SpaceRecordsAtHome")
        @ApiMember(Name="SpaceRecordsAtHome", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAtHome = null;

        @DataMember(Name="SpaceRecordsInHoldingBay")
        @SerializedName("SpaceRecordsInHoldingBay")
        @ApiMember(Name="SpaceRecordsInHoldingBay", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsInHoldingBay = null;

        @DataMember(Name="SpaceRecordsLoanAllBays")
        @SerializedName("SpaceRecordsLoanAllBays")
        @ApiMember(Name="SpaceRecordsLoanAllBays", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsLoanAllBays = null;

        @DataMember(Name="SpaceRecordsOut")
        @SerializedName("SpaceRecordsOut")
        @ApiMember(Name="SpaceRecordsOut", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsOut = null;

        @DataMember(Name="SpaceRecordsOutOfBay")
        @SerializedName("SpaceRecordsOutOfBay")
        @ApiMember(Name="SpaceRecordsOutOfBay", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsOutOfBay = null;

        @DataMember(Name="SpaceUsageDetails")
        @SerializedName("SpaceUsageDetails")
        @ApiMember(Name="SpaceUsageDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty UsageDetails = null;

        @DataMember(Name="SpaceUsed")
        @SerializedName("SpaceUsed")
        @ApiMember(Name="SpaceUsed", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Used = null;

        @DataMember(Name="SpaceWithin")
        @SerializedName("SpaceWithin")
        @ApiMember(Name="SpaceWithin", DataType="long", ParameterType="form", Verb="POST")
        public SpaceRef Within = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Space setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Space setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Space setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Space setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public Integer getNbrOfSpacesToCreate() { return NbrOfSpacesToCreate; }
        public Space setNbrOfSpacesToCreate(Integer value) { this.NbrOfSpacesToCreate = value; return this; }
        public Integer getCapacityOfEachSpace() { return CapacityOfEachSpace; }
        public Space setCapacityOfEachSpace(Integer value) { this.CapacityOfEachSpace = value; return this; }
        public Integer getStartNumberingFrom() { return StartNumberingFrom; }
        public Space setStartNumberingFrom(Integer value) { this.StartNumberingFrom = value; return this; }
        public Integer getCreateAtLevel() { return CreateAtLevel; }
        public Space setCreateAtLevel(Integer value) { this.CreateAtLevel = value; return this; }
        public TrimSecurityProfile getSecurityProfile() { return SecurityProfile; }
        public Space setSecurityProfile(TrimSecurityProfile value) { this.SecurityProfile = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Space setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Space setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Space setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimStringProperty getAdvancedUsageDetails() { return AdvancedUsageDetails; }
        public Space setAdvancedUsageDetails(TrimStringProperty value) { this.AdvancedUsageDetails = value; return this; }
        public TrimProperty<Long> getAvailable() { return Available; }
        public Space setAvailable(TrimProperty<Long> value) { this.Available = value; return this; }
        public TrimProperty<Long> getCapacity() { return Capacity; }
        public Space setCapacity(TrimProperty<Long> value) { this.Capacity = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public Space setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Long> getDestroyedAllBays() { return DestroyedAllBays; }
        public Space setDestroyedAllBays(TrimProperty<Long> value) { this.DestroyedAllBays = value; return this; }
        public TrimProperty<Long> getDestroyedInBay() { return DestroyedInBay; }
        public Space setDestroyedInBay(TrimProperty<Long> value) { this.DestroyedInBay = value; return this; }
        public TrimProperty<Long> getDestroyedRecords() { return DestroyedRecords; }
        public Space setDestroyedRecords(TrimProperty<Long> value) { this.DestroyedRecords = value; return this; }
        public TrimStringProperty getForeignBarcode() { return ForeignBarcode; }
        public Space setForeignBarcode(TrimStringProperty value) { this.ForeignBarcode = value; return this; }
        public TrimStringProperty getFullDescription() { return FullDescription; }
        public Space setFullDescription(TrimStringProperty value) { this.FullDescription = value; return this; }
        public TrimProperty<Boolean> getHasHoldingBay() { return HasHoldingBay; }
        public Space setHasHoldingBay(TrimProperty<Boolean> value) { this.HasHoldingBay = value; return this; }
        public TrimProperty<Boolean> getIsCaptioned() { return IsCaptioned; }
        public Space setIsCaptioned(TrimProperty<Boolean> value) { this.IsCaptioned = value; return this; }
        public TrimProperty<Boolean> getIsLowestLevel() { return IsLowestLevel; }
        public Space setIsLowestLevel(TrimProperty<Boolean> value) { this.IsLowestLevel = value; return this; }
        public TrimProperty<SpaceLevel> getLevel() { return Level; }
        public Space setLevel(TrimProperty<SpaceLevel> value) { this.Level = value; return this; }
        public TrimStringProperty getNickName() { return NickName; }
        public Space setNickName(TrimStringProperty value) { this.NickName = value; return this; }
        public TrimProperty<Long> getNodeAvailable() { return NodeAvailable; }
        public Space setNodeAvailable(TrimProperty<Long> value) { this.NodeAvailable = value; return this; }
        public TrimProperty<Long> getNodeCapacity() { return NodeCapacity; }
        public Space setNodeCapacity(TrimProperty<Long> value) { this.NodeCapacity = value; return this; }
        public TrimProperty<Long> getNodeUsed() { return NodeUsed; }
        public Space setNodeUsed(TrimProperty<Long> value) { this.NodeUsed = value; return this; }
        public TrimStringProperty getNumber() { return Number; }
        public Space setNumber(TrimStringProperty value) { this.Number = value; return this; }
        public TrimProperty<Long> getRecordsActualAllBays() { return RecordsActualAllBays; }
        public Space setRecordsActualAllBays(TrimProperty<Long> value) { this.RecordsActualAllBays = value; return this; }
        public TrimProperty<Long> getRecordsActuallyAtHome() { return RecordsActuallyAtHome; }
        public Space setRecordsActuallyAtHome(TrimProperty<Long> value) { this.RecordsActuallyAtHome = value; return this; }
        public TrimProperty<Long> getRecordsActuallyInBay() { return RecordsActuallyInBay; }
        public Space setRecordsActuallyInBay(TrimProperty<Long> value) { this.RecordsActuallyInBay = value; return this; }
        public TrimProperty<Long> getRecordsAdded2YearsAgo() { return RecordsAdded2YearsAgo; }
        public Space setRecordsAdded2YearsAgo(TrimProperty<Long> value) { this.RecordsAdded2YearsAgo = value; return this; }
        public TrimProperty<Long> getRecordsAddedLastYear() { return RecordsAddedLastYear; }
        public Space setRecordsAddedLastYear(TrimProperty<Long> value) { this.RecordsAddedLastYear = value; return this; }
        public TrimProperty<Long> getRecordsAddedThisYear() { return RecordsAddedThisYear; }
        public Space setRecordsAddedThisYear(TrimProperty<Long> value) { this.RecordsAddedThisYear = value; return this; }
        public TrimProperty<Long> getRecordsAllBays() { return RecordsAllBays; }
        public Space setRecordsAllBays(TrimProperty<Long> value) { this.RecordsAllBays = value; return this; }
        public TrimProperty<Long> getRecordsAtHome() { return RecordsAtHome; }
        public Space setRecordsAtHome(TrimProperty<Long> value) { this.RecordsAtHome = value; return this; }
        public TrimProperty<Long> getRecordsInHoldingBay() { return RecordsInHoldingBay; }
        public Space setRecordsInHoldingBay(TrimProperty<Long> value) { this.RecordsInHoldingBay = value; return this; }
        public TrimProperty<Long> getRecordsLoanAllBays() { return RecordsLoanAllBays; }
        public Space setRecordsLoanAllBays(TrimProperty<Long> value) { this.RecordsLoanAllBays = value; return this; }
        public TrimProperty<Long> getRecordsOut() { return RecordsOut; }
        public Space setRecordsOut(TrimProperty<Long> value) { this.RecordsOut = value; return this; }
        public TrimProperty<Long> getRecordsOutOfBay() { return RecordsOutOfBay; }
        public Space setRecordsOutOfBay(TrimProperty<Long> value) { this.RecordsOutOfBay = value; return this; }
        public TrimStringProperty getUsageDetails() { return UsageDetails; }
        public Space setUsageDetails(TrimStringProperty value) { this.UsageDetails = value; return this; }
        public TrimProperty<Long> getUsed() { return Used; }
        public Space setUsed(TrimProperty<Long> value) { this.Used = value; return this; }
        public SpaceRef getWithin() { return Within; }
        public Space setWithin(SpaceRef value) { this.Within = value; return this; }
        private static Object responseType = SpacesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Space by Uri or Name.
    */
    @Route(Path="/Space/{Id*}", Verbs="GET")
    @Api("Fetch a single Space by Uri or Name.")
    public static class SpaceFind extends TrimMainObjectByUri implements IReturn<SpacesResponse>
    {
        
        private static Object responseType = SpacesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of StopWords filtered using a search string.
    */
    @Route(Path="/StopWord", Verbs="GET")
    @Api("Fetch a collection of StopWords filtered using a search string.")
    public static class StopWords extends TrimMainObjectSearch implements IReturn<StopWordsResponse>
    {
        
        private static Object responseType = StopWordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a StopWord object.
    */
    @Route(Path="/StopWord", Verbs="POST")
    @Api("Update a StopWord object.")
    @DataContract
    public static class StopWord extends TrimMainObject implements IReturn<StopWordsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="StopWordName")
        @SerializedName("StopWordName")
        @ApiMember(Name="StopWordName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public StopWord setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public StopWord setName(TrimStringProperty value) { this.Name = value; return this; }
        private static Object responseType = StopWordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single StopWord by Uri or Name.
    */
    @Route(Path="/StopWord/{Id*}", Verbs="GET")
    @Api("Fetch a single StopWord by Uri or Name.")
    public static class StopWordFind extends TrimMainObjectByUri implements IReturn<StopWordsResponse>
    {
        
        private static Object responseType = StopWordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of TodoItems filtered using a search string.
    */
    @Route(Path="/TodoItem", Verbs="GET")
    // @Route(Path="/MyTodoItems", Verbs="GET,POST")
    @Api("Fetch a collection of TodoItems filtered using a search string.")
    public static class TodoItems extends TrimMainObjectSearch implements IReturn<TodoItemsResponse>
    {
        
        private static Object responseType = TodoItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a TodoItem object.
    */
    @Route(Path="/TodoItem", Verbs="POST")
    @Api("Update a TodoItem object.")
    @DataContract
    public static class TodoItem extends TrimMainObject implements IReturn<TodoItemsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildItemReferences")
        @SerializedName("ChildItemReferences")
        public ArrayList<TodoItemItemReference> ChildItemReferences = null;

        @DataMember(Name="TodoItemAssignee")
        @SerializedName("TodoItemAssignee")
        @ApiMember(Name="TodoItemAssignee", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef Assignee = null;

        @DataMember(Name="TodoItemCreatedBy")
        @SerializedName("TodoItemCreatedBy")
        @ApiMember(Name="TodoItemCreatedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef CreatedBy = null;

        @DataMember(Name="TodoItemDateCreated")
        @SerializedName("TodoItemDateCreated")
        @ApiMember(Name="TodoItemDateCreated", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="TodoItemDateDone")
        @SerializedName("TodoItemDateDone")
        @ApiMember(Name="TodoItemDateDone", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateDone = null;

        @DataMember(Name="TodoItemDateDue")
        @SerializedName("TodoItemDateDue")
        @ApiMember(Name="TodoItemDateDue", DataType="TrimDateTime", IsRequired=true, ParameterType="form")
        public TrimDateTime DateDue = null;

        @DataMember(Name="TodoItemDescription")
        @SerializedName("TodoItemDescription")
        @ApiMember(Name="TodoItemDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="TodoItemIsComplete")
        @SerializedName("TodoItemIsComplete")
        @ApiMember(Name="TodoItemIsComplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="TodoItemIsOverdue")
        @SerializedName("TodoItemIsOverdue")
        @ApiMember(Name="TodoItemIsOverdue", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsOverdue = null;

        @DataMember(Name="TodoItemItemPriority")
        @SerializedName("TodoItemItemPriority")
        @ApiMember(Name="TodoItemItemPriority", DataType="string", ParameterType="form")
        public TrimProperty<Priority> ItemPriority = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="TodoItemNotes")
        @SerializedName("TodoItemNotes")
        @ApiMember(Name="TodoItemNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="TodoItemNotifyByEmail")
        @SerializedName("TodoItemNotifyByEmail")
        @ApiMember(Name="TodoItemNotifyByEmail", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyByEmail = null;

        @DataMember(Name="TodoItemTodo")
        @SerializedName("TodoItemTodo")
        @ApiMember(Name="TodoItemTodo", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Todo = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public TodoItem setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<TodoItemItemReference> getChildItemReferences() { return ChildItemReferences; }
        public TodoItem setChildItemReferences(ArrayList<TodoItemItemReference> value) { this.ChildItemReferences = value; return this; }
        public LocationRef getAssignee() { return Assignee; }
        public TodoItem setAssignee(LocationRef value) { this.Assignee = value; return this; }
        public LocationRef getCreatedBy() { return CreatedBy; }
        public TodoItem setCreatedBy(LocationRef value) { this.CreatedBy = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public TodoItem setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimDateTime getDateDone() { return DateDone; }
        public TodoItem setDateDone(TrimDateTime value) { this.DateDone = value; return this; }
        public TrimDateTime getDateDue() { return DateDue; }
        public TodoItem setDateDue(TrimDateTime value) { this.DateDue = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public TodoItem setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public TodoItem setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<Boolean> getIsOverdue() { return IsOverdue; }
        public TodoItem setIsOverdue(TrimProperty<Boolean> value) { this.IsOverdue = value; return this; }
        public TrimProperty<Priority> getItemPriority() { return ItemPriority; }
        public TodoItem setItemPriority(TrimProperty<Priority> value) { this.ItemPriority = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public TodoItem setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public TodoItem setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getNotifyByEmail() { return NotifyByEmail; }
        public TodoItem setNotifyByEmail(TrimProperty<Boolean> value) { this.NotifyByEmail = value; return this; }
        public TrimStringProperty getTodo() { return Todo; }
        public TodoItem setTodo(TrimStringProperty value) { this.Todo = value; return this; }
        private static Object responseType = TodoItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single TodoItem by Uri or Name.
    */
    @Route(Path="/TodoItem/{Id*}", Verbs="GET")
    // @Route(Path="/MyTodoItems/{id}", Verbs="GET")
    @Api("Fetch a single TodoItem by Uri or Name.")
    public static class TodoItemFind extends TrimMainObjectByUri implements IReturn<TodoItemsResponse>
    {
        
        private static Object responseType = TodoItemsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of UserLabels filtered using a search string.
    */
    @Route(Path="/UserLabel", Verbs="GET")
    @Api("Fetch a collection of UserLabels filtered using a search string.")
    public static class UserLabels extends TrimMainObjectSearch implements IReturn<UserLabelsResponse>
    {
        
        private static Object responseType = UserLabelsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a UserLabel object.
    */
    @Route(Path="/UserLabel", Verbs="POST")
    @Api("Update a UserLabel object.")
    @DataContract
    public static class UserLabel extends TrimMainObject implements IReturn<UserLabelsResponse>
    {
        /**
        * Delete a User Label.
        */
        @DataMember
        @ApiMember(Name="DeleteUserLabel", ParameterType="form", Verb="POST", Description="Delete a User Label.")
        public DeleteUserLabel DeleteUserLabel = null;

        /**
        * True to create and return a new lower level User Label
        */
        @DataMember(Name="NewLowerLevel")
        @SerializedName("NewLowerLevel")
        @ApiMember(Name="NewLowerLevel", DataType="boolean", ParameterType="form", Verb="POST", Description="True to create and return a new lower level User Label")
        public Boolean NewLowerLevel = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="UserLabelDateCreated")
        @SerializedName("UserLabelDateCreated")
        @ApiMember(Name="UserLabelDateCreated", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="UserLabelFullName")
        @SerializedName("UserLabelFullName")
        @ApiMember(Name="UserLabelFullName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FullName = null;

        @DataMember(Name="UserLabelIconId")
        @SerializedName("UserLabelIconId")
        @ApiMember(Name="UserLabelIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="UserLabelLabelType")
        @SerializedName("UserLabelLabelType")
        @ApiMember(Name="UserLabelLabelType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<UserLabelType> LabelType = null;

        @DataMember(Name="UserLabelName")
        @SerializedName("UserLabelName")
        @ApiMember(Name="UserLabelName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="UserLabelOwner")
        @SerializedName("UserLabelOwner")
        @ApiMember(Name="UserLabelOwner", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef Owner = null;

        @DataMember(Name="UserLabelParentLabel")
        @SerializedName("UserLabelParentLabel")
        @ApiMember(Name="UserLabelParentLabel", DataType="long", ParameterType="form", Verb="POST")
        public UserLabelRef ParentLabel = null;
        
        public DeleteUserLabel getDeleteUserLabel() { return DeleteUserLabel; }
        public UserLabel setDeleteUserLabel(DeleteUserLabel value) { this.DeleteUserLabel = value; return this; }
        public Boolean isNewLowerLevel() { return NewLowerLevel; }
        public UserLabel setNewLowerLevel(Boolean value) { this.NewLowerLevel = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public UserLabel setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public UserLabel setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimStringProperty getFullName() { return FullName; }
        public UserLabel setFullName(TrimStringProperty value) { this.FullName = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public UserLabel setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimProperty<UserLabelType> getLabelType() { return LabelType; }
        public UserLabel setLabelType(TrimProperty<UserLabelType> value) { this.LabelType = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public UserLabel setName(TrimStringProperty value) { this.Name = value; return this; }
        public LocationRef getOwner() { return Owner; }
        public UserLabel setOwner(LocationRef value) { this.Owner = value; return this; }
        public UserLabelRef getParentLabel() { return ParentLabel; }
        public UserLabel setParentLabel(UserLabelRef value) { this.ParentLabel = value; return this; }
        private static Object responseType = UserLabelsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single UserLabel by Uri or Name.
    */
    @Route(Path="/UserLabel/{Id*}", Verbs="GET")
    @Api("Fetch a single UserLabel by Uri or Name.")
    public static class UserLabelFind extends TrimMainObjectByUri implements IReturn<UserLabelsResponse>
    {
        
        private static Object responseType = UserLabelsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Words filtered using a search string.
    */
    @Route(Path="/Word", Verbs="GET")
    @Api("Fetch a collection of Words filtered using a search string.")
    public static class Words extends TrimMainObjectSearch implements IReturn<WordsResponse>
    {
        
        private static Object responseType = WordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Word object.
    */
    @Route(Path="/Word", Verbs="POST")
    @Api("Update a Word object.")
    @DataContract
    public static class Word extends TrimMainObject implements IReturn<WordsResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="WordCount")
        @SerializedName("WordCount")
        @ApiMember(Name="WordCount", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Count = null;

        @DataMember(Name="WordName")
        @SerializedName("WordName")
        @ApiMember(Name="WordName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Name = null;

        @DataMember(Name="WordWordType")
        @SerializedName("WordWordType")
        @ApiMember(Name="WordWordType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<WordTypes> WordType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Word setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Long> getCount() { return Count; }
        public Word setCount(TrimProperty<Long> value) { this.Count = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Word setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<WordTypes> getWordType() { return WordType; }
        public Word setWordType(TrimProperty<WordTypes> value) { this.WordType = value; return this; }
        private static Object responseType = WordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Word by Uri or Name.
    */
    @Route(Path="/Word/{Id*}", Verbs="GET")
    @Api("Fetch a single Word by Uri or Name.")
    public static class WordFind extends TrimMainObjectByUri implements IReturn<WordsResponse>
    {
        
        private static Object responseType = WordsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of Workflows filtered using a search string.
    */
    @Route(Path="/Workflow", Verbs="GET")
    @Api("Fetch a collection of Workflows filtered using a search string.")
    public static class Workflows extends TrimMainObjectSearch implements IReturn<WorkflowsResponse>
    {
        
        private static Object responseType = WorkflowsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a Workflow object.
    */
    @Route(Path="/Workflow", Verbs="POST")
    @Api("Update a Workflow object.")
    @DataContract
    public static class Workflow extends TrimMainObject implements IReturn<WorkflowsResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="LockWorkflow", ParameterType="form", Verb="POST", Description="")
        public LockWorkflow LockWorkflow = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="UnlockWorkflow", ParameterType="form", Verb="POST", Description="")
        public UnlockWorkflow UnlockWorkflow = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildDocuments")
        @SerializedName("ChildDocuments")
        public ArrayList<WorkflowDocument> ChildDocuments = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="WorkflowAccessControl")
        @SerializedName("WorkflowAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="WorkflowAutoStartActivities")
        @SerializedName("WorkflowAutoStartActivities")
        @ApiMember(Name="WorkflowAutoStartActivities", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoStartActivities = null;

        @DataMember(Name="WorkflowCreator")
        @SerializedName("WorkflowCreator")
        @ApiMember(Name="WorkflowCreator", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Creator = null;

        @DataMember(Name="WorkflowCustomer")
        @SerializedName("WorkflowCustomer")
        @ApiMember(Name="WorkflowCustomer", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Customer = null;

        @DataMember(Name="WorkflowDateCompleted")
        @SerializedName("WorkflowDateCompleted")
        @ApiMember(Name="WorkflowDateCompleted", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCompleted = null;

        @DataMember(Name="WorkflowDateDue")
        @SerializedName("WorkflowDateDue")
        @ApiMember(Name="WorkflowDateDue", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateDue = null;

        @DataMember(Name="WorkflowDateRegistered")
        @SerializedName("WorkflowDateRegistered")
        @ApiMember(Name="WorkflowDateRegistered", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateRegistered = null;

        @DataMember(Name="WorkflowDateStarted")
        @SerializedName("WorkflowDateStarted")
        @ApiMember(Name="WorkflowDateStarted", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateStarted = null;

        @DataMember(Name="WorkflowDefaultContainer")
        @SerializedName("WorkflowDefaultContainer")
        @ApiMember(Name="WorkflowDefaultContainer", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef DefaultContainer = null;

        @DataMember(Name="WorkflowDestroyDueDate")
        @SerializedName("WorkflowDestroyDueDate")
        @ApiMember(Name="WorkflowDestroyDueDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DestroyDueDate = null;

        @DataMember(Name="WorkflowEmailSupervisor")
        @SerializedName("WorkflowEmailSupervisor")
        @ApiMember(Name="WorkflowEmailSupervisor", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailSupervisor = null;

        @DataMember(Name="WorkflowIncomplete")
        @SerializedName("WorkflowIncomplete")
        @ApiMember(Name="WorkflowIncomplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Incomplete = null;

        @DataMember(Name="WorkflowInitiator")
        @SerializedName("WorkflowInitiator")
        @ApiMember(Name="WorkflowInitiator", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Initiator = null;

        @DataMember(Name="WorkflowIsComplete")
        @SerializedName("WorkflowIsComplete")
        @ApiMember(Name="WorkflowIsComplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="WorkflowIsOverdue")
        @SerializedName("WorkflowIsOverdue")
        @ApiMember(Name="WorkflowIsOverdue", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsOverdue = null;

        @DataMember(Name="WorkflowJobNumber")
        @SerializedName("WorkflowJobNumber")
        @ApiMember(Name="WorkflowJobNumber", DataType="string", ParameterType="form")
        public TrimStringProperty JobNumber = null;

        @DataMember(Name="WorkflowJobNumberExpanded")
        @SerializedName("WorkflowJobNumberExpanded")
        @ApiMember(Name="WorkflowJobNumberExpanded", DataType="string", ParameterType="form")
        public TrimStringProperty JobNumberExpanded = null;

        @DataMember(Name="WorkflowLockedBy")
        @SerializedName("WorkflowLockedBy")
        @ApiMember(Name="WorkflowLockedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef LockedBy = null;

        @DataMember(Name="WorkflowLockedOn")
        @SerializedName("WorkflowLockedOn")
        @ApiMember(Name="WorkflowLockedOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime LockedOn = null;

        @DataMember(Name="WorkflowLockStatus")
        @SerializedName("WorkflowLockStatus")
        @ApiMember(Name="WorkflowLockStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty LockStatus = null;

        @DataMember(Name="WorkflowName")
        @SerializedName("WorkflowName")
        @ApiMember(Name="WorkflowName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="WorkflowNormalRect")
        @SerializedName("WorkflowNormalRect")
        @ApiMember(Name="WorkflowNormalRect", DataType="string", ParameterType="form")
        public TrimStringProperty NormalRect = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="WorkflowNotes")
        @SerializedName("WorkflowNotes")
        @ApiMember(Name="WorkflowNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="WorkflowOutlineRect")
        @SerializedName("WorkflowOutlineRect")
        @ApiMember(Name="WorkflowOutlineRect", DataType="string", ParameterType="form")
        public TrimStringProperty OutlineRect = null;

        @DataMember(Name="WorkflowOverheadCost")
        @SerializedName("WorkflowOverheadCost")
        @ApiMember(Name="WorkflowOverheadCost", DataType="double", ParameterType="form")
        public TrimProperty<BigDecimal> OverheadCost = null;

        @DataMember(Name="WorkflowPercentageCompleted")
        @SerializedName("WorkflowPercentageCompleted")
        @ApiMember(Name="WorkflowPercentageCompleted", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> PercentageCompleted = null;

        @DataMember(Name="WorkflowRecalcWhenFinishEarly")
        @SerializedName("WorkflowRecalcWhenFinishEarly")
        @ApiMember(Name="WorkflowRecalcWhenFinishEarly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenFinishEarly = null;

        @DataMember(Name="WorkflowRecalcWhenFinishLate")
        @SerializedName("WorkflowRecalcWhenFinishLate")
        @ApiMember(Name="WorkflowRecalcWhenFinishLate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenFinishLate = null;

        @DataMember(Name="WorkflowRecalcWhenSuspended")
        @SerializedName("WorkflowRecalcWhenSuspended")
        @ApiMember(Name="WorkflowRecalcWhenSuspended", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenSuspended = null;

        @DataMember(Name="WorkflowRecordType")
        @SerializedName("WorkflowRecordType")
        @ApiMember(Name="WorkflowRecordType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef RecordType = null;

        @DataMember(Name="WorkflowScheduledStartDate")
        @SerializedName("WorkflowScheduledStartDate")
        @ApiMember(Name="WorkflowScheduledStartDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ScheduledStartDate = null;

        @DataMember(Name="WorkflowSupervisor")
        @SerializedName("WorkflowSupervisor")
        @ApiMember(Name="WorkflowSupervisor", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Supervisor = null;

        @DataMember(Name="WorkflowTemplate")
        @SerializedName("WorkflowTemplate")
        @ApiMember(Name="WorkflowTemplate", DataType="long", ParameterType="form", Verb="POST")
        public WorkflowTemplateRef Template = null;

        @DataMember(Name="WorkflowTotalActualCost")
        @SerializedName("WorkflowTotalActualCost")
        @ApiMember(Name="WorkflowTotalActualCost", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> TotalActualCost = null;

        @DataMember(Name="WorkflowTotalActualDuration")
        @SerializedName("WorkflowTotalActualDuration")
        @ApiMember(Name="WorkflowTotalActualDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalActualDuration = null;

        @DataMember(Name="WorkflowTotalEstimatedCost")
        @SerializedName("WorkflowTotalEstimatedCost")
        @ApiMember(Name="WorkflowTotalEstimatedCost", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> TotalEstimatedCost = null;

        @DataMember(Name="WorkflowTotalEstimatedDuration")
        @SerializedName("WorkflowTotalEstimatedDuration")
        @ApiMember(Name="WorkflowTotalEstimatedDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalEstimatedDuration = null;

        @DataMember(Name="WorkflowTotalRemainingDuration")
        @SerializedName("WorkflowTotalRemainingDuration")
        @ApiMember(Name="WorkflowTotalRemainingDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalRemainingDuration = null;

        @DataMember(Name="WorkflowWorkflowPriority")
        @SerializedName("WorkflowWorkflowPriority")
        @ApiMember(Name="WorkflowWorkflowPriority", DataType="string", ParameterType="form")
        public TrimProperty<Priority> WorkflowPriority = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public Workflow setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public Workflow setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public Workflow setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public Workflow setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public LockWorkflow getLockWorkflow() { return LockWorkflow; }
        public Workflow setLockWorkflow(LockWorkflow value) { this.LockWorkflow = value; return this; }
        public UnlockWorkflow getUnlockWorkflow() { return UnlockWorkflow; }
        public Workflow setUnlockWorkflow(UnlockWorkflow value) { this.UnlockWorkflow = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Workflow setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<WorkflowDocument> getChildDocuments() { return ChildDocuments; }
        public Workflow setChildDocuments(ArrayList<WorkflowDocument> value) { this.ChildDocuments = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public Workflow setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public Workflow setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Boolean> getAutoStartActivities() { return AutoStartActivities; }
        public Workflow setAutoStartActivities(TrimProperty<Boolean> value) { this.AutoStartActivities = value; return this; }
        public LocationRef getCreator() { return Creator; }
        public Workflow setCreator(LocationRef value) { this.Creator = value; return this; }
        public LocationRef getCustomer() { return Customer; }
        public Workflow setCustomer(LocationRef value) { this.Customer = value; return this; }
        public TrimDateTime getDateCompleted() { return DateCompleted; }
        public Workflow setDateCompleted(TrimDateTime value) { this.DateCompleted = value; return this; }
        public TrimDateTime getDateDue() { return DateDue; }
        public Workflow setDateDue(TrimDateTime value) { this.DateDue = value; return this; }
        public TrimDateTime getDateRegistered() { return DateRegistered; }
        public Workflow setDateRegistered(TrimDateTime value) { this.DateRegistered = value; return this; }
        public TrimDateTime getDateStarted() { return DateStarted; }
        public Workflow setDateStarted(TrimDateTime value) { this.DateStarted = value; return this; }
        public RecordRef getDefaultContainer() { return DefaultContainer; }
        public Workflow setDefaultContainer(RecordRef value) { this.DefaultContainer = value; return this; }
        public TrimDateTime getDestroyDueDate() { return DestroyDueDate; }
        public Workflow setDestroyDueDate(TrimDateTime value) { this.DestroyDueDate = value; return this; }
        public TrimProperty<Boolean> getEmailSupervisor() { return EmailSupervisor; }
        public Workflow setEmailSupervisor(TrimProperty<Boolean> value) { this.EmailSupervisor = value; return this; }
        public TrimProperty<Boolean> getIncomplete() { return Incomplete; }
        public Workflow setIncomplete(TrimProperty<Boolean> value) { this.Incomplete = value; return this; }
        public RecordRef getInitiator() { return Initiator; }
        public Workflow setInitiator(RecordRef value) { this.Initiator = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public Workflow setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<Boolean> getIsOverdue() { return IsOverdue; }
        public Workflow setIsOverdue(TrimProperty<Boolean> value) { this.IsOverdue = value; return this; }
        public TrimStringProperty getJobNumber() { return JobNumber; }
        public Workflow setJobNumber(TrimStringProperty value) { this.JobNumber = value; return this; }
        public TrimStringProperty getJobNumberExpanded() { return JobNumberExpanded; }
        public Workflow setJobNumberExpanded(TrimStringProperty value) { this.JobNumberExpanded = value; return this; }
        public LocationRef getLockedBy() { return LockedBy; }
        public Workflow setLockedBy(LocationRef value) { this.LockedBy = value; return this; }
        public TrimDateTime getLockedOn() { return LockedOn; }
        public Workflow setLockedOn(TrimDateTime value) { this.LockedOn = value; return this; }
        public TrimStringProperty getLockStatus() { return LockStatus; }
        public Workflow setLockStatus(TrimStringProperty value) { this.LockStatus = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Workflow setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNormalRect() { return NormalRect; }
        public Workflow setNormalRect(TrimStringProperty value) { this.NormalRect = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public Workflow setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public Workflow setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getOutlineRect() { return OutlineRect; }
        public Workflow setOutlineRect(TrimStringProperty value) { this.OutlineRect = value; return this; }
        public TrimProperty<BigDecimal> getOverheadCost() { return OverheadCost; }
        public Workflow setOverheadCost(TrimProperty<BigDecimal> value) { this.OverheadCost = value; return this; }
        public TrimProperty<Integer> getPercentageCompleted() { return PercentageCompleted; }
        public Workflow setPercentageCompleted(TrimProperty<Integer> value) { this.PercentageCompleted = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenFinishEarly() { return RecalcWhenFinishEarly; }
        public Workflow setRecalcWhenFinishEarly(TrimProperty<Boolean> value) { this.RecalcWhenFinishEarly = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenFinishLate() { return RecalcWhenFinishLate; }
        public Workflow setRecalcWhenFinishLate(TrimProperty<Boolean> value) { this.RecalcWhenFinishLate = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenSuspended() { return RecalcWhenSuspended; }
        public Workflow setRecalcWhenSuspended(TrimProperty<Boolean> value) { this.RecalcWhenSuspended = value; return this; }
        public RecordTypeRef getRecordType() { return RecordType; }
        public Workflow setRecordType(RecordTypeRef value) { this.RecordType = value; return this; }
        public TrimDateTime getScheduledStartDate() { return ScheduledStartDate; }
        public Workflow setScheduledStartDate(TrimDateTime value) { this.ScheduledStartDate = value; return this; }
        public LocationRef getSupervisor() { return Supervisor; }
        public Workflow setSupervisor(LocationRef value) { this.Supervisor = value; return this; }
        public WorkflowTemplateRef getTemplate() { return Template; }
        public Workflow setTemplate(WorkflowTemplateRef value) { this.Template = value; return this; }
        public TrimProperty<BigDecimal> getTotalActualCost() { return TotalActualCost; }
        public Workflow setTotalActualCost(TrimProperty<BigDecimal> value) { this.TotalActualCost = value; return this; }
        public TrimProperty<Long> getTotalActualDuration() { return TotalActualDuration; }
        public Workflow setTotalActualDuration(TrimProperty<Long> value) { this.TotalActualDuration = value; return this; }
        public TrimProperty<BigDecimal> getTotalEstimatedCost() { return TotalEstimatedCost; }
        public Workflow setTotalEstimatedCost(TrimProperty<BigDecimal> value) { this.TotalEstimatedCost = value; return this; }
        public TrimProperty<Long> getTotalEstimatedDuration() { return TotalEstimatedDuration; }
        public Workflow setTotalEstimatedDuration(TrimProperty<Long> value) { this.TotalEstimatedDuration = value; return this; }
        public TrimProperty<Long> getTotalRemainingDuration() { return TotalRemainingDuration; }
        public Workflow setTotalRemainingDuration(TrimProperty<Long> value) { this.TotalRemainingDuration = value; return this; }
        public TrimProperty<Priority> getWorkflowPriority() { return WorkflowPriority; }
        public Workflow setWorkflowPriority(TrimProperty<Priority> value) { this.WorkflowPriority = value; return this; }
        private static Object responseType = WorkflowsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single Workflow by Uri or Name.
    */
    @Route(Path="/Workflow/{Id*}", Verbs="GET")
    @Api("Fetch a single Workflow by Uri or Name.")
    public static class WorkflowFind extends TrimMainObjectByUri implements IReturn<WorkflowsResponse>
    {
        
        private static Object responseType = WorkflowsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of WorkflowTemplates filtered using a search string.
    */
    @Route(Path="/WorkflowTemplate", Verbs="GET")
    @Api("Fetch a collection of WorkflowTemplates filtered using a search string.")
    public static class WorkflowTemplates extends TrimMainObjectSearch implements IReturn<WorkflowTemplatesResponse>
    {
        
        private static Object responseType = WorkflowTemplatesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a WorkflowTemplate object.
    */
    @Route(Path="/WorkflowTemplate", Verbs="POST")
    @Api("Update a WorkflowTemplate object.")
    @DataContract
    public static class WorkflowTemplate extends TrimMainObject implements IReturn<WorkflowTemplatesResponse>
    {
        /**
        * Allows for the setting of a user label.
        */
        @DataMember
        @ApiMember(Name="SetUserLabel", ParameterType="form", Verb="POST", Description="Allows for the setting of a user label.")
        public SetUserLabel SetUserLabel = null;

        /**
        * Allows for the removal of an object from a user label.
        */
        @DataMember
        @ApiMember(Name="RemoveUserLabel", ParameterType="form", Verb="POST", Description="Allows for the removal of an object from a user label.")
        public RemoveUserLabel RemoveUserLabel = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="SetActiveDateRange", ParameterType="form", Verb="POST", Description="")
        public SetActiveDateRange SetActiveDateRange = null;

        /**
        * When search for favorites they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinFavorites", ParameterType="form", Verb="POST", Description="When search for favorites they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinFavorites ChangePositionWithinFavorites = null;

        /**
        * When search by UserLabel they wil be returned in this order unless another sort is used.
        */
        @DataMember
        @ApiMember(Name="ChangePositionWithinUserLabel", ParameterType="form", Verb="POST", Description="When search by UserLabel they wil be returned in this order unless another sort is used.")
        public ChangePositionWithinUserLabel ChangePositionWithinUserLabel = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="LockWorkflowTemplate", ParameterType="form", Verb="POST", Description="")
        public LockWorkflowTemplate LockWorkflowTemplate = null;

        /**
        * 
        */
        @DataMember
        @ApiMember(Name="UnlockWorkflowTemplate", ParameterType="form", Verb="POST", Description="")
        public UnlockWorkflowTemplate UnlockWorkflowTemplate = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ChildDocuments")
        @SerializedName("ChildDocuments")
        public ArrayList<WorkflowTemplateDocument> ChildDocuments = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="WorkflowTemplateAccessControl")
        @SerializedName("WorkflowTemplateAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="WorkflowTemplateActiveFrom")
        @SerializedName("WorkflowTemplateActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="WorkflowTemplateActiveTo")
        @SerializedName("WorkflowTemplateActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="WorkflowTemplateActiveDescription")
        @SerializedName("WorkflowTemplateActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="WorkflowTemplateIsActive")
        @SerializedName("WorkflowTemplateIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="WorkflowTemplateAutoStartActivities")
        @SerializedName("WorkflowTemplateAutoStartActivities")
        @ApiMember(Name="WorkflowTemplateAutoStartActivities", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoStartActivities = null;

        @DataMember(Name="WorkflowTemplateDateRegistered")
        @SerializedName("WorkflowTemplateDateRegistered")
        @ApiMember(Name="WorkflowTemplateDateRegistered", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateRegistered = null;

        @DataMember(Name="WorkflowTemplateDefaultContainer")
        @SerializedName("WorkflowTemplateDefaultContainer")
        @ApiMember(Name="WorkflowTemplateDefaultContainer", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef DefaultContainer = null;

        @DataMember(Name="WorkflowTemplateDefaultPriority")
        @SerializedName("WorkflowTemplateDefaultPriority")
        @ApiMember(Name="WorkflowTemplateDefaultPriority", DataType="string", ParameterType="form")
        public TrimProperty<Priority> DefaultPriority = null;

        @DataMember(Name="WorkflowTemplateEmailSupervisor")
        @SerializedName("WorkflowTemplateEmailSupervisor")
        @ApiMember(Name="WorkflowTemplateEmailSupervisor", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailSupervisor = null;

        @DataMember(Name="WorkflowTemplateInitRecordBehavior")
        @SerializedName("WorkflowTemplateInitRecordBehavior")
        @ApiMember(Name="WorkflowTemplateInitRecordBehavior", DataType="string", ParameterType="form")
        public TrimProperty<InitiatingRecordBehavior> InitRecordBehavior = null;

        @DataMember(Name="WorkflowTemplateLockedBy")
        @SerializedName("WorkflowTemplateLockedBy")
        @ApiMember(Name="WorkflowTemplateLockedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef LockedBy = null;

        @DataMember(Name="WorkflowTemplateLockedOn")
        @SerializedName("WorkflowTemplateLockedOn")
        @ApiMember(Name="WorkflowTemplateLockedOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime LockedOn = null;

        @DataMember(Name="WorkflowTemplateLockStatus")
        @SerializedName("WorkflowTemplateLockStatus")
        @ApiMember(Name="WorkflowTemplateLockStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty LockStatus = null;

        @DataMember(Name="WorkflowTemplateMonthsToKeep")
        @SerializedName("WorkflowTemplateMonthsToKeep")
        @ApiMember(Name="WorkflowTemplateMonthsToKeep", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MonthsToKeep = null;

        @DataMember(Name="WorkflowTemplateName")
        @SerializedName("WorkflowTemplateName")
        @ApiMember(Name="WorkflowTemplateName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="WorkflowTemplateNotes")
        @SerializedName("WorkflowTemplateNotes")
        @ApiMember(Name="WorkflowTemplateNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="WorkflowTemplateOverheadCost")
        @SerializedName("WorkflowTemplateOverheadCost")
        @ApiMember(Name="WorkflowTemplateOverheadCost", DataType="double", ParameterType="form")
        public TrimProperty<BigDecimal> OverheadCost = null;

        @DataMember(Name="WorkflowTemplateRecalcWhenFinishEarly")
        @SerializedName("WorkflowTemplateRecalcWhenFinishEarly")
        @ApiMember(Name="WorkflowTemplateRecalcWhenFinishEarly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenFinishEarly = null;

        @DataMember(Name="WorkflowTemplateRecalcWhenFinishLate")
        @SerializedName("WorkflowTemplateRecalcWhenFinishLate")
        @ApiMember(Name="WorkflowTemplateRecalcWhenFinishLate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenFinishLate = null;

        @DataMember(Name="WorkflowTemplateRecalcWhenSuspended")
        @SerializedName("WorkflowTemplateRecalcWhenSuspended")
        @ApiMember(Name="WorkflowTemplateRecalcWhenSuspended", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenSuspended = null;

        @DataMember(Name="WorkflowTemplateRecordType")
        @SerializedName("WorkflowTemplateRecordType")
        @ApiMember(Name="WorkflowTemplateRecordType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef RecordType = null;

        @DataMember(Name="WorkflowTemplateSupervisor")
        @SerializedName("WorkflowTemplateSupervisor")
        @ApiMember(Name="WorkflowTemplateSupervisor", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Supervisor = null;

        @DataMember(Name="WorkflowTemplateTotalEstimatedCost")
        @SerializedName("WorkflowTemplateTotalEstimatedCost")
        @ApiMember(Name="WorkflowTemplateTotalEstimatedCost", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> TotalEstimatedCost = null;

        @DataMember(Name="WorkflowTemplateTotalEstimatedDuration")
        @SerializedName("WorkflowTemplateTotalEstimatedDuration")
        @ApiMember(Name="WorkflowTemplateTotalEstimatedDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalEstimatedDuration = null;
        
        public SetUserLabel getSetUserLabel() { return SetUserLabel; }
        public WorkflowTemplate setSetUserLabel(SetUserLabel value) { this.SetUserLabel = value; return this; }
        public RemoveUserLabel getRemoveUserLabel() { return RemoveUserLabel; }
        public WorkflowTemplate setRemoveUserLabel(RemoveUserLabel value) { this.RemoveUserLabel = value; return this; }
        public SetActiveDateRange getSetActiveDateRange() { return SetActiveDateRange; }
        public WorkflowTemplate setSetActiveDateRange(SetActiveDateRange value) { this.SetActiveDateRange = value; return this; }
        public ChangePositionWithinFavorites getChangePositionWithinFavorites() { return ChangePositionWithinFavorites; }
        public WorkflowTemplate setChangePositionWithinFavorites(ChangePositionWithinFavorites value) { this.ChangePositionWithinFavorites = value; return this; }
        public ChangePositionWithinUserLabel getChangePositionWithinUserLabel() { return ChangePositionWithinUserLabel; }
        public WorkflowTemplate setChangePositionWithinUserLabel(ChangePositionWithinUserLabel value) { this.ChangePositionWithinUserLabel = value; return this; }
        public LockWorkflowTemplate getLockWorkflowTemplate() { return LockWorkflowTemplate; }
        public WorkflowTemplate setLockWorkflowTemplate(LockWorkflowTemplate value) { this.LockWorkflowTemplate = value; return this; }
        public UnlockWorkflowTemplate getUnlockWorkflowTemplate() { return UnlockWorkflowTemplate; }
        public WorkflowTemplate setUnlockWorkflowTemplate(UnlockWorkflowTemplate value) { this.UnlockWorkflowTemplate = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public WorkflowTemplate setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<WorkflowTemplateDocument> getChildDocuments() { return ChildDocuments; }
        public WorkflowTemplate setChildDocuments(ArrayList<WorkflowTemplateDocument> value) { this.ChildDocuments = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public WorkflowTemplate setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public WorkflowTemplate setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public WorkflowTemplate setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public WorkflowTemplate setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public WorkflowTemplate setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public WorkflowTemplate setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getAutoStartActivities() { return AutoStartActivities; }
        public WorkflowTemplate setAutoStartActivities(TrimProperty<Boolean> value) { this.AutoStartActivities = value; return this; }
        public TrimDateTime getDateRegistered() { return DateRegistered; }
        public WorkflowTemplate setDateRegistered(TrimDateTime value) { this.DateRegistered = value; return this; }
        public RecordRef getDefaultContainer() { return DefaultContainer; }
        public WorkflowTemplate setDefaultContainer(RecordRef value) { this.DefaultContainer = value; return this; }
        public TrimProperty<Priority> getDefaultPriority() { return DefaultPriority; }
        public WorkflowTemplate setDefaultPriority(TrimProperty<Priority> value) { this.DefaultPriority = value; return this; }
        public TrimProperty<Boolean> getEmailSupervisor() { return EmailSupervisor; }
        public WorkflowTemplate setEmailSupervisor(TrimProperty<Boolean> value) { this.EmailSupervisor = value; return this; }
        public TrimProperty<InitiatingRecordBehavior> getInitRecordBehavior() { return InitRecordBehavior; }
        public WorkflowTemplate setInitRecordBehavior(TrimProperty<InitiatingRecordBehavior> value) { this.InitRecordBehavior = value; return this; }
        public LocationRef getLockedBy() { return LockedBy; }
        public WorkflowTemplate setLockedBy(LocationRef value) { this.LockedBy = value; return this; }
        public TrimDateTime getLockedOn() { return LockedOn; }
        public WorkflowTemplate setLockedOn(TrimDateTime value) { this.LockedOn = value; return this; }
        public TrimStringProperty getLockStatus() { return LockStatus; }
        public WorkflowTemplate setLockStatus(TrimStringProperty value) { this.LockStatus = value; return this; }
        public TrimProperty<Integer> getMonthsToKeep() { return MonthsToKeep; }
        public WorkflowTemplate setMonthsToKeep(TrimProperty<Integer> value) { this.MonthsToKeep = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public WorkflowTemplate setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public WorkflowTemplate setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public WorkflowTemplate setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<BigDecimal> getOverheadCost() { return OverheadCost; }
        public WorkflowTemplate setOverheadCost(TrimProperty<BigDecimal> value) { this.OverheadCost = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenFinishEarly() { return RecalcWhenFinishEarly; }
        public WorkflowTemplate setRecalcWhenFinishEarly(TrimProperty<Boolean> value) { this.RecalcWhenFinishEarly = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenFinishLate() { return RecalcWhenFinishLate; }
        public WorkflowTemplate setRecalcWhenFinishLate(TrimProperty<Boolean> value) { this.RecalcWhenFinishLate = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenSuspended() { return RecalcWhenSuspended; }
        public WorkflowTemplate setRecalcWhenSuspended(TrimProperty<Boolean> value) { this.RecalcWhenSuspended = value; return this; }
        public RecordTypeRef getRecordType() { return RecordType; }
        public WorkflowTemplate setRecordType(RecordTypeRef value) { this.RecordType = value; return this; }
        public LocationRef getSupervisor() { return Supervisor; }
        public WorkflowTemplate setSupervisor(LocationRef value) { this.Supervisor = value; return this; }
        public TrimProperty<BigDecimal> getTotalEstimatedCost() { return TotalEstimatedCost; }
        public WorkflowTemplate setTotalEstimatedCost(TrimProperty<BigDecimal> value) { this.TotalEstimatedCost = value; return this; }
        public TrimProperty<Long> getTotalEstimatedDuration() { return TotalEstimatedDuration; }
        public WorkflowTemplate setTotalEstimatedDuration(TrimProperty<Long> value) { this.TotalEstimatedDuration = value; return this; }
        private static Object responseType = WorkflowTemplatesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single WorkflowTemplate by Uri or Name.
    */
    @Route(Path="/WorkflowTemplate/{Id*}", Verbs="GET")
    @Api("Fetch a single WorkflowTemplate by Uri or Name.")
    public static class WorkflowTemplateFind extends TrimMainObjectByUri implements IReturn<WorkflowTemplatesResponse>
    {
        
        private static Object responseType = WorkflowTemplatesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a collection of ZipCodes filtered using a search string.
    */
    @Route(Path="/ZipCode", Verbs="GET")
    @Api("Fetch a collection of ZipCodes filtered using a search string.")
    public static class ZipCodes extends TrimMainObjectSearch implements IReturn<ZipCodesResponse>
    {
        
        private static Object responseType = ZipCodesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update a ZipCode object.
    */
    @Route(Path="/ZipCode", Verbs="POST")
    @Api("Update a ZipCode object.")
    @DataContract
    public static class ZipCode extends TrimMainObject implements IReturn<ZipCodesResponse>
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        /**
        * Leave as Default unless creating a New Copy.
        */
        @DataMember(Name="ZipCodeNewType")
        @SerializedName("ZipCodeNewType")
        @ApiMember(Name="ZipCodeNewType", DataType="string", ParameterType="form", Verb="POST", Description="Leave as Default unless creating a New Copy.")
        public NewType NewType = null;

        @DataMember(Name="ZipCodeCity")
        @SerializedName("ZipCodeCity")
        @ApiMember(Name="ZipCodeCity", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty City = null;

        @DataMember(Name="ZipCodeCountry")
        @SerializedName("ZipCodeCountry")
        @ApiMember(Name="ZipCodeCountry", DataType="string", ParameterType="form")
        public TrimStringProperty Country = null;

        @DataMember(Name="ZipCodePostcode")
        @SerializedName("ZipCodePostcode")
        @ApiMember(Name="ZipCodePostcode", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Postcode = null;

        @DataMember(Name="ZipCodeRegion")
        @SerializedName("ZipCodeRegion")
        @ApiMember(Name="ZipCodeRegion", DataType="string", ParameterType="form")
        public TrimStringProperty Region = null;

        @DataMember(Name="ZipCodeState")
        @SerializedName("ZipCodeState")
        @ApiMember(Name="ZipCodeState", DataType="string", ParameterType="form")
        public TrimStringProperty State = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ZipCode setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public NewType getNewType() { return NewType; }
        public ZipCode setNewType(NewType value) { this.NewType = value; return this; }
        public TrimStringProperty getCity() { return City; }
        public ZipCode setCity(TrimStringProperty value) { this.City = value; return this; }
        public TrimStringProperty getCountry() { return Country; }
        public ZipCode setCountry(TrimStringProperty value) { this.Country = value; return this; }
        public TrimStringProperty getPostcode() { return Postcode; }
        public ZipCode setPostcode(TrimStringProperty value) { this.Postcode = value; return this; }
        public TrimStringProperty getRegion() { return Region; }
        public ZipCode setRegion(TrimStringProperty value) { this.Region = value; return this; }
        public TrimStringProperty getState() { return State; }
        public ZipCode setState(TrimStringProperty value) { this.State = value; return this; }
        private static Object responseType = ZipCodesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a single ZipCode by Uri or Name.
    */
    @Route(Path="/ZipCode/{Id*}", Verbs="GET")
    @Api("Fetch a single ZipCode by Uri or Name.")
    public static class ZipCodeFind extends TrimMainObjectByUri implements IReturn<ZipCodesResponse>
    {
        
        private static Object responseType = ZipCodesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch the Database properties.
    */
    @Route(Path="/Database", Verbs="GET")
    @Api("Fetch the Database properties.")
    public static class Databases extends TrimMainObjectSearch implements IReturn<DatabasesResponse>
    {
        
        private static Object responseType = DatabasesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    @Route(Path="/AppConfig", Verbs="GET")
    // @Route(Path="/AppConfig/{ConfigKey}", Verbs="GET")
    public static class AppConfigRequest implements IReturn<AppConfig>
    {
        @DataMember(Name="AppConfigRequestConfigKey")
        @SerializedName("AppConfigRequestConfigKey")
        @ApiMember(Name="AppConfigRequestConfigKey", DataType="string", IsRequired=true, ParameterType="query")
        public String ConfigKey = null;
        
        public String getConfigKey() { return ConfigKey; }
        public AppConfigRequest setConfigKey(String value) { this.ConfigKey = value; return this; }
        private static Object responseType = AppConfig.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * List of CommandDef objects by CommandId or object type.
    */
    @Route(Path="/CommandDef", Verbs="GET")
    @Api("List of CommandDef objects by CommandId or object type.")
    public static class CommandDefDetails implements IReturn<CommandDefDetailsResponse>
    {
        /**
        * The object type for which to return a list of command definitions.
        */
        @ApiMember(Name="TrimType", DataType="string", ParameterType="query", Verb="GET", Description="The object type for which to return a list of command definitions.")
        public BaseObjectTypes TrimType = null;

        /**
        * Filter the CommandDefs by CommandId
        */
        @ApiMember(Name="CommandIds", DataType="string", ParameterType="query", Verb="GET", Description="Filter the CommandDefs by CommandId")
        public ArrayList<CommandIds> CommandIds = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public CommandDefDetails setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<CommandIds> getCommandIds() { return CommandIds; }
        public CommandDefDetails setCommandIds(ArrayList<CommandIds> value) { this.CommandIds = value; return this; }
        private static Object responseType = CommandDefDetailsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch metadata for one or more Enums, includes a Caption for each item.
    */
    @Route(Path="/EnumItem", Verbs="GET")
    @Api("Fetch metadata for one or more Enums, includes a Caption for each item.")
    public static class EnumItemDetails implements IReturn<EnumItemDetailsResponse>
    {
        /**
        * Specify true to filter out any custom enum values that have not been given a Caption.
        */
        @ApiMember(Name="ExcludeUneditedCustomValues", DataType="boolean", ParameterType="query", Verb="GET", Description="Specify true to filter out any custom enum values that have not been given a Caption.")
        public Boolean ExcludeUneditedCustomValues = null;

        /**
        * The Enums for which to fetch metadata.
        */
        @ApiMember(Name="Enums", DataType="string", ParameterType="query", Verb="GET", Description="The Enums for which to fetch metadata.", AllowMultiple=true)
        public ArrayList<AllEnumerations> Enums = null;
        
        public Boolean isExcludeUneditedCustomValues() { return ExcludeUneditedCustomValues; }
        public EnumItemDetails setExcludeUneditedCustomValues(Boolean value) { this.ExcludeUneditedCustomValues = value; return this; }
        public ArrayList<AllEnumerations> getEnums() { return Enums; }
        public EnumItemDetails setEnums(ArrayList<AllEnumerations> value) { this.Enums = value; return this; }
        private static Object responseType = EnumItemDetailsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Returns an array of Object Definitions, each one containing metadata about one of the Main Objects (e.g. Record, Location) or Child Objects (e.g. RecordRendition, RecordRevision)
    */
    @Route(Path="/ObjectDef", Verbs="GET")
    @Api("Returns an array of Object Definitions, each one containing metadata about one of the Main Objects (e.g. Record, Location) or Child Objects (e.g. RecordRendition, RecordRevision)")
    public static class ObjectDefDetails implements IReturn<ObjectDefDetailsResponse>
    {
        /**
        * All objects (Main and Child), just main objects, searchable objects only (those that make sense in a search menu) or those objects supported by the HPRM WebClient.
        */
        @ApiMember(Name="ObjectType", DataType="string", ParameterType="query", Verb="GET", Description="All objects (Main and Child), just main objects, searchable objects only (those that make sense in a search menu) or those objects supported by the HPRM WebClient.")
        public TrimObjectType ObjectType = null;

        /**
        * If only one object type is required the object type for which to return a an ObjectDef.
        */
        @ApiMember(Name="TrimType", DataType="string", ParameterType="query", Verb="GET", Description="If only one object type is required the object type for which to return a an ObjectDef.")
        public BaseObjectTypes TrimType = null;

        /**
        * There are objects for which there is a simplified and advanced form (e.g. Checkin Style) send true to get the simple form.
        */
        @ApiMember(Name="SimpleForm", DataType="boolean", ParameterType="query", Verb="GET", Description="There are objects for which there is a simplified and advanced form (e.g. Checkin Style) send true to get the simple form.")
        public Boolean SimpleForm = null;

        /**
        * Should the data entry form definitions be returned as part of the ObjectDef.
        */
        @ApiMember(Name="IncludeDataEntryForms", DataType="boolean", ParameterType="query", Verb="GET", Description="Should the data entry form definitions be returned as part of the ObjectDef.")
        public Boolean IncludeDataEntryForms = null;

        /**
        * Should the default search form definitions be returned as part of the ObjectDef.
        */
        @ApiMember(Name="IncludeDefaultSearchForms", DataType="boolean", ParameterType="query", Verb="GET", Description="Should the default search form definitions be returned as part of the ObjectDef.")
        public Boolean IncludeDefaultSearchForms = null;
        
        public TrimObjectType getObjectType() { return ObjectType; }
        public ObjectDefDetails setObjectType(TrimObjectType value) { this.ObjectType = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ObjectDefDetails setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public Boolean isSimpleForm() { return SimpleForm; }
        public ObjectDefDetails setSimpleForm(Boolean value) { this.SimpleForm = value; return this; }
        public Boolean isIncludeDataEntryForms() { return IncludeDataEntryForms; }
        public ObjectDefDetails setIncludeDataEntryForms(Boolean value) { this.IncludeDataEntryForms = value; return this; }
        public Boolean isIncludeDefaultSearchForms() { return IncludeDefaultSearchForms; }
        public ObjectDefDetails setIncludeDefaultSearchForms(Boolean value) { this.IncludeDefaultSearchForms = value; return this; }
        private static Object responseType = ObjectDefDetailsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Multiple lists of search clause definitions available by object type.
    */
    @Route(Path="/SearchClauseDef", Verbs="GET")
    // @Route(Path="/SearchClauseHelp", Verbs="GET")
    @Api("Multiple lists of search clause definitions available by object type.")
    public static class SearchClauseDefDetails implements IReturn<SearchClauseDefDetailsResponse>
    {
        /**
        * The object type for which to return a list of search clause definitions.
        */
        @ApiMember(Name="TrimType", DataType="string", ParameterType="query", Verb="GET", Description="The object type for which to return a list of search clause definitions.")
        public BaseObjectTypes TrimType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SearchClauseDefDetails setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        private static Object responseType = SearchClauseDefDetailsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Convert a linear string search to a search stack.
    */
    @Route(Path="/SearchLinearToStack/{TrimType}", Verbs="POST")
    @Api("Convert a linear string search to a search stack.")
    public static class LinearToSearchStack implements IReturn<String>
    {
        @ApiMember(Name="SearchString", DataType="string", IsRequired=true, ParameterType="form", Verb="POST")
        public String SearchString = null;

        @ApiMember(Name="TrimType", DataType="string", IsRequired=true, ParameterType="path", Verb="POST")
        public BaseObjectTypes TrimType = null;
        
        public String getSearchString() { return SearchString; }
        public LinearToSearchStack setSearchString(String value) { this.SearchString = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public LinearToSearchStack setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        private static Object responseType = String.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Convert a search stack to a linear string search.
    */
    @Route(Path="/SearchStackToLinear/{TrimType}", Verbs="POST")
    @Api("Convert a search stack to a linear string search.")
    public static class SearchStackToLinear implements IReturn<String>
    {
        @ApiMember(Name="stack", DataType="object", IsRequired=true, ParameterType="body", Verb="POST")
        public TrimSearchStack SearchStack = null;

        @ApiMember(Name="TrimType", DataType="string", IsRequired=true, ParameterType="path", Verb="POST")
        public BaseObjectTypes TrimType = null;
        
        public TrimSearchStack getSearchStack() { return SearchStack; }
        public SearchStackToLinear setSearchStack(TrimSearchStack value) { this.SearchStack = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SearchStackToLinear setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        private static Object responseType = String.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch Localised Strings for one or more of the items identified in MessageIds.
    */
    @Route(Path="/Localisation", Verbs="GET")
    @Api("Fetch Localised Strings for one or more of the items identified in MessageIds.")
    public static class Localisation implements IReturn<LocalisationResponse>
    {
        /**
        * A regular expression identifying which localised strings to fetch. Example ^web_.* to fetch all MessageIds starting with 'web_'. 
        */
        @ApiMember(Name="MatchMessages", DataType="string", IsRequired=true, ParameterType="query", Verb="GET", Description="A regular expression identifying which localised strings to fetch. Example ^web_.* to fetch all MessageIds starting with 'web_'. ")
        public String MatchMessages = null;
        
        public String getMatchMessages() { return MatchMessages; }
        public Localisation setMatchMessages(String value) { this.MatchMessages = value; return this; }
        private static Object responseType = LocalisationResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Fetch a DataEntryForm for a particular type of location.
    */
    @Route(Path="/Location/DataEntryFormDefinition", Verbs="GET")
    // @Route(Path="/CreateLocationExample", Verbs="GET")
    @Api("Fetch a DataEntryForm for a particular type of location.")
    public static class LocationDataEntryDefinition implements IReturn<LocationsResponse>
    {
        /**
        * Choose athe type of Location for which to provide a data entry form.
        */
        @ApiMember(Name="InitializeAsType", DataType="string", IsRequired=true, ParameterType="query", Verb="GET", Description="Choose athe type of Location for which to provide a data entry form.")
        public LocationType InitializeAsType = null;
        
        public LocationType getInitializeAsType() { return InitializeAsType; }
        public LocationDataEntryDefinition setInitializeAsType(LocationType value) { this.InitializeAsType = value; return this; }
        private static Object responseType = LocationsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Print a Report for a selection of Main Object types.
    */
    @Route(Path="/Report/{Id}/Images/{ImageId}", Verbs="GET")
    @Api("Print a Report for a selection of Main Object types.")
    public static class ReportImage
    {
        /**
        * Uri or name of the report.
        */
        @ApiMember(Name="Id", DataType="string", IsRequired=true, ParameterType="path", Verb="GET", Description="Uri or name of the report.")
        public String Id = null;

        /**
        * Uri or name of the report image.
        */
        @ApiMember(Name="ImageId", DataType="string", IsRequired=true, ParameterType="path", Verb="GET", Description="Uri or name of the report image.")
        public String ImageId = null;
        
        public String getId() { return Id; }
        public ReportImage setId(String value) { this.Id = value; return this; }
        public String getImageId() { return ImageId; }
        public ReportImage setImageId(String value) { this.ImageId = value; return this; }
    }

    /**
    * A list of Property and user defined field definitions available by object type.
    */
    @Route(Path="/PropertyDef", Verbs="GET")
    // @Route(Path="/PropertyAndFieldHelp", Verbs="GET")
    @Api("A list of Property and user defined field definitions available by object type.")
    public static class PropertyOrFieldDefDetails extends BasePropertyOrFieldDefDetails implements IReturn<PropertyOrFieldDefDetailsResponse>
    {
        /**
        * The object type for which to return a list of property and field definitions.
        */
        @ApiMember(Name="TrimType", DataType="string", IsRequired=true, ParameterType="query", Verb="GET", Description="The object type for which to return a list of property and field definitions.")
        public BaseObjectTypes TrimType = null;

        /**
        * The object for which to return a list of property and field definitions.
        */
        @ApiMember(Name="ForObject", DataType="long", ParameterType="query", Verb="GET", Description="The object for which to return a list of property and field definitions.")
        public Long ForObject = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public PropertyOrFieldDefDetails setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public Long getForObject() { return ForObject; }
        public PropertyOrFieldDefDetails setForObject(Long value) { this.ForObject = value; return this; }
        private static Object responseType = PropertyOrFieldDefDetailsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Update Property and user defined field definition lists by object type.
    */
    @Route(Path="/PropertyDef", Verbs="POST")
    @Api("Update Property and user defined field definition lists by object type.")
    public static class PropertyOrFieldDefUpdate extends BasePropertyOrFieldDefDetails implements IReturn<PropertyOrFieldDefDetailsResponse>
    {
        /**
        * The object type for which to update the property and field definitions.
        */
        @ApiMember(Name="TrimType", DataType="string", IsRequired=true, ParameterType="form", Verb="POST", Description="The object type for which to update the property and field definitions.")
        public BaseObjectTypes TrimType = null;

        /**
        * The object for which to return a list of property and field definitions.
        */
        @ApiMember(Name="ForObject", DataType="long", IsRequired=true, ParameterType="form", Verb="POST", Description="The object for which to return a list of property and field definitions.")
        public Long ForObject = null;

        /**
        * The list of properties and fields to include in the list.
        */
        @ApiMember(Name="PropertiesAndFields", DataType="array", IsRequired=true, ParameterType="form", Verb="POST", Description="The list of properties and fields to include in the list.")
        public ArrayList<PropertyOrFieldDef> PropertiesAndFields = null;

        /**
        * Chose a property set for which to update property definitions.
        */
        @ApiMember(Name="ListType", DataType="string", IsRequired=true, ParameterType="form", Verb="POST", Description="Chose a property set for which to update property definitions.")
        public PropertyOrFieldDefType ListType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public PropertyOrFieldDefUpdate setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public Long getForObject() { return ForObject; }
        public PropertyOrFieldDefUpdate setForObject(Long value) { this.ForObject = value; return this; }
        public ArrayList<PropertyOrFieldDef> getPropertiesAndFields() { return PropertiesAndFields; }
        public PropertyOrFieldDefUpdate setPropertiesAndFields(ArrayList<PropertyOrFieldDef> value) { this.PropertiesAndFields = value; return this; }
        public PropertyOrFieldDefType getListType() { return ListType; }
        public PropertyOrFieldDefUpdate setListType(PropertyOrFieldDefType value) { this.ListType = value; return this; }
        private static Object responseType = PropertyOrFieldDefDetailsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Multiple lists of Property and user defined field definitions available by object type.
    */
    @Route(Path="/PropertyDefs", Verbs="GET")
    @Api("Multiple lists of Property and user defined field definitions available by object type.")
    public static class PropertyOrFieldDefDetailsMulti extends BasePropertyOrFieldDefDetails implements IReturn<PropertyOrFieldDefDetailsMultiResponse>
    {
        /**
        * One or more TRIM Base object types.
        */
        @ApiMember(Name="TrimType", DataType="string", IsRequired=true, ParameterType="query", Verb="GET", Description="One or more TRIM Base object types.", AllowMultiple=true)
        public ArrayList<BaseObjectTypes> TrimType = null;

        /**
        * True to also include all property definitions for User Options.
        */
        @ApiMember(Name="IncludeUserOptions", DataType="boolean", ParameterType="query", Verb="GET", Description="True to also include all property definitions for User Options.")
        public Boolean IncludeUserOptions = null;
        
        public ArrayList<BaseObjectTypes> getTrimType() { return TrimType; }
        public PropertyOrFieldDefDetailsMulti setTrimType(ArrayList<BaseObjectTypes> value) { this.TrimType = value; return this; }
        public Boolean isIncludeUserOptions() { return IncludeUserOptions; }
        public PropertyOrFieldDefDetailsMulti setIncludeUserOptions(Boolean value) { this.IncludeUserOptions = value; return this; }
        private static Object responseType = PropertyOrFieldDefDetailsMultiResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Get the HPE Content Manager Version.
    */
    @Route(Path="/Version", Verbs="GET")
    @Api("Get the HPE Content Manager Version.")
    public static class Version implements IReturn<VersionResponse>
    {
        
        private static Object responseType = VersionResponse.class;
        public Object getResponseType() { return responseType; }
    }

    /**
    * Get the HPE Content Manager TrimApplication.
    */
    @Route(Path="/ApplicationSettings", Verbs="GET")
    @Api("Get the HPE Content Manager TrimApplication.")
    public static class ApplicationSettings implements IReturn<ApplicationSettingsResponse>
    {
        
        private static Object responseType = ApplicationSettingsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    @Route(Path="/Search", Verbs="POST")
    public static class PostSearch extends BaseTrimMainObjectSearch
    {
        @ApiMember(Name="TrimType", DataType="string", IsRequired=true, ParameterType="form")
        public BaseObjectTypes TrimType = null;

        /**
        * Enter a search query, e.g. 'all' to get all objects.
        */
        @ApiMember(Name="q", DataType="string", IsRequired=true, ParameterType="form", Description="Enter a search query, e.g. 'all' to get all objects.")
        public String q = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public PostSearch setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public String getQ() { return q; }
        public PostSearch setQ(String value) { this.q = value; return this; }
    }

    @Route(Path="/StackSearch/{TrimType}", Verbs="POST")
    public static class TrimStackSearch extends BaseTrimMainObjectSearch implements IReturn<ActionDefsResponse>
    {
        /**
        * The SearchStack object, usually fetched from the SavedSearch SearchDefinition property.
        */
        @ApiMember(Name="stack", DataType="object", IsRequired=true, ParameterType="body", Verb="POST", Description="The SearchStack object, usually fetched from the SavedSearch SearchDefinition property.")
        public TrimSearchStack SearchStack = null;

        @ApiMember(Name="TrimType", DataType="string", IsRequired=true, ParameterType="path", Verb="POST")
        public BaseObjectTypes TrimType = null;
        
        public TrimSearchStack getSearchStack() { return SearchStack; }
        public TrimStackSearch setSearchStack(TrimSearchStack value) { this.SearchStack = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public TrimStackSearch setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        private static Object responseType = ActionDefsResponse.class;
        public Object getResponseType() { return responseType; }
    }

    @Route(Path="/FormSearch", Verbs="GET,POST")
    // @Route(Path="/FormSearch", Verbs="GET")
    public static class FormSearch extends BaseTrimMainObjectSearch
    {
        @ApiMember(Name="TrimType", DataType="string", IsRequired=true, ParameterType="query", Verb="GET")
        public BaseObjectTypes TrimType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public FormSearch setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
    }

    @Route("/auth")
    // @Route("/auth/{provider}")
    // @Route("/authenticate")
    // @Route("/authenticate/{provider}")
    @DataContract
    public static class Authenticate implements IReturn<AuthenticateResponse>
    {
        @DataMember(Order=1)
        public String provider = null;

        @DataMember(Order=2)
        public String State = null;

        @DataMember(Order=3)
        public String oauth_token = null;

        @DataMember(Order=4)
        public String oauth_verifier = null;

        @DataMember(Order=5)
        public String UserName = null;

        @DataMember(Order=6)
        public String Password = null;

        @DataMember(Order=7)
        public Boolean RememberMe = null;

        @DataMember(Order=8)
        public String Continue = null;

        @DataMember(Order=9)
        public String nonce = null;

        @DataMember(Order=10)
        public String uri = null;

        @DataMember(Order=11)
        public String response = null;

        @DataMember(Order=12)
        public String qop = null;

        @DataMember(Order=13)
        public String nc = null;

        @DataMember(Order=14)
        public String cnonce = null;

        @DataMember(Order=15)
        public Boolean UseTokenCookie = null;

        @DataMember(Order=16)
        public HashMap<String,String> Meta = null;
        
        public String getProvider() { return provider; }
        public Authenticate setProvider(String value) { this.provider = value; return this; }
        public String getState() { return State; }
        public Authenticate setState(String value) { this.State = value; return this; }
        public String getOauthToken() { return oauth_token; }
        public Authenticate setOauthToken(String value) { this.oauth_token = value; return this; }
        public String getOauthVerifier() { return oauth_verifier; }
        public Authenticate setOauthVerifier(String value) { this.oauth_verifier = value; return this; }
        public String getUserName() { return UserName; }
        public Authenticate setUserName(String value) { this.UserName = value; return this; }
        public String getPassword() { return Password; }
        public Authenticate setPassword(String value) { this.Password = value; return this; }
        public Boolean isRememberMe() { return RememberMe; }
        public Authenticate setRememberMe(Boolean value) { this.RememberMe = value; return this; }
        public String getContinue() { return Continue; }
        public Authenticate setContinue(String value) { this.Continue = value; return this; }
        public String getNonce() { return nonce; }
        public Authenticate setNonce(String value) { this.nonce = value; return this; }
        public String getUri() { return uri; }
        public Authenticate setUri(String value) { this.uri = value; return this; }
        public String getResponse() { return response; }
        public Authenticate setResponse(String value) { this.response = value; return this; }
        public String getQop() { return qop; }
        public Authenticate setQop(String value) { this.qop = value; return this; }
        public String getNc() { return nc; }
        public Authenticate setNc(String value) { this.nc = value; return this; }
        public String getCnonce() { return cnonce; }
        public Authenticate setCnonce(String value) { this.cnonce = value; return this; }
        public Boolean isUseTokenCookie() { return UseTokenCookie; }
        public Authenticate setUseTokenCookie(Boolean value) { this.UseTokenCookie = value; return this; }
        public HashMap<String,String> getMeta() { return Meta; }
        public Authenticate setMeta(HashMap<String,String> value) { this.Meta = value; return this; }
        private static Object responseType = AuthenticateResponse.class;
        public Object getResponseType() { return responseType; }
    }

    @Route("/assignroles")
    @DataContract
    public static class AssignRoles implements IReturn<AssignRolesResponse>
    {
        @DataMember(Order=1)
        public String UserName = null;

        @DataMember(Order=2)
        public ArrayList<String> Permissions = null;

        @DataMember(Order=3)
        public ArrayList<String> Roles = null;
        
        public String getUserName() { return UserName; }
        public AssignRoles setUserName(String value) { this.UserName = value; return this; }
        public ArrayList<String> getPermissions() { return Permissions; }
        public AssignRoles setPermissions(ArrayList<String> value) { this.Permissions = value; return this; }
        public ArrayList<String> getRoles() { return Roles; }
        public AssignRoles setRoles(ArrayList<String> value) { this.Roles = value; return this; }
        private static Object responseType = AssignRolesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    @Route("/unassignroles")
    @DataContract
    public static class UnAssignRoles implements IReturn<UnAssignRolesResponse>
    {
        @DataMember(Order=1)
        public String UserName = null;

        @DataMember(Order=2)
        public ArrayList<String> Permissions = null;

        @DataMember(Order=3)
        public ArrayList<String> Roles = null;
        
        public String getUserName() { return UserName; }
        public UnAssignRoles setUserName(String value) { this.UserName = value; return this; }
        public ArrayList<String> getPermissions() { return Permissions; }
        public UnAssignRoles setPermissions(ArrayList<String> value) { this.Permissions = value; return this; }
        public ArrayList<String> getRoles() { return Roles; }
        public UnAssignRoles setRoles(ArrayList<String> value) { this.Roles = value; return this; }
        private static Object responseType = UnAssignRolesResponse.class;
        public Object getResponseType() { return responseType; }
    }

    public static class WSFedInfoResponse
    {
        @DataMember(Name="WSFedInfoValidFrom")
        @SerializedName("WSFedInfoValidFrom")
        @ApiMember(ParameterType="query", Name="WSFedInfoValidFrom", DataType="date")
        public Date ValidFrom = null;

        @DataMember(Name="WSFedInfoValidTo")
        @SerializedName("WSFedInfoValidTo")
        @ApiMember(Name="WSFedInfoValidTo", ParameterType="query", DataType="date")
        public Date ValidTo = null;

        @DataMember(Name="WSFedInfoSignInURL")
        @SerializedName("WSFedInfoSignInURL")
        @ApiMember(Name="WSFedInfoSignInURL", ParameterType="query", DataType="string")
        public String SignInURL = null;

        @DataMember(Name="WSFedInfoKeyExpirationTime")
        @SerializedName("WSFedInfoKeyExpirationTime")
        @ApiMember(Name="WSFedInfoKeyExpirationTime", ParameterType="query", DataType="date")
        public Date KeyExpirationTime = null;

        @DataMember(Name="WSFedInfoIsAuthenticated")
        @SerializedName("WSFedInfoIsAuthenticated")
        @ApiMember(Name="WSFedInfoIsAuthenticated", ParameterType="query", DataType="bool")
        public Boolean IsAuthenticated = null;
        
        public Date getValidFrom() { return ValidFrom; }
        public WSFedInfoResponse setValidFrom(Date value) { this.ValidFrom = value; return this; }
        public Date getValidTo() { return ValidTo; }
        public WSFedInfoResponse setValidTo(Date value) { this.ValidTo = value; return this; }
        public String getSignInURL() { return SignInURL; }
        public WSFedInfoResponse setSignInURL(String value) { this.SignInURL = value; return this; }
        public Date getKeyExpirationTime() { return KeyExpirationTime; }
        public WSFedInfoResponse setKeyExpirationTime(Date value) { this.KeyExpirationTime = value; return this; }
        public Boolean getIsAuthenticated() { return IsAuthenticated; }
        public WSFedInfoResponse setIsAuthenticated(Boolean value) { this.IsAuthenticated = value; return this; }
    }

    public static class UploadFileResponse
    {
        public String FilePath = null;
        
        public String getFilePath() { return FilePath; }
        public UploadFileResponse setFilePath(String value) { this.FilePath = value; return this; }
    }

    public static class UserOptionsResponse
    {
        public IUserOptions UserOptions = null;
        public ResponseStatus ResponseStatus = null;
        
        public IUserOptions getUserOptions() { return UserOptions; }
        public UserOptionsResponse setUserOptions(IUserOptions value) { this.UserOptions = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public UserOptionsResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class RecordsResponse extends TrimMainObjectSearchResponse<Record>
    {
        
    }

    public static class ActionDefsResponse extends TrimMainObjectSearchResponse<ActionDef>
    {
        
    }

    public static class ActivitiesResponse extends TrimMainObjectSearchResponse<Activity>
    {
        
    }

    public static class AgendaItemsResponse extends TrimMainObjectSearchResponse<AgendaItem>
    {
        
    }

    public static class AgendaItemTypesResponse extends TrimMainObjectSearchResponse<AgendaItemType>
    {
        
    }

    public static class AlertsResponse extends TrimMainObjectSearchResponse<Alert>
    {
        
    }

    public static class AutoPartRulesResponse extends TrimMainObjectSearchResponse<AutoPartRule>
    {
        
    }

    public static class CensusCollectionResponse extends TrimMainObjectSearchResponse<Census>
    {
        
    }

    public static class CheckinPlacesResponse extends TrimMainObjectSearchResponse<CheckinPlace>
    {
        
    }

    public static class CheckinStylesResponse extends TrimMainObjectSearchResponse<CheckinStyle>
    {
        
    }

    public static class ClassificationsResponse extends TrimMainObjectSearchResponse<Classification>
    {
        
    }

    public static class CommunicationsResponse extends TrimMainObjectSearchResponse<Communication>
    {
        
    }

    public static class ConsignmentsResponse extends TrimMainObjectSearchResponse<Consignment>
    {
        
    }

    public static class ConsignmentApproversResponse extends TrimMainObjectSearchResponse<ConsignmentApprover>
    {
        
    }

    public static class ConsignmentIssuesResponse extends TrimMainObjectSearchResponse<ConsignmentIssue>
    {
        
    }

    public static class DocumentQueuesResponse extends TrimMainObjectSearchResponse<DocumentQueue>
    {
        
    }

    public static class ElectronicStoresResponse extends TrimMainObjectSearchResponse<ElectronicStore>
    {
        
    }

    public static class FieldDefinitionsResponse extends TrimMainObjectSearchResponse<FieldDefinition>
    {
        
    }

    public static class HistoryCollectionResponse extends TrimMainObjectSearchResponse<History>
    {
        
    }

    public static class HoldsResponse extends TrimMainObjectSearchResponse<Hold>
    {
        
    }

    public static class HtmlLayoutsResponse extends TrimMainObjectSearchResponse<HtmlLayout>
    {
        
    }

    public static class JurisdictionsResponse extends TrimMainObjectSearchResponse<Jurisdiction>
    {
        
    }

    public static class KeywordsResponse extends TrimMainObjectSearchResponse<Keyword>
    {
        
    }

    public static class LocationsResponse extends TrimMainObjectSearchResponse<Location>
    {
        
    }

    public static class LookupItemsResponse extends TrimMainObjectSearchResponse<LookupItem>
    {
        
    }

    public static class LookupSetsResponse extends TrimMainObjectSearchResponse<LookupSet>
    {
        
    }

    public static class MailTemplatesResponse extends TrimMainObjectSearchResponse<MailTemplate>
    {
        
    }

    public static class MeetingsResponse extends TrimMainObjectSearchResponse<Meeting>
    {
        
    }

    public static class MeetingTypesResponse extends TrimMainObjectSearchResponse<MeetingType>
    {
        
    }

    public static class MinuteItemsResponse extends TrimMainObjectSearchResponse<MinuteItem>
    {
        
    }

    public static class MinuteItemTypesResponse extends TrimMainObjectSearchResponse<MinuteItemType>
    {
        
    }

    public static class NotificationsResponse extends TrimMainObjectSearchResponse<Notification>
    {
        
    }

    public static class OfflineRecordsResponse extends TrimMainObjectSearchResponse<OfflineRecord>
    {
        
    }

    public static class OriginsResponse extends TrimMainObjectSearchResponse<Origin>
    {
        
    }

    public static class OriginHistorysResponse extends TrimMainObjectSearchResponse<OriginHistory>
    {
        
    }

    public static class RecordActionsResponse extends TrimMainObjectSearchResponse<RecordAction>
    {
        
    }

    public static class RecordTypesResponse extends TrimMainObjectSearchResponse<RecordType>
    {
        
    }

    public static class ReportsResponse extends TrimMainObjectSearchResponse<Report>
    {
        
    }

    public static class ReportBitmapsResponse extends TrimMainObjectSearchResponse<ReportBitmap>
    {
        
    }

    public static class RequestsResponse extends TrimMainObjectSearchResponse<Request>
    {
        
    }

    public static class SavedSearchesResponse extends TrimMainObjectSearchResponse<SavedSearch>
    {
        
    }

    public static class SchedulesResponse extends TrimMainObjectSearchResponse<Schedule>
    {
        
    }

    public static class ScheduledTaskListResponse extends TrimMainObjectSearchResponse<ScheduledTask>
    {
        
    }

    public static class SearchFormsResponse extends TrimMainObjectSearchResponse<SearchForm>
    {
        
    }

    public static class SecurityCaveatsResponse extends TrimMainObjectSearchResponse<SecurityCaveat>
    {
        
    }

    public static class SecurityGuidesResponse extends TrimMainObjectSearchResponse<SecurityGuide>
    {
        
    }

    public static class SecurityLevelsResponse extends TrimMainObjectSearchResponse<SecurityLevel>
    {
        
    }

    public static class SharePointItemsResponse extends TrimMainObjectSearchResponse<SharePointItem>
    {
        
    }

    public static class SpacesResponse extends TrimMainObjectSearchResponse<Space>
    {
        
    }

    public static class StopWordsResponse extends TrimMainObjectSearchResponse<StopWord>
    {
        
    }

    public static class TodoItemsResponse extends TrimMainObjectSearchResponse<TodoItem>
    {
        
    }

    public static class UserLabelsResponse extends TrimMainObjectSearchResponse<UserLabel>
    {
        
    }

    public static class WordsResponse extends TrimMainObjectSearchResponse<Word>
    {
        
    }

    public static class WorkflowsResponse extends TrimMainObjectSearchResponse<Workflow>
    {
        
    }

    public static class WorkflowTemplatesResponse extends TrimMainObjectSearchResponse<WorkflowTemplate>
    {
        
    }

    public static class ZipCodesResponse extends TrimMainObjectSearchResponse<ZipCode>
    {
        
    }

    public static class DatabasesResponse extends TrimMainObjectSearchResponse<Database>
    {
        
    }

    @Route(Path="/AppConfig", Verbs="POST")
    @DataContract
    public static class AppConfig
    {
        @DataMember(Name="AppConfigConfigKey")
        @SerializedName("AppConfigConfigKey")
        @ApiMember(Name="AppConfigConfigKey", DataType="string", IsRequired=true, ParameterType="form")
        public String ConfigKey = null;

        @DataMember(Name="AppConfigConfigData")
        @SerializedName("AppConfigConfigData")
        @ApiMember(Name="AppConfigConfigData", DataType="string", ParameterType="form")
        public String ConfigData = null;
        
        public String getConfigKey() { return ConfigKey; }
        public AppConfig setConfigKey(String value) { this.ConfigKey = value; return this; }
        public String getConfigData() { return ConfigData; }
        public AppConfig setConfigData(String value) { this.ConfigData = value; return this; }
    }

    public static class CommandDefDetailsResponse
    {
        public ArrayList<CommandDef> CommandDefs = null;
        public ResponseStatus ResponseStatus = null;
        
        public ArrayList<CommandDef> getCommandDefs() { return CommandDefs; }
        public CommandDefDetailsResponse setCommandDefs(ArrayList<CommandDef> value) { this.CommandDefs = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public CommandDefDetailsResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class EnumItemDetailsResponse
    {
        public EnumItemDetailDictionary EnumItems = null;
        public ResponseStatus ResponseStatus = null;
        
        public EnumItemDetailDictionary getEnumItems() { return EnumItems; }
        public EnumItemDetailsResponse setEnumItems(EnumItemDetailDictionary value) { this.EnumItems = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public EnumItemDetailsResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class ObjectDefDetailsResponse
    {
        public ArrayList<ObjectDef> ObjectDefs = null;
        public ResponseStatus ResponseStatus = null;
        
        public ArrayList<ObjectDef> getObjectDefs() { return ObjectDefs; }
        public ObjectDefDetailsResponse setObjectDefs(ArrayList<ObjectDef> value) { this.ObjectDefs = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public ObjectDefDetailsResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class SearchClauseDefDetailsResponse
    {
        public ArrayList<SearchClauseDef> SearchClauseDefs = null;
        public ResponseStatus ResponseStatus = null;
        
        public ArrayList<SearchClauseDef> getSearchClauseDefs() { return SearchClauseDefs; }
        public SearchClauseDefDetailsResponse setSearchClauseDefs(ArrayList<SearchClauseDef> value) { this.SearchClauseDefs = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public SearchClauseDefDetailsResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class LocalisationResponse
    {
        public MessagesDictionary Messages = null;
        public ResponseStatus ResponseStatus = null;
        
        public MessagesDictionary getMessages() { return Messages; }
        public LocalisationResponse setMessages(MessagesDictionary value) { this.Messages = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public LocalisationResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class PropertyOrFieldDefDetailsResponse
    {
        public PropertyOrFieldDefList PropertiesAndFields = null;
        public ResponseStatus ResponseStatus = null;
        
        public PropertyOrFieldDefList getPropertiesAndFields() { return PropertiesAndFields; }
        public PropertyOrFieldDefDetailsResponse setPropertiesAndFields(PropertyOrFieldDefList value) { this.PropertiesAndFields = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public PropertyOrFieldDefDetailsResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class PropertyOrFieldDefDetailsMultiResponse
    {
        public PropertiesDictionary PropertiesAndFields = null;
        public UserOptionPropertiesDictionary UserOptionsProperties = null;
        public ResponseStatus ResponseStatus = null;
        
        public PropertiesDictionary getPropertiesAndFields() { return PropertiesAndFields; }
        public PropertyOrFieldDefDetailsMultiResponse setPropertiesAndFields(PropertiesDictionary value) { this.PropertiesAndFields = value; return this; }
        public UserOptionPropertiesDictionary getUserOptionsProperties() { return UserOptionsProperties; }
        public PropertyOrFieldDefDetailsMultiResponse setUserOptionsProperties(UserOptionPropertiesDictionary value) { this.UserOptionsProperties = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public PropertyOrFieldDefDetailsMultiResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class VersionResponse
    {
        public Integer Version = null;
        public String SoftwareVersion = null;
        public ResponseStatus ResponseStatus = null;
        
        public Integer getVersion() { return Version; }
        public VersionResponse setVersion(Integer value) { this.Version = value; return this; }
        public String getSoftwareVersion() { return SoftwareVersion; }
        public VersionResponse setSoftwareVersion(String value) { this.SoftwareVersion = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public VersionResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class ApplicationSettingsResponse
    {
        public ArrayList<String> Timezones = null;
        public ArrayList<Language> SupportedLanguages = null;
        public Integer Version = null;
        public String SoftwareVersion = null;
        public ResponseStatus ResponseStatus = null;
        
        public ArrayList<String> getTimezones() { return Timezones; }
        public ApplicationSettingsResponse setTimezones(ArrayList<String> value) { this.Timezones = value; return this; }
        public ArrayList<Language> getSupportedLanguages() { return SupportedLanguages; }
        public ApplicationSettingsResponse setSupportedLanguages(ArrayList<Language> value) { this.SupportedLanguages = value; return this; }
        public Integer getVersion() { return Version; }
        public ApplicationSettingsResponse setVersion(Integer value) { this.Version = value; return this; }
        public String getSoftwareVersion() { return SoftwareVersion; }
        public ApplicationSettingsResponse setSoftwareVersion(String value) { this.SoftwareVersion = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public ApplicationSettingsResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    @DataContract
    public static class AuthenticateResponse
    {
        @DataMember(Order=1)
        public String UserId = null;

        @DataMember(Order=2)
        public String SessionId = null;

        @DataMember(Order=3)
        public String UserName = null;

        @DataMember(Order=4)
        public String DisplayName = null;

        @DataMember(Order=5)
        public String ReferrerUrl = null;

        @DataMember(Order=6)
        public String BearerToken = null;

        @DataMember(Order=7)
        public ResponseStatus ResponseStatus = null;

        @DataMember(Order=8)
        public HashMap<String,String> Meta = null;
        
        public String getUserId() { return UserId; }
        public AuthenticateResponse setUserId(String value) { this.UserId = value; return this; }
        public String getSessionId() { return SessionId; }
        public AuthenticateResponse setSessionId(String value) { this.SessionId = value; return this; }
        public String getUserName() { return UserName; }
        public AuthenticateResponse setUserName(String value) { this.UserName = value; return this; }
        public String getDisplayName() { return DisplayName; }
        public AuthenticateResponse setDisplayName(String value) { this.DisplayName = value; return this; }
        public String getReferrerUrl() { return ReferrerUrl; }
        public AuthenticateResponse setReferrerUrl(String value) { this.ReferrerUrl = value; return this; }
        public String getBearerToken() { return BearerToken; }
        public AuthenticateResponse setBearerToken(String value) { this.BearerToken = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public AuthenticateResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
        public HashMap<String,String> getMeta() { return Meta; }
        public AuthenticateResponse setMeta(HashMap<String,String> value) { this.Meta = value; return this; }
    }

    @DataContract
    public static class AssignRolesResponse
    {
        @DataMember(Order=1)
        public ArrayList<String> AllRoles = null;

        @DataMember(Order=2)
        public ArrayList<String> AllPermissions = null;

        @DataMember(Order=3)
        public ResponseStatus ResponseStatus = null;
        
        public ArrayList<String> getAllRoles() { return AllRoles; }
        public AssignRolesResponse setAllRoles(ArrayList<String> value) { this.AllRoles = value; return this; }
        public ArrayList<String> getAllPermissions() { return AllPermissions; }
        public AssignRolesResponse setAllPermissions(ArrayList<String> value) { this.AllPermissions = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public AssignRolesResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    @DataContract
    public static class UnAssignRolesResponse
    {
        @DataMember(Order=1)
        public ArrayList<String> AllRoles = null;

        @DataMember(Order=2)
        public ArrayList<String> AllPermissions = null;

        @DataMember(Order=3)
        public ResponseStatus ResponseStatus = null;
        
        public ArrayList<String> getAllRoles() { return AllRoles; }
        public UnAssignRolesResponse setAllRoles(ArrayList<String> value) { this.AllRoles = value; return this; }
        public ArrayList<String> getAllPermissions() { return AllPermissions; }
        public UnAssignRolesResponse setAllPermissions(ArrayList<String> value) { this.AllPermissions = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public UnAssignRolesResponse setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static enum RenditionType
    {
        Dsignature,
        Ocr,
        Annotation,
        Mif,
        Multimedia,
        NativeMail,
        Other1,
        Other2,
        Other3,
        Other4,
        Other5,
        Other6,
        Redaction,
        Longevity,
        Redactable,
        SinglePageView,
        HtmlRepresentation,
        Thumbnail,
        SignedCopy,
        Original;
    }

    @DataContract
    public static class BaseMethod
    {
        
    }

    public static enum BaseObjectTypes
    {
        Unknown(0),
        RecordLocation(1),
        RecordRendition(2),
        RecordKeyword(3),
        RecordRelationship(5),
        Record(6),
        LocationAddress(7),
        LocationEAddress(8),
        Location(9),
        RecordType(10),
        StopWord(11),
        Word(12),
        ZipCode(13),
        SecurityLevel(15),
        SecurityCaveat(16),
        LookupSet(18),
        Space(19),
        Classification(21),
        ScheduleTrigger(22),
        Schedule(23),
        ElectronicStore(24),
        ActionDef(26),
        ActionDefStep(27),
        RecordAction(29),
        Keyword(30),
        Request(33),
        HtmlLayout(37),
        SavedSearch(38),
        History(40),
        FieldDefinition(42),
        RecordHold(43),
        Hold(44),
        Census(45),
        Report(46),
        RecordRevision(48),
        RecordLinkedDocument(49),
        Database(50),
        ReportBitmap(53),
        DocumentQueue(54),
        SecurityGuide(56),
        ScheduledTask(58),
        ScheduledTaskHistory(61),
        Meeting(63),
        MeetingInvitation(64),
        MeetingDocument(65),
        AutoPartRule(67),
        Alert(68),
        UserLabel(69),
        MailTemplate(72),
        Communication(73),
        CommunicationDetail(74),
        OfflineRecord(75),
        MeetingType(76),
        MeetingTypeUsualParticipant(77),
        AgendaItem(78),
        AgendaItemAttachment(79),
        MinuteItem(80),
        MinuteItemActionArising(81),
        TodoItem(82),
        TodoItemItemReference(83),
        AgendaItemType(84),
        Workflow(85),
        WorkflowDocument(86),
        WorkflowTemplate(87),
        WorkflowTemplateDocument(88),
        Activity(89),
        ActivityDocument(90),
        ActivityResult(91),
        ActivityStartCondition(92),
        ActivityEscalation(93),
        ActivityAuthorization(94),
        MinuteItemType(95),
        AgendaItemTypeAttachment(96),
        Origin(97),
        Jurisdiction(98),
        JurisdictionMember(100),
        RecordJurisdiction(101),
        OriginHistory(102),
        Notification(105),
        SearchForm(106),
        AlertSubscriber(108),
        SharePointItem(110),
        RecordClientMatterRole(111),
        RecordClientMatterParty(112),
        Consignment(113),
        ConsignmentApprover(114),
        ConsignmentIssue(115),
        RecordTypeAutoSubFolder(117),
        ClassificationSapBusinessObject(118),
        RecordSapComponent(119),
        LookupItem(120),
        ActivityEmailRecipient(121),
        CheckinStyle(122),
        CheckinPlace(123);

        private final int value;
        BaseObjectTypes(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    @DataContract
    public static class ClassificationRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="ClassificationAccessControl")
        @SerializedName("ClassificationAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="ClassificationActiveFrom")
        @SerializedName("ClassificationActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="ClassificationActiveTo")
        @SerializedName("ClassificationActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="ClassificationActiveDescription")
        @SerializedName("ClassificationActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="ClassificationIsActive")
        @SerializedName("ClassificationIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="ClassificationCanAttachRecords")
        @SerializedName("ClassificationCanAttachRecords")
        @ApiMember(Name="ClassificationCanAttachRecords", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanAttachRecords = null;

        @DataMember(Name="ClassificationChildLastNumber")
        @SerializedName("ClassificationChildLastNumber")
        @ApiMember(Name="ClassificationChildLastNumber", DataType="string", ParameterType="form")
        public TrimStringProperty ChildLastNumber = null;

        @DataMember(Name="ClassificationChildPattern")
        @SerializedName("ClassificationChildPattern")
        @ApiMember(Name="ClassificationChildPattern", DataType="string", ParameterType="form")
        public TrimStringProperty ChildPattern = null;

        @DataMember(Name="ClassificationClassOfRecord")
        @SerializedName("ClassificationClassOfRecord")
        @ApiMember(Name="ClassificationClassOfRecord", DataType="string", ParameterType="form")
        public TrimProperty<RecordClass> ClassOfRecord = null;

        @DataMember(Name="ClassificationContainerCreation")
        @SerializedName("ClassificationContainerCreation")
        @ApiMember(Name="ClassificationContainerCreation", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerCreation = null;

        @DataMember(Name="ClassificationContainerDateInterval")
        @SerializedName("ClassificationContainerDateInterval")
        @ApiMember(Name="ClassificationContainerDateInterval", DataType="string", ParameterType="form")
        public TrimProperty<DateIntervalSing> ContainerDateInterval = null;

        @DataMember(Name="ClassificationContainerHasDateRange")
        @SerializedName("ClassificationContainerHasDateRange")
        @ApiMember(Name="ClassificationContainerHasDateRange", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerHasDateRange = null;

        @DataMember(Name="ClassificationContainerPerOwner")
        @SerializedName("ClassificationContainerPerOwner")
        @ApiMember(Name="ClassificationContainerPerOwner", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerPerOwner = null;

        @DataMember(Name="ClassificationContainerSizeThreshold")
        @SerializedName("ClassificationContainerSizeThreshold")
        @ApiMember(Name="ClassificationContainerSizeThreshold", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ContainerSizeThreshold = null;

        @DataMember(Name="ClassificationIdNumber")
        @SerializedName("ClassificationIdNumber")
        @ApiMember(Name="ClassificationIdNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty IdNumber = null;

        @DataMember(Name="ClassificationIdNumberUncompressed")
        @SerializedName("ClassificationIdNumberUncompressed")
        @ApiMember(Name="ClassificationIdNumberUncompressed", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty IdNumberUncompressed = null;

        @DataMember(Name="ClassificationIdolCategory")
        @SerializedName("ClassificationIdolCategory")
        @ApiMember(Name="ClassificationIdolCategory", DataType="long", ParameterType="form")
        public TrimProperty<Long> IdolCategory = null;

        @DataMember(Name="ClassificationIsApproved")
        @SerializedName("ClassificationIsApproved")
        @ApiMember(Name="ClassificationIsApproved", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsApproved = null;

        @DataMember(Name="ClassificationLevelNumber")
        @SerializedName("ClassificationLevelNumber")
        @ApiMember(Name="ClassificationLevelNumber", DataType="string", ParameterType="form")
        public TrimStringProperty LevelNumber = null;

        @DataMember(Name="ClassificationLevelNumberUncompressed")
        @SerializedName("ClassificationLevelNumberUncompressed")
        @ApiMember(Name="ClassificationLevelNumberUncompressed", DataType="string", ParameterType="form")
        public TrimStringProperty LevelNumberUncompressed = null;

        @DataMember(Name="ClassificationMinimumConfidenceLevel")
        @SerializedName("ClassificationMinimumConfidenceLevel")
        @ApiMember(Name="ClassificationMinimumConfidenceLevel", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MinimumConfidenceLevel = null;

        @DataMember(Name="ClassificationName")
        @SerializedName("ClassificationName")
        @ApiMember(Name="ClassificationName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="ClassificationNotes")
        @SerializedName("ClassificationNotes")
        @ApiMember(Name="ClassificationNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="ClassificationNumberingIsManual")
        @SerializedName("ClassificationNumberingIsManual")
        @ApiMember(Name="ClassificationNumberingIsManual", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> NumberingIsManual = null;

        @DataMember(Name="ClassificationPendingAutoClassification")
        @SerializedName("ClassificationPendingAutoClassification")
        @ApiMember(Name="ClassificationPendingAutoClassification", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PendingAutoClassification = null;

        @DataMember(Name="ClassificationPolicyCentreGUID")
        @SerializedName("ClassificationPolicyCentreGUID")
        @ApiMember(Name="ClassificationPolicyCentreGUID", DataType="string", ParameterType="form")
        public TrimStringProperty PolicyCentreGUID = null;

        @DataMember(Name="ClassificationPreventAutoClassification")
        @SerializedName("ClassificationPreventAutoClassification")
        @ApiMember(Name="ClassificationPreventAutoClassification", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PreventAutoClassification = null;

        @DataMember(Name="ClassificationRecordLastNumber")
        @SerializedName("ClassificationRecordLastNumber")
        @ApiMember(Name="ClassificationRecordLastNumber", DataType="string", ParameterType="form")
        public TrimStringProperty RecordLastNumber = null;

        @DataMember(Name="ClassificationRecordPattern")
        @SerializedName("ClassificationRecordPattern")
        @ApiMember(Name="ClassificationRecordPattern", DataType="string", ParameterType="form")
        public TrimStringProperty RecordPattern = null;

        @DataMember(Name="ClassificationTitle")
        @SerializedName("ClassificationTitle")
        @ApiMember(Name="ClassificationTitle", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Title = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ClassificationRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public ClassificationRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public ClassificationRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public ClassificationRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public ClassificationRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public ClassificationRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public ClassificationRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getCanAttachRecords() { return CanAttachRecords; }
        public ClassificationRef setCanAttachRecords(TrimProperty<Boolean> value) { this.CanAttachRecords = value; return this; }
        public TrimStringProperty getChildLastNumber() { return ChildLastNumber; }
        public ClassificationRef setChildLastNumber(TrimStringProperty value) { this.ChildLastNumber = value; return this; }
        public TrimStringProperty getChildPattern() { return ChildPattern; }
        public ClassificationRef setChildPattern(TrimStringProperty value) { this.ChildPattern = value; return this; }
        public TrimProperty<RecordClass> getClassOfRecord() { return ClassOfRecord; }
        public ClassificationRef setClassOfRecord(TrimProperty<RecordClass> value) { this.ClassOfRecord = value; return this; }
        public TrimProperty<Boolean> getContainerCreation() { return ContainerCreation; }
        public ClassificationRef setContainerCreation(TrimProperty<Boolean> value) { this.ContainerCreation = value; return this; }
        public TrimProperty<DateIntervalSing> getContainerDateInterval() { return ContainerDateInterval; }
        public ClassificationRef setContainerDateInterval(TrimProperty<DateIntervalSing> value) { this.ContainerDateInterval = value; return this; }
        public TrimProperty<Boolean> getContainerHasDateRange() { return ContainerHasDateRange; }
        public ClassificationRef setContainerHasDateRange(TrimProperty<Boolean> value) { this.ContainerHasDateRange = value; return this; }
        public TrimProperty<Boolean> getContainerPerOwner() { return ContainerPerOwner; }
        public ClassificationRef setContainerPerOwner(TrimProperty<Boolean> value) { this.ContainerPerOwner = value; return this; }
        public TrimProperty<Integer> getContainerSizeThreshold() { return ContainerSizeThreshold; }
        public ClassificationRef setContainerSizeThreshold(TrimProperty<Integer> value) { this.ContainerSizeThreshold = value; return this; }
        public TrimStringProperty getIdNumber() { return IdNumber; }
        public ClassificationRef setIdNumber(TrimStringProperty value) { this.IdNumber = value; return this; }
        public TrimStringProperty getIdNumberUncompressed() { return IdNumberUncompressed; }
        public ClassificationRef setIdNumberUncompressed(TrimStringProperty value) { this.IdNumberUncompressed = value; return this; }
        public TrimProperty<Long> getIdolCategory() { return IdolCategory; }
        public ClassificationRef setIdolCategory(TrimProperty<Long> value) { this.IdolCategory = value; return this; }
        public TrimProperty<Boolean> getIsApproved() { return IsApproved; }
        public ClassificationRef setIsApproved(TrimProperty<Boolean> value) { this.IsApproved = value; return this; }
        public TrimStringProperty getLevelNumber() { return LevelNumber; }
        public ClassificationRef setLevelNumber(TrimStringProperty value) { this.LevelNumber = value; return this; }
        public TrimStringProperty getLevelNumberUncompressed() { return LevelNumberUncompressed; }
        public ClassificationRef setLevelNumberUncompressed(TrimStringProperty value) { this.LevelNumberUncompressed = value; return this; }
        public TrimProperty<Integer> getMinimumConfidenceLevel() { return MinimumConfidenceLevel; }
        public ClassificationRef setMinimumConfidenceLevel(TrimProperty<Integer> value) { this.MinimumConfidenceLevel = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public ClassificationRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public ClassificationRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getNumberingIsManual() { return NumberingIsManual; }
        public ClassificationRef setNumberingIsManual(TrimProperty<Boolean> value) { this.NumberingIsManual = value; return this; }
        public TrimProperty<Boolean> getPendingAutoClassification() { return PendingAutoClassification; }
        public ClassificationRef setPendingAutoClassification(TrimProperty<Boolean> value) { this.PendingAutoClassification = value; return this; }
        public TrimStringProperty getPolicyCentreGUID() { return PolicyCentreGUID; }
        public ClassificationRef setPolicyCentreGUID(TrimStringProperty value) { this.PolicyCentreGUID = value; return this; }
        public TrimProperty<Boolean> getPreventAutoClassification() { return PreventAutoClassification; }
        public ClassificationRef setPreventAutoClassification(TrimProperty<Boolean> value) { this.PreventAutoClassification = value; return this; }
        public TrimStringProperty getRecordLastNumber() { return RecordLastNumber; }
        public ClassificationRef setRecordLastNumber(TrimStringProperty value) { this.RecordLastNumber = value; return this; }
        public TrimStringProperty getRecordPattern() { return RecordPattern; }
        public ClassificationRef setRecordPattern(TrimStringProperty value) { this.RecordPattern = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public ClassificationRef setTitle(TrimStringProperty value) { this.Title = value; return this; }
    }

    @DataContract
    public static class BaseMainObjectMethod extends BaseMethod
    {
        @DataMember
        @ApiMember(Name="Id", DataType="string", IsRequired=true, ParameterType="form", Verb="POST")
        public String Id = null;
        
        public String getId() { return Id; }
        public BaseMainObjectMethod setId(String value) { this.Id = value; return this; }
    }

    public static enum ActionToComplete
    {
        Current,
        All,
        ForUri;
    }

    public static class TrimDateTime extends ITrimProperty
    {
        public Boolean IsClear = null;
        public Boolean IsTimeClear = null;
        public Date DateTime = null;
        
        public Boolean getIsClear() { return IsClear; }
        public TrimDateTime setIsClear(Boolean value) { this.IsClear = value; return this; }
        public Boolean getIsTimeClear() { return IsTimeClear; }
        public TrimDateTime setIsTimeClear(Boolean value) { this.IsTimeClear = value; return this; }
        public Date getDateTime() { return DateTime; }
        public TrimDateTime setDateTime(Date value) { this.DateTime = value; return this; }
    }

    @DataContract
    public static class ActionDefRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActionDefActionName")
        @SerializedName("ActionDefActionName")
        @ApiMember(Name="ActionDefActionName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty ActionName = null;

        @DataMember(Name="ActionDefAssignable")
        @SerializedName("ActionDefAssignable")
        @ApiMember(Name="ActionDefAssignable", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> Assignable = null;

        @DataMember(Name="ActionDefCost")
        @SerializedName("ActionDefCost")
        @ApiMember(Name="ActionDefCost", DataType="double", ParameterType="form")
        public TrimProperty<BigDecimal> Cost = null;

        @DataMember(Name="ActionDefDays")
        @SerializedName("ActionDefDays")
        @ApiMember(Name="ActionDefDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Days = null;

        @DataMember(Name="ActionDefHours")
        @SerializedName("ActionDefHours")
        @ApiMember(Name="ActionDefHours", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Hours = null;

        @DataMember(Name="ActionDefIsProcedure")
        @SerializedName("ActionDefIsProcedure")
        @ApiMember(Name="ActionDefIsProcedure", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsProcedure = null;

        @DataMember(Name="ActionDefMinutes")
        @SerializedName("ActionDefMinutes")
        @ApiMember(Name="ActionDefMinutes", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Minutes = null;

        @DataMember(Name="ActionDefNotes")
        @SerializedName("ActionDefNotes")
        @ApiMember(Name="ActionDefNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActionDefRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getActionName() { return ActionName; }
        public ActionDefRef setActionName(TrimStringProperty value) { this.ActionName = value; return this; }
        public TrimProperty<Boolean> getAssignable() { return Assignable; }
        public ActionDefRef setAssignable(TrimProperty<Boolean> value) { this.Assignable = value; return this; }
        public TrimProperty<BigDecimal> getCost() { return Cost; }
        public ActionDefRef setCost(TrimProperty<BigDecimal> value) { this.Cost = value; return this; }
        public TrimProperty<Integer> getDays() { return Days; }
        public ActionDefRef setDays(TrimProperty<Integer> value) { this.Days = value; return this; }
        public TrimProperty<Integer> getHours() { return Hours; }
        public ActionDefRef setHours(TrimProperty<Integer> value) { this.Hours = value; return this; }
        public TrimProperty<Boolean> getIsProcedure() { return IsProcedure; }
        public ActionDefRef setIsProcedure(TrimProperty<Boolean> value) { this.IsProcedure = value; return this; }
        public TrimProperty<Integer> getMinutes() { return Minutes; }
        public ActionDefRef setMinutes(TrimProperty<Integer> value) { this.Minutes = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public ActionDefRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
    }

    @DataContract
    public static class LocationRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="LocationAccessControl")
        @SerializedName("LocationAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="LocationActiveFrom")
        @SerializedName("LocationActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="LocationActiveTo")
        @SerializedName("LocationActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="LocationActiveDescription")
        @SerializedName("LocationActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="LocationIsActive")
        @SerializedName("LocationIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="LocationActualBarcode")
        @SerializedName("LocationActualBarcode")
        @ApiMember(Name="LocationActualBarcode", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ActualBarcode = null;

        @DataMember(Name="LocationAdditionalLogin")
        @SerializedName("LocationAdditionalLogin")
        @ApiMember(Name="LocationAdditionalLogin", DataType="string", ParameterType="form")
        public TrimStringProperty AdditionalLogin = null;

        @DataMember(Name="LocationAfterHoursPhoneNumber")
        @SerializedName("LocationAfterHoursPhoneNumber")
        @ApiMember(Name="LocationAfterHoursPhoneNumber", DataType="string", ParameterType="form")
        public TrimStringProperty AfterHoursPhoneNumber = null;

        @DataMember(Name="LocationAllAdministrators")
        @SerializedName("LocationAllAdministrators")
        @ApiMember(Name="LocationAllAdministrators", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllAdministrators = null;

        @DataMember(Name="LocationAllMembers")
        @SerializedName("LocationAllMembers")
        @ApiMember(Name="LocationAllMembers", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllMembers = null;

        @DataMember(Name="LocationAllMemberships")
        @SerializedName("LocationAllMemberships")
        @ApiMember(Name="LocationAllMemberships", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllMemberships = null;

        @DataMember(Name="LocationAllMembershipsRecursive")
        @SerializedName("LocationAllMembershipsRecursive")
        @ApiMember(Name="LocationAllMembershipsRecursive", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllMembershipsRecursive = null;

        @DataMember(Name="LocationCanDeliverDirect")
        @SerializedName("LocationCanDeliverDirect")
        @ApiMember(Name="LocationCanDeliverDirect", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanDeliverDirect = null;

        @DataMember(Name="LocationCanLogin")
        @SerializedName("LocationCanLogin")
        @ApiMember(Name="LocationCanLogin", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanLogin = null;

        @DataMember(Name="LocationCutoffTime")
        @SerializedName("LocationCutoffTime")
        @ApiMember(Name="LocationCutoffTime", DataType="int", ParameterType="form")
        public TrimProperty<Integer> CutoffTime = null;

        @DataMember(Name="LocationDateOfBirth")
        @SerializedName("LocationDateOfBirth")
        @ApiMember(Name="LocationDateOfBirth", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateOfBirth = null;

        @DataMember(Name="LocationDeliverContainersOnly")
        @SerializedName("LocationDeliverContainersOnly")
        @ApiMember(Name="LocationDeliverContainersOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DeliverContainersOnly = null;

        @DataMember(Name="LocationEmailAddress")
        @SerializedName("LocationEmailAddress")
        @ApiMember(Name="LocationEmailAddress", DataType="string", ParameterType="form")
        public TrimStringProperty EmailAddress = null;

        @DataMember(Name="LocationFaxNumber")
        @SerializedName("LocationFaxNumber")
        @ApiMember(Name="LocationFaxNumber", DataType="string", ParameterType="form")
        public TrimStringProperty FaxNumber = null;

        @DataMember(Name="LocationFirstInitial")
        @SerializedName("LocationFirstInitial")
        @ApiMember(Name="LocationFirstInitial", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FirstInitial = null;

        @DataMember(Name="LocationForeignBarcode")
        @SerializedName("LocationForeignBarcode")
        @ApiMember(Name="LocationForeignBarcode", DataType="string", ParameterType="form")
        public TrimStringProperty ForeignBarcode = null;

        @DataMember(Name="LocationFormalPreamble")
        @SerializedName("LocationFormalPreamble")
        @ApiMember(Name="LocationFormalPreamble", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FormalPreamble = null;

        @DataMember(Name="LocationFormattedAddress")
        @SerializedName("LocationFormattedAddress")
        @ApiMember(Name="LocationFormattedAddress", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FormattedAddress = null;

        @DataMember(Name="LocationFormattedName")
        @SerializedName("LocationFormattedName")
        @ApiMember(Name="LocationFormattedName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FormattedName = null;

        @DataMember(Name="LocationFullFormattedName")
        @SerializedName("LocationFullFormattedName")
        @ApiMember(Name="LocationFullFormattedName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FullFormattedName = null;

        @DataMember(Name="LocationGenderValue")
        @SerializedName("LocationGenderValue")
        @ApiMember(Name="LocationGenderValue", DataType="string", ParameterType="form")
        public TrimProperty<Gender> GenderValue = null;

        @DataMember(Name="LocationGivenNames")
        @SerializedName("LocationGivenNames")
        @ApiMember(Name="LocationGivenNames", DataType="string", ParameterType="form")
        public TrimStringProperty GivenNames = null;

        @DataMember(Name="LocationGpsLocation")
        @SerializedName("LocationGpsLocation")
        @ApiMember(Name="LocationGpsLocation", DataType="string", ParameterType="form")
        public TrimStringProperty GpsLocation = null;

        @DataMember(Name="LocationHasAValidLogin")
        @SerializedName("LocationHasAValidLogin")
        @ApiMember(Name="LocationHasAValidLogin", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> HasAValidLogin = null;

        @DataMember(Name="LocationHoldingOrganizationName")
        @SerializedName("LocationHoldingOrganizationName")
        @ApiMember(Name="LocationHoldingOrganizationName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty HoldingOrganizationName = null;

        @DataMember(Name="LocationHomeDataset")
        @SerializedName("LocationHomeDataset")
        @ApiMember(Name="LocationHomeDataset", DataType="string", ParameterType="form")
        public TrimStringProperty HomeDataset = null;

        @DataMember(Name="LocationHonorific")
        @SerializedName("LocationHonorific")
        @ApiMember(Name="LocationHonorific", DataType="string", ParameterType="form")
        public TrimStringProperty Honorific = null;

        @DataMember(Name="LocationIdNumber")
        @SerializedName("LocationIdNumber")
        @ApiMember(Name="LocationIdNumber", DataType="string", ParameterType="form")
        public TrimStringProperty IdNumber = null;

        @DataMember(Name="LocationInformalPreamble")
        @SerializedName("LocationInformalPreamble")
        @ApiMember(Name="LocationInformalPreamble", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty InformalPreamble = null;

        @DataMember(Name="LocationInitials")
        @SerializedName("LocationInitials")
        @ApiMember(Name="LocationInitials", DataType="string", ParameterType="form")
        public TrimStringProperty Initials = null;

        @DataMember(Name="LocationInternetMailAddress")
        @SerializedName("LocationInternetMailAddress")
        @ApiMember(Name="LocationInternetMailAddress", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty InternetMailAddress = null;

        @DataMember(Name="LocationIsVisitor")
        @SerializedName("LocationIsVisitor")
        @ApiMember(Name="LocationIsVisitor", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsVisitor = null;

        @DataMember(Name="LocationIsWithin")
        @SerializedName("LocationIsWithin")
        @ApiMember(Name="LocationIsWithin", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsWithin = null;

        @DataMember(Name="LocationJobDescription")
        @SerializedName("LocationJobDescription")
        @ApiMember(Name="LocationJobDescription", DataType="string", ParameterType="form")
        public TrimStringProperty JobDescription = null;

        @DataMember(Name="LocationKeepAddressHistory")
        @SerializedName("LocationKeepAddressHistory")
        @ApiMember(Name="LocationKeepAddressHistory", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> KeepAddressHistory = null;

        @DataMember(Name="LocationLdapSynchDN")
        @SerializedName("LocationLdapSynchDN")
        @ApiMember(Name="LocationLdapSynchDN", DataType="string", ParameterType="form")
        public TrimStringProperty LdapSynchDN = null;

        @DataMember(Name="LocationLdapSynchEnabled")
        @SerializedName("LocationLdapSynchEnabled")
        @ApiMember(Name="LocationLdapSynchEnabled", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> LdapSynchEnabled = null;

        @DataMember(Name="LocationLdapSynchLastUpdated")
        @SerializedName("LocationLdapSynchLastUpdated")
        @ApiMember(Name="LocationLdapSynchLastUpdated", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime LdapSynchLastUpdated = null;

        @DataMember(Name="LocationLoginDetails")
        @SerializedName("LocationLoginDetails")
        @ApiMember(Name="LocationLoginDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty LoginDetails = null;

        @DataMember(Name="LocationLoginExpires")
        @SerializedName("LocationLoginExpires")
        @ApiMember(Name="LocationLoginExpires", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime LoginExpires = null;

        @DataMember(Name="LocationLogsInAs")
        @SerializedName("LocationLogsInAs")
        @ApiMember(Name="LocationLogsInAs", DataType="string", ParameterType="form")
        public TrimStringProperty LogsInAs = null;

        @DataMember(Name="LocationLongHonorific")
        @SerializedName("LocationLongHonorific")
        @ApiMember(Name="LocationLongHonorific", DataType="string", ParameterType="form")
        public TrimStringProperty LongHonorific = null;

        @DataMember(Name="LocationMobileNumber")
        @SerializedName("LocationMobileNumber")
        @ApiMember(Name="LocationMobileNumber", DataType="string", ParameterType="form")
        public TrimStringProperty MobileNumber = null;

        @DataMember(Name="LocationNickName")
        @SerializedName("LocationNickName")
        @ApiMember(Name="LocationNickName", DataType="string", ParameterType="form")
        public TrimStringProperty NickName = null;

        @DataMember(Name="LocationNotes")
        @SerializedName("LocationNotes")
        @ApiMember(Name="LocationNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="LocationOldPostalAddresses")
        @SerializedName("LocationOldPostalAddresses")
        @ApiMember(Name="LocationOldPostalAddresses", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty OldPostalAddresses = null;

        @DataMember(Name="LocationOldPostalAddressesISO")
        @SerializedName("LocationOldPostalAddressesISO")
        @ApiMember(Name="LocationOldPostalAddressesISO", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty OldPostalAddressesISO = null;

        @DataMember(Name="LocationOldStreetAddresses")
        @SerializedName("LocationOldStreetAddresses")
        @ApiMember(Name="LocationOldStreetAddresses", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty OldStreetAddresses = null;

        @DataMember(Name="LocationOldStreetAddressesISO")
        @SerializedName("LocationOldStreetAddressesISO")
        @ApiMember(Name="LocationOldStreetAddressesISO", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty OldStreetAddressesISO = null;

        @DataMember(Name="LocationPhoneNumber")
        @SerializedName("LocationPhoneNumber")
        @ApiMember(Name="LocationPhoneNumber", DataType="string", ParameterType="form")
        public TrimStringProperty PhoneNumber = null;

        @DataMember(Name="LocationPostalAddress")
        @SerializedName("LocationPostalAddress")
        @ApiMember(Name="LocationPostalAddress", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty PostalAddress = null;

        @DataMember(Name="LocationPostNominal")
        @SerializedName("LocationPostNominal")
        @ApiMember(Name="LocationPostNominal", DataType="string", ParameterType="form")
        public TrimStringProperty PostNominal = null;

        @DataMember(Name="LocationRequestResponseHigh")
        @SerializedName("LocationRequestResponseHigh")
        @ApiMember(Name="LocationRequestResponseHigh", DataType="long", ParameterType="form")
        public TrimProperty<Long> RequestResponseHigh = null;

        @DataMember(Name="LocationRequestResponseLow")
        @SerializedName("LocationRequestResponseLow")
        @ApiMember(Name="LocationRequestResponseLow", DataType="long", ParameterType="form")
        public TrimProperty<Long> RequestResponseLow = null;

        @DataMember(Name="LocationRequestResponseMedium")
        @SerializedName("LocationRequestResponseMedium")
        @ApiMember(Name="LocationRequestResponseMedium", DataType="long", ParameterType="form")
        public TrimProperty<Long> RequestResponseMedium = null;

        @DataMember(Name="LocationRequestsNeedApproval")
        @SerializedName("LocationRequestsNeedApproval")
        @ApiMember(Name="LocationRequestsNeedApproval", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RequestsNeedApproval = null;

        @DataMember(Name="LocationReviewDate")
        @SerializedName("LocationReviewDate")
        @ApiMember(Name="LocationReviewDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ReviewDate = null;

        @DataMember(Name="LocationSalutation")
        @SerializedName("LocationSalutation")
        @ApiMember(Name="LocationSalutation", DataType="string", ParameterType="form")
        public TrimStringProperty Salutation = null;

        @DataMember(Name="LocationSecurityKeys")
        @SerializedName("LocationSecurityKeys")
        @ApiMember(Name="LocationSecurityKeys", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty SecurityKeys = null;

        @DataMember(Name="LocationSecurityString")
        @SerializedName("LocationSecurityString")
        @ApiMember(Name="LocationSecurityString", DataType="string", ParameterType="form")
        public TrimStringProperty SecurityString = null;

        @DataMember(Name="LocationSortName")
        @SerializedName("LocationSortName")
        @ApiMember(Name="LocationSortName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty SortName = null;

        @DataMember(Name="LocationStreetAddress")
        @SerializedName("LocationStreetAddress")
        @ApiMember(Name="LocationStreetAddress", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty StreetAddress = null;

        @DataMember(Name="LocationSurname")
        @SerializedName("LocationSurname")
        @ApiMember(Name="LocationSurname", DataType="string", ParameterType="form")
        public TrimStringProperty Surname = null;

        @DataMember(Name="LocationSurnameNoPrefix")
        @SerializedName("LocationSurnameNoPrefix")
        @ApiMember(Name="LocationSurnameNoPrefix", DataType="string", ParameterType="form")
        public TrimStringProperty SurnameNoPrefix = null;

        @DataMember(Name="LocationSurnamePrefix")
        @SerializedName("LocationSurnamePrefix")
        @ApiMember(Name="LocationSurnamePrefix", DataType="string", ParameterType="form")
        public TrimStringProperty SurnamePrefix = null;

        @DataMember(Name="LocationTypeOfLocation")
        @SerializedName("LocationTypeOfLocation")
        @ApiMember(Name="LocationTypeOfLocation", DataType="string", ParameterType="form")
        public TrimProperty<LocationType> TypeOfLocation = null;

        @DataMember(Name="LocationUsedForStatistics")
        @SerializedName("LocationUsedForStatistics")
        @ApiMember(Name="LocationUsedForStatistics", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UsedForStatistics = null;

        @DataMember(Name="LocationUserLicenseType")
        @SerializedName("LocationUserLicenseType")
        @ApiMember(Name="LocationUserLicenseType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<UserLicenseTypes> UserLicenseType = null;

        @DataMember(Name="LocationUserType")
        @SerializedName("LocationUserType")
        @ApiMember(Name="LocationUserType", DataType="string", ParameterType="form")
        public TrimProperty<UserTypes> UserType = null;

        @DataMember(Name="LocationViewPaneId")
        @SerializedName("LocationViewPaneId")
        @ApiMember(Name="LocationViewPaneId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ViewPaneId = null;

        @DataMember(Name="LocationWebPage")
        @SerializedName("LocationWebPage")
        @ApiMember(Name="LocationWebPage", DataType="string", ParameterType="form")
        public TrimStringProperty WebPage = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public LocationRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public LocationRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public LocationRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public LocationRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public LocationRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public LocationRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public LocationRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getActualBarcode() { return ActualBarcode; }
        public LocationRef setActualBarcode(TrimStringProperty value) { this.ActualBarcode = value; return this; }
        public TrimStringProperty getAdditionalLogin() { return AdditionalLogin; }
        public LocationRef setAdditionalLogin(TrimStringProperty value) { this.AdditionalLogin = value; return this; }
        public TrimStringProperty getAfterHoursPhoneNumber() { return AfterHoursPhoneNumber; }
        public LocationRef setAfterHoursPhoneNumber(TrimStringProperty value) { this.AfterHoursPhoneNumber = value; return this; }
        public TrimStringProperty getAllAdministrators() { return AllAdministrators; }
        public LocationRef setAllAdministrators(TrimStringProperty value) { this.AllAdministrators = value; return this; }
        public TrimStringProperty getAllMembers() { return AllMembers; }
        public LocationRef setAllMembers(TrimStringProperty value) { this.AllMembers = value; return this; }
        public TrimStringProperty getAllMemberships() { return AllMemberships; }
        public LocationRef setAllMemberships(TrimStringProperty value) { this.AllMemberships = value; return this; }
        public TrimStringProperty getAllMembershipsRecursive() { return AllMembershipsRecursive; }
        public LocationRef setAllMembershipsRecursive(TrimStringProperty value) { this.AllMembershipsRecursive = value; return this; }
        public TrimProperty<Boolean> getCanDeliverDirect() { return CanDeliverDirect; }
        public LocationRef setCanDeliverDirect(TrimProperty<Boolean> value) { this.CanDeliverDirect = value; return this; }
        public TrimProperty<Boolean> getCanLogin() { return CanLogin; }
        public LocationRef setCanLogin(TrimProperty<Boolean> value) { this.CanLogin = value; return this; }
        public TrimProperty<Integer> getCutoffTime() { return CutoffTime; }
        public LocationRef setCutoffTime(TrimProperty<Integer> value) { this.CutoffTime = value; return this; }
        public TrimDateTime getDateOfBirth() { return DateOfBirth; }
        public LocationRef setDateOfBirth(TrimDateTime value) { this.DateOfBirth = value; return this; }
        public TrimProperty<Boolean> getDeliverContainersOnly() { return DeliverContainersOnly; }
        public LocationRef setDeliverContainersOnly(TrimProperty<Boolean> value) { this.DeliverContainersOnly = value; return this; }
        public TrimStringProperty getEmailAddress() { return EmailAddress; }
        public LocationRef setEmailAddress(TrimStringProperty value) { this.EmailAddress = value; return this; }
        public TrimStringProperty getFaxNumber() { return FaxNumber; }
        public LocationRef setFaxNumber(TrimStringProperty value) { this.FaxNumber = value; return this; }
        public TrimStringProperty getFirstInitial() { return FirstInitial; }
        public LocationRef setFirstInitial(TrimStringProperty value) { this.FirstInitial = value; return this; }
        public TrimStringProperty getForeignBarcode() { return ForeignBarcode; }
        public LocationRef setForeignBarcode(TrimStringProperty value) { this.ForeignBarcode = value; return this; }
        public TrimStringProperty getFormalPreamble() { return FormalPreamble; }
        public LocationRef setFormalPreamble(TrimStringProperty value) { this.FormalPreamble = value; return this; }
        public TrimStringProperty getFormattedAddress() { return FormattedAddress; }
        public LocationRef setFormattedAddress(TrimStringProperty value) { this.FormattedAddress = value; return this; }
        public TrimStringProperty getFormattedName() { return FormattedName; }
        public LocationRef setFormattedName(TrimStringProperty value) { this.FormattedName = value; return this; }
        public TrimStringProperty getFullFormattedName() { return FullFormattedName; }
        public LocationRef setFullFormattedName(TrimStringProperty value) { this.FullFormattedName = value; return this; }
        public TrimProperty<Gender> getGenderValue() { return GenderValue; }
        public LocationRef setGenderValue(TrimProperty<Gender> value) { this.GenderValue = value; return this; }
        public TrimStringProperty getGivenNames() { return GivenNames; }
        public LocationRef setGivenNames(TrimStringProperty value) { this.GivenNames = value; return this; }
        public TrimStringProperty getGpsLocation() { return GpsLocation; }
        public LocationRef setGpsLocation(TrimStringProperty value) { this.GpsLocation = value; return this; }
        public TrimProperty<Boolean> getHasAValidLogin() { return HasAValidLogin; }
        public LocationRef setHasAValidLogin(TrimProperty<Boolean> value) { this.HasAValidLogin = value; return this; }
        public TrimStringProperty getHoldingOrganizationName() { return HoldingOrganizationName; }
        public LocationRef setHoldingOrganizationName(TrimStringProperty value) { this.HoldingOrganizationName = value; return this; }
        public TrimStringProperty getHomeDataset() { return HomeDataset; }
        public LocationRef setHomeDataset(TrimStringProperty value) { this.HomeDataset = value; return this; }
        public TrimStringProperty getHonorific() { return Honorific; }
        public LocationRef setHonorific(TrimStringProperty value) { this.Honorific = value; return this; }
        public TrimStringProperty getIdNumber() { return IdNumber; }
        public LocationRef setIdNumber(TrimStringProperty value) { this.IdNumber = value; return this; }
        public TrimStringProperty getInformalPreamble() { return InformalPreamble; }
        public LocationRef setInformalPreamble(TrimStringProperty value) { this.InformalPreamble = value; return this; }
        public TrimStringProperty getInitials() { return Initials; }
        public LocationRef setInitials(TrimStringProperty value) { this.Initials = value; return this; }
        public TrimStringProperty getInternetMailAddress() { return InternetMailAddress; }
        public LocationRef setInternetMailAddress(TrimStringProperty value) { this.InternetMailAddress = value; return this; }
        public TrimProperty<Boolean> getIsVisitor() { return IsVisitor; }
        public LocationRef setIsVisitor(TrimProperty<Boolean> value) { this.IsVisitor = value; return this; }
        public TrimProperty<Boolean> getIsWithin() { return IsWithin; }
        public LocationRef setIsWithin(TrimProperty<Boolean> value) { this.IsWithin = value; return this; }
        public TrimStringProperty getJobDescription() { return JobDescription; }
        public LocationRef setJobDescription(TrimStringProperty value) { this.JobDescription = value; return this; }
        public TrimProperty<Boolean> getKeepAddressHistory() { return KeepAddressHistory; }
        public LocationRef setKeepAddressHistory(TrimProperty<Boolean> value) { this.KeepAddressHistory = value; return this; }
        public TrimStringProperty getLdapSynchDN() { return LdapSynchDN; }
        public LocationRef setLdapSynchDN(TrimStringProperty value) { this.LdapSynchDN = value; return this; }
        public TrimProperty<Boolean> getLdapSynchEnabled() { return LdapSynchEnabled; }
        public LocationRef setLdapSynchEnabled(TrimProperty<Boolean> value) { this.LdapSynchEnabled = value; return this; }
        public TrimDateTime getLdapSynchLastUpdated() { return LdapSynchLastUpdated; }
        public LocationRef setLdapSynchLastUpdated(TrimDateTime value) { this.LdapSynchLastUpdated = value; return this; }
        public TrimStringProperty getLoginDetails() { return LoginDetails; }
        public LocationRef setLoginDetails(TrimStringProperty value) { this.LoginDetails = value; return this; }
        public TrimDateTime getLoginExpires() { return LoginExpires; }
        public LocationRef setLoginExpires(TrimDateTime value) { this.LoginExpires = value; return this; }
        public TrimStringProperty getLogsInAs() { return LogsInAs; }
        public LocationRef setLogsInAs(TrimStringProperty value) { this.LogsInAs = value; return this; }
        public TrimStringProperty getLongHonorific() { return LongHonorific; }
        public LocationRef setLongHonorific(TrimStringProperty value) { this.LongHonorific = value; return this; }
        public TrimStringProperty getMobileNumber() { return MobileNumber; }
        public LocationRef setMobileNumber(TrimStringProperty value) { this.MobileNumber = value; return this; }
        public TrimStringProperty getNickName() { return NickName; }
        public LocationRef setNickName(TrimStringProperty value) { this.NickName = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public LocationRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getOldPostalAddresses() { return OldPostalAddresses; }
        public LocationRef setOldPostalAddresses(TrimStringProperty value) { this.OldPostalAddresses = value; return this; }
        public TrimStringProperty getOldPostalAddressesISO() { return OldPostalAddressesISO; }
        public LocationRef setOldPostalAddressesISO(TrimStringProperty value) { this.OldPostalAddressesISO = value; return this; }
        public TrimStringProperty getOldStreetAddresses() { return OldStreetAddresses; }
        public LocationRef setOldStreetAddresses(TrimStringProperty value) { this.OldStreetAddresses = value; return this; }
        public TrimStringProperty getOldStreetAddressesISO() { return OldStreetAddressesISO; }
        public LocationRef setOldStreetAddressesISO(TrimStringProperty value) { this.OldStreetAddressesISO = value; return this; }
        public TrimStringProperty getPhoneNumber() { return PhoneNumber; }
        public LocationRef setPhoneNumber(TrimStringProperty value) { this.PhoneNumber = value; return this; }
        public TrimStringProperty getPostalAddress() { return PostalAddress; }
        public LocationRef setPostalAddress(TrimStringProperty value) { this.PostalAddress = value; return this; }
        public TrimStringProperty getPostNominal() { return PostNominal; }
        public LocationRef setPostNominal(TrimStringProperty value) { this.PostNominal = value; return this; }
        public TrimProperty<Long> getRequestResponseHigh() { return RequestResponseHigh; }
        public LocationRef setRequestResponseHigh(TrimProperty<Long> value) { this.RequestResponseHigh = value; return this; }
        public TrimProperty<Long> getRequestResponseLow() { return RequestResponseLow; }
        public LocationRef setRequestResponseLow(TrimProperty<Long> value) { this.RequestResponseLow = value; return this; }
        public TrimProperty<Long> getRequestResponseMedium() { return RequestResponseMedium; }
        public LocationRef setRequestResponseMedium(TrimProperty<Long> value) { this.RequestResponseMedium = value; return this; }
        public TrimProperty<Boolean> getRequestsNeedApproval() { return RequestsNeedApproval; }
        public LocationRef setRequestsNeedApproval(TrimProperty<Boolean> value) { this.RequestsNeedApproval = value; return this; }
        public TrimDateTime getReviewDate() { return ReviewDate; }
        public LocationRef setReviewDate(TrimDateTime value) { this.ReviewDate = value; return this; }
        public TrimStringProperty getSalutation() { return Salutation; }
        public LocationRef setSalutation(TrimStringProperty value) { this.Salutation = value; return this; }
        public TrimStringProperty getSecurityKeys() { return SecurityKeys; }
        public LocationRef setSecurityKeys(TrimStringProperty value) { this.SecurityKeys = value; return this; }
        public TrimStringProperty getSecurityString() { return SecurityString; }
        public LocationRef setSecurityString(TrimStringProperty value) { this.SecurityString = value; return this; }
        public TrimStringProperty getSortName() { return SortName; }
        public LocationRef setSortName(TrimStringProperty value) { this.SortName = value; return this; }
        public TrimStringProperty getStreetAddress() { return StreetAddress; }
        public LocationRef setStreetAddress(TrimStringProperty value) { this.StreetAddress = value; return this; }
        public TrimStringProperty getSurname() { return Surname; }
        public LocationRef setSurname(TrimStringProperty value) { this.Surname = value; return this; }
        public TrimStringProperty getSurnameNoPrefix() { return SurnameNoPrefix; }
        public LocationRef setSurnameNoPrefix(TrimStringProperty value) { this.SurnameNoPrefix = value; return this; }
        public TrimStringProperty getSurnamePrefix() { return SurnamePrefix; }
        public LocationRef setSurnamePrefix(TrimStringProperty value) { this.SurnamePrefix = value; return this; }
        public TrimProperty<LocationType> getTypeOfLocation() { return TypeOfLocation; }
        public LocationRef setTypeOfLocation(TrimProperty<LocationType> value) { this.TypeOfLocation = value; return this; }
        public TrimProperty<Boolean> getUsedForStatistics() { return UsedForStatistics; }
        public LocationRef setUsedForStatistics(TrimProperty<Boolean> value) { this.UsedForStatistics = value; return this; }
        public TrimProperty<UserLicenseTypes> getUserLicenseType() { return UserLicenseType; }
        public LocationRef setUserLicenseType(TrimProperty<UserLicenseTypes> value) { this.UserLicenseType = value; return this; }
        public TrimProperty<UserTypes> getUserType() { return UserType; }
        public LocationRef setUserType(TrimProperty<UserTypes> value) { this.UserType = value; return this; }
        public TrimStringProperty getViewPaneId() { return ViewPaneId; }
        public LocationRef setViewPaneId(TrimStringProperty value) { this.ViewPaneId = value; return this; }
        public TrimStringProperty getWebPage() { return WebPage; }
        public LocationRef setWebPage(TrimStringProperty value) { this.WebPage = value; return this; }
    }

    public static enum ActionAssignmentOption
    {
        OnlyIfNoneSpecified,
        OverrideExisting;
    }

    public static enum ActionInsertPosition
    {
        Before,
        After;
    }

    public static enum AssigneeType
    {
        AtLocation,
        AtHome,
        Missing,
        EarliestRequestor;
    }

    public static enum RequestTypes
    {
        RetrieveTemporary,
        RetrieveRecurring,
        RetrievePermanent,
        PickupNew,
        PickupReturn;
    }

    public static enum RequestPriority
    {
        High,
        Medium,
        Low;
    }

    public static enum DateInterval
    {
        Days,
        Weeks,
        Months,
        Years;
    }

    @DataContract
    public static class UserLabelRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="UserLabelDateCreated")
        @SerializedName("UserLabelDateCreated")
        @ApiMember(Name="UserLabelDateCreated", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="UserLabelFullName")
        @SerializedName("UserLabelFullName")
        @ApiMember(Name="UserLabelFullName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FullName = null;

        @DataMember(Name="UserLabelIconId")
        @SerializedName("UserLabelIconId")
        @ApiMember(Name="UserLabelIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="UserLabelLabelType")
        @SerializedName("UserLabelLabelType")
        @ApiMember(Name="UserLabelLabelType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<UserLabelType> LabelType = null;

        @DataMember(Name="UserLabelName")
        @SerializedName("UserLabelName")
        @ApiMember(Name="UserLabelName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public UserLabelRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public UserLabelRef setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimStringProperty getFullName() { return FullName; }
        public UserLabelRef setFullName(TrimStringProperty value) { this.FullName = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public UserLabelRef setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimProperty<UserLabelType> getLabelType() { return LabelType; }
        public UserLabelRef setLabelType(TrimProperty<UserLabelType> value) { this.LabelType = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public UserLabelRef setName(TrimStringProperty value) { this.Name = value; return this; }
    }

    public static enum FavoriteType
    {
        Favorites,
        Worktray,
        Documents,
        Containers,
        Templates,
        ContentBlocks;
    }

    @DataContract
    public static class UserLabelBase extends BaseMainObjectMethod
    {
        
    }

    @DataContract
    public static class TrimMainObjectRef extends Injectable
    {
       // @DataMember
       // public BaseObjectTypes TrimType = null;

        @DataMember
        public Long Uri = null;

        @DataMember
        public String FindBy = null;

        @DataMember
        public Boolean IsInFavorites = null;

        @DataMember
        public Boolean CanAddToNotes = null;

        @DataMember
        public TrimIcon Icon = null;

        @DataMember
        public String URN = null;

        @DataMember
        public String NameString = null;

        @DataMember
        public FieldDictionary Fields = null;
        
      //  public BaseObjectTypes getTrimType() { return TrimType; }
      //  public TrimMainObjectRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public Long getUri() { return Uri; }
        public TrimMainObjectRef setUri(Long value) { this.Uri = value; return this; }
        public String getFindBy() { return FindBy; }
        public TrimMainObjectRef setFindBy(String value) { this.FindBy = value; return this; }
        public Boolean getIsInFavorites() { return IsInFavorites; }
        public TrimMainObjectRef setIsInFavorites(Boolean value) { this.IsInFavorites = value; return this; }
        public Boolean isCanAddToNotes() { return CanAddToNotes; }
        public TrimMainObjectRef setCanAddToNotes(Boolean value) { this.CanAddToNotes = value; return this; }
        public TrimIcon getIcon() { return Icon; }
        public TrimMainObjectRef setIcon(TrimIcon value) { this.Icon = value; return this; }
        public String getUrn() { return URN; }
        public TrimMainObjectRef setUrn(String value) { this.URN = value; return this; }
        public String getNameString() { return NameString; }
        public TrimMainObjectRef setNameString(String value) { this.NameString = value; return this; }
        public FieldDictionary getFields() { return Fields; }
        public TrimMainObjectRef setFields(FieldDictionary value) { this.Fields = value; return this; }
    }

    public static enum LocationType
    {
        Unknown,
        Organization,
        Group,
        Position,
        Person,
        ProjectTeam,
        Committee,
        Venue,
        Workgroup,
        StorageProvider;
    }

    @DataContract
    public static class BaseIsUsedFor extends BaseMainObjectMethod
    {
        
    }

    @DataContract
    public static class FieldDefinitionRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="FieldDefinitionAccessControl")
        @SerializedName("FieldDefinitionAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="FieldDefinitionAbbreviation")
        @SerializedName("FieldDefinitionAbbreviation")
        @ApiMember(Name="FieldDefinitionAbbreviation", DataType="string", ParameterType="form")
        public TrimStringProperty Abbreviation = null;

        @DataMember(Name="FieldDefinitionCurrencySymbol")
        @SerializedName("FieldDefinitionCurrencySymbol")
        @ApiMember(Name="FieldDefinitionCurrencySymbol", DataType="string", ParameterType="form")
        public TrimStringProperty CurrencySymbol = null;

        @DataMember(Name="FieldDefinitionDateTimeIsUTC")
        @SerializedName("FieldDefinitionDateTimeIsUTC")
        @ApiMember(Name="FieldDefinitionDateTimeIsUTC", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DateTimeIsUTC = null;

        @DataMember(Name="FieldDefinitionDefaultBoolean")
        @SerializedName("FieldDefinitionDefaultBoolean")
        @ApiMember(Name="FieldDefinitionDefaultBoolean", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> DefaultBoolean = null;

        @DataMember(Name="FieldDefinitionDefaultCurrency")
        @SerializedName("FieldDefinitionDefaultCurrency")
        @ApiMember(Name="FieldDefinitionDefaultCurrency", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> DefaultCurrency = null;

        @DataMember(Name="FieldDefinitionDefaultDate")
        @SerializedName("FieldDefinitionDefaultDate")
        @ApiMember(Name="FieldDefinitionDefaultDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DefaultDate = null;

        @DataMember(Name="FieldDefinitionDefaultDecimal")
        @SerializedName("FieldDefinitionDefaultDecimal")
        @ApiMember(Name="FieldDefinitionDefaultDecimal", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> DefaultDecimal = null;

        @DataMember(Name="FieldDefinitionDefaultDisplay")
        @SerializedName("FieldDefinitionDefaultDisplay")
        @ApiMember(Name="FieldDefinitionDefaultDisplay", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DefaultDisplay = null;

        @DataMember(Name="FieldDefinitionDefaultInternal")
        @SerializedName("FieldDefinitionDefaultInternal")
        @ApiMember(Name="FieldDefinitionDefaultInternal", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DefaultInternal = null;

        @DataMember(Name="FieldDefinitionDefaultNumber")
        @SerializedName("FieldDefinitionDefaultNumber")
        @ApiMember(Name="FieldDefinitionDefaultNumber", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> DefaultNumber = null;

        @DataMember(Name="FieldDefinitionDefaultString")
        @SerializedName("FieldDefinitionDefaultString")
        @ApiMember(Name="FieldDefinitionDefaultString", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DefaultString = null;

        @DataMember(Name="FieldDefinitionExternalId")
        @SerializedName("FieldDefinitionExternalId")
        @ApiMember(Name="FieldDefinitionExternalId", DataType="string", ParameterType="form")
        public TrimStringProperty ExternalId = null;

        @DataMember(Name="FieldDefinitionFormat")
        @SerializedName("FieldDefinitionFormat")
        @ApiMember(Name="FieldDefinitionFormat", DataType="string", ParameterType="form")
        public TrimProperty<UserFieldFormats> Format = null;

        @DataMember(Name="FieldDefinitionIconId")
        @SerializedName("FieldDefinitionIconId")
        @ApiMember(Name="FieldDefinitionIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="FieldDefinitionInIDOLtext")
        @SerializedName("FieldDefinitionInIDOLtext")
        @ApiMember(Name="FieldDefinitionInIDOLtext", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> InIDOLtext = null;

        @DataMember(Name="FieldDefinitionIsSearchable")
        @SerializedName("FieldDefinitionIsSearchable")
        @ApiMember(Name="FieldDefinitionIsSearchable", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsSearchable = null;

        @DataMember(Name="FieldDefinitionIsUsedBy")
        @SerializedName("FieldDefinitionIsUsedBy")
        @ApiMember(Name="FieldDefinitionIsUsedBy", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty IsUsedBy = null;

        @DataMember(Name="FieldDefinitionIsUsedByRecordTypes")
        @SerializedName("FieldDefinitionIsUsedByRecordTypes")
        @ApiMember(Name="FieldDefinitionIsUsedByRecordTypes", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty IsUsedByRecordTypes = null;

        @DataMember(Name="FieldDefinitionIsVisible")
        @SerializedName("FieldDefinitionIsVisible")
        @ApiMember(Name="FieldDefinitionIsVisible", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsVisible = null;

        @DataMember(Name="FieldDefinitionLength")
        @SerializedName("FieldDefinitionLength")
        @ApiMember(Name="FieldDefinitionLength", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Length = null;

        @DataMember(Name="FieldDefinitionLocationRestriction")
        @SerializedName("FieldDefinitionLocationRestriction")
        @ApiMember(Name="FieldDefinitionLocationRestriction", DataType="string", ParameterType="form")
        public TrimProperty<LocationFieldType> LocationRestriction = null;

        @DataMember(Name="FieldDefinitionLowerLimit")
        @SerializedName("FieldDefinitionLowerLimit")
        @ApiMember(Name="FieldDefinitionLowerLimit", DataType="string", ParameterType="form")
        public TrimStringProperty LowerLimit = null;

        @DataMember(Name="FieldDefinitionMask")
        @SerializedName("FieldDefinitionMask")
        @ApiMember(Name="FieldDefinitionMask", DataType="string", ParameterType="form")
        public TrimStringProperty Mask = null;

        @DataMember(Name="FieldDefinitionName")
        @SerializedName("FieldDefinitionName")
        @ApiMember(Name="FieldDefinitionName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="FieldDefinitionNotes")
        @SerializedName("FieldDefinitionNotes")
        @ApiMember(Name="FieldDefinitionNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="FieldDefinitionObjectType")
        @SerializedName("FieldDefinitionObjectType")
        @ApiMember(Name="FieldDefinitionObjectType", DataType="string", ParameterType="form")
        public TrimProperty<BaseObjectTypes> ObjectType = null;

        @DataMember(Name="FieldDefinitionPluginId")
        @SerializedName("FieldDefinitionPluginId")
        @ApiMember(Name="FieldDefinitionPluginId", DataType="string", ParameterType="form")
        public TrimStringProperty PluginId = null;

        @DataMember(Name="FieldDefinitionSapKeySetField")
        @SerializedName("FieldDefinitionSapKeySetField")
        @ApiMember(Name="FieldDefinitionSapKeySetField", DataType="string", ParameterType="form")
        public TrimStringProperty SapKeySetField = null;

        @DataMember(Name="FieldDefinitionSearchClause")
        @SerializedName("FieldDefinitionSearchClause")
        @ApiMember(Name="FieldDefinitionSearchClause", DataType="string", ParameterType="form")
        public TrimStringProperty SearchClause = null;

        @DataMember(Name="FieldDefinitionSearchClauseName")
        @SerializedName("FieldDefinitionSearchClauseName")
        @ApiMember(Name="FieldDefinitionSearchClauseName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty SearchClauseName = null;

        @DataMember(Name="FieldDefinitionUpperLimit")
        @SerializedName("FieldDefinitionUpperLimit")
        @ApiMember(Name="FieldDefinitionUpperLimit", DataType="string", ParameterType="form")
        public TrimStringProperty UpperLimit = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public FieldDefinitionRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public FieldDefinitionRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public FieldDefinitionRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimStringProperty getAbbreviation() { return Abbreviation; }
        public FieldDefinitionRef setAbbreviation(TrimStringProperty value) { this.Abbreviation = value; return this; }
        public TrimStringProperty getCurrencySymbol() { return CurrencySymbol; }
        public FieldDefinitionRef setCurrencySymbol(TrimStringProperty value) { this.CurrencySymbol = value; return this; }
        public TrimProperty<Boolean> getDateTimeIsUTC() { return DateTimeIsUTC; }
        public FieldDefinitionRef setDateTimeIsUTC(TrimProperty<Boolean> value) { this.DateTimeIsUTC = value; return this; }
        public TrimProperty<Boolean> getDefaultBoolean() { return DefaultBoolean; }
        public FieldDefinitionRef setDefaultBoolean(TrimProperty<Boolean> value) { this.DefaultBoolean = value; return this; }
        public TrimProperty<BigDecimal> getDefaultCurrency() { return DefaultCurrency; }
        public FieldDefinitionRef setDefaultCurrency(TrimProperty<BigDecimal> value) { this.DefaultCurrency = value; return this; }
        public TrimDateTime getDefaultDate() { return DefaultDate; }
        public FieldDefinitionRef setDefaultDate(TrimDateTime value) { this.DefaultDate = value; return this; }
        public TrimProperty<BigDecimal> getDefaultDecimal() { return DefaultDecimal; }
        public FieldDefinitionRef setDefaultDecimal(TrimProperty<BigDecimal> value) { this.DefaultDecimal = value; return this; }
        public TrimStringProperty getDefaultDisplay() { return DefaultDisplay; }
        public FieldDefinitionRef setDefaultDisplay(TrimStringProperty value) { this.DefaultDisplay = value; return this; }
        public TrimStringProperty getDefaultInternal() { return DefaultInternal; }
        public FieldDefinitionRef setDefaultInternal(TrimStringProperty value) { this.DefaultInternal = value; return this; }
        public TrimProperty<Integer> getDefaultNumber() { return DefaultNumber; }
        public FieldDefinitionRef setDefaultNumber(TrimProperty<Integer> value) { this.DefaultNumber = value; return this; }
        public TrimStringProperty getDefaultString() { return DefaultString; }
        public FieldDefinitionRef setDefaultString(TrimStringProperty value) { this.DefaultString = value; return this; }
        public TrimStringProperty getExternalId() { return ExternalId; }
        public FieldDefinitionRef setExternalId(TrimStringProperty value) { this.ExternalId = value; return this; }
        public TrimProperty<UserFieldFormats> getFormat() { return Format; }
        public FieldDefinitionRef setFormat(TrimProperty<UserFieldFormats> value) { this.Format = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public FieldDefinitionRef setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimProperty<Boolean> getInIDOLtext() { return InIDOLtext; }
        public FieldDefinitionRef setInIDOLtext(TrimProperty<Boolean> value) { this.InIDOLtext = value; return this; }
        public TrimProperty<Boolean> getIsSearchable() { return IsSearchable; }
        public FieldDefinitionRef setIsSearchable(TrimProperty<Boolean> value) { this.IsSearchable = value; return this; }
        public TrimStringProperty getIsUsedBy() { return IsUsedBy; }
        public FieldDefinitionRef setIsUsedBy(TrimStringProperty value) { this.IsUsedBy = value; return this; }
        public TrimStringProperty getIsUsedByRecordTypes() { return IsUsedByRecordTypes; }
        public FieldDefinitionRef setIsUsedByRecordTypes(TrimStringProperty value) { this.IsUsedByRecordTypes = value; return this; }
        public TrimProperty<Boolean> getIsVisible() { return IsVisible; }
        public FieldDefinitionRef setIsVisible(TrimProperty<Boolean> value) { this.IsVisible = value; return this; }
        public TrimProperty<Integer> getLength() { return Length; }
        public FieldDefinitionRef setLength(TrimProperty<Integer> value) { this.Length = value; return this; }
        public TrimProperty<LocationFieldType> getLocationRestriction() { return LocationRestriction; }
        public FieldDefinitionRef setLocationRestriction(TrimProperty<LocationFieldType> value) { this.LocationRestriction = value; return this; }
        public TrimStringProperty getLowerLimit() { return LowerLimit; }
        public FieldDefinitionRef setLowerLimit(TrimStringProperty value) { this.LowerLimit = value; return this; }
        public TrimStringProperty getMask() { return Mask; }
        public FieldDefinitionRef setMask(TrimStringProperty value) { this.Mask = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public FieldDefinitionRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public FieldDefinitionRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<BaseObjectTypes> getObjectType() { return ObjectType; }
        public FieldDefinitionRef setObjectType(TrimProperty<BaseObjectTypes> value) { this.ObjectType = value; return this; }
        public TrimStringProperty getPluginId() { return PluginId; }
        public FieldDefinitionRef setPluginId(TrimStringProperty value) { this.PluginId = value; return this; }
        public TrimStringProperty getSapKeySetField() { return SapKeySetField; }
        public FieldDefinitionRef setSapKeySetField(TrimStringProperty value) { this.SapKeySetField = value; return this; }
        public TrimStringProperty getSearchClause() { return SearchClause; }
        public FieldDefinitionRef setSearchClause(TrimStringProperty value) { this.SearchClause = value; return this; }
        public TrimStringProperty getSearchClauseName() { return SearchClauseName; }
        public FieldDefinitionRef setSearchClauseName(TrimStringProperty value) { this.SearchClauseName = value; return this; }
        public TrimStringProperty getUpperLimit() { return UpperLimit; }
        public FieldDefinitionRef setUpperLimit(TrimStringProperty value) { this.UpperLimit = value; return this; }
    }

    @DataContract
    public static class BaseUsesField extends BaseMainObjectMethod
    {
        
    }

    public static enum HistoryTypes
    {
        CurrentChanged,
        HomeChanged,
        OwnerChanged,
        ContactAdded,
        ContactRemoved,
        ErecViewLocationType,
        ErecBookoutLocationType,
        ErecExtractLocationType,
        ErecReplaceLocationType,
        ErecNewVersionLocationType,
        ErecReturnOnlyLocationType,
        ErecRemoveLocationType,
        ErecAttachLocationType,
        ErecPublishLocationType,
        DispositionChanged,
        SignatureCreated,
        SignatureAttached,
        SignatureVerified,
        SignatureFailVerify,
        SecurityChanged,
        ScheduleReviewed,
        MadeVital,
        MadeNotVital,
        HoldAdded,
        HoldRemoved,
        ContainerChanged,
        TitleChanged,
        NotesChanged,
        CreateDateChanged,
        ScheduleChanged,
        NumberChanged,
        AccessControlChanged,
        ErecPrintLocationType,
        ErecExportXMLLocationType,
        ErecRenditionExtracted,
        ErecRenditionViewed,
        ErecRenditionPrinted,
        ErecRevisionExtracted,
        ErecRevisionViewed,
        ErecRevisionPrinted,
        ErecLinkExtracted,
        ErecLinkViewed,
        ErecLinkPrinted,
        ErecMailed,
        ExternalEvent,
        ClassificationChanged,
        CloseDateChanged,
        ErecAnnotated,
        ErecNotAnnotated,
        ErecRedacted,
        ErecRevisionRemoved,
        UdfChanged,
        ErecRenditionAdded,
        CreateRecordRelationship,
        RemoveRecordRelationship,
        RegDateChanged,
        DueDateChanged,
        DatePublishedChanged,
        DateInactiveChanged,
        DateLastActionChanged,
        DateDestructionChanged,
        DateRetentionChanged,
        Finalized,
        Unfinalized,
        ContentAdded,
        ContentRemoved,
        CsDeclassifyChanged,
        CsDowngradeChanged,
        ActionCompleted,
        ActionAssigned,
        ActionReassigned,
        ActionUndone,
        ActionCurrent,
        RecordCreated,
        RecordModified,
        RecordRemoved,
        ErecMailedLink,
        ErecRenditionRemoved,
        CurrentAssigned,
        HomeAssigned,
        OwnerAssigned,
        AccessExclusionsChanged,
        RecordCopied,
        SpiViewed,
        SpiEdited,
        SpiManaged,
        SpiRelocated,
        SpiExposed,
        DocumentReadyForDrafting,
        DocumentReadyForReview,
        DocumentReadyForAuthorization,
        DocumentReviewCommentsUpdated,
        DocumentReviewComplete,
        DocumentAuthorizationComplete,
        SignedRenditionPromoted,
        DocusignFailed;
    }

    @DataContract
    public static class SpaceRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="SpaceAccessControl")
        @SerializedName("SpaceAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="SpaceAdvancedUsageDetails")
        @SerializedName("SpaceAdvancedUsageDetails")
        @ApiMember(Name="SpaceAdvancedUsageDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AdvancedUsageDetails = null;

        @DataMember(Name="SpaceAvailable")
        @SerializedName("SpaceAvailable")
        @ApiMember(Name="SpaceAvailable", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Available = null;

        @DataMember(Name="SpaceCapacity")
        @SerializedName("SpaceCapacity")
        @ApiMember(Name="SpaceCapacity", DataType="long", ParameterType="form")
        public TrimProperty<Long> Capacity = null;

        @DataMember(Name="SpaceDescription")
        @SerializedName("SpaceDescription")
        @ApiMember(Name="SpaceDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="SpaceDestroyedAllBays")
        @SerializedName("SpaceDestroyedAllBays")
        @ApiMember(Name="SpaceDestroyedAllBays", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DestroyedAllBays = null;

        @DataMember(Name="SpaceDestroyedInBay")
        @SerializedName("SpaceDestroyedInBay")
        @ApiMember(Name="SpaceDestroyedInBay", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DestroyedInBay = null;

        @DataMember(Name="SpaceDestroyedRecords")
        @SerializedName("SpaceDestroyedRecords")
        @ApiMember(Name="SpaceDestroyedRecords", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DestroyedRecords = null;

        @DataMember(Name="SpaceForeignBarcode")
        @SerializedName("SpaceForeignBarcode")
        @ApiMember(Name="SpaceForeignBarcode", DataType="string", ParameterType="form")
        public TrimStringProperty ForeignBarcode = null;

        @DataMember(Name="SpaceFullDescription")
        @SerializedName("SpaceFullDescription")
        @ApiMember(Name="SpaceFullDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FullDescription = null;

        @DataMember(Name="SpaceHasHoldingBay")
        @SerializedName("SpaceHasHoldingBay")
        @ApiMember(Name="SpaceHasHoldingBay", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HasHoldingBay = null;

        @DataMember(Name="SpaceIsCaptioned")
        @SerializedName("SpaceIsCaptioned")
        @ApiMember(Name="SpaceIsCaptioned", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsCaptioned = null;

        @DataMember(Name="SpaceIsLowestLevel")
        @SerializedName("SpaceIsLowestLevel")
        @ApiMember(Name="SpaceIsLowestLevel", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsLowestLevel = null;

        @DataMember(Name="SpaceLevel")
        @SerializedName("SpaceLevel")
        @ApiMember(Name="SpaceLevel", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<SpaceLevel> Level = null;

        @DataMember(Name="SpaceNickName")
        @SerializedName("SpaceNickName")
        @ApiMember(Name="SpaceNickName", DataType="string", ParameterType="form")
        public TrimStringProperty NickName = null;

        @DataMember(Name="SpaceNodeAvailable")
        @SerializedName("SpaceNodeAvailable")
        @ApiMember(Name="SpaceNodeAvailable", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NodeAvailable = null;

        @DataMember(Name="SpaceNodeCapacity")
        @SerializedName("SpaceNodeCapacity")
        @ApiMember(Name="SpaceNodeCapacity", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NodeCapacity = null;

        @DataMember(Name="SpaceNodeUsed")
        @SerializedName("SpaceNodeUsed")
        @ApiMember(Name="SpaceNodeUsed", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NodeUsed = null;

        @DataMember(Name="SpaceNumber")
        @SerializedName("SpaceNumber")
        @ApiMember(Name="SpaceNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Number = null;

        @DataMember(Name="SpaceRecordsActualAllBays")
        @SerializedName("SpaceRecordsActualAllBays")
        @ApiMember(Name="SpaceRecordsActualAllBays", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsActualAllBays = null;

        @DataMember(Name="SpaceRecordsActuallyAtHome")
        @SerializedName("SpaceRecordsActuallyAtHome")
        @ApiMember(Name="SpaceRecordsActuallyAtHome", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsActuallyAtHome = null;

        @DataMember(Name="SpaceRecordsActuallyInBay")
        @SerializedName("SpaceRecordsActuallyInBay")
        @ApiMember(Name="SpaceRecordsActuallyInBay", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsActuallyInBay = null;

        @DataMember(Name="SpaceRecordsAdded2YearsAgo")
        @SerializedName("SpaceRecordsAdded2YearsAgo")
        @ApiMember(Name="SpaceRecordsAdded2YearsAgo", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAdded2YearsAgo = null;

        @DataMember(Name="SpaceRecordsAddedLastYear")
        @SerializedName("SpaceRecordsAddedLastYear")
        @ApiMember(Name="SpaceRecordsAddedLastYear", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAddedLastYear = null;

        @DataMember(Name="SpaceRecordsAddedThisYear")
        @SerializedName("SpaceRecordsAddedThisYear")
        @ApiMember(Name="SpaceRecordsAddedThisYear", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAddedThisYear = null;

        @DataMember(Name="SpaceRecordsAllBays")
        @SerializedName("SpaceRecordsAllBays")
        @ApiMember(Name="SpaceRecordsAllBays", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAllBays = null;

        @DataMember(Name="SpaceRecordsAtHome")
        @SerializedName("SpaceRecordsAtHome")
        @ApiMember(Name="SpaceRecordsAtHome", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsAtHome = null;

        @DataMember(Name="SpaceRecordsInHoldingBay")
        @SerializedName("SpaceRecordsInHoldingBay")
        @ApiMember(Name="SpaceRecordsInHoldingBay", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsInHoldingBay = null;

        @DataMember(Name="SpaceRecordsLoanAllBays")
        @SerializedName("SpaceRecordsLoanAllBays")
        @ApiMember(Name="SpaceRecordsLoanAllBays", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsLoanAllBays = null;

        @DataMember(Name="SpaceRecordsOut")
        @SerializedName("SpaceRecordsOut")
        @ApiMember(Name="SpaceRecordsOut", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsOut = null;

        @DataMember(Name="SpaceRecordsOutOfBay")
        @SerializedName("SpaceRecordsOutOfBay")
        @ApiMember(Name="SpaceRecordsOutOfBay", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsOutOfBay = null;

        @DataMember(Name="SpaceUsageDetails")
        @SerializedName("SpaceUsageDetails")
        @ApiMember(Name="SpaceUsageDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty UsageDetails = null;

        @DataMember(Name="SpaceUsed")
        @SerializedName("SpaceUsed")
        @ApiMember(Name="SpaceUsed", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Used = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SpaceRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public SpaceRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public SpaceRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimStringProperty getAdvancedUsageDetails() { return AdvancedUsageDetails; }
        public SpaceRef setAdvancedUsageDetails(TrimStringProperty value) { this.AdvancedUsageDetails = value; return this; }
        public TrimProperty<Long> getAvailable() { return Available; }
        public SpaceRef setAvailable(TrimProperty<Long> value) { this.Available = value; return this; }
        public TrimProperty<Long> getCapacity() { return Capacity; }
        public SpaceRef setCapacity(TrimProperty<Long> value) { this.Capacity = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public SpaceRef setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Long> getDestroyedAllBays() { return DestroyedAllBays; }
        public SpaceRef setDestroyedAllBays(TrimProperty<Long> value) { this.DestroyedAllBays = value; return this; }
        public TrimProperty<Long> getDestroyedInBay() { return DestroyedInBay; }
        public SpaceRef setDestroyedInBay(TrimProperty<Long> value) { this.DestroyedInBay = value; return this; }
        public TrimProperty<Long> getDestroyedRecords() { return DestroyedRecords; }
        public SpaceRef setDestroyedRecords(TrimProperty<Long> value) { this.DestroyedRecords = value; return this; }
        public TrimStringProperty getForeignBarcode() { return ForeignBarcode; }
        public SpaceRef setForeignBarcode(TrimStringProperty value) { this.ForeignBarcode = value; return this; }
        public TrimStringProperty getFullDescription() { return FullDescription; }
        public SpaceRef setFullDescription(TrimStringProperty value) { this.FullDescription = value; return this; }
        public TrimProperty<Boolean> getHasHoldingBay() { return HasHoldingBay; }
        public SpaceRef setHasHoldingBay(TrimProperty<Boolean> value) { this.HasHoldingBay = value; return this; }
        public TrimProperty<Boolean> getIsCaptioned() { return IsCaptioned; }
        public SpaceRef setIsCaptioned(TrimProperty<Boolean> value) { this.IsCaptioned = value; return this; }
        public TrimProperty<Boolean> getIsLowestLevel() { return IsLowestLevel; }
        public SpaceRef setIsLowestLevel(TrimProperty<Boolean> value) { this.IsLowestLevel = value; return this; }
        public TrimProperty<SpaceLevel> getLevel() { return Level; }
        public SpaceRef setLevel(TrimProperty<SpaceLevel> value) { this.Level = value; return this; }
        public TrimStringProperty getNickName() { return NickName; }
        public SpaceRef setNickName(TrimStringProperty value) { this.NickName = value; return this; }
        public TrimProperty<Long> getNodeAvailable() { return NodeAvailable; }
        public SpaceRef setNodeAvailable(TrimProperty<Long> value) { this.NodeAvailable = value; return this; }
        public TrimProperty<Long> getNodeCapacity() { return NodeCapacity; }
        public SpaceRef setNodeCapacity(TrimProperty<Long> value) { this.NodeCapacity = value; return this; }
        public TrimProperty<Long> getNodeUsed() { return NodeUsed; }
        public SpaceRef setNodeUsed(TrimProperty<Long> value) { this.NodeUsed = value; return this; }
        public TrimStringProperty getNumber() { return Number; }
        public SpaceRef setNumber(TrimStringProperty value) { this.Number = value; return this; }
        public TrimProperty<Long> getRecordsActualAllBays() { return RecordsActualAllBays; }
        public SpaceRef setRecordsActualAllBays(TrimProperty<Long> value) { this.RecordsActualAllBays = value; return this; }
        public TrimProperty<Long> getRecordsActuallyAtHome() { return RecordsActuallyAtHome; }
        public SpaceRef setRecordsActuallyAtHome(TrimProperty<Long> value) { this.RecordsActuallyAtHome = value; return this; }
        public TrimProperty<Long> getRecordsActuallyInBay() { return RecordsActuallyInBay; }
        public SpaceRef setRecordsActuallyInBay(TrimProperty<Long> value) { this.RecordsActuallyInBay = value; return this; }
        public TrimProperty<Long> getRecordsAdded2YearsAgo() { return RecordsAdded2YearsAgo; }
        public SpaceRef setRecordsAdded2YearsAgo(TrimProperty<Long> value) { this.RecordsAdded2YearsAgo = value; return this; }
        public TrimProperty<Long> getRecordsAddedLastYear() { return RecordsAddedLastYear; }
        public SpaceRef setRecordsAddedLastYear(TrimProperty<Long> value) { this.RecordsAddedLastYear = value; return this; }
        public TrimProperty<Long> getRecordsAddedThisYear() { return RecordsAddedThisYear; }
        public SpaceRef setRecordsAddedThisYear(TrimProperty<Long> value) { this.RecordsAddedThisYear = value; return this; }
        public TrimProperty<Long> getRecordsAllBays() { return RecordsAllBays; }
        public SpaceRef setRecordsAllBays(TrimProperty<Long> value) { this.RecordsAllBays = value; return this; }
        public TrimProperty<Long> getRecordsAtHome() { return RecordsAtHome; }
        public SpaceRef setRecordsAtHome(TrimProperty<Long> value) { this.RecordsAtHome = value; return this; }
        public TrimProperty<Long> getRecordsInHoldingBay() { return RecordsInHoldingBay; }
        public SpaceRef setRecordsInHoldingBay(TrimProperty<Long> value) { this.RecordsInHoldingBay = value; return this; }
        public TrimProperty<Long> getRecordsLoanAllBays() { return RecordsLoanAllBays; }
        public SpaceRef setRecordsLoanAllBays(TrimProperty<Long> value) { this.RecordsLoanAllBays = value; return this; }
        public TrimProperty<Long> getRecordsOut() { return RecordsOut; }
        public SpaceRef setRecordsOut(TrimProperty<Long> value) { this.RecordsOut = value; return this; }
        public TrimProperty<Long> getRecordsOutOfBay() { return RecordsOutOfBay; }
        public SpaceRef setRecordsOutOfBay(TrimProperty<Long> value) { this.RecordsOutOfBay = value; return this; }
        public TrimStringProperty getUsageDetails() { return UsageDetails; }
        public SpaceRef setUsageDetails(TrimStringProperty value) { this.UsageDetails = value; return this; }
        public TrimProperty<Long> getUsed() { return Used; }
        public SpaceRef setUsed(TrimProperty<Long> value) { this.Used = value; return this; }
    }

    @DataContract
    public static class ScheduleRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="ScheduleAccessControl")
        @SerializedName("ScheduleAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="ScheduleActiveFrom")
        @SerializedName("ScheduleActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="ScheduleActiveTo")
        @SerializedName("ScheduleActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="ScheduleActiveDescription")
        @SerializedName("ScheduleActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="ScheduleIsActive")
        @SerializedName("ScheduleIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="ScheduleActionSummary")
        @SerializedName("ScheduleActionSummary")
        @ApiMember(Name="ScheduleActionSummary", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ActionSummary = null;

        @DataMember(Name="ScheduleCanOnlyDestroyInactive")
        @SerializedName("ScheduleCanOnlyDestroyInactive")
        @ApiMember(Name="ScheduleCanOnlyDestroyInactive", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanOnlyDestroyInactive = null;

        @DataMember(Name="ScheduleExpandedTitle")
        @SerializedName("ScheduleExpandedTitle")
        @ApiMember(Name="ScheduleExpandedTitle", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ExpandedTitle = null;

        @DataMember(Name="ScheduleHasChildSchedules")
        @SerializedName("ScheduleHasChildSchedules")
        @ApiMember(Name="ScheduleHasChildSchedules", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> HasChildSchedules = null;

        @DataMember(Name="ScheduleIgnoreBlankDestroyTriggers")
        @SerializedName("ScheduleIgnoreBlankDestroyTriggers")
        @ApiMember(Name="ScheduleIgnoreBlankDestroyTriggers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IgnoreBlankDestroyTriggers = null;

        @DataMember(Name="ScheduleIsAgencySpecific")
        @SerializedName("ScheduleIsAgencySpecific")
        @ApiMember(Name="ScheduleIsAgencySpecific", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsAgencySpecific = null;

        @DataMember(Name="ScheduleName")
        @SerializedName("ScheduleName")
        @ApiMember(Name="ScheduleName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="ScheduleNotes")
        @SerializedName("ScheduleNotes")
        @ApiMember(Name="ScheduleNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="SchedulePolicyCentreGUID")
        @SerializedName("SchedulePolicyCentreGUID")
        @ApiMember(Name="SchedulePolicyCentreGUID", DataType="string", ParameterType="form")
        public TrimStringProperty PolicyCentreGUID = null;

        @DataMember(Name="ScheduleRetainJurisdictions")
        @SerializedName("ScheduleRetainJurisdictions")
        @ApiMember(Name="ScheduleRetainJurisdictions", DataType="string", ParameterType="form")
        public TrimStringProperty RetainJurisdictions = null;

        @DataMember(Name="ScheduleRetention")
        @SerializedName("ScheduleRetention")
        @ApiMember(Name="ScheduleRetention", DataType="string", ParameterType="form")
        public TrimProperty<RetainOptions> Retention = null;

        @DataMember(Name="ScheduleSource")
        @SerializedName("ScheduleSource")
        @ApiMember(Name="ScheduleSource", DataType="string", ParameterType="form")
        public TrimStringProperty Source = null;

        @DataMember(Name="ScheduleSuppressTriggerCalculationAlways")
        @SerializedName("ScheduleSuppressTriggerCalculationAlways")
        @ApiMember(Name="ScheduleSuppressTriggerCalculationAlways", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SuppressTriggerCalculationAlways = null;

        @DataMember(Name="ScheduleSuppressTriggerCalculationEventOnCommit")
        @SerializedName("ScheduleSuppressTriggerCalculationEventOnCommit")
        @ApiMember(Name="ScheduleSuppressTriggerCalculationEventOnCommit", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SuppressTriggerCalculationEventOnCommit = null;

        @DataMember(Name="ScheduleTitle")
        @SerializedName("ScheduleTitle")
        @ApiMember(Name="ScheduleTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;

        @DataMember(Name="ScheduleUseEarliestDestroyDate")
        @SerializedName("ScheduleUseEarliestDestroyDate")
        @ApiMember(Name="ScheduleUseEarliestDestroyDate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseEarliestDestroyDate = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ScheduleRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public ScheduleRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public ScheduleRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public ScheduleRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public ScheduleRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public ScheduleRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public ScheduleRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getActionSummary() { return ActionSummary; }
        public ScheduleRef setActionSummary(TrimStringProperty value) { this.ActionSummary = value; return this; }
        public TrimProperty<Boolean> getCanOnlyDestroyInactive() { return CanOnlyDestroyInactive; }
        public ScheduleRef setCanOnlyDestroyInactive(TrimProperty<Boolean> value) { this.CanOnlyDestroyInactive = value; return this; }
        public TrimStringProperty getExpandedTitle() { return ExpandedTitle; }
        public ScheduleRef setExpandedTitle(TrimStringProperty value) { this.ExpandedTitle = value; return this; }
        public TrimProperty<Boolean> getHasChildSchedules() { return HasChildSchedules; }
        public ScheduleRef setHasChildSchedules(TrimProperty<Boolean> value) { this.HasChildSchedules = value; return this; }
        public TrimProperty<Boolean> getIgnoreBlankDestroyTriggers() { return IgnoreBlankDestroyTriggers; }
        public ScheduleRef setIgnoreBlankDestroyTriggers(TrimProperty<Boolean> value) { this.IgnoreBlankDestroyTriggers = value; return this; }
        public TrimProperty<Boolean> getIsAgencySpecific() { return IsAgencySpecific; }
        public ScheduleRef setIsAgencySpecific(TrimProperty<Boolean> value) { this.IsAgencySpecific = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public ScheduleRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public ScheduleRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getPolicyCentreGUID() { return PolicyCentreGUID; }
        public ScheduleRef setPolicyCentreGUID(TrimStringProperty value) { this.PolicyCentreGUID = value; return this; }
        public TrimStringProperty getRetainJurisdictions() { return RetainJurisdictions; }
        public ScheduleRef setRetainJurisdictions(TrimStringProperty value) { this.RetainJurisdictions = value; return this; }
        public TrimProperty<RetainOptions> getRetention() { return Retention; }
        public ScheduleRef setRetention(TrimProperty<RetainOptions> value) { this.Retention = value; return this; }
        public TrimStringProperty getSource() { return Source; }
        public ScheduleRef setSource(TrimStringProperty value) { this.Source = value; return this; }
        public TrimProperty<Boolean> getSuppressTriggerCalculationAlways() { return SuppressTriggerCalculationAlways; }
        public ScheduleRef setSuppressTriggerCalculationAlways(TrimProperty<Boolean> value) { this.SuppressTriggerCalculationAlways = value; return this; }
        public TrimProperty<Boolean> getSuppressTriggerCalculationEventOnCommit() { return SuppressTriggerCalculationEventOnCommit; }
        public ScheduleRef setSuppressTriggerCalculationEventOnCommit(TrimProperty<Boolean> value) { this.SuppressTriggerCalculationEventOnCommit = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public ScheduleRef setTitle(TrimStringProperty value) { this.Title = value; return this; }
        public TrimProperty<Boolean> getUseEarliestDestroyDate() { return UseEarliestDestroyDate; }
        public ScheduleRef setUseEarliestDestroyDate(TrimProperty<Boolean> value) { this.UseEarliestDestroyDate = value; return this; }
    }

    public static enum LabelPositionChange
    {
        MoveUp,
        MoveDown,
        MoveToTop,
        MoveToBottom;
    }

    @DataContract
    public static class KeywordRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="KeywordAccessControl")
        @SerializedName("KeywordAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="KeywordActiveFrom")
        @SerializedName("KeywordActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="KeywordActiveTo")
        @SerializedName("KeywordActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="KeywordActiveDescription")
        @SerializedName("KeywordActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="KeywordIsActive")
        @SerializedName("KeywordIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="KeywordHasRelatedKeywords")
        @SerializedName("KeywordHasRelatedKeywords")
        @ApiMember(Name="KeywordHasRelatedKeywords", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> HasRelatedKeywords = null;

        @DataMember(Name="KeywordIdentificationNumber")
        @SerializedName("KeywordIdentificationNumber")
        @ApiMember(Name="KeywordIdentificationNumber", DataType="string", ParameterType="form")
        public TrimStringProperty IdentificationNumber = null;

        @DataMember(Name="KeywordIsAPrimaryTerm")
        @SerializedName("KeywordIsAPrimaryTerm")
        @ApiMember(Name="KeywordIsAPrimaryTerm", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsAPrimaryTerm = null;

        @DataMember(Name="KeywordIsForbidden")
        @SerializedName("KeywordIsForbidden")
        @ApiMember(Name="KeywordIsForbidden", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsForbidden = null;

        @DataMember(Name="KeywordIsNodeLabel")
        @SerializedName("KeywordIsNodeLabel")
        @ApiMember(Name="KeywordIsNodeLabel", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsNodeLabel = null;

        @DataMember(Name="KeywordIsPrompt")
        @SerializedName("KeywordIsPrompt")
        @ApiMember(Name="KeywordIsPrompt", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsPrompt = null;

        @DataMember(Name="KeywordName")
        @SerializedName("KeywordName")
        @ApiMember(Name="KeywordName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="KeywordNotes")
        @SerializedName("KeywordNotes")
        @ApiMember(Name="KeywordNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="KeywordSource")
        @SerializedName("KeywordSource")
        @ApiMember(Name="KeywordSource", DataType="string", ParameterType="form")
        public TrimStringProperty Source = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public KeywordRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public KeywordRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public KeywordRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public KeywordRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public KeywordRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public KeywordRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public KeywordRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getHasRelatedKeywords() { return HasRelatedKeywords; }
        public KeywordRef setHasRelatedKeywords(TrimProperty<Boolean> value) { this.HasRelatedKeywords = value; return this; }
        public TrimStringProperty getIdentificationNumber() { return IdentificationNumber; }
        public KeywordRef setIdentificationNumber(TrimStringProperty value) { this.IdentificationNumber = value; return this; }
        public TrimProperty<Boolean> getIsAPrimaryTerm() { return IsAPrimaryTerm; }
        public KeywordRef setIsAPrimaryTerm(TrimProperty<Boolean> value) { this.IsAPrimaryTerm = value; return this; }
        public TrimProperty<Boolean> getIsForbidden() { return IsForbidden; }
        public KeywordRef setIsForbidden(TrimProperty<Boolean> value) { this.IsForbidden = value; return this; }
        public TrimProperty<Boolean> getIsNodeLabel() { return IsNodeLabel; }
        public KeywordRef setIsNodeLabel(TrimProperty<Boolean> value) { this.IsNodeLabel = value; return this; }
        public TrimProperty<Boolean> getIsPrompt() { return IsPrompt; }
        public KeywordRef setIsPrompt(TrimProperty<Boolean> value) { this.IsPrompt = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public KeywordRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public KeywordRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getSource() { return Source; }
        public KeywordRef setSource(TrimStringProperty value) { this.Source = value; return this; }
    }

    public static enum KeywordRelationship
    {
        RelatedTo,
        Use,
        UsedFor,
        Narrower,
        Broader;
    }

    public static enum DisposalType
    {
        None,
        Archived,
        Transferred,
        Destroyed;
    }

    public static enum ContactType
    {
        Author(0),
        Addressee(1),
        Representative(2),
        Other(3),
        Client(4),
        Custom1(6),
        Custom2(7),
        Custom3(8),
        Custom4(9),
        Custom5(10),
        Custom6(11),
        Custom7(12),
        Custom8(13),
        Custom9(14),
        Custom10(15);

        private final int value;
        ContactType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    @DataContract
    public static class ElectronicStoreRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ElectronicStoreAlertLevel")
        @SerializedName("ElectronicStoreAlertLevel")
        @ApiMember(Name="ElectronicStoreAlertLevel", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AlertLevel = null;

        @DataMember(Name="ElectronicStoreAutnGroup")
        @SerializedName("ElectronicStoreAutnGroup")
        @ApiMember(Name="ElectronicStoreAutnGroup", DataType="string", ParameterType="form")
        public TrimStringProperty AutnGroup = null;

        @DataMember(Name="ElectronicStoreBytesRemaining")
        @SerializedName("ElectronicStoreBytesRemaining")
        @ApiMember(Name="ElectronicStoreBytesRemaining", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> BytesRemaining = null;

        @DataMember(Name="ElectronicStoreBytesUsed")
        @SerializedName("ElectronicStoreBytesUsed")
        @ApiMember(Name="ElectronicStoreBytesUsed", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> BytesUsed = null;

        @DataMember(Name="ElectronicStoreCapacity")
        @SerializedName("ElectronicStoreCapacity")
        @ApiMember(Name="ElectronicStoreCapacity", DataType="long", ParameterType="form")
        public TrimProperty<Long> Capacity = null;

        @DataMember(Name="ElectronicStoreCompress")
        @SerializedName("ElectronicStoreCompress")
        @ApiMember(Name="ElectronicStoreCompress", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> Compress = null;

        @DataMember(Name="ElectronicStoreDefaultAccessDate")
        @SerializedName("ElectronicStoreDefaultAccessDate")
        @ApiMember(Name="ElectronicStoreDefaultAccessDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DefaultAccessDate = null;

        @DataMember(Name="ElectronicStoreDeleteRetriesQueued")
        @SerializedName("ElectronicStoreDeleteRetriesQueued")
        @ApiMember(Name="ElectronicStoreDeleteRetriesQueued", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DeleteRetriesQueued = null;

        @DataMember(Name="ElectronicStoreDeploymentStatus")
        @SerializedName("ElectronicStoreDeploymentStatus")
        @ApiMember(Name="ElectronicStoreDeploymentStatus", DataType="string", ParameterType="form")
        public TrimProperty<StoreStatus> DeploymentStatus = null;

        @DataMember(Name="ElectronicStoreEncrypt")
        @SerializedName("ElectronicStoreEncrypt")
        @ApiMember(Name="ElectronicStoreEncrypt", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> Encrypt = null;

        @DataMember(Name="ElectronicStoreExternalConfig")
        @SerializedName("ElectronicStoreExternalConfig")
        @ApiMember(Name="ElectronicStoreExternalConfig", DataType="string", ParameterType="form")
        public TrimStringProperty ExternalConfig = null;

        @DataMember(Name="ElectronicStoreExternalProgId")
        @SerializedName("ElectronicStoreExternalProgId")
        @ApiMember(Name="ElectronicStoreExternalProgId", DataType="string", ParameterType="form")
        public TrimStringProperty ExternalProgId = null;

        @DataMember(Name="ElectronicStoreFilesPerFolder")
        @SerializedName("ElectronicStoreFilesPerFolder")
        @ApiMember(Name="ElectronicStoreFilesPerFolder", DataType="int", ParameterType="form")
        public TrimProperty<Integer> FilesPerFolder = null;

        @DataMember(Name="ElectronicStoreInPool")
        @SerializedName("ElectronicStoreInPool")
        @ApiMember(Name="ElectronicStoreInPool", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> InPool = null;

        @DataMember(Name="ElectronicStoreKeepAccessDates")
        @SerializedName("ElectronicStoreKeepAccessDates")
        @ApiMember(Name="ElectronicStoreKeepAccessDates", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> KeepAccessDates = null;

        @DataMember(Name="ElectronicStoreLoginName")
        @SerializedName("ElectronicStoreLoginName")
        @ApiMember(Name="ElectronicStoreLoginName", DataType="string", ParameterType="form")
        public TrimStringProperty LoginName = null;

        @DataMember(Name="ElectronicStoreLoginPassword")
        @SerializedName("ElectronicStoreLoginPassword")
        @ApiMember(Name="ElectronicStoreLoginPassword", DataType="string", ParameterType="form")
        public TrimStringProperty LoginPassword = null;

        @DataMember(Name="ElectronicStoreMaxFolderSize")
        @SerializedName("ElectronicStoreMaxFolderSize")
        @ApiMember(Name="ElectronicStoreMaxFolderSize", DataType="long", ParameterType="form")
        public TrimProperty<Long> MaxFolderSize = null;

        @DataMember(Name="ElectronicStoreName")
        @SerializedName("ElectronicStoreName")
        @ApiMember(Name="ElectronicStoreName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="ElectronicStorePath")
        @SerializedName("ElectronicStorePath")
        @ApiMember(Name="ElectronicStorePath", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Path = null;

        @DataMember(Name="ElectronicStoreStorageTier")
        @SerializedName("ElectronicStoreStorageTier")
        @ApiMember(Name="ElectronicStoreStorageTier", DataType="string", ParameterType="form")
        public TrimProperty<TieredStorageType> StorageTier = null;

        @DataMember(Name="ElectronicStoreStoreLocation")
        @SerializedName("ElectronicStoreStoreLocation")
        @ApiMember(Name="ElectronicStoreStoreLocation", DataType="string", ParameterType="form")
        public TrimStringProperty StoreLocation = null;

        @DataMember(Name="ElectronicStoreStoreType")
        @SerializedName("ElectronicStoreStoreType")
        @ApiMember(Name="ElectronicStoreStoreType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<EstoreTypes> StoreType = null;

        @DataMember(Name="ElectronicStoreUpdateAccessDateOnAdd")
        @SerializedName("ElectronicStoreUpdateAccessDateOnAdd")
        @ApiMember(Name="ElectronicStoreUpdateAccessDateOnAdd", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UpdateAccessDateOnAdd = null;

        @DataMember(Name="ElectronicStoreWriteProtected")
        @SerializedName("ElectronicStoreWriteProtected")
        @ApiMember(Name="ElectronicStoreWriteProtected", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> WriteProtected = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ElectronicStoreRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Integer> getAlertLevel() { return AlertLevel; }
        public ElectronicStoreRef setAlertLevel(TrimProperty<Integer> value) { this.AlertLevel = value; return this; }
        public TrimStringProperty getAutnGroup() { return AutnGroup; }
        public ElectronicStoreRef setAutnGroup(TrimStringProperty value) { this.AutnGroup = value; return this; }
        public TrimProperty<Long> getBytesRemaining() { return BytesRemaining; }
        public ElectronicStoreRef setBytesRemaining(TrimProperty<Long> value) { this.BytesRemaining = value; return this; }
        public TrimProperty<Long> getBytesUsed() { return BytesUsed; }
        public ElectronicStoreRef setBytesUsed(TrimProperty<Long> value) { this.BytesUsed = value; return this; }
        public TrimProperty<Long> getCapacity() { return Capacity; }
        public ElectronicStoreRef setCapacity(TrimProperty<Long> value) { this.Capacity = value; return this; }
        public TrimProperty<Boolean> getCompress() { return Compress; }
        public ElectronicStoreRef setCompress(TrimProperty<Boolean> value) { this.Compress = value; return this; }
        public TrimDateTime getDefaultAccessDate() { return DefaultAccessDate; }
        public ElectronicStoreRef setDefaultAccessDate(TrimDateTime value) { this.DefaultAccessDate = value; return this; }
        public TrimProperty<Long> getDeleteRetriesQueued() { return DeleteRetriesQueued; }
        public ElectronicStoreRef setDeleteRetriesQueued(TrimProperty<Long> value) { this.DeleteRetriesQueued = value; return this; }
        public TrimProperty<StoreStatus> getDeploymentStatus() { return DeploymentStatus; }
        public ElectronicStoreRef setDeploymentStatus(TrimProperty<StoreStatus> value) { this.DeploymentStatus = value; return this; }
        public TrimProperty<Boolean> getEncrypt() { return Encrypt; }
        public ElectronicStoreRef setEncrypt(TrimProperty<Boolean> value) { this.Encrypt = value; return this; }
        public TrimStringProperty getExternalConfig() { return ExternalConfig; }
        public ElectronicStoreRef setExternalConfig(TrimStringProperty value) { this.ExternalConfig = value; return this; }
        public TrimStringProperty getExternalProgId() { return ExternalProgId; }
        public ElectronicStoreRef setExternalProgId(TrimStringProperty value) { this.ExternalProgId = value; return this; }
        public TrimProperty<Integer> getFilesPerFolder() { return FilesPerFolder; }
        public ElectronicStoreRef setFilesPerFolder(TrimProperty<Integer> value) { this.FilesPerFolder = value; return this; }
        public TrimProperty<Boolean> getInPool() { return InPool; }
        public ElectronicStoreRef setInPool(TrimProperty<Boolean> value) { this.InPool = value; return this; }
        public TrimProperty<Boolean> getKeepAccessDates() { return KeepAccessDates; }
        public ElectronicStoreRef setKeepAccessDates(TrimProperty<Boolean> value) { this.KeepAccessDates = value; return this; }
        public TrimStringProperty getLoginName() { return LoginName; }
        public ElectronicStoreRef setLoginName(TrimStringProperty value) { this.LoginName = value; return this; }
        public TrimStringProperty getLoginPassword() { return LoginPassword; }
        public ElectronicStoreRef setLoginPassword(TrimStringProperty value) { this.LoginPassword = value; return this; }
        public TrimProperty<Long> getMaxFolderSize() { return MaxFolderSize; }
        public ElectronicStoreRef setMaxFolderSize(TrimProperty<Long> value) { this.MaxFolderSize = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public ElectronicStoreRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getPath() { return Path; }
        public ElectronicStoreRef setPath(TrimStringProperty value) { this.Path = value; return this; }
        public TrimProperty<TieredStorageType> getStorageTier() { return StorageTier; }
        public ElectronicStoreRef setStorageTier(TrimProperty<TieredStorageType> value) { this.StorageTier = value; return this; }
        public TrimStringProperty getStoreLocation() { return StoreLocation; }
        public ElectronicStoreRef setStoreLocation(TrimStringProperty value) { this.StoreLocation = value; return this; }
        public TrimProperty<EstoreTypes> getStoreType() { return StoreType; }
        public ElectronicStoreRef setStoreType(TrimProperty<EstoreTypes> value) { this.StoreType = value; return this; }
        public TrimProperty<Boolean> getUpdateAccessDateOnAdd() { return UpdateAccessDateOnAdd; }
        public ElectronicStoreRef setUpdateAccessDateOnAdd(TrimProperty<Boolean> value) { this.UpdateAccessDateOnAdd = value; return this; }
        public TrimProperty<Boolean> getWriteProtected() { return WriteProtected; }
        public ElectronicStoreRef setWriteProtected(TrimProperty<Boolean> value) { this.WriteProtected = value; return this; }
    }

    public static enum LocRelationshipType
    {
        MemberOf(0),
        BossedBy(1),
        OtherOf(3),
        HasMembers(4),
        BossOf(5),
        HasOthers(7),
        DelegateOf(8),
        HasDelegates(9),
        AdministratorOf(10),
        AdministeredBy(11);

        private final int value;
        LocRelationshipType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum UserPermissions
    {
        RecordCreate(0),
        RecordModify(1),
        RecordDelete(2),
        Unfinalize(3),
        BypassAllAccess(4),
        CreatePartFiles(5),
        ModifyAnyClass(6),
        RequestWorker(7),
        RecordAdmin(8),
        CreateInternalLocation(9),
        ModifyInternalLocation(10),
        DeleteInternalLocation(11),
        CreateExternalLocation(12),
        ModifyExternalLocation(13),
        DeleteExternalLocation(14),
        ViewProfile(15),
        ModifyProfile(16),
        ClassificationAdmin(17),
        ScheduleAdmin(18),
        SpaceAdmin(19),
        DocumentStoreAdmin(20),
        RecordTypes(21),
        WordIndexing(22),
        ZipCodes(23),
        LookupSets(24),
        AttachContacts(25),
        Thesaurus(26),
        Litigation(27),
        ActionsAdmin(28),
        ReassignActions(29),
        ActionStats(30),
        WorkflowCreate(31),
        WorkflowModify(33),
        WorkflowAdmin(34),
        Reports(36),
        Calendar(37),
        SystemOptions(38),
        SystemCaptions(39),
        DefineFields(40),
        SecurityAdmin(41),
        BypassViewAccess(42),
        BarcodeScanners(45),
        WebLayouts(46),
        CanBeHome(47),
        CanBeOwner(48),
        CanBeCurrent(49),
        CanBeContact(50),
        CanBeRequestor(51),
        CanBeAssignee(52),
        CanBeSupervisor(53),
        CanBeAccess(54),
        DocumentUpdate(55),
        AnnotateRecord(56),
        CanSaveSearches(57),
        AttachActions(59),
        RecordAdminRestricted(60),
        ImportExport(61),
        RecordRelate(62),
        CompleteActions(63),
        DocumentDelete(64),
        RecordArchivist(65),
        WorkflowCreateBlank(66),
        Searches(67),
        RemoveFromContainer(68),
        ModifyRecordSecurity(69),
        SetArchiveDates(70),
        RemoveRecordRelate(71),
        RemoveContacts(72),
        SetContainer(73),
        ChangeContainer(74),
        RescheduleActions(76),
        Meetings(77),
        ByPassLockDown(78),
        SecurityGuide(79),
        MailTemplates(80),
        AddCommunication(81),
        ManageCommunications(82),
        DataCleanup(84),
        LimitedModInternalLocation(85),
        ApproveClassification(86),
        MeetingContributor(87),
        DownloadFromScanner(88),
        OriginManager(91),
        AddRemoveHold(92),
        BypassGlobalToolbar(93),
        ArchiveExternallyManagedDocs(95),
        AddRemoveExternalHold(97),
        IdolAdministrator(98),
        BypassBlockedSearchMethods(99),
        CloseContainer(100),
        RequestAdministrator(101),
        RemoveRenditions(102),
        MakeRequests(103),
        Alerts(104),
        SharePointAdministrator(105),
        RemoveRevisions(106),
        ByPassAuditLog(107),
        ApproveDisposal(108),
        ModifyAdditionalFieldValues(109),
        DocumentUndoCheckout(110),
        CheckinStyleManager(111),
        LabelManager(112),
        CanBeEditor(113),
        CanBeReviewer(114),
        CanBeAuthorizer(115),
        DocumentReviewAdministrator(116),
        ServerMonitoring(117),
        UpdatePolicyCentreSchedules(118);

        private final int value;
        UserPermissions(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    @DataContract
    public static class RecordRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="RecordAccessControl")
        @SerializedName("RecordAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="RecordAccessionNumber")
        @SerializedName("RecordAccessionNumber")
        @ApiMember(Name="RecordAccessionNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AccessionNumber = null;

        @DataMember(Name="RecordActions")
        @SerializedName("RecordActions")
        @ApiMember(Name="RecordActions", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Actions = null;

        @DataMember(Name="RecordAggregatedDisposal")
        @SerializedName("RecordAggregatedDisposal")
        @ApiMember(Name="RecordAggregatedDisposal", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AggregatedDisposal = null;

        @DataMember(Name="RecordAllContacts")
        @SerializedName("RecordAllContacts")
        @ApiMember(Name="RecordAllContacts", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllContacts = null;

        @DataMember(Name="RecordAllHolds")
        @SerializedName("RecordAllHolds")
        @ApiMember(Name="RecordAllHolds", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllHolds = null;

        @DataMember(Name="RecordAllMeetings")
        @SerializedName("RecordAllMeetings")
        @ApiMember(Name="RecordAllMeetings", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllMeetings = null;

        @DataMember(Name="RecordAllParts")
        @SerializedName("RecordAllParts")
        @ApiMember(Name="RecordAllParts", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllParts = null;

        @DataMember(Name="RecordAllVersions")
        @SerializedName("RecordAllVersions")
        @ApiMember(Name="RecordAllVersions", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AllVersions = null;

        @DataMember(Name="RecordAlternateContentsCount")
        @SerializedName("RecordAlternateContentsCount")
        @ApiMember(Name="RecordAlternateContentsCount", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> AlternateContentsCount = null;

        @DataMember(Name="RecordAlternativeContainers")
        @SerializedName("RecordAlternativeContainers")
        @ApiMember(Name="RecordAlternativeContainers", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AlternativeContainers = null;

        @DataMember(Name="RecordAlternativeContents")
        @SerializedName("RecordAlternativeContents")
        @ApiMember(Name="RecordAlternativeContents", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AlternativeContents = null;

        @DataMember(Name="RecordArchivePermDate")
        @SerializedName("RecordArchivePermDate")
        @ApiMember(Name="RecordArchivePermDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime ArchivePermDate = null;

        @DataMember(Name="RecordArchiveTransferDate")
        @SerializedName("RecordArchiveTransferDate")
        @ApiMember(Name="RecordArchiveTransferDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime ArchiveTransferDate = null;

        @DataMember(Name="RecordAssigneeStatus")
        @SerializedName("RecordAssigneeStatus")
        @ApiMember(Name="RecordAssigneeStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<RecLocSubTypes> AssigneeStatus = null;

        @DataMember(Name="RecordAttachedKeywords")
        @SerializedName("RecordAttachedKeywords")
        @ApiMember(Name="RecordAttachedKeywords", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AttachedKeywords = null;

        @DataMember(Name="RecordAuthorizationMethod")
        @SerializedName("RecordAuthorizationMethod")
        @ApiMember(Name="RecordAuthorizationMethod", DataType="string", ParameterType="form")
        public TrimProperty<AuthorizationMethods> AuthorizationMethod = null;

        @DataMember(Name="RecordAutoClassificationConfidenceLevel")
        @SerializedName("RecordAutoClassificationConfidenceLevel")
        @ApiMember(Name="RecordAutoClassificationConfidenceLevel", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AutoClassificationConfidenceLevel = null;

        @DataMember(Name="RecordAutoRenderStatus")
        @SerializedName("RecordAutoRenderStatus")
        @ApiMember(Name="RecordAutoRenderStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<AutoRenditionStatus> AutoRenderStatus = null;

        @DataMember(Name="RecordAutoRenderToPDFOnSave")
        @SerializedName("RecordAutoRenderToPDFOnSave")
        @ApiMember(Name="RecordAutoRenderToPDFOnSave", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoRenderToPDFOnSave = null;

        @DataMember(Name="RecordBarcode")
        @SerializedName("RecordBarcode")
        @ApiMember(Name="RecordBarcode", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Barcode = null;

        @DataMember(Name="RecordBypassRecordTypeAccessControls")
        @SerializedName("RecordBypassRecordTypeAccessControls")
        @ApiMember(Name="RecordBypassRecordTypeAccessControls", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> BypassRecordTypeAccessControls = null;

        @DataMember(Name="RecordCanUseClassification")
        @SerializedName("RecordCanUseClassification")
        @ApiMember(Name="RecordCanUseClassification", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> CanUseClassification = null;

        @DataMember(Name="RecordCheckedOutOn")
        @SerializedName("RecordCheckedOutOn")
        @ApiMember(Name="RecordCheckedOutOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime CheckedOutOn = null;

        @DataMember(Name="RecordCheckedOutPath")
        @SerializedName("RecordCheckedOutPath")
        @ApiMember(Name="RecordCheckedOutPath", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CheckedOutPath = null;

        @DataMember(Name="RecordClassOfRecord")
        @SerializedName("RecordClassOfRecord")
        @ApiMember(Name="RecordClassOfRecord", DataType="string", ParameterType="form")
        public TrimProperty<RecordClass> ClassOfRecord = null;

        @DataMember(Name="RecordClientName")
        @SerializedName("RecordClientName")
        @ApiMember(Name="RecordClientName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ClientName = null;

        @DataMember(Name="RecordClientNumber")
        @SerializedName("RecordClientNumber")
        @ApiMember(Name="RecordClientNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ClientNumber = null;

        @DataMember(Name="RecordConsignment")
        @SerializedName("RecordConsignment")
        @ApiMember(Name="RecordConsignment", DataType="string", ParameterType="form")
        public TrimStringProperty Consignment = null;

        @DataMember(Name="RecordContents")
        @SerializedName("RecordContents")
        @ApiMember(Name="RecordContents", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Contents = null;

        @DataMember(Name="RecordConversationId")
        @SerializedName("RecordConversationId")
        @ApiMember(Name="RecordConversationId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ConversationId = null;

        @DataMember(Name="RecordCSdeclassifyDetails")
        @SerializedName("RecordCSdeclassifyDetails")
        @ApiMember(Name="RecordCSdeclassifyDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CSdeclassifyDetails = null;

        @DataMember(Name="RecordCSdeclassifyOn")
        @SerializedName("RecordCSdeclassifyOn")
        @ApiMember(Name="RecordCSdeclassifyOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime CSdeclassifyOn = null;

        @DataMember(Name="RecordCSdowngradeDetails")
        @SerializedName("RecordCSdowngradeDetails")
        @ApiMember(Name="RecordCSdowngradeDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CSdowngradeDetails = null;

        @DataMember(Name="RecordCSdowngradeOn")
        @SerializedName("RecordCSdowngradeOn")
        @ApiMember(Name="RecordCSdowngradeOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime CSdowngradeOn = null;

        @DataMember(Name="RecordCSguideEntries")
        @SerializedName("RecordCSguideEntries")
        @ApiMember(Name="RecordCSguideEntries", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CSguideEntries = null;

        @DataMember(Name="RecordCSinitialSecurity")
        @SerializedName("RecordCSinitialSecurity")
        @ApiMember(Name="RecordCSinitialSecurity", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CSinitialSecurity = null;

        @DataMember(Name="RecordCSlastReviewed")
        @SerializedName("RecordCSlastReviewed")
        @ApiMember(Name="RecordCSlastReviewed", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CSlastReviewed = null;

        @DataMember(Name="RecordCSlastUpdateDetails")
        @SerializedName("RecordCSlastUpdateDetails")
        @ApiMember(Name="RecordCSlastUpdateDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CSlastUpdateDetails = null;

        @DataMember(Name="RecordCSsecurityDetails")
        @SerializedName("RecordCSsecurityDetails")
        @ApiMember(Name="RecordCSsecurityDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CSsecurityDetails = null;

        @DataMember(Name="RecordCurrentAction")
        @SerializedName("RecordCurrentAction")
        @ApiMember(Name="RecordCurrentAction", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CurrentAction = null;

        @DataMember(Name="RecordDateAssigned")
        @SerializedName("RecordDateAssigned")
        @ApiMember(Name="RecordDateAssigned", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateAssigned = null;

        @DataMember(Name="RecordDateClosed")
        @SerializedName("RecordDateClosed")
        @ApiMember(Name="RecordDateClosed", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateClosed = null;

        @DataMember(Name="RecordDateCreated")
        @SerializedName("RecordDateCreated")
        @ApiMember(Name="RecordDateCreated", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="RecordDateDue")
        @SerializedName("RecordDateDue")
        @ApiMember(Name="RecordDateDue", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateDue = null;

        @DataMember(Name="RecordDateFinalized")
        @SerializedName("RecordDateFinalized")
        @ApiMember(Name="RecordDateFinalized", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateFinalized = null;

        @DataMember(Name="RecordDateImported")
        @SerializedName("RecordDateImported")
        @ApiMember(Name="RecordDateImported", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateImported = null;

        @DataMember(Name="RecordDateInactive")
        @SerializedName("RecordDateInactive")
        @ApiMember(Name="RecordDateInactive", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateInactive = null;

        @DataMember(Name="RecordDateModified")
        @SerializedName("RecordDateModified")
        @ApiMember(Name="RecordDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="RecordDatePublished")
        @SerializedName("RecordDatePublished")
        @ApiMember(Name="RecordDatePublished", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DatePublished = null;

        @DataMember(Name="RecordDateReceived")
        @SerializedName("RecordDateReceived")
        @ApiMember(Name="RecordDateReceived", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateReceived = null;

        @DataMember(Name="RecordDateRegistered")
        @SerializedName("RecordDateRegistered")
        @ApiMember(Name="RecordDateRegistered", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateRegistered = null;

        @DataMember(Name="RecordDateSuperseded")
        @SerializedName("RecordDateSuperseded")
        @ApiMember(Name="RecordDateSuperseded", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateSuperseded = null;

        @DataMember(Name="RecordDestructionDate")
        @SerializedName("RecordDestructionDate")
        @ApiMember(Name="RecordDestructionDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DestructionDate = null;

        @DataMember(Name="RecordDisposalDate")
        @SerializedName("RecordDisposalDate")
        @ApiMember(Name="RecordDisposalDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DisposalDate = null;

        @DataMember(Name="RecordDisposalMethod")
        @SerializedName("RecordDisposalMethod")
        @ApiMember(Name="RecordDisposalMethod", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<DisposalType> DisposalMethod = null;

        @DataMember(Name="RecordDisposition")
        @SerializedName("RecordDisposition")
        @ApiMember(Name="RecordDisposition", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<RecordDisp> Disposition = null;

        @DataMember(Name="RecordDispositionChangedDate")
        @SerializedName("RecordDispositionChangedDate")
        @ApiMember(Name="RecordDispositionChangedDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DispositionChangedDate = null;

        @DataMember(Name="RecordDispositionSchedule")
        @SerializedName("RecordDispositionSchedule")
        @ApiMember(Name="RecordDispositionSchedule", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DispositionSchedule = null;

        @DataMember(Name="RecordDocumentAttachPending")
        @SerializedName("RecordDocumentAttachPending")
        @ApiMember(Name="RecordDocumentAttachPending", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DocumentAttachPending = null;

        @DataMember(Name="RecordDocumentDetails")
        @SerializedName("RecordDocumentDetails")
        @ApiMember(Name="RecordDocumentDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocumentDetails = null;

        @DataMember(Name="RecordDocumentLastAccessedDate")
        @SerializedName("RecordDocumentLastAccessedDate")
        @ApiMember(Name="RecordDocumentLastAccessedDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DocumentLastAccessedDate = null;

        @DataMember(Name="RecordDocumentSize")
        @SerializedName("RecordDocumentSize")
        @ApiMember(Name="RecordDocumentSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DocumentSize = null;

        @DataMember(Name="RecordDocumentStatus")
        @SerializedName("RecordDocumentStatus")
        @ApiMember(Name="RecordDocumentStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocumentStatus = null;

        @DataMember(Name="RecordDocumentType")
        @SerializedName("RecordDocumentType")
        @ApiMember(Name="RecordDocumentType", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocumentType = null;

        @DataMember(Name="RecordESource")
        @SerializedName("RecordESource")
        @ApiMember(Name="RecordESource", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ESource = null;

        @DataMember(Name="RecordEStoreId")
        @SerializedName("RecordEStoreId")
        @ApiMember(Name="RecordEStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty EStoreId = null;

        @DataMember(Name="RecordExtension")
        @SerializedName("RecordExtension")
        @ApiMember(Name="RecordExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="RecordExternalReference")
        @SerializedName("RecordExternalReference")
        @ApiMember(Name="RecordExternalReference", DataType="string", ParameterType="form")
        public TrimStringProperty ExternalReference = null;

        @DataMember(Name="RecordFilePath")
        @SerializedName("RecordFilePath")
        @ApiMember(Name="RecordFilePath", DataType="string", ParameterType="form")
        public TrimStringProperty FilePath = null;

        @DataMember(Name="RecordFinalizeOnSave")
        @SerializedName("RecordFinalizeOnSave")
        @ApiMember(Name="RecordFinalizeOnSave", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> FinalizeOnSave = null;

        @DataMember(Name="RecordForeignBarcode")
        @SerializedName("RecordForeignBarcode")
        @ApiMember(Name="RecordForeignBarcode", DataType="string", ParameterType="form")
        public TrimStringProperty ForeignBarcode = null;

        @DataMember(Name="RecordFullClassification")
        @SerializedName("RecordFullClassification")
        @ApiMember(Name="RecordFullClassification", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FullClassification = null;

        @DataMember(Name="RecordGeneratedTitle")
        @SerializedName("RecordGeneratedTitle")
        @ApiMember(Name="RecordGeneratedTitle", DataType="string", ParameterType="form")
        public TrimStringProperty GeneratedTitle = null;

        @DataMember(Name="RecordGpsLocation")
        @SerializedName("RecordGpsLocation")
        @ApiMember(Name="RecordGpsLocation", DataType="string", ParameterType="form")
        public TrimStringProperty GpsLocation = null;

        @DataMember(Name="RecordHasEmailAttachments")
        @SerializedName("RecordHasEmailAttachments")
        @ApiMember(Name="RecordHasEmailAttachments", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> HasEmailAttachments = null;

        @DataMember(Name="RecordHasHold")
        @SerializedName("RecordHasHold")
        @ApiMember(Name="RecordHasHold", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> HasHold = null;

        @DataMember(Name="RecordHasLinkedDocuments")
        @SerializedName("RecordHasLinkedDocuments")
        @ApiMember(Name="RecordHasLinkedDocuments", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> HasLinkedDocuments = null;

        @DataMember(Name="RecordHistory")
        @SerializedName("RecordHistory")
        @ApiMember(Name="RecordHistory", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty History = null;

        @DataMember(Name="RecordHomeLocationStatus")
        @SerializedName("RecordHomeLocationStatus")
        @ApiMember(Name="RecordHomeLocationStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<RecLocSubTypes> HomeLocationStatus = null;

        @DataMember(Name="RecordHomeSpaceNumber")
        @SerializedName("RecordHomeSpaceNumber")
        @ApiMember(Name="RecordHomeSpaceNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty HomeSpaceNumber = null;

        @DataMember(Name="RecordIdolMetadataXML")
        @SerializedName("RecordIdolMetadataXML")
        @ApiMember(Name="RecordIdolMetadataXML", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty IdolMetadataXML = null;

        @DataMember(Name="RecordIsCheckedOut")
        @SerializedName("RecordIsCheckedOut")
        @ApiMember(Name="RecordIsCheckedOut", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsCheckedOut = null;

        @DataMember(Name="RecordIsContainer")
        @SerializedName("RecordIsContainer")
        @ApiMember(Name="RecordIsContainer", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsContainer = null;

        @DataMember(Name="RecordIsElectronic")
        @SerializedName("RecordIsElectronic")
        @ApiMember(Name="RecordIsElectronic", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsElectronic = null;

        @DataMember(Name="RecordIsEnclosed")
        @SerializedName("RecordIsEnclosed")
        @ApiMember(Name="RecordIsEnclosed", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsEnclosed = null;

        @DataMember(Name="RecordIsInPartSeries")
        @SerializedName("RecordIsInPartSeries")
        @ApiMember(Name="RecordIsInPartSeries", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsInPartSeries = null;

        @DataMember(Name="RecordIsRootOfPartSeries")
        @SerializedName("RecordIsRootOfPartSeries")
        @ApiMember(Name="RecordIsRootOfPartSeries", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsRootOfPartSeries = null;

        @DataMember(Name="RecordIsSigned")
        @SerializedName("RecordIsSigned")
        @ApiMember(Name="RecordIsSigned", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsSigned = null;

        @DataMember(Name="RecordJurisdictions")
        @SerializedName("RecordJurisdictions")
        @ApiMember(Name="RecordJurisdictions", DataType="string", ParameterType="form")
        public TrimStringProperty Jurisdictions = null;

        @DataMember(Name="RecordKeywords")
        @SerializedName("RecordKeywords")
        @ApiMember(Name="RecordKeywords", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Keywords = null;

        @DataMember(Name="RecordLastActionDate")
        @SerializedName("RecordLastActionDate")
        @ApiMember(Name="RecordLastActionDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime LastActionDate = null;

        @DataMember(Name="RecordLongNumber")
        @SerializedName("RecordLongNumber")
        @ApiMember(Name="RecordLongNumber", DataType="string", ParameterType="form")
        public TrimStringProperty LongNumber = null;

        @DataMember(Name="RecordMakeInactiveDate")
        @SerializedName("RecordMakeInactiveDate")
        @ApiMember(Name="RecordMakeInactiveDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime MakeInactiveDate = null;

        @DataMember(Name="RecordManualDestructionDate")
        @SerializedName("RecordManualDestructionDate")
        @ApiMember(Name="RecordManualDestructionDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ManualDestructionDate = null;

        @DataMember(Name="RecordMatterName")
        @SerializedName("RecordMatterName")
        @ApiMember(Name="RecordMatterName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MatterName = null;

        @DataMember(Name="RecordMatterNumber")
        @SerializedName("RecordMatterNumber")
        @ApiMember(Name="RecordMatterNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MatterNumber = null;

        @DataMember(Name="RecordMediaType")
        @SerializedName("RecordMediaType")
        @ApiMember(Name="RecordMediaType", DataType="string", ParameterType="form")
        public TrimProperty<MediaTypes> MediaType = null;

        @DataMember(Name="RecordMessageId")
        @SerializedName("RecordMessageId")
        @ApiMember(Name="RecordMessageId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MessageId = null;

        @DataMember(Name="RecordMimeType")
        @SerializedName("RecordMimeType")
        @ApiMember(Name="RecordMimeType", DataType="string", ParameterType="form")
        public TrimStringProperty MimeType = null;

        @DataMember(Name="RecordMovementHistory")
        @SerializedName("RecordMovementHistory")
        @ApiMember(Name="RecordMovementHistory", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MovementHistory = null;

        @DataMember(Name="RecordMyAuthorizationComments")
        @SerializedName("RecordMyAuthorizationComments")
        @ApiMember(Name="RecordMyAuthorizationComments", DataType="string", ParameterType="form")
        public TrimStringProperty MyAuthorizationComments = null;

        @DataMember(Name="RecordMyAuthorizationComplete")
        @SerializedName("RecordMyAuthorizationComplete")
        @ApiMember(Name="RecordMyAuthorizationComplete", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MyAuthorizationComplete = null;

        @DataMember(Name="RecordMyReviewComments")
        @SerializedName("RecordMyReviewComments")
        @ApiMember(Name="RecordMyReviewComments", DataType="string", ParameterType="form")
        public TrimStringProperty MyReviewComments = null;

        @DataMember(Name="RecordMyReviewComplete")
        @SerializedName("RecordMyReviewComplete")
        @ApiMember(Name="RecordMyReviewComplete", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MyReviewComplete = null;

        @DataMember(Name="RecordNbrPages")
        @SerializedName("RecordNbrPages")
        @ApiMember(Name="RecordNbrPages", DataType="int", ParameterType="form")
        public TrimProperty<Integer> NbrPages = null;

        @DataMember(Name="RecordNeedsAuthorization")
        @SerializedName("RecordNeedsAuthorization")
        @ApiMember(Name="RecordNeedsAuthorization", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NeedsAuthorization = null;

        @DataMember(Name="RecordNeedsDataEntryForm")
        @SerializedName("RecordNeedsDataEntryForm")
        @ApiMember(Name="RecordNeedsDataEntryForm", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> NeedsDataEntryForm = null;

        @DataMember(Name="RecordNeedsReview")
        @SerializedName("RecordNeedsReview")
        @ApiMember(Name="RecordNeedsReview", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NeedsReview = null;

        @DataMember(Name="RecordNextTaskDue")
        @SerializedName("RecordNextTaskDue")
        @ApiMember(Name="RecordNextTaskDue", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty NextTaskDue = null;

        @DataMember(Name="RecordNotes")
        @SerializedName("RecordNotes")
        @ApiMember(Name="RecordNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="RecordNumber")
        @SerializedName("RecordNumber")
        @ApiMember(Name="RecordNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Number = null;

        @DataMember(Name="RecordOverdueActions")
        @SerializedName("RecordOverdueActions")
        @ApiMember(Name="RecordOverdueActions", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty OverdueActions = null;

        @DataMember(Name="RecordPreserveHierarchyOnDataEntry")
        @SerializedName("RecordPreserveHierarchyOnDataEntry")
        @ApiMember(Name="RecordPreserveHierarchyOnDataEntry", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PreserveHierarchyOnDataEntry = null;

        @DataMember(Name="RecordPriority")
        @SerializedName("RecordPriority")
        @ApiMember(Name="RecordPriority", DataType="string", ParameterType="form")
        public TrimStringProperty Priority = null;

        @DataMember(Name="RecordRedactedFrom")
        @SerializedName("RecordRedactedFrom")
        @ApiMember(Name="RecordRedactedFrom", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RedactedFrom = null;

        @DataMember(Name="RecordRedactionsOf")
        @SerializedName("RecordRedactionsOf")
        @ApiMember(Name="RecordRedactionsOf", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RedactionsOf = null;

        @DataMember(Name="RecordRelatedRecs")
        @SerializedName("RecordRelatedRecs")
        @ApiMember(Name="RecordRelatedRecs", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RelatedRecs = null;

        @DataMember(Name="RecordRenditionCount")
        @SerializedName("RecordRenditionCount")
        @ApiMember(Name="RecordRenditionCount", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> RenditionCount = null;

        @DataMember(Name="RecordRequests")
        @SerializedName("RecordRequests")
        @ApiMember(Name="RecordRequests", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Requests = null;

        @DataMember(Name="RecordReturnDueDateTime")
        @SerializedName("RecordReturnDueDateTime")
        @ApiMember(Name="RecordReturnDueDateTime", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime ReturnDueDateTime = null;

        @DataMember(Name="RecordReviewDate")
        @SerializedName("RecordReviewDate")
        @ApiMember(Name="RecordReviewDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ReviewDate = null;

        @DataMember(Name="RecordReviewDueDate")
        @SerializedName("RecordReviewDueDate")
        @ApiMember(Name="RecordReviewDueDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ReviewDueDate = null;

        @DataMember(Name="RecordReviewState")
        @SerializedName("RecordReviewState")
        @ApiMember(Name="RecordReviewState", DataType="string", ParameterType="form")
        public TrimProperty<DocumentReviewStates> ReviewState = null;

        @DataMember(Name="RecordReviewStateDate")
        @SerializedName("RecordReviewStateDate")
        @ApiMember(Name="RecordReviewStateDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime ReviewStateDate = null;

        @DataMember(Name="RecordRevisionCount")
        @SerializedName("RecordRevisionCount")
        @ApiMember(Name="RecordRevisionCount", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> RevisionCount = null;

        @DataMember(Name="RecordRevisionNumber")
        @SerializedName("RecordRevisionNumber")
        @ApiMember(Name="RecordRevisionNumber", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> RevisionNumber = null;

        @DataMember(Name="RecordSapArchiveDate")
        @SerializedName("RecordSapArchiveDate")
        @ApiMember(Name="RecordSapArchiveDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime SapArchiveDate = null;

        @DataMember(Name="RecordSapArchiveLinkVsn")
        @SerializedName("RecordSapArchiveLinkVsn")
        @ApiMember(Name="RecordSapArchiveLinkVsn", DataType="string", ParameterType="form")
        public TrimStringProperty SapArchiveLinkVsn = null;

        @DataMember(Name="RecordSapBusinessId")
        @SerializedName("RecordSapBusinessId")
        @ApiMember(Name="RecordSapBusinessId", DataType="string", ParameterType="form")
        public TrimStringProperty SapBusinessId = null;

        @DataMember(Name="RecordSapBusinessObject")
        @SerializedName("RecordSapBusinessObject")
        @ApiMember(Name="RecordSapBusinessObject", DataType="string", ParameterType="form")
        public TrimStringProperty SapBusinessObject = null;

        @DataMember(Name="RecordSapCreatorName")
        @SerializedName("RecordSapCreatorName")
        @ApiMember(Name="RecordSapCreatorName", DataType="string", ParameterType="form")
        public TrimStringProperty SapCreatorName = null;

        @DataMember(Name="RecordSapCustomerName")
        @SerializedName("RecordSapCustomerName")
        @ApiMember(Name="RecordSapCustomerName", DataType="string", ParameterType="form")
        public TrimStringProperty SapCustomerName = null;

        @DataMember(Name="RecordSapCustomerNumber")
        @SerializedName("RecordSapCustomerNumber")
        @ApiMember(Name="RecordSapCustomerNumber", DataType="string", ParameterType="form")
        public TrimStringProperty SapCustomerNumber = null;

        @DataMember(Name="RecordSapDocumentId")
        @SerializedName("RecordSapDocumentId")
        @ApiMember(Name="RecordSapDocumentId", DataType="string", ParameterType="form")
        public TrimStringProperty SapDocumentId = null;

        @DataMember(Name="RecordSapDocumentProtection")
        @SerializedName("RecordSapDocumentProtection")
        @ApiMember(Name="RecordSapDocumentProtection", DataType="string", ParameterType="form")
        public TrimStringProperty SapDocumentProtection = null;

        @DataMember(Name="RecordSapDocumentType")
        @SerializedName("RecordSapDocumentType")
        @ApiMember(Name="RecordSapDocumentType", DataType="string", ParameterType="form")
        public TrimStringProperty SapDocumentType = null;

        @DataMember(Name="RecordSapModifiedDate")
        @SerializedName("RecordSapModifiedDate")
        @ApiMember(Name="RecordSapModifiedDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime SapModifiedDate = null;

        @DataMember(Name="RecordSapReposId")
        @SerializedName("RecordSapReposId")
        @ApiMember(Name="RecordSapReposId", DataType="string", ParameterType="form")
        public TrimStringProperty SapReposId = null;

        @DataMember(Name="RecordScheduledDisposalDate")
        @SerializedName("RecordScheduledDisposalDate")
        @ApiMember(Name="RecordScheduledDisposalDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime ScheduledDisposalDate = null;

        @DataMember(Name="RecordScheduledDisposalMethod")
        @SerializedName("RecordScheduledDisposalMethod")
        @ApiMember(Name="RecordScheduledDisposalMethod", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<DisposalType> ScheduledDisposalMethod = null;

        @DataMember(Name="RecordScheduledDisposalStatus")
        @SerializedName("RecordScheduledDisposalStatus")
        @ApiMember(Name="RecordScheduledDisposalStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<DisposalScheduleStatus> ScheduledDisposalStatus = null;

        @DataMember(Name="RecordScheduledInactiveStatus")
        @SerializedName("RecordScheduledInactiveStatus")
        @ApiMember(Name="RecordScheduledInactiveStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<DisposalScheduleStatus> ScheduledInactiveStatus = null;

        @DataMember(Name="RecordSecurity")
        @SerializedName("RecordSecurity")
        @ApiMember(Name="RecordSecurity", DataType="string", ParameterType="form")
        public TrimStringProperty Security = null;

        @DataMember(Name="RecordSecurityLocks")
        @SerializedName("RecordSecurityLocks")
        @ApiMember(Name="RecordSecurityLocks", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty SecurityLocks = null;

        @DataMember(Name="RecordSpFarmGUID")
        @SerializedName("RecordSpFarmGUID")
        @ApiMember(Name="RecordSpFarmGUID", DataType="string", ParameterType="form")
        public TrimStringProperty SpFarmGUID = null;

        @DataMember(Name="RecordSpGUID")
        @SerializedName("RecordSpGUID")
        @ApiMember(Name="RecordSpGUID", DataType="string", ParameterType="form")
        public TrimStringProperty SpGUID = null;

        @DataMember(Name="RecordSpListItemCount")
        @SerializedName("RecordSpListItemCount")
        @ApiMember(Name="RecordSpListItemCount", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> SpListItemCount = null;

        @DataMember(Name="RecordSpListType")
        @SerializedName("RecordSpListType")
        @ApiMember(Name="RecordSpListType", DataType="string", ParameterType="form")
        public TrimStringProperty SpListType = null;

        @DataMember(Name="RecordSpSiteCollectionGUID")
        @SerializedName("RecordSpSiteCollectionGUID")
        @ApiMember(Name="RecordSpSiteCollectionGUID", DataType="string", ParameterType="form")
        public TrimStringProperty SpSiteCollectionGUID = null;

        @DataMember(Name="RecordSpType")
        @SerializedName("RecordSpType")
        @ApiMember(Name="RecordSpType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<SpElementType> SpType = null;

        @DataMember(Name="RecordSpURL")
        @SerializedName("RecordSpURL")
        @ApiMember(Name="RecordSpURL", DataType="string", ParameterType="form")
        public TrimStringProperty SpURL = null;

        @DataMember(Name="RecordSuggestedFileName")
        @SerializedName("RecordSuggestedFileName")
        @ApiMember(Name="RecordSuggestedFileName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty SuggestedFileName = null;

        @DataMember(Name="RecordTitle")
        @SerializedName("RecordTitle")
        @ApiMember(Name="RecordTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;

        @DataMember(Name="RecordTopLevelActions")
        @SerializedName("RecordTopLevelActions")
        @ApiMember(Name="RecordTopLevelActions", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty TopLevelActions = null;

        @DataMember(Name="RecordTypedTitle")
        @SerializedName("RecordTypedTitle")
        @ApiMember(Name="RecordTypedTitle", DataType="string", ParameterType="form")
        public TrimStringProperty TypedTitle = null;

        @DataMember(Name="RecordViewPaneId")
        @SerializedName("RecordViewPaneId")
        @ApiMember(Name="RecordViewPaneId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ViewPaneId = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public RecordRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public RecordRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Integer> getAccessionNumber() { return AccessionNumber; }
        public RecordRef setAccessionNumber(TrimProperty<Integer> value) { this.AccessionNumber = value; return this; }
        public TrimStringProperty getActions() { return Actions; }
        public RecordRef setActions(TrimStringProperty value) { this.Actions = value; return this; }
        public TrimStringProperty getAggregatedDisposal() { return AggregatedDisposal; }
        public RecordRef setAggregatedDisposal(TrimStringProperty value) { this.AggregatedDisposal = value; return this; }
        public TrimStringProperty getAllContacts() { return AllContacts; }
        public RecordRef setAllContacts(TrimStringProperty value) { this.AllContacts = value; return this; }
        public TrimStringProperty getAllHolds() { return AllHolds; }
        public RecordRef setAllHolds(TrimStringProperty value) { this.AllHolds = value; return this; }
        public TrimStringProperty getAllMeetings() { return AllMeetings; }
        public RecordRef setAllMeetings(TrimStringProperty value) { this.AllMeetings = value; return this; }
        public TrimStringProperty getAllParts() { return AllParts; }
        public RecordRef setAllParts(TrimStringProperty value) { this.AllParts = value; return this; }
        public TrimStringProperty getAllVersions() { return AllVersions; }
        public RecordRef setAllVersions(TrimStringProperty value) { this.AllVersions = value; return this; }
        public TrimProperty<Long> getAlternateContentsCount() { return AlternateContentsCount; }
        public RecordRef setAlternateContentsCount(TrimProperty<Long> value) { this.AlternateContentsCount = value; return this; }
        public TrimStringProperty getAlternativeContainers() { return AlternativeContainers; }
        public RecordRef setAlternativeContainers(TrimStringProperty value) { this.AlternativeContainers = value; return this; }
        public TrimStringProperty getAlternativeContents() { return AlternativeContents; }
        public RecordRef setAlternativeContents(TrimStringProperty value) { this.AlternativeContents = value; return this; }
        public TrimDateTime getArchivePermDate() { return ArchivePermDate; }
        public RecordRef setArchivePermDate(TrimDateTime value) { this.ArchivePermDate = value; return this; }
        public TrimDateTime getArchiveTransferDate() { return ArchiveTransferDate; }
        public RecordRef setArchiveTransferDate(TrimDateTime value) { this.ArchiveTransferDate = value; return this; }
        public TrimProperty<RecLocSubTypes> getAssigneeStatus() { return AssigneeStatus; }
        public RecordRef setAssigneeStatus(TrimProperty<RecLocSubTypes> value) { this.AssigneeStatus = value; return this; }
        public TrimStringProperty getAttachedKeywords() { return AttachedKeywords; }
        public RecordRef setAttachedKeywords(TrimStringProperty value) { this.AttachedKeywords = value; return this; }
        public TrimProperty<AuthorizationMethods> getAuthorizationMethod() { return AuthorizationMethod; }
        public RecordRef setAuthorizationMethod(TrimProperty<AuthorizationMethods> value) { this.AuthorizationMethod = value; return this; }
        public TrimProperty<Integer> getAutoClassificationConfidenceLevel() { return AutoClassificationConfidenceLevel; }
        public RecordRef setAutoClassificationConfidenceLevel(TrimProperty<Integer> value) { this.AutoClassificationConfidenceLevel = value; return this; }
        public TrimProperty<AutoRenditionStatus> getAutoRenderStatus() { return AutoRenderStatus; }
        public RecordRef setAutoRenderStatus(TrimProperty<AutoRenditionStatus> value) { this.AutoRenderStatus = value; return this; }
        public TrimProperty<Boolean> getAutoRenderToPDFOnSave() { return AutoRenderToPDFOnSave; }
        public RecordRef setAutoRenderToPDFOnSave(TrimProperty<Boolean> value) { this.AutoRenderToPDFOnSave = value; return this; }
        public TrimStringProperty getBarcode() { return Barcode; }
        public RecordRef setBarcode(TrimStringProperty value) { this.Barcode = value; return this; }
        public TrimProperty<Boolean> getBypassRecordTypeAccessControls() { return BypassRecordTypeAccessControls; }
        public RecordRef setBypassRecordTypeAccessControls(TrimProperty<Boolean> value) { this.BypassRecordTypeAccessControls = value; return this; }
        public TrimProperty<Boolean> getCanUseClassification() { return CanUseClassification; }
        public RecordRef setCanUseClassification(TrimProperty<Boolean> value) { this.CanUseClassification = value; return this; }
        public TrimDateTime getCheckedOutOn() { return CheckedOutOn; }
        public RecordRef setCheckedOutOn(TrimDateTime value) { this.CheckedOutOn = value; return this; }
        public TrimStringProperty getCheckedOutPath() { return CheckedOutPath; }
        public RecordRef setCheckedOutPath(TrimStringProperty value) { this.CheckedOutPath = value; return this; }
        public TrimProperty<RecordClass> getClassOfRecord() { return ClassOfRecord; }
        public RecordRef setClassOfRecord(TrimProperty<RecordClass> value) { this.ClassOfRecord = value; return this; }
        public TrimStringProperty getClientName() { return ClientName; }
        public RecordRef setClientName(TrimStringProperty value) { this.ClientName = value; return this; }
        public TrimStringProperty getClientNumber() { return ClientNumber; }
        public RecordRef setClientNumber(TrimStringProperty value) { this.ClientNumber = value; return this; }
        public TrimStringProperty getConsignment() { return Consignment; }
        public RecordRef setConsignment(TrimStringProperty value) { this.Consignment = value; return this; }
        public TrimStringProperty getContents() { return Contents; }
        public RecordRef setContents(TrimStringProperty value) { this.Contents = value; return this; }
        public TrimStringProperty getConversationId() { return ConversationId; }
        public RecordRef setConversationId(TrimStringProperty value) { this.ConversationId = value; return this; }
        public TrimStringProperty getCSdeclassifyDetails() { return CSdeclassifyDetails; }
        public RecordRef setCSdeclassifyDetails(TrimStringProperty value) { this.CSdeclassifyDetails = value; return this; }
        public TrimDateTime getCSdeclassifyOn() { return CSdeclassifyOn; }
        public RecordRef setCSdeclassifyOn(TrimDateTime value) { this.CSdeclassifyOn = value; return this; }
        public TrimStringProperty getCSdowngradeDetails() { return CSdowngradeDetails; }
        public RecordRef setCSdowngradeDetails(TrimStringProperty value) { this.CSdowngradeDetails = value; return this; }
        public TrimDateTime getCSdowngradeOn() { return CSdowngradeOn; }
        public RecordRef setCSdowngradeOn(TrimDateTime value) { this.CSdowngradeOn = value; return this; }
        public TrimStringProperty getCSguideEntries() { return CSguideEntries; }
        public RecordRef setCSguideEntries(TrimStringProperty value) { this.CSguideEntries = value; return this; }
        public TrimStringProperty getCSinitialSecurity() { return CSinitialSecurity; }
        public RecordRef setCSinitialSecurity(TrimStringProperty value) { this.CSinitialSecurity = value; return this; }
        public TrimStringProperty getCSlastReviewed() { return CSlastReviewed; }
        public RecordRef setCSlastReviewed(TrimStringProperty value) { this.CSlastReviewed = value; return this; }
        public TrimStringProperty getCSlastUpdateDetails() { return CSlastUpdateDetails; }
        public RecordRef setCSlastUpdateDetails(TrimStringProperty value) { this.CSlastUpdateDetails = value; return this; }
        public TrimStringProperty getCSsecurityDetails() { return CSsecurityDetails; }
        public RecordRef setCSsecurityDetails(TrimStringProperty value) { this.CSsecurityDetails = value; return this; }
        public TrimStringProperty getCurrentAction() { return CurrentAction; }
        public RecordRef setCurrentAction(TrimStringProperty value) { this.CurrentAction = value; return this; }
        public TrimDateTime getDateAssigned() { return DateAssigned; }
        public RecordRef setDateAssigned(TrimDateTime value) { this.DateAssigned = value; return this; }
        public TrimDateTime getDateClosed() { return DateClosed; }
        public RecordRef setDateClosed(TrimDateTime value) { this.DateClosed = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public RecordRef setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimDateTime getDateDue() { return DateDue; }
        public RecordRef setDateDue(TrimDateTime value) { this.DateDue = value; return this; }
        public TrimDateTime getDateFinalized() { return DateFinalized; }
        public RecordRef setDateFinalized(TrimDateTime value) { this.DateFinalized = value; return this; }
        public TrimDateTime getDateImported() { return DateImported; }
        public RecordRef setDateImported(TrimDateTime value) { this.DateImported = value; return this; }
        public TrimDateTime getDateInactive() { return DateInactive; }
        public RecordRef setDateInactive(TrimDateTime value) { this.DateInactive = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public RecordRef setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimDateTime getDatePublished() { return DatePublished; }
        public RecordRef setDatePublished(TrimDateTime value) { this.DatePublished = value; return this; }
        public TrimDateTime getDateReceived() { return DateReceived; }
        public RecordRef setDateReceived(TrimDateTime value) { this.DateReceived = value; return this; }
        public TrimDateTime getDateRegistered() { return DateRegistered; }
        public RecordRef setDateRegistered(TrimDateTime value) { this.DateRegistered = value; return this; }
        public TrimDateTime getDateSuperseded() { return DateSuperseded; }
        public RecordRef setDateSuperseded(TrimDateTime value) { this.DateSuperseded = value; return this; }
        public TrimDateTime getDestructionDate() { return DestructionDate; }
        public RecordRef setDestructionDate(TrimDateTime value) { this.DestructionDate = value; return this; }
        public TrimDateTime getDisposalDate() { return DisposalDate; }
        public RecordRef setDisposalDate(TrimDateTime value) { this.DisposalDate = value; return this; }
        public TrimProperty<DisposalType> getDisposalMethod() { return DisposalMethod; }
        public RecordRef setDisposalMethod(TrimProperty<DisposalType> value) { this.DisposalMethod = value; return this; }
        public TrimProperty<RecordDisp> getDisposition() { return Disposition; }
        public RecordRef setDisposition(TrimProperty<RecordDisp> value) { this.Disposition = value; return this; }
        public TrimDateTime getDispositionChangedDate() { return DispositionChangedDate; }
        public RecordRef setDispositionChangedDate(TrimDateTime value) { this.DispositionChangedDate = value; return this; }
        public TrimStringProperty getDispositionSchedule() { return DispositionSchedule; }
        public RecordRef setDispositionSchedule(TrimStringProperty value) { this.DispositionSchedule = value; return this; }
        public TrimProperty<Boolean> getDocumentAttachPending() { return DocumentAttachPending; }
        public RecordRef setDocumentAttachPending(TrimProperty<Boolean> value) { this.DocumentAttachPending = value; return this; }
        public TrimStringProperty getDocumentDetails() { return DocumentDetails; }
        public RecordRef setDocumentDetails(TrimStringProperty value) { this.DocumentDetails = value; return this; }
        public TrimDateTime getDocumentLastAccessedDate() { return DocumentLastAccessedDate; }
        public RecordRef setDocumentLastAccessedDate(TrimDateTime value) { this.DocumentLastAccessedDate = value; return this; }
        public TrimProperty<Long> getDocumentSize() { return DocumentSize; }
        public RecordRef setDocumentSize(TrimProperty<Long> value) { this.DocumentSize = value; return this; }
        public TrimStringProperty getDocumentStatus() { return DocumentStatus; }
        public RecordRef setDocumentStatus(TrimStringProperty value) { this.DocumentStatus = value; return this; }
        public TrimStringProperty getDocumentType() { return DocumentType; }
        public RecordRef setDocumentType(TrimStringProperty value) { this.DocumentType = value; return this; }
        public TrimStringProperty getESource() { return ESource; }
        public RecordRef setESource(TrimStringProperty value) { this.ESource = value; return this; }
        public TrimStringProperty getEStoreId() { return EStoreId; }
        public RecordRef setEStoreId(TrimStringProperty value) { this.EStoreId = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public RecordRef setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimStringProperty getExternalReference() { return ExternalReference; }
        public RecordRef setExternalReference(TrimStringProperty value) { this.ExternalReference = value; return this; }
        public TrimStringProperty getFilePath() { return FilePath; }
        public RecordRef setFilePath(TrimStringProperty value) { this.FilePath = value; return this; }
        public TrimProperty<Boolean> getFinalizeOnSave() { return FinalizeOnSave; }
        public RecordRef setFinalizeOnSave(TrimProperty<Boolean> value) { this.FinalizeOnSave = value; return this; }
        public TrimStringProperty getForeignBarcode() { return ForeignBarcode; }
        public RecordRef setForeignBarcode(TrimStringProperty value) { this.ForeignBarcode = value; return this; }
        public TrimStringProperty getFullClassification() { return FullClassification; }
        public RecordRef setFullClassification(TrimStringProperty value) { this.FullClassification = value; return this; }
        public TrimStringProperty getGeneratedTitle() { return GeneratedTitle; }
        public RecordRef setGeneratedTitle(TrimStringProperty value) { this.GeneratedTitle = value; return this; }
        public TrimStringProperty getGpsLocation() { return GpsLocation; }
        public RecordRef setGpsLocation(TrimStringProperty value) { this.GpsLocation = value; return this; }
        public TrimProperty<Boolean> getHasEmailAttachments() { return HasEmailAttachments; }
        public RecordRef setHasEmailAttachments(TrimProperty<Boolean> value) { this.HasEmailAttachments = value; return this; }
        public TrimProperty<Boolean> getHasHold() { return HasHold; }
        public RecordRef setHasHold(TrimProperty<Boolean> value) { this.HasHold = value; return this; }
        public TrimProperty<Boolean> getHasLinkedDocuments() { return HasLinkedDocuments; }
        public RecordRef setHasLinkedDocuments(TrimProperty<Boolean> value) { this.HasLinkedDocuments = value; return this; }
        public TrimStringProperty getHistory() { return History; }
        public RecordRef setHistory(TrimStringProperty value) { this.History = value; return this; }
        public TrimProperty<RecLocSubTypes> getHomeLocationStatus() { return HomeLocationStatus; }
        public RecordRef setHomeLocationStatus(TrimProperty<RecLocSubTypes> value) { this.HomeLocationStatus = value; return this; }
        public TrimStringProperty getHomeSpaceNumber() { return HomeSpaceNumber; }
        public RecordRef setHomeSpaceNumber(TrimStringProperty value) { this.HomeSpaceNumber = value; return this; }
        public TrimStringProperty getIdolMetadataXML() { return IdolMetadataXML; }
        public RecordRef setIdolMetadataXML(TrimStringProperty value) { this.IdolMetadataXML = value; return this; }
        public TrimProperty<Boolean> getIsCheckedOut() { return IsCheckedOut; }
        public RecordRef setIsCheckedOut(TrimProperty<Boolean> value) { this.IsCheckedOut = value; return this; }
        public TrimProperty<Boolean> getIsContainer() { return IsContainer; }
        public RecordRef setIsContainer(TrimProperty<Boolean> value) { this.IsContainer = value; return this; }
        public TrimProperty<Boolean> getIsElectronic() { return IsElectronic; }
        public RecordRef setIsElectronic(TrimProperty<Boolean> value) { this.IsElectronic = value; return this; }
        public TrimProperty<Boolean> getIsEnclosed() { return IsEnclosed; }
        public RecordRef setIsEnclosed(TrimProperty<Boolean> value) { this.IsEnclosed = value; return this; }
        public TrimProperty<Boolean> getIsInPartSeries() { return IsInPartSeries; }
        public RecordRef setIsInPartSeries(TrimProperty<Boolean> value) { this.IsInPartSeries = value; return this; }
        public TrimProperty<Boolean> getIsRootOfPartSeries() { return IsRootOfPartSeries; }
        public RecordRef setIsRootOfPartSeries(TrimProperty<Boolean> value) { this.IsRootOfPartSeries = value; return this; }
        public TrimProperty<Boolean> getIsSigned() { return IsSigned; }
        public RecordRef setIsSigned(TrimProperty<Boolean> value) { this.IsSigned = value; return this; }
        public TrimStringProperty getJurisdictions() { return Jurisdictions; }
        public RecordRef setJurisdictions(TrimStringProperty value) { this.Jurisdictions = value; return this; }
        public TrimStringProperty getKeywords() { return Keywords; }
        public RecordRef setKeywords(TrimStringProperty value) { this.Keywords = value; return this; }
        public TrimDateTime getLastActionDate() { return LastActionDate; }
        public RecordRef setLastActionDate(TrimDateTime value) { this.LastActionDate = value; return this; }
        public TrimStringProperty getLongNumber() { return LongNumber; }
        public RecordRef setLongNumber(TrimStringProperty value) { this.LongNumber = value; return this; }
        public TrimDateTime getMakeInactiveDate() { return MakeInactiveDate; }
        public RecordRef setMakeInactiveDate(TrimDateTime value) { this.MakeInactiveDate = value; return this; }
        public TrimDateTime getManualDestructionDate() { return ManualDestructionDate; }
        public RecordRef setManualDestructionDate(TrimDateTime value) { this.ManualDestructionDate = value; return this; }
        public TrimStringProperty getMatterName() { return MatterName; }
        public RecordRef setMatterName(TrimStringProperty value) { this.MatterName = value; return this; }
        public TrimStringProperty getMatterNumber() { return MatterNumber; }
        public RecordRef setMatterNumber(TrimStringProperty value) { this.MatterNumber = value; return this; }
        public TrimProperty<MediaTypes> getMediaType() { return MediaType; }
        public RecordRef setMediaType(TrimProperty<MediaTypes> value) { this.MediaType = value; return this; }
        public TrimStringProperty getMessageId() { return MessageId; }
        public RecordRef setMessageId(TrimStringProperty value) { this.MessageId = value; return this; }
        public TrimStringProperty getMimeType() { return MimeType; }
        public RecordRef setMimeType(TrimStringProperty value) { this.MimeType = value; return this; }
        public TrimStringProperty getMovementHistory() { return MovementHistory; }
        public RecordRef setMovementHistory(TrimStringProperty value) { this.MovementHistory = value; return this; }
        public TrimStringProperty getMyAuthorizationComments() { return MyAuthorizationComments; }
        public RecordRef setMyAuthorizationComments(TrimStringProperty value) { this.MyAuthorizationComments = value; return this; }
        public TrimProperty<Boolean> getMyAuthorizationComplete() { return MyAuthorizationComplete; }
        public RecordRef setMyAuthorizationComplete(TrimProperty<Boolean> value) { this.MyAuthorizationComplete = value; return this; }
        public TrimStringProperty getMyReviewComments() { return MyReviewComments; }
        public RecordRef setMyReviewComments(TrimStringProperty value) { this.MyReviewComments = value; return this; }
        public TrimProperty<Boolean> getMyReviewComplete() { return MyReviewComplete; }
        public RecordRef setMyReviewComplete(TrimProperty<Boolean> value) { this.MyReviewComplete = value; return this; }
        public TrimProperty<Integer> getNbrPages() { return NbrPages; }
        public RecordRef setNbrPages(TrimProperty<Integer> value) { this.NbrPages = value; return this; }
        public TrimProperty<Boolean> getNeedsAuthorization() { return NeedsAuthorization; }
        public RecordRef setNeedsAuthorization(TrimProperty<Boolean> value) { this.NeedsAuthorization = value; return this; }
        public TrimProperty<Boolean> getNeedsDataEntryForm() { return NeedsDataEntryForm; }
        public RecordRef setNeedsDataEntryForm(TrimProperty<Boolean> value) { this.NeedsDataEntryForm = value; return this; }
        public TrimProperty<Boolean> getNeedsReview() { return NeedsReview; }
        public RecordRef setNeedsReview(TrimProperty<Boolean> value) { this.NeedsReview = value; return this; }
        public TrimStringProperty getNextTaskDue() { return NextTaskDue; }
        public RecordRef setNextTaskDue(TrimStringProperty value) { this.NextTaskDue = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public RecordRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getNumber() { return Number; }
        public RecordRef setNumber(TrimStringProperty value) { this.Number = value; return this; }
        public TrimStringProperty getOverdueActions() { return OverdueActions; }
        public RecordRef setOverdueActions(TrimStringProperty value) { this.OverdueActions = value; return this; }
        public TrimProperty<Boolean> getPreserveHierarchyOnDataEntry() { return PreserveHierarchyOnDataEntry; }
        public RecordRef setPreserveHierarchyOnDataEntry(TrimProperty<Boolean> value) { this.PreserveHierarchyOnDataEntry = value; return this; }
        public TrimStringProperty getPriority() { return Priority; }
        public RecordRef setPriority(TrimStringProperty value) { this.Priority = value; return this; }
        public TrimStringProperty getRedactedFrom() { return RedactedFrom; }
        public RecordRef setRedactedFrom(TrimStringProperty value) { this.RedactedFrom = value; return this; }
        public TrimStringProperty getRedactionsOf() { return RedactionsOf; }
        public RecordRef setRedactionsOf(TrimStringProperty value) { this.RedactionsOf = value; return this; }
        public TrimStringProperty getRelatedRecs() { return RelatedRecs; }
        public RecordRef setRelatedRecs(TrimStringProperty value) { this.RelatedRecs = value; return this; }
        public TrimProperty<Integer> getRenditionCount() { return RenditionCount; }
        public RecordRef setRenditionCount(TrimProperty<Integer> value) { this.RenditionCount = value; return this; }
        public TrimStringProperty getRequests() { return Requests; }
        public RecordRef setRequests(TrimStringProperty value) { this.Requests = value; return this; }
        public TrimDateTime getReturnDueDateTime() { return ReturnDueDateTime; }
        public RecordRef setReturnDueDateTime(TrimDateTime value) { this.ReturnDueDateTime = value; return this; }
        public TrimDateTime getReviewDate() { return ReviewDate; }
        public RecordRef setReviewDate(TrimDateTime value) { this.ReviewDate = value; return this; }
        public TrimDateTime getReviewDueDate() { return ReviewDueDate; }
        public RecordRef setReviewDueDate(TrimDateTime value) { this.ReviewDueDate = value; return this; }
        public TrimProperty<DocumentReviewStates> getReviewState() { return ReviewState; }
        public RecordRef setReviewState(TrimProperty<DocumentReviewStates> value) { this.ReviewState = value; return this; }
        public TrimDateTime getReviewStateDate() { return ReviewStateDate; }
        public RecordRef setReviewStateDate(TrimDateTime value) { this.ReviewStateDate = value; return this; }
        public TrimProperty<Integer> getRevisionCount() { return RevisionCount; }
        public RecordRef setRevisionCount(TrimProperty<Integer> value) { this.RevisionCount = value; return this; }
        public TrimProperty<Integer> getRevisionNumber() { return RevisionNumber; }
        public RecordRef setRevisionNumber(TrimProperty<Integer> value) { this.RevisionNumber = value; return this; }
        public TrimDateTime getSapArchiveDate() { return SapArchiveDate; }
        public RecordRef setSapArchiveDate(TrimDateTime value) { this.SapArchiveDate = value; return this; }
        public TrimStringProperty getSapArchiveLinkVsn() { return SapArchiveLinkVsn; }
        public RecordRef setSapArchiveLinkVsn(TrimStringProperty value) { this.SapArchiveLinkVsn = value; return this; }
        public TrimStringProperty getSapBusinessId() { return SapBusinessId; }
        public RecordRef setSapBusinessId(TrimStringProperty value) { this.SapBusinessId = value; return this; }
        public TrimStringProperty getSapBusinessObject() { return SapBusinessObject; }
        public RecordRef setSapBusinessObject(TrimStringProperty value) { this.SapBusinessObject = value; return this; }
        public TrimStringProperty getSapCreatorName() { return SapCreatorName; }
        public RecordRef setSapCreatorName(TrimStringProperty value) { this.SapCreatorName = value; return this; }
        public TrimStringProperty getSapCustomerName() { return SapCustomerName; }
        public RecordRef setSapCustomerName(TrimStringProperty value) { this.SapCustomerName = value; return this; }
        public TrimStringProperty getSapCustomerNumber() { return SapCustomerNumber; }
        public RecordRef setSapCustomerNumber(TrimStringProperty value) { this.SapCustomerNumber = value; return this; }
        public TrimStringProperty getSapDocumentId() { return SapDocumentId; }
        public RecordRef setSapDocumentId(TrimStringProperty value) { this.SapDocumentId = value; return this; }
        public TrimStringProperty getSapDocumentProtection() { return SapDocumentProtection; }
        public RecordRef setSapDocumentProtection(TrimStringProperty value) { this.SapDocumentProtection = value; return this; }
        public TrimStringProperty getSapDocumentType() { return SapDocumentType; }
        public RecordRef setSapDocumentType(TrimStringProperty value) { this.SapDocumentType = value; return this; }
        public TrimDateTime getSapModifiedDate() { return SapModifiedDate; }
        public RecordRef setSapModifiedDate(TrimDateTime value) { this.SapModifiedDate = value; return this; }
        public TrimStringProperty getSapReposId() { return SapReposId; }
        public RecordRef setSapReposId(TrimStringProperty value) { this.SapReposId = value; return this; }
        public TrimDateTime getScheduledDisposalDate() { return ScheduledDisposalDate; }
        public RecordRef setScheduledDisposalDate(TrimDateTime value) { this.ScheduledDisposalDate = value; return this; }
        public TrimProperty<DisposalType> getScheduledDisposalMethod() { return ScheduledDisposalMethod; }
        public RecordRef setScheduledDisposalMethod(TrimProperty<DisposalType> value) { this.ScheduledDisposalMethod = value; return this; }
        public TrimProperty<DisposalScheduleStatus> getScheduledDisposalStatus() { return ScheduledDisposalStatus; }
        public RecordRef setScheduledDisposalStatus(TrimProperty<DisposalScheduleStatus> value) { this.ScheduledDisposalStatus = value; return this; }
        public TrimProperty<DisposalScheduleStatus> getScheduledInactiveStatus() { return ScheduledInactiveStatus; }
        public RecordRef setScheduledInactiveStatus(TrimProperty<DisposalScheduleStatus> value) { this.ScheduledInactiveStatus = value; return this; }
        public TrimStringProperty getSecurity() { return Security; }
        public RecordRef setSecurity(TrimStringProperty value) { this.Security = value; return this; }
        public TrimStringProperty getSecurityLocks() { return SecurityLocks; }
        public RecordRef setSecurityLocks(TrimStringProperty value) { this.SecurityLocks = value; return this; }
        public TrimStringProperty getSpFarmGUID() { return SpFarmGUID; }
        public RecordRef setSpFarmGUID(TrimStringProperty value) { this.SpFarmGUID = value; return this; }
        public TrimStringProperty getSpGUID() { return SpGUID; }
        public RecordRef setSpGUID(TrimStringProperty value) { this.SpGUID = value; return this; }
        public TrimProperty<Integer> getSpListItemCount() { return SpListItemCount; }
        public RecordRef setSpListItemCount(TrimProperty<Integer> value) { this.SpListItemCount = value; return this; }
        public TrimStringProperty getSpListType() { return SpListType; }
        public RecordRef setSpListType(TrimStringProperty value) { this.SpListType = value; return this; }
        public TrimStringProperty getSpSiteCollectionGUID() { return SpSiteCollectionGUID; }
        public RecordRef setSpSiteCollectionGUID(TrimStringProperty value) { this.SpSiteCollectionGUID = value; return this; }
        public TrimProperty<SpElementType> getSpType() { return SpType; }
        public RecordRef setSpType(TrimProperty<SpElementType> value) { this.SpType = value; return this; }
        public TrimStringProperty getSpURL() { return SpURL; }
        public RecordRef setSpURL(TrimStringProperty value) { this.SpURL = value; return this; }
        public TrimStringProperty getSuggestedFileName() { return SuggestedFileName; }
        public RecordRef setSuggestedFileName(TrimStringProperty value) { this.SuggestedFileName = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public RecordRef setTitle(TrimStringProperty value) { this.Title = value; return this; }
        public TrimStringProperty getTopLevelActions() { return TopLevelActions; }
        public RecordRef setTopLevelActions(TrimStringProperty value) { this.TopLevelActions = value; return this; }
        public TrimStringProperty getTypedTitle() { return TypedTitle; }
        public RecordRef setTypedTitle(TrimStringProperty value) { this.TypedTitle = value; return this; }
        public TrimStringProperty getViewPaneId() { return ViewPaneId; }
        public RecordRef setViewPaneId(TrimStringProperty value) { this.ViewPaneId = value; return this; }
    }

    @DataContract
    public static class RecordTypeRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="RecordTypeAccessControl")
        @SerializedName("RecordTypeAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="RecordTypeActiveFrom")
        @SerializedName("RecordTypeActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="RecordTypeActiveTo")
        @SerializedName("RecordTypeActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="RecordTypeActiveDescription")
        @SerializedName("RecordTypeActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="RecordTypeIsActive")
        @SerializedName("RecordTypeIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="RecordTypeAcknowledgeRequests")
        @SerializedName("RecordTypeAcknowledgeRequests")
        @ApiMember(Name="RecordTypeAcknowledgeRequests", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AcknowledgeRequests = null;

        @DataMember(Name="RecordTypeAllowBlankFreeTextTitle")
        @SerializedName("RecordTypeAllowBlankFreeTextTitle")
        @ApiMember(Name="RecordTypeAllowBlankFreeTextTitle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowBlankFreeTextTitle = null;

        @DataMember(Name="RecordTypeAllowMultipleExtensions")
        @SerializedName("RecordTypeAllowMultipleExtensions")
        @ApiMember(Name="RecordTypeAllowMultipleExtensions", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowMultipleExtensions = null;

        @DataMember(Name="RecordTypeAllowParts")
        @SerializedName("RecordTypeAllowParts")
        @ApiMember(Name="RecordTypeAllowParts", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowParts = null;

        @DataMember(Name="RecordTypeAllowReplace")
        @SerializedName("RecordTypeAllowReplace")
        @ApiMember(Name="RecordTypeAllowReplace", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowReplace = null;

        @DataMember(Name="RecordTypeAllowVersions")
        @SerializedName("RecordTypeAllowVersions")
        @ApiMember(Name="RecordTypeAllowVersions", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowVersions = null;

        @DataMember(Name="RecordTypeAlwaysAuditSecurityBreaches")
        @SerializedName("RecordTypeAlwaysAuditSecurityBreaches")
        @ApiMember(Name="RecordTypeAlwaysAuditSecurityBreaches", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AlwaysAuditSecurityBreaches = null;

        @DataMember(Name="RecordTypeAnnotateOnly")
        @SerializedName("RecordTypeAnnotateOnly")
        @ApiMember(Name="RecordTypeAnnotateOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnnotateOnly = null;

        @DataMember(Name="RecordTypeAnnotateWhenReadOnly")
        @SerializedName("RecordTypeAnnotateWhenReadOnly")
        @ApiMember(Name="RecordTypeAnnotateWhenReadOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnnotateWhenReadOnly = null;

        @DataMember(Name="RecordTypeAuditCreateEventsOffline")
        @SerializedName("RecordTypeAuditCreateEventsOffline")
        @ApiMember(Name="RecordTypeAuditCreateEventsOffline", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AuditCreateEventsOffline = null;

        @DataMember(Name="RecordTypeAuditDeleteEventsOffline")
        @SerializedName("RecordTypeAuditDeleteEventsOffline")
        @ApiMember(Name="RecordTypeAuditDeleteEventsOffline", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AuditDeleteEventsOffline = null;

        @DataMember(Name="RecordTypeAuditModifyEventsOffline")
        @SerializedName("RecordTypeAuditModifyEventsOffline")
        @ApiMember(Name="RecordTypeAuditModifyEventsOffline", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AuditModifyEventsOffline = null;

        @DataMember(Name="RecordTypeAuthorizationMethod")
        @SerializedName("RecordTypeAuthorizationMethod")
        @ApiMember(Name="RecordTypeAuthorizationMethod", DataType="string", ParameterType="form")
        public TrimProperty<AuthorizationMethods> AuthorizationMethod = null;

        @DataMember(Name="RecordTypeAuthorizerReminderDays")
        @SerializedName("RecordTypeAuthorizerReminderDays")
        @ApiMember(Name="RecordTypeAuthorizerReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AuthorizerReminderDays = null;

        @DataMember(Name="RecordTypeBelongsToAMatter")
        @SerializedName("RecordTypeBelongsToAMatter")
        @ApiMember(Name="RecordTypeBelongsToAMatter", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> BelongsToAMatter = null;

        @DataMember(Name="RecordTypeBorrowingLimit")
        @SerializedName("RecordTypeBorrowingLimit")
        @ApiMember(Name="RecordTypeBorrowingLimit", DataType="int", ParameterType="form")
        public TrimProperty<Integer> BorrowingLimit = null;

        @DataMember(Name="RecordTypeCanHaveSharePointItems")
        @SerializedName("RecordTypeCanHaveSharePointItems")
        @ApiMember(Name="RecordTypeCanHaveSharePointItems", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanHaveSharePointItems = null;

        @DataMember(Name="RecordTypeChangeTitleWhenReadOnly")
        @SerializedName("RecordTypeChangeTitleWhenReadOnly")
        @ApiMember(Name="RecordTypeChangeTitleWhenReadOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ChangeTitleWhenReadOnly = null;

        @DataMember(Name="RecordTypeCheckDuplicateTitles")
        @SerializedName("RecordTypeCheckDuplicateTitles")
        @ApiMember(Name="RecordTypeCheckDuplicateTitles", DataType="string", ParameterType="form")
        public TrimProperty<GeneralExceptionHandling> CheckDuplicateTitles = null;

        @DataMember(Name="RecordTypeClassificationMandatory")
        @SerializedName("RecordTypeClassificationMandatory")
        @ApiMember(Name="RecordTypeClassificationMandatory", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ClassificationMandatory = null;

        @DataMember(Name="RecordTypeClassOfRecord")
        @SerializedName("RecordTypeClassOfRecord")
        @ApiMember(Name="RecordTypeClassOfRecord", DataType="string", ParameterType="form")
        public TrimProperty<RecordClass> ClassOfRecord = null;

        @DataMember(Name="RecordTypeCompressPartNumber")
        @SerializedName("RecordTypeCompressPartNumber")
        @ApiMember(Name="RecordTypeCompressPartNumber", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CompressPartNumber = null;

        @DataMember(Name="RecordTypeConfirmEachNumber")
        @SerializedName("RecordTypeConfirmEachNumber")
        @ApiMember(Name="RecordTypeConfirmEachNumber", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ConfirmEachNumber = null;

        @DataMember(Name="RecordTypeContainerRule")
        @SerializedName("RecordTypeContainerRule")
        @ApiMember(Name="RecordTypeContainerRule", DataType="string", ParameterType="form")
        public TrimProperty<ContainmentRule> ContainerRule = null;

        @DataMember(Name="RecordTypeContentsRule")
        @SerializedName("RecordTypeContentsRule")
        @ApiMember(Name="RecordTypeContentsRule", DataType="string", ParameterType="form")
        public TrimProperty<ContainmentRule> ContentsRule = null;

        @DataMember(Name="RecordTypeDaysDue")
        @SerializedName("RecordTypeDaysDue")
        @ApiMember(Name="RecordTypeDaysDue", DataType="int", ParameterType="form")
        public TrimProperty<Integer> DaysDue = null;

        @DataMember(Name="RecordTypeDisposition")
        @SerializedName("RecordTypeDisposition")
        @ApiMember(Name="RecordTypeDisposition", DataType="string", ParameterType="form")
        public TrimProperty<RecordDisp> Disposition = null;

        @DataMember(Name="RecordTypeEditorReminderDays")
        @SerializedName("RecordTypeEditorReminderDays")
        @ApiMember(Name="RecordTypeEditorReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> EditorReminderDays = null;

        @DataMember(Name="RecordTypeEndUsersCanModify")
        @SerializedName("RecordTypeEndUsersCanModify")
        @ApiMember(Name="RecordTypeEndUsersCanModify", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EndUsersCanModify = null;

        @DataMember(Name="RecordTypeEsoActionType")
        @SerializedName("RecordTypeEsoActionType")
        @ApiMember(Name="RecordTypeEsoActionType", DataType="string", ParameterType="form")
        public TrimProperty<EsoActionType> EsoActionType = null;

        @DataMember(Name="RecordTypeEsoAllowEvents")
        @SerializedName("RecordTypeEsoAllowEvents")
        @ApiMember(Name="RecordTypeEsoAllowEvents", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EsoAllowEvents = null;

        @DataMember(Name="RecordTypeEsoDateType")
        @SerializedName("RecordTypeEsoDateType")
        @ApiMember(Name="RecordTypeEsoDateType", DataType="string", ParameterType="form")
        public TrimProperty<EsoDateType> EsoDateType = null;

        @DataMember(Name="RecordTypeEsoEnable")
        @SerializedName("RecordTypeEsoEnable")
        @ApiMember(Name="RecordTypeEsoEnable", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EsoEnable = null;

        @DataMember(Name="RecordTypeEsoMonths")
        @SerializedName("RecordTypeEsoMonths")
        @ApiMember(Name="RecordTypeEsoMonths", DataType="int", ParameterType="form")
        public TrimProperty<Integer> EsoMonths = null;

        @DataMember(Name="RecordTypeEsoYears")
        @SerializedName("RecordTypeEsoYears")
        @ApiMember(Name="RecordTypeEsoYears", DataType="int", ParameterType="form")
        public TrimProperty<Integer> EsoYears = null;

        @DataMember(Name="RecordTypeExtensionLimit")
        @SerializedName("RecordTypeExtensionLimit")
        @ApiMember(Name="RecordTypeExtensionLimit", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ExtensionLimit = null;

        @DataMember(Name="RecordTypeExternalId")
        @SerializedName("RecordTypeExternalId")
        @ApiMember(Name="RecordTypeExternalId", DataType="string", ParameterType="form")
        public TrimStringProperty ExternalId = null;

        @DataMember(Name="RecordTypeFinalisePreviousVersion")
        @SerializedName("RecordTypeFinalisePreviousVersion")
        @ApiMember(Name="RecordTypeFinalisePreviousVersion", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> FinalisePreviousVersion = null;

        @DataMember(Name="RecordTypeFinalReminderDays")
        @SerializedName("RecordTypeFinalReminderDays")
        @ApiMember(Name="RecordTypeFinalReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> FinalReminderDays = null;

        @DataMember(Name="RecordTypeFollowupReminderDays")
        @SerializedName("RecordTypeFollowupReminderDays")
        @ApiMember(Name="RecordTypeFollowupReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> FollowupReminderDays = null;

        @DataMember(Name="RecordTypeHideFreeTextTitle")
        @SerializedName("RecordTypeHideFreeTextTitle")
        @ApiMember(Name="RecordTypeHideFreeTextTitle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HideFreeTextTitle = null;

        @DataMember(Name="RecordTypeHomeCanBeSpace")
        @SerializedName("RecordTypeHomeCanBeSpace")
        @ApiMember(Name="RecordTypeHomeCanBeSpace", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HomeCanBeSpace = null;

        @DataMember(Name="RecordTypeInsecureContainer")
        @SerializedName("RecordTypeInsecureContainer")
        @ApiMember(Name="RecordTypeInsecureContainer", DataType="string", ParameterType="form")
        public TrimProperty<ContainerSecurityHandling> InsecureContainer = null;

        @DataMember(Name="RecordTypeInsecureDocument")
        @SerializedName("RecordTypeInsecureDocument")
        @ApiMember(Name="RecordTypeInsecureDocument", DataType="string", ParameterType="form")
        public TrimProperty<DocumentSecurityHandling> InsecureDocument = null;

        @DataMember(Name="RecordTypeLastNumber")
        @SerializedName("RecordTypeLastNumber")
        @ApiMember(Name="RecordTypeLastNumber", DataType="string", ParameterType="form")
        public TrimStringProperty LastNumber = null;

        @DataMember(Name="RecordTypeLevel")
        @SerializedName("RecordTypeLevel")
        @ApiMember(Name="RecordTypeLevel", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Level = null;

        @DataMember(Name="RecordTypeMediaType")
        @SerializedName("RecordTypeMediaType")
        @ApiMember(Name="RecordTypeMediaType", DataType="string", ParameterType="form")
        public TrimProperty<MediaTypes> MediaType = null;

        @DataMember(Name="RecordTypeMoveWhenReadOnly")
        @SerializedName("RecordTypeMoveWhenReadOnly")
        @ApiMember(Name="RecordTypeMoveWhenReadOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MoveWhenReadOnly = null;

        @DataMember(Name="RecordTypeName")
        @SerializedName("RecordTypeName")
        @ApiMember(Name="RecordTypeName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="RecordTypeNeedsAuthorizationProcess")
        @SerializedName("RecordTypeNeedsAuthorizationProcess")
        @ApiMember(Name="RecordTypeNeedsAuthorizationProcess", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NeedsAuthorizationProcess = null;

        @DataMember(Name="RecordTypeNeedsClassification")
        @SerializedName("RecordTypeNeedsClassification")
        @ApiMember(Name="RecordTypeNeedsClassification", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> NeedsClassification = null;

        @DataMember(Name="RecordTypeNeedsReviewProcess")
        @SerializedName("RecordTypeNeedsReviewProcess")
        @ApiMember(Name="RecordTypeNeedsReviewProcess", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NeedsReviewProcess = null;

        @DataMember(Name="RecordTypeNotes")
        @SerializedName("RecordTypeNotes")
        @ApiMember(Name="RecordTypeNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="RecordTypeNotesInsertStyle")
        @SerializedName("RecordTypeNotesInsertStyle")
        @ApiMember(Name="RecordTypeNotesInsertStyle", DataType="string", ParameterType="form")
        public TrimProperty<NotesInsertStyles> NotesInsertStyle = null;

        @DataMember(Name="RecordTypeNumberingIsManual")
        @SerializedName("RecordTypeNumberingIsManual")
        @ApiMember(Name="RecordTypeNumberingIsManual", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> NumberingIsManual = null;

        @DataMember(Name="RecordTypeNumberMethod")
        @SerializedName("RecordTypeNumberMethod")
        @ApiMember(Name="RecordTypeNumberMethod", DataType="string", ParameterType="form")
        public TrimProperty<NumberingMethods> NumberMethod = null;

        @DataMember(Name="RecordTypeNumberPattern")
        @SerializedName("RecordTypeNumberPattern")
        @ApiMember(Name="RecordTypeNumberPattern", DataType="string", ParameterType="form")
        public TrimStringProperty NumberPattern = null;

        @DataMember(Name="RecordTypeOldVersionPurgeStyle")
        @SerializedName("RecordTypeOldVersionPurgeStyle")
        @ApiMember(Name="RecordTypeOldVersionPurgeStyle", DataType="string", ParameterType="form")
        public TrimProperty<OldVersionPurgeOptions> OldVersionPurgeStyle = null;

        @DataMember(Name="RecordTypePartSeparator")
        @SerializedName("RecordTypePartSeparator")
        @ApiMember(Name="RecordTypePartSeparator", DataType="string", ParameterType="form")
        public TrimStringProperty PartSeparator = null;

        @DataMember(Name="RecordTypePreventDispChangeIfNoSchedule")
        @SerializedName("RecordTypePreventDispChangeIfNoSchedule")
        @ApiMember(Name="RecordTypePreventDispChangeIfNoSchedule", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PreventDispChangeIfNoSchedule = null;

        @DataMember(Name="RecordTypePsoActionType")
        @SerializedName("RecordTypePsoActionType")
        @ApiMember(Name="RecordTypePsoActionType", DataType="string", ParameterType="form")
        public TrimProperty<PsoActionType> PsoActionType = null;

        @DataMember(Name="RecordTypePsoDateType")
        @SerializedName("RecordTypePsoDateType")
        @ApiMember(Name="RecordTypePsoDateType", DataType="string", ParameterType="form")
        public TrimProperty<PsoDateType> PsoDateType = null;

        @DataMember(Name="RecordTypePsoEnable")
        @SerializedName("RecordTypePsoEnable")
        @ApiMember(Name="RecordTypePsoEnable", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PsoEnable = null;

        @DataMember(Name="RecordTypePsoMonths")
        @SerializedName("RecordTypePsoMonths")
        @ApiMember(Name="RecordTypePsoMonths", DataType="int", ParameterType="form")
        public TrimProperty<Integer> PsoMonths = null;

        @DataMember(Name="RecordTypePsoYears")
        @SerializedName("RecordTypePsoYears")
        @ApiMember(Name="RecordTypePsoYears", DataType="int", ParameterType="form")
        public TrimProperty<Integer> PsoYears = null;

        @DataMember(Name="RecordTypePurgePreviousVersion")
        @SerializedName("RecordTypePurgePreviousVersion")
        @ApiMember(Name="RecordTypePurgePreviousVersion", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PurgePreviousVersion = null;

        @DataMember(Name="RecordTypeResetAtYearEnd")
        @SerializedName("RecordTypeResetAtYearEnd")
        @ApiMember(Name="RecordTypeResetAtYearEnd", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ResetAtYearEnd = null;

        @DataMember(Name="RecordTypeReviewerReminderDays")
        @SerializedName("RecordTypeReviewerReminderDays")
        @ApiMember(Name="RecordTypeReviewerReminderDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ReviewerReminderDays = null;

        @DataMember(Name="RecordTypeSapCreateContact")
        @SerializedName("RecordTypeSapCreateContact")
        @ApiMember(Name="RecordTypeSapCreateContact", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapCreateContact = null;

        @DataMember(Name="RecordTypeSapCreateContainers")
        @SerializedName("RecordTypeSapCreateContainers")
        @ApiMember(Name="RecordTypeSapCreateContainers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapCreateContainers = null;

        @DataMember(Name="RecordTypeSapCreateCountries")
        @SerializedName("RecordTypeSapCreateCountries")
        @ApiMember(Name="RecordTypeSapCreateCountries", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapCreateCountries = null;

        @DataMember(Name="RecordTypeSapCreateCreatorLoc")
        @SerializedName("RecordTypeSapCreateCreatorLoc")
        @ApiMember(Name="RecordTypeSapCreateCreatorLoc", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapCreateCreatorLoc = null;

        @DataMember(Name="RecordTypeSapForceDeleteDate")
        @SerializedName("RecordTypeSapForceDeleteDate")
        @ApiMember(Name="RecordTypeSapForceDeleteDate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapForceDeleteDate = null;

        @DataMember(Name="RecordTypeSapRepositoryId")
        @SerializedName("RecordTypeSapRepositoryId")
        @ApiMember(Name="RecordTypeSapRepositoryId", DataType="string", ParameterType="form")
        public TrimStringProperty SapRepositoryId = null;

        @DataMember(Name="RecordTypeSapTitleTemplate")
        @SerializedName("RecordTypeSapTitleTemplate")
        @ApiMember(Name="RecordTypeSapTitleTemplate", DataType="string", ParameterType="form")
        public TrimStringProperty SapTitleTemplate = null;

        @DataMember(Name="RecordTypeSapTitleTemplateKS")
        @SerializedName("RecordTypeSapTitleTemplateKS")
        @ApiMember(Name="RecordTypeSapTitleTemplateKS", DataType="string", ParameterType="form")
        public TrimStringProperty SapTitleTemplateKS = null;

        @DataMember(Name="RecordTypeSapUseCountryCode")
        @SerializedName("RecordTypeSapUseCountryCode")
        @ApiMember(Name="RecordTypeSapUseCountryCode", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapUseCountryCode = null;

        @DataMember(Name="RecordTypeSapUseDeleteDate")
        @SerializedName("RecordTypeSapUseDeleteDate")
        @ApiMember(Name="RecordTypeSapUseDeleteDate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SapUseDeleteDate = null;

        @DataMember(Name="RecordTypeSetDueDateFromActions")
        @SerializedName("RecordTypeSetDueDateFromActions")
        @ApiMember(Name="RecordTypeSetDueDateFromActions", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SetDueDateFromActions = null;

        @DataMember(Name="RecordTypeSortOrder")
        @SerializedName("RecordTypeSortOrder")
        @ApiMember(Name="RecordTypeSortOrder", DataType="string", ParameterType="form")
        public TrimStringProperty SortOrder = null;

        @DataMember(Name="RecordTypeStoreType")
        @SerializedName("RecordTypeStoreType")
        @ApiMember(Name="RecordTypeStoreType", DataType="string", ParameterType="form")
        public TrimProperty<UseStoreType> StoreType = null;

        @DataMember(Name="RecordTypeSuppressContentIndexing")
        @SerializedName("RecordTypeSuppressContentIndexing")
        @ApiMember(Name="RecordTypeSuppressContentIndexing", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SuppressContentIndexing = null;

        @DataMember(Name="RecordTypeTitlingMethod")
        @SerializedName("RecordTypeTitlingMethod")
        @ApiMember(Name="RecordTypeTitlingMethod", DataType="string", ParameterType="form")
        public TrimProperty<TitlingMethods> TitlingMethod = null;

        @DataMember(Name="RecordTypeTrimIconId")
        @SerializedName("RecordTypeTrimIconId")
        @ApiMember(Name="RecordTypeTrimIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> TrimIconId = null;

        @DataMember(Name="RecordTypeUseCensus")
        @SerializedName("RecordTypeUseCensus")
        @ApiMember(Name="RecordTypeUseCensus", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseCensus = null;

        @DataMember(Name="RecordTypeUsePartNumber")
        @SerializedName("RecordTypeUsePartNumber")
        @ApiMember(Name="RecordTypeUsePartNumber", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UsePartNumber = null;

        @DataMember(Name="RecordTypeUseRetention")
        @SerializedName("RecordTypeUseRetention")
        @ApiMember(Name="RecordTypeUseRetention", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseRetention = null;

        @DataMember(Name="RecordTypeUsualBehaviour")
        @SerializedName("RecordTypeUsualBehaviour")
        @ApiMember(Name="RecordTypeUsualBehaviour", DataType="string", ParameterType="form")
        public TrimProperty<RecordBehaviour> UsualBehaviour = null;

        @DataMember(Name="RecordTypeVersionNumbering")
        @SerializedName("RecordTypeVersionNumbering")
        @ApiMember(Name="RecordTypeVersionNumbering", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> VersionNumbering = null;

        @DataMember(Name="RecordTypeWithinSeries")
        @SerializedName("RecordTypeWithinSeries")
        @ApiMember(Name="RecordTypeWithinSeries", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> WithinSeries = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordTypeRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public RecordTypeRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public RecordTypeRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public RecordTypeRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public RecordTypeRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public RecordTypeRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public RecordTypeRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getAcknowledgeRequests() { return AcknowledgeRequests; }
        public RecordTypeRef setAcknowledgeRequests(TrimProperty<Boolean> value) { this.AcknowledgeRequests = value; return this; }
        public TrimProperty<Boolean> getAllowBlankFreeTextTitle() { return AllowBlankFreeTextTitle; }
        public RecordTypeRef setAllowBlankFreeTextTitle(TrimProperty<Boolean> value) { this.AllowBlankFreeTextTitle = value; return this; }
        public TrimProperty<Boolean> getAllowMultipleExtensions() { return AllowMultipleExtensions; }
        public RecordTypeRef setAllowMultipleExtensions(TrimProperty<Boolean> value) { this.AllowMultipleExtensions = value; return this; }
        public TrimProperty<Boolean> getAllowParts() { return AllowParts; }
        public RecordTypeRef setAllowParts(TrimProperty<Boolean> value) { this.AllowParts = value; return this; }
        public TrimProperty<Boolean> getAllowReplace() { return AllowReplace; }
        public RecordTypeRef setAllowReplace(TrimProperty<Boolean> value) { this.AllowReplace = value; return this; }
        public TrimProperty<Boolean> getAllowVersions() { return AllowVersions; }
        public RecordTypeRef setAllowVersions(TrimProperty<Boolean> value) { this.AllowVersions = value; return this; }
        public TrimProperty<Boolean> getAlwaysAuditSecurityBreaches() { return AlwaysAuditSecurityBreaches; }
        public RecordTypeRef setAlwaysAuditSecurityBreaches(TrimProperty<Boolean> value) { this.AlwaysAuditSecurityBreaches = value; return this; }
        public TrimProperty<Boolean> getAnnotateOnly() { return AnnotateOnly; }
        public RecordTypeRef setAnnotateOnly(TrimProperty<Boolean> value) { this.AnnotateOnly = value; return this; }
        public TrimProperty<Boolean> getAnnotateWhenReadOnly() { return AnnotateWhenReadOnly; }
        public RecordTypeRef setAnnotateWhenReadOnly(TrimProperty<Boolean> value) { this.AnnotateWhenReadOnly = value; return this; }
        public TrimProperty<Boolean> getAuditCreateEventsOffline() { return AuditCreateEventsOffline; }
        public RecordTypeRef setAuditCreateEventsOffline(TrimProperty<Boolean> value) { this.AuditCreateEventsOffline = value; return this; }
        public TrimProperty<Boolean> getAuditDeleteEventsOffline() { return AuditDeleteEventsOffline; }
        public RecordTypeRef setAuditDeleteEventsOffline(TrimProperty<Boolean> value) { this.AuditDeleteEventsOffline = value; return this; }
        public TrimProperty<Boolean> getAuditModifyEventsOffline() { return AuditModifyEventsOffline; }
        public RecordTypeRef setAuditModifyEventsOffline(TrimProperty<Boolean> value) { this.AuditModifyEventsOffline = value; return this; }
        public TrimProperty<AuthorizationMethods> getAuthorizationMethod() { return AuthorizationMethod; }
        public RecordTypeRef setAuthorizationMethod(TrimProperty<AuthorizationMethods> value) { this.AuthorizationMethod = value; return this; }
        public TrimProperty<Integer> getAuthorizerReminderDays() { return AuthorizerReminderDays; }
        public RecordTypeRef setAuthorizerReminderDays(TrimProperty<Integer> value) { this.AuthorizerReminderDays = value; return this; }
        public TrimProperty<Boolean> getBelongsToAMatter() { return BelongsToAMatter; }
        public RecordTypeRef setBelongsToAMatter(TrimProperty<Boolean> value) { this.BelongsToAMatter = value; return this; }
        public TrimProperty<Integer> getBorrowingLimit() { return BorrowingLimit; }
        public RecordTypeRef setBorrowingLimit(TrimProperty<Integer> value) { this.BorrowingLimit = value; return this; }
        public TrimProperty<Boolean> getCanHaveSharePointItems() { return CanHaveSharePointItems; }
        public RecordTypeRef setCanHaveSharePointItems(TrimProperty<Boolean> value) { this.CanHaveSharePointItems = value; return this; }
        public TrimProperty<Boolean> getChangeTitleWhenReadOnly() { return ChangeTitleWhenReadOnly; }
        public RecordTypeRef setChangeTitleWhenReadOnly(TrimProperty<Boolean> value) { this.ChangeTitleWhenReadOnly = value; return this; }
        public TrimProperty<GeneralExceptionHandling> getCheckDuplicateTitles() { return CheckDuplicateTitles; }
        public RecordTypeRef setCheckDuplicateTitles(TrimProperty<GeneralExceptionHandling> value) { this.CheckDuplicateTitles = value; return this; }
        public TrimProperty<Boolean> getClassificationMandatory() { return ClassificationMandatory; }
        public RecordTypeRef setClassificationMandatory(TrimProperty<Boolean> value) { this.ClassificationMandatory = value; return this; }
        public TrimProperty<RecordClass> getClassOfRecord() { return ClassOfRecord; }
        public RecordTypeRef setClassOfRecord(TrimProperty<RecordClass> value) { this.ClassOfRecord = value; return this; }
        public TrimProperty<Boolean> getCompressPartNumber() { return CompressPartNumber; }
        public RecordTypeRef setCompressPartNumber(TrimProperty<Boolean> value) { this.CompressPartNumber = value; return this; }
        public TrimProperty<Boolean> getConfirmEachNumber() { return ConfirmEachNumber; }
        public RecordTypeRef setConfirmEachNumber(TrimProperty<Boolean> value) { this.ConfirmEachNumber = value; return this; }
        public TrimProperty<ContainmentRule> getContainerRule() { return ContainerRule; }
        public RecordTypeRef setContainerRule(TrimProperty<ContainmentRule> value) { this.ContainerRule = value; return this; }
        public TrimProperty<ContainmentRule> getContentsRule() { return ContentsRule; }
        public RecordTypeRef setContentsRule(TrimProperty<ContainmentRule> value) { this.ContentsRule = value; return this; }
        public TrimProperty<Integer> getDaysDue() { return DaysDue; }
        public RecordTypeRef setDaysDue(TrimProperty<Integer> value) { this.DaysDue = value; return this; }
        public TrimProperty<RecordDisp> getDisposition() { return Disposition; }
        public RecordTypeRef setDisposition(TrimProperty<RecordDisp> value) { this.Disposition = value; return this; }
        public TrimProperty<Integer> getEditorReminderDays() { return EditorReminderDays; }
        public RecordTypeRef setEditorReminderDays(TrimProperty<Integer> value) { this.EditorReminderDays = value; return this; }
        public TrimProperty<Boolean> getEndUsersCanModify() { return EndUsersCanModify; }
        public RecordTypeRef setEndUsersCanModify(TrimProperty<Boolean> value) { this.EndUsersCanModify = value; return this; }
        public TrimProperty<EsoActionType> getEsoActionType() { return EsoActionType; }
        public RecordTypeRef setEsoActionType(TrimProperty<EsoActionType> value) { this.EsoActionType = value; return this; }
        public TrimProperty<Boolean> getEsoAllowEvents() { return EsoAllowEvents; }
        public RecordTypeRef setEsoAllowEvents(TrimProperty<Boolean> value) { this.EsoAllowEvents = value; return this; }
        public TrimProperty<EsoDateType> getEsoDateType() { return EsoDateType; }
        public RecordTypeRef setEsoDateType(TrimProperty<EsoDateType> value) { this.EsoDateType = value; return this; }
        public TrimProperty<Boolean> getEsoEnable() { return EsoEnable; }
        public RecordTypeRef setEsoEnable(TrimProperty<Boolean> value) { this.EsoEnable = value; return this; }
        public TrimProperty<Integer> getEsoMonths() { return EsoMonths; }
        public RecordTypeRef setEsoMonths(TrimProperty<Integer> value) { this.EsoMonths = value; return this; }
        public TrimProperty<Integer> getEsoYears() { return EsoYears; }
        public RecordTypeRef setEsoYears(TrimProperty<Integer> value) { this.EsoYears = value; return this; }
        public TrimProperty<Integer> getExtensionLimit() { return ExtensionLimit; }
        public RecordTypeRef setExtensionLimit(TrimProperty<Integer> value) { this.ExtensionLimit = value; return this; }
        public TrimStringProperty getExternalId() { return ExternalId; }
        public RecordTypeRef setExternalId(TrimStringProperty value) { this.ExternalId = value; return this; }
        public TrimProperty<Boolean> getFinalisePreviousVersion() { return FinalisePreviousVersion; }
        public RecordTypeRef setFinalisePreviousVersion(TrimProperty<Boolean> value) { this.FinalisePreviousVersion = value; return this; }
        public TrimProperty<Integer> getFinalReminderDays() { return FinalReminderDays; }
        public RecordTypeRef setFinalReminderDays(TrimProperty<Integer> value) { this.FinalReminderDays = value; return this; }
        public TrimProperty<Integer> getFollowupReminderDays() { return FollowupReminderDays; }
        public RecordTypeRef setFollowupReminderDays(TrimProperty<Integer> value) { this.FollowupReminderDays = value; return this; }
        public TrimProperty<Boolean> getHideFreeTextTitle() { return HideFreeTextTitle; }
        public RecordTypeRef setHideFreeTextTitle(TrimProperty<Boolean> value) { this.HideFreeTextTitle = value; return this; }
        public TrimProperty<Boolean> getHomeCanBeSpace() { return HomeCanBeSpace; }
        public RecordTypeRef setHomeCanBeSpace(TrimProperty<Boolean> value) { this.HomeCanBeSpace = value; return this; }
        public TrimProperty<ContainerSecurityHandling> getInsecureContainer() { return InsecureContainer; }
        public RecordTypeRef setInsecureContainer(TrimProperty<ContainerSecurityHandling> value) { this.InsecureContainer = value; return this; }
        public TrimProperty<DocumentSecurityHandling> getInsecureDocument() { return InsecureDocument; }
        public RecordTypeRef setInsecureDocument(TrimProperty<DocumentSecurityHandling> value) { this.InsecureDocument = value; return this; }
        public TrimStringProperty getLastNumber() { return LastNumber; }
        public RecordTypeRef setLastNumber(TrimStringProperty value) { this.LastNumber = value; return this; }
        public TrimProperty<Integer> getLevel() { return Level; }
        public RecordTypeRef setLevel(TrimProperty<Integer> value) { this.Level = value; return this; }
        public TrimProperty<MediaTypes> getMediaType() { return MediaType; }
        public RecordTypeRef setMediaType(TrimProperty<MediaTypes> value) { this.MediaType = value; return this; }
        public TrimProperty<Boolean> getMoveWhenReadOnly() { return MoveWhenReadOnly; }
        public RecordTypeRef setMoveWhenReadOnly(TrimProperty<Boolean> value) { this.MoveWhenReadOnly = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public RecordTypeRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<Boolean> getNeedsAuthorizationProcess() { return NeedsAuthorizationProcess; }
        public RecordTypeRef setNeedsAuthorizationProcess(TrimProperty<Boolean> value) { this.NeedsAuthorizationProcess = value; return this; }
        public TrimProperty<Boolean> getNeedsClassification() { return NeedsClassification; }
        public RecordTypeRef setNeedsClassification(TrimProperty<Boolean> value) { this.NeedsClassification = value; return this; }
        public TrimProperty<Boolean> getNeedsReviewProcess() { return NeedsReviewProcess; }
        public RecordTypeRef setNeedsReviewProcess(TrimProperty<Boolean> value) { this.NeedsReviewProcess = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public RecordTypeRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<NotesInsertStyles> getNotesInsertStyle() { return NotesInsertStyle; }
        public RecordTypeRef setNotesInsertStyle(TrimProperty<NotesInsertStyles> value) { this.NotesInsertStyle = value; return this; }
        public TrimProperty<Boolean> getNumberingIsManual() { return NumberingIsManual; }
        public RecordTypeRef setNumberingIsManual(TrimProperty<Boolean> value) { this.NumberingIsManual = value; return this; }
        public TrimProperty<NumberingMethods> getNumberMethod() { return NumberMethod; }
        public RecordTypeRef setNumberMethod(TrimProperty<NumberingMethods> value) { this.NumberMethod = value; return this; }
        public TrimStringProperty getNumberPattern() { return NumberPattern; }
        public RecordTypeRef setNumberPattern(TrimStringProperty value) { this.NumberPattern = value; return this; }
        public TrimProperty<OldVersionPurgeOptions> getOldVersionPurgeStyle() { return OldVersionPurgeStyle; }
        public RecordTypeRef setOldVersionPurgeStyle(TrimProperty<OldVersionPurgeOptions> value) { this.OldVersionPurgeStyle = value; return this; }
        public TrimStringProperty getPartSeparator() { return PartSeparator; }
        public RecordTypeRef setPartSeparator(TrimStringProperty value) { this.PartSeparator = value; return this; }
        public TrimProperty<Boolean> getPreventDispChangeIfNoSchedule() { return PreventDispChangeIfNoSchedule; }
        public RecordTypeRef setPreventDispChangeIfNoSchedule(TrimProperty<Boolean> value) { this.PreventDispChangeIfNoSchedule = value; return this; }
        public TrimProperty<PsoActionType> getPsoActionType() { return PsoActionType; }
        public RecordTypeRef setPsoActionType(TrimProperty<PsoActionType> value) { this.PsoActionType = value; return this; }
        public TrimProperty<PsoDateType> getPsoDateType() { return PsoDateType; }
        public RecordTypeRef setPsoDateType(TrimProperty<PsoDateType> value) { this.PsoDateType = value; return this; }
        public TrimProperty<Boolean> getPsoEnable() { return PsoEnable; }
        public RecordTypeRef setPsoEnable(TrimProperty<Boolean> value) { this.PsoEnable = value; return this; }
        public TrimProperty<Integer> getPsoMonths() { return PsoMonths; }
        public RecordTypeRef setPsoMonths(TrimProperty<Integer> value) { this.PsoMonths = value; return this; }
        public TrimProperty<Integer> getPsoYears() { return PsoYears; }
        public RecordTypeRef setPsoYears(TrimProperty<Integer> value) { this.PsoYears = value; return this; }
        public TrimProperty<Boolean> getPurgePreviousVersion() { return PurgePreviousVersion; }
        public RecordTypeRef setPurgePreviousVersion(TrimProperty<Boolean> value) { this.PurgePreviousVersion = value; return this; }
        public TrimProperty<Boolean> getResetAtYearEnd() { return ResetAtYearEnd; }
        public RecordTypeRef setResetAtYearEnd(TrimProperty<Boolean> value) { this.ResetAtYearEnd = value; return this; }
        public TrimProperty<Integer> getReviewerReminderDays() { return ReviewerReminderDays; }
        public RecordTypeRef setReviewerReminderDays(TrimProperty<Integer> value) { this.ReviewerReminderDays = value; return this; }
        public TrimProperty<Boolean> getSapCreateContact() { return SapCreateContact; }
        public RecordTypeRef setSapCreateContact(TrimProperty<Boolean> value) { this.SapCreateContact = value; return this; }
        public TrimProperty<Boolean> getSapCreateContainers() { return SapCreateContainers; }
        public RecordTypeRef setSapCreateContainers(TrimProperty<Boolean> value) { this.SapCreateContainers = value; return this; }
        public TrimProperty<Boolean> getSapCreateCountries() { return SapCreateCountries; }
        public RecordTypeRef setSapCreateCountries(TrimProperty<Boolean> value) { this.SapCreateCountries = value; return this; }
        public TrimProperty<Boolean> getSapCreateCreatorLoc() { return SapCreateCreatorLoc; }
        public RecordTypeRef setSapCreateCreatorLoc(TrimProperty<Boolean> value) { this.SapCreateCreatorLoc = value; return this; }
        public TrimProperty<Boolean> getSapForceDeleteDate() { return SapForceDeleteDate; }
        public RecordTypeRef setSapForceDeleteDate(TrimProperty<Boolean> value) { this.SapForceDeleteDate = value; return this; }
        public TrimStringProperty getSapRepositoryId() { return SapRepositoryId; }
        public RecordTypeRef setSapRepositoryId(TrimStringProperty value) { this.SapRepositoryId = value; return this; }
        public TrimStringProperty getSapTitleTemplate() { return SapTitleTemplate; }
        public RecordTypeRef setSapTitleTemplate(TrimStringProperty value) { this.SapTitleTemplate = value; return this; }
        public TrimStringProperty getSapTitleTemplateKS() { return SapTitleTemplateKS; }
        public RecordTypeRef setSapTitleTemplateKS(TrimStringProperty value) { this.SapTitleTemplateKS = value; return this; }
        public TrimProperty<Boolean> getSapUseCountryCode() { return SapUseCountryCode; }
        public RecordTypeRef setSapUseCountryCode(TrimProperty<Boolean> value) { this.SapUseCountryCode = value; return this; }
        public TrimProperty<Boolean> getSapUseDeleteDate() { return SapUseDeleteDate; }
        public RecordTypeRef setSapUseDeleteDate(TrimProperty<Boolean> value) { this.SapUseDeleteDate = value; return this; }
        public TrimProperty<Boolean> getSetDueDateFromActions() { return SetDueDateFromActions; }
        public RecordTypeRef setSetDueDateFromActions(TrimProperty<Boolean> value) { this.SetDueDateFromActions = value; return this; }
        public TrimStringProperty getSortOrder() { return SortOrder; }
        public RecordTypeRef setSortOrder(TrimStringProperty value) { this.SortOrder = value; return this; }
        public TrimProperty<UseStoreType> getStoreType() { return StoreType; }
        public RecordTypeRef setStoreType(TrimProperty<UseStoreType> value) { this.StoreType = value; return this; }
        public TrimProperty<Boolean> getSuppressContentIndexing() { return SuppressContentIndexing; }
        public RecordTypeRef setSuppressContentIndexing(TrimProperty<Boolean> value) { this.SuppressContentIndexing = value; return this; }
        public TrimProperty<TitlingMethods> getTitlingMethod() { return TitlingMethod; }
        public RecordTypeRef setTitlingMethod(TrimProperty<TitlingMethods> value) { this.TitlingMethod = value; return this; }
        public TrimProperty<Icons> getTrimIconId() { return TrimIconId; }
        public RecordTypeRef setTrimIconId(TrimProperty<Icons> value) { this.TrimIconId = value; return this; }
        public TrimProperty<Boolean> getUseCensus() { return UseCensus; }
        public RecordTypeRef setUseCensus(TrimProperty<Boolean> value) { this.UseCensus = value; return this; }
        public TrimProperty<Boolean> getUsePartNumber() { return UsePartNumber; }
        public RecordTypeRef setUsePartNumber(TrimProperty<Boolean> value) { this.UsePartNumber = value; return this; }
        public TrimProperty<Boolean> getUseRetention() { return UseRetention; }
        public RecordTypeRef setUseRetention(TrimProperty<Boolean> value) { this.UseRetention = value; return this; }
        public TrimProperty<RecordBehaviour> getUsualBehaviour() { return UsualBehaviour; }
        public RecordTypeRef setUsualBehaviour(TrimProperty<RecordBehaviour> value) { this.UsualBehaviour = value; return this; }
        public TrimProperty<Boolean> getVersionNumbering() { return VersionNumbering; }
        public RecordTypeRef setVersionNumbering(TrimProperty<Boolean> value) { this.VersionNumbering = value; return this; }
        public TrimProperty<Boolean> getWithinSeries() { return WithinSeries; }
        public RecordTypeRef setWithinSeries(TrimProperty<Boolean> value) { this.WithinSeries = value; return this; }
    }

    @DataContract
    public static class OriginHistoryRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="OriginHistoryDateRun")
        @SerializedName("OriginHistoryDateRun")
        @ApiMember(Name="OriginHistoryDateRun", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateRun = null;

        @DataMember(Name="OriginHistoryLocationsCreated")
        @SerializedName("OriginHistoryLocationsCreated")
        @ApiMember(Name="OriginHistoryLocationsCreated", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> LocationsCreated = null;

        @DataMember(Name="OriginHistoryLocationsInError")
        @SerializedName("OriginHistoryLocationsInError")
        @ApiMember(Name="OriginHistoryLocationsInError", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> LocationsInError = null;

        @DataMember(Name="OriginHistoryName")
        @SerializedName("OriginHistoryName")
        @ApiMember(Name="OriginHistoryName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Name = null;

        @DataMember(Name="OriginHistoryOriginLocationUsed")
        @SerializedName("OriginHistoryOriginLocationUsed")
        @ApiMember(Name="OriginHistoryOriginLocationUsed", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty OriginLocationUsed = null;

        @DataMember(Name="OriginHistoryRecordsCreated")
        @SerializedName("OriginHistoryRecordsCreated")
        @ApiMember(Name="OriginHistoryRecordsCreated", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsCreated = null;

        @DataMember(Name="OriginHistoryRecordsInError")
        @SerializedName("OriginHistoryRecordsInError")
        @ApiMember(Name="OriginHistoryRecordsInError", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsInError = null;

        @DataMember(Name="OriginHistoryRecordsUpdated")
        @SerializedName("OriginHistoryRecordsUpdated")
        @ApiMember(Name="OriginHistoryRecordsUpdated", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> RecordsUpdated = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public OriginHistoryRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getDateRun() { return DateRun; }
        public OriginHistoryRef setDateRun(TrimDateTime value) { this.DateRun = value; return this; }
        public TrimProperty<Long> getLocationsCreated() { return LocationsCreated; }
        public OriginHistoryRef setLocationsCreated(TrimProperty<Long> value) { this.LocationsCreated = value; return this; }
        public TrimProperty<Long> getLocationsInError() { return LocationsInError; }
        public OriginHistoryRef setLocationsInError(TrimProperty<Long> value) { this.LocationsInError = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public OriginHistoryRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getOriginLocationUsed() { return OriginLocationUsed; }
        public OriginHistoryRef setOriginLocationUsed(TrimStringProperty value) { this.OriginLocationUsed = value; return this; }
        public TrimProperty<Long> getRecordsCreated() { return RecordsCreated; }
        public OriginHistoryRef setRecordsCreated(TrimProperty<Long> value) { this.RecordsCreated = value; return this; }
        public TrimProperty<Long> getRecordsInError() { return RecordsInError; }
        public OriginHistoryRef setRecordsInError(TrimProperty<Long> value) { this.RecordsInError = value; return this; }
        public TrimProperty<Long> getRecordsUpdated() { return RecordsUpdated; }
        public OriginHistoryRef setRecordsUpdated(TrimProperty<Long> value) { this.RecordsUpdated = value; return this; }
    }

    public static enum UserOptionSetIds
    {
        Unknown(0),
        Locale(2),
        Startup(3),
        Spelling(4),
        Search(5),
        Viewer(6),
        Email(9),
        Reporter(10),
        DroppedFiles(11),
        DroppedFolders(12),
        SortAndFilter(15),
        TreeBox(16),
        ViewPane(17),
        EmailingRecords(18),
        Outlook(19),
        BlockedSearchMethods(20),
        Dropzone(21),
        ConsignmentLog(22),
        Ribbon(23),
        Appearance(24),
        WebClient(25),
        FileTypes(26),
        PolicyCentre(27),
        GisData(28);

        private final int value;
        UserOptionSetIds(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    @DataContract
    public static class IUserOptions extends PropertySet
    {
        @DataMember(Name="LoadFromGlobalSetting")
        @SerializedName("LoadFromGlobalSetting")
        @ApiMember(Name="LoadFromGlobalSetting", DataType="boolean", ParameterType="form")
        public Boolean LoadFromGlobalSetting = null;

        @DataMember(Name="SaveAsGlobalSetting")
        @SerializedName("SaveAsGlobalSetting")
        @ApiMember(Name="SaveAsGlobalSetting", DataType="boolean", ParameterType="form")
        public Boolean SaveAsGlobalSetting = null;
        
        public Boolean isLoadFromGlobalSetting() { return LoadFromGlobalSetting; }
        public IUserOptions setLoadFromGlobalSetting(Boolean value) { this.LoadFromGlobalSetting = value; return this; }
        public Boolean isSaveAsGlobalSetting() { return SaveAsGlobalSetting; }
        public IUserOptions setSaveAsGlobalSetting(Boolean value) { this.SaveAsGlobalSetting = value; return this; }
    }

    public static class TrimProperty<T> extends ITrimProperty
    {
        public T Value = null;
        
        public T getValue() { return Value; }
        public TrimProperty<T> setValue(T value) { this.Value = value; return this; }
    }

    public static enum DblClickContainerStyle
    {
        NavContents,
        Properties,
        UseSystemOption;
    }

    public static enum DblClickStyle
    {
        Edit,
        View,
        Properties,
        UseSystemOption;
    }

    public static class TrimStringProperty extends ITrimProperty
    {
        public String Value = null;
        
        public String getValue() { return Value; }
        public TrimStringProperty setValue(String value) { this.Value = value; return this; }
    }

    public static enum SkinStyle
    {
        Off,
        On,
        CustomColour;
    }

    public static enum FrameAppearance
    {
        Standard;
    }

    public static enum EmailUpdateStyles
    {
        NoAction,
        Delete,
        UpdateMail,
        NotApplicable;
    }

    @DataContract
    public static class SavedSearchRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="SavedSearchAccessControl")
        @SerializedName("SavedSearchAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="SavedSearchAnyWordContents")
        @SerializedName("SavedSearchAnyWordContents")
        @ApiMember(Name="SavedSearchAnyWordContents", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnyWordContents = null;

        @DataMember(Name="SavedSearchAnyWordNotes")
        @SerializedName("SavedSearchAnyWordNotes")
        @ApiMember(Name="SavedSearchAnyWordNotes", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnyWordNotes = null;

        @DataMember(Name="SavedSearchAnyWordTitle")
        @SerializedName("SavedSearchAnyWordTitle")
        @ApiMember(Name="SavedSearchAnyWordTitle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AnyWordTitle = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesAuthorisation")
        @SerializedName("SavedSearchAssigneeSearchIncludesAuthorisation")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesAuthorisation", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesAuthorisation = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesDelegates")
        @SerializedName("SavedSearchAssigneeSearchIncludesDelegates")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesDelegates", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesDelegates = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesEscalated")
        @SerializedName("SavedSearchAssigneeSearchIncludesEscalated")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesEscalated", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesEscalated = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesGroups")
        @SerializedName("SavedSearchAssigneeSearchIncludesGroups")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesGroups", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesGroups = null;

        @DataMember(Name="SavedSearchAssigneeSearchIncludesPosition")
        @SerializedName("SavedSearchAssigneeSearchIncludesPosition")
        @ApiMember(Name="SavedSearchAssigneeSearchIncludesPosition", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AssigneeSearchIncludesPosition = null;

        @DataMember(Name="SavedSearchCanEdit")
        @SerializedName("SavedSearchCanEdit")
        @ApiMember(Name="SavedSearchCanEdit", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanEdit = null;

        @DataMember(Name="SavedSearchCanExecute")
        @SerializedName("SavedSearchCanExecute")
        @ApiMember(Name="SavedSearchCanExecute", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CanExecute = null;

        @DataMember(Name="SavedSearchDefaultIncludesContent")
        @SerializedName("SavedSearchDefaultIncludesContent")
        @ApiMember(Name="SavedSearchDefaultIncludesContent", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultIncludesContent = null;

        @DataMember(Name="SavedSearchDefaultIncludesNotes")
        @SerializedName("SavedSearchDefaultIncludesNotes")
        @ApiMember(Name="SavedSearchDefaultIncludesNotes", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultIncludesNotes = null;

        @DataMember(Name="SavedSearchDefaultIncludesNumber")
        @SerializedName("SavedSearchDefaultIncludesNumber")
        @ApiMember(Name="SavedSearchDefaultIncludesNumber", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultIncludesNumber = null;

        @DataMember(Name="SavedSearchDefaultIncludesTitle")
        @SerializedName("SavedSearchDefaultIncludesTitle")
        @ApiMember(Name="SavedSearchDefaultIncludesTitle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultIncludesTitle = null;

        @DataMember(Name="SavedSearchDescription")
        @SerializedName("SavedSearchDescription")
        @ApiMember(Name="SavedSearchDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="SavedSearchExtendedIDOLOptimization")
        @SerializedName("SavedSearchExtendedIDOLOptimization")
        @ApiMember(Name="SavedSearchExtendedIDOLOptimization", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ExtendedIDOLOptimization = null;

        @DataMember(Name="SavedSearchFilterString")
        @SerializedName("SavedSearchFilterString")
        @ApiMember(Name="SavedSearchFilterString", DataType="string", ParameterType="form")
        public TrimStringProperty FilterString = null;

        @DataMember(Name="SavedSearchFullName")
        @SerializedName("SavedSearchFullName")
        @ApiMember(Name="SavedSearchFullName", DataType="string", ParameterType="form")
        public TrimStringProperty FullName = null;

        @DataMember(Name="SavedSearchIconId")
        @SerializedName("SavedSearchIconId")
        @ApiMember(Name="SavedSearchIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="SavedSearchIdolSearchStyle")
        @SerializedName("SavedSearchIdolSearchStyle")
        @ApiMember(Name="SavedSearchIdolSearchStyle", DataType="string", ParameterType="form")
        public TrimProperty<IdolSearchStyles> IdolSearchStyle = null;

        @DataMember(Name="SavedSearchIsGrouping")
        @SerializedName("SavedSearchIsGrouping")
        @ApiMember(Name="SavedSearchIsGrouping", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsGrouping = null;

        @DataMember(Name="SavedSearchIsOldFormat")
        @SerializedName("SavedSearchIsOldFormat")
        @ApiMember(Name="SavedSearchIsOldFormat", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsOldFormat = null;

        @DataMember(Name="SavedSearchIsPublic")
        @SerializedName("SavedSearchIsPublic")
        @ApiMember(Name="SavedSearchIsPublic", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsPublic = null;

        @DataMember(Name="SavedSearchName")
        @SerializedName("SavedSearchName")
        @ApiMember(Name="SavedSearchName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="SavedSearchObjectType")
        @SerializedName("SavedSearchObjectType")
        @ApiMember(Name="SavedSearchObjectType", DataType="string", ParameterType="form")
        public TrimProperty<BaseObjectTypes> ObjectType = null;

        @DataMember(Name="SavedSearchQueryString")
        @SerializedName("SavedSearchQueryString")
        @ApiMember(Name="SavedSearchQueryString", DataType="string", ParameterType="form")
        public TrimStringProperty QueryString = null;

        @DataMember(Name="SavedSearchSortString")
        @SerializedName("SavedSearchSortString")
        @ApiMember(Name="SavedSearchSortString", DataType="string", ParameterType="form")
        public TrimStringProperty SortString = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SavedSearchRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public SavedSearchRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public SavedSearchRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Boolean> getAnyWordContents() { return AnyWordContents; }
        public SavedSearchRef setAnyWordContents(TrimProperty<Boolean> value) { this.AnyWordContents = value; return this; }
        public TrimProperty<Boolean> getAnyWordNotes() { return AnyWordNotes; }
        public SavedSearchRef setAnyWordNotes(TrimProperty<Boolean> value) { this.AnyWordNotes = value; return this; }
        public TrimProperty<Boolean> getAnyWordTitle() { return AnyWordTitle; }
        public SavedSearchRef setAnyWordTitle(TrimProperty<Boolean> value) { this.AnyWordTitle = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesAuthorisation() { return AssigneeSearchIncludesAuthorisation; }
        public SavedSearchRef setAssigneeSearchIncludesAuthorisation(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesAuthorisation = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesDelegates() { return AssigneeSearchIncludesDelegates; }
        public SavedSearchRef setAssigneeSearchIncludesDelegates(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesDelegates = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesEscalated() { return AssigneeSearchIncludesEscalated; }
        public SavedSearchRef setAssigneeSearchIncludesEscalated(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesEscalated = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesGroups() { return AssigneeSearchIncludesGroups; }
        public SavedSearchRef setAssigneeSearchIncludesGroups(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesGroups = value; return this; }
        public TrimProperty<Boolean> getAssigneeSearchIncludesPosition() { return AssigneeSearchIncludesPosition; }
        public SavedSearchRef setAssigneeSearchIncludesPosition(TrimProperty<Boolean> value) { this.AssigneeSearchIncludesPosition = value; return this; }
        public TrimProperty<Boolean> getCanEdit() { return CanEdit; }
        public SavedSearchRef setCanEdit(TrimProperty<Boolean> value) { this.CanEdit = value; return this; }
        public TrimProperty<Boolean> getCanExecute() { return CanExecute; }
        public SavedSearchRef setCanExecute(TrimProperty<Boolean> value) { this.CanExecute = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesContent() { return DefaultIncludesContent; }
        public SavedSearchRef setDefaultIncludesContent(TrimProperty<Boolean> value) { this.DefaultIncludesContent = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesNotes() { return DefaultIncludesNotes; }
        public SavedSearchRef setDefaultIncludesNotes(TrimProperty<Boolean> value) { this.DefaultIncludesNotes = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesNumber() { return DefaultIncludesNumber; }
        public SavedSearchRef setDefaultIncludesNumber(TrimProperty<Boolean> value) { this.DefaultIncludesNumber = value; return this; }
        public TrimProperty<Boolean> getDefaultIncludesTitle() { return DefaultIncludesTitle; }
        public SavedSearchRef setDefaultIncludesTitle(TrimProperty<Boolean> value) { this.DefaultIncludesTitle = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public SavedSearchRef setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getExtendedIDOLOptimization() { return ExtendedIDOLOptimization; }
        public SavedSearchRef setExtendedIDOLOptimization(TrimProperty<Boolean> value) { this.ExtendedIDOLOptimization = value; return this; }
        public TrimStringProperty getFilterString() { return FilterString; }
        public SavedSearchRef setFilterString(TrimStringProperty value) { this.FilterString = value; return this; }
        public TrimStringProperty getFullName() { return FullName; }
        public SavedSearchRef setFullName(TrimStringProperty value) { this.FullName = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public SavedSearchRef setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimProperty<IdolSearchStyles> getIdolSearchStyle() { return IdolSearchStyle; }
        public SavedSearchRef setIdolSearchStyle(TrimProperty<IdolSearchStyles> value) { this.IdolSearchStyle = value; return this; }
        public TrimProperty<Boolean> getIsGrouping() { return IsGrouping; }
        public SavedSearchRef setIsGrouping(TrimProperty<Boolean> value) { this.IsGrouping = value; return this; }
        public TrimProperty<Boolean> getIsOldFormat() { return IsOldFormat; }
        public SavedSearchRef setIsOldFormat(TrimProperty<Boolean> value) { this.IsOldFormat = value; return this; }
        public TrimProperty<Boolean> getIsPublic() { return IsPublic; }
        public SavedSearchRef setIsPublic(TrimProperty<Boolean> value) { this.IsPublic = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public SavedSearchRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<BaseObjectTypes> getObjectType() { return ObjectType; }
        public SavedSearchRef setObjectType(TrimProperty<BaseObjectTypes> value) { this.ObjectType = value; return this; }
        public TrimStringProperty getQueryString() { return QueryString; }
        public SavedSearchRef setQueryString(TrimStringProperty value) { this.QueryString = value; return this; }
        public TrimStringProperty getSortString() { return SortString; }
        public SavedSearchRef setSortString(TrimStringProperty value) { this.SortString = value; return this; }
    }

    public static enum Language
    {
        Default,
        English,
        Dutch,
        French,
        EnglishUS,
        German,
        Spanish,
        Italian,
        PortugueseBz,
        Russian,
        Chinese,
        Vietnamese,
        Swedish;
    }

    public static enum DuplicateEmailOptions
    {
        CreateDuplicate,
        SetAlternateContainer,
        Cancel;
    }

    @DataContract
    public static class CheckinStyleRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="CheckinStyleAutoRender")
        @SerializedName("CheckinStyleAutoRender")
        @ApiMember(Name="CheckinStyleAutoRender", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoRender = null;

        @DataMember(Name="CheckinStyleDescription")
        @SerializedName("CheckinStyleDescription")
        @ApiMember(Name="CheckinStyleDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="CheckinStyleFinalizeOnSave")
        @SerializedName("CheckinStyleFinalizeOnSave")
        @ApiMember(Name="CheckinStyleFinalizeOnSave", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> FinalizeOnSave = null;

        @DataMember(Name="CheckinStyleGpsLocation")
        @SerializedName("CheckinStyleGpsLocation")
        @ApiMember(Name="CheckinStyleGpsLocation", DataType="string", ParameterType="form")
        public TrimStringProperty GpsLocation = null;

        @DataMember(Name="CheckinStyleIsMatterSubfolder")
        @SerializedName("CheckinStyleIsMatterSubfolder")
        @ApiMember(Name="CheckinStyleIsMatterSubfolder", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsMatterSubfolder = null;

        @DataMember(Name="CheckinStyleIsMatterTemplate")
        @SerializedName("CheckinStyleIsMatterTemplate")
        @ApiMember(Name="CheckinStyleIsMatterTemplate", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsMatterTemplate = null;

        @DataMember(Name="CheckinStyleMakePrivate")
        @SerializedName("CheckinStyleMakePrivate")
        @ApiMember(Name="CheckinStyleMakePrivate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MakePrivate = null;

        @DataMember(Name="CheckinStyleMoveToDeletedItems")
        @SerializedName("CheckinStyleMoveToDeletedItems")
        @ApiMember(Name="CheckinStyleMoveToDeletedItems", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MoveToDeletedItems = null;

        @DataMember(Name="CheckinStyleName")
        @SerializedName("CheckinStyleName")
        @ApiMember(Name="CheckinStyleName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="CheckinStyleRetainInClient")
        @SerializedName("CheckinStyleRetainInClient")
        @ApiMember(Name="CheckinStyleRetainInClient", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RetainInClient = null;

        @DataMember(Name="CheckinStyleSecurity")
        @SerializedName("CheckinStyleSecurity")
        @ApiMember(Name="CheckinStyleSecurity", DataType="string", ParameterType="form")
        public TrimStringProperty Security = null;

        @DataMember(Name="CheckinStyleShowDataEntryForm")
        @SerializedName("CheckinStyleShowDataEntryForm")
        @ApiMember(Name="CheckinStyleShowDataEntryForm", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ShowDataEntryForm = null;

        @DataMember(Name="CheckinStyleUseForServerDocCapture")
        @SerializedName("CheckinStyleUseForServerDocCapture")
        @ApiMember(Name="CheckinStyleUseForServerDocCapture", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseForServerDocCapture = null;

        @DataMember(Name="CheckinStyleUseForServerMailCapture")
        @SerializedName("CheckinStyleUseForServerMailCapture")
        @ApiMember(Name="CheckinStyleUseForServerMailCapture", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseForServerMailCapture = null;

        @DataMember(Name="CheckinStyleUseForServerMailFolderType")
        @SerializedName("CheckinStyleUseForServerMailFolderType")
        @ApiMember(Name="CheckinStyleUseForServerMailFolderType", DataType="string", ParameterType="form")
        public TrimProperty<MailFolderTypes> UseForServerMailFolderType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public CheckinStyleRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Boolean> getAutoRender() { return AutoRender; }
        public CheckinStyleRef setAutoRender(TrimProperty<Boolean> value) { this.AutoRender = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public CheckinStyleRef setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getFinalizeOnSave() { return FinalizeOnSave; }
        public CheckinStyleRef setFinalizeOnSave(TrimProperty<Boolean> value) { this.FinalizeOnSave = value; return this; }
        public TrimStringProperty getGpsLocation() { return GpsLocation; }
        public CheckinStyleRef setGpsLocation(TrimStringProperty value) { this.GpsLocation = value; return this; }
        public TrimProperty<Boolean> getIsMatterSubfolder() { return IsMatterSubfolder; }
        public CheckinStyleRef setIsMatterSubfolder(TrimProperty<Boolean> value) { this.IsMatterSubfolder = value; return this; }
        public TrimProperty<Boolean> getIsMatterTemplate() { return IsMatterTemplate; }
        public CheckinStyleRef setIsMatterTemplate(TrimProperty<Boolean> value) { this.IsMatterTemplate = value; return this; }
        public TrimProperty<Boolean> getMakePrivate() { return MakePrivate; }
        public CheckinStyleRef setMakePrivate(TrimProperty<Boolean> value) { this.MakePrivate = value; return this; }
        public TrimProperty<Boolean> getMoveToDeletedItems() { return MoveToDeletedItems; }
        public CheckinStyleRef setMoveToDeletedItems(TrimProperty<Boolean> value) { this.MoveToDeletedItems = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public CheckinStyleRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<Boolean> getRetainInClient() { return RetainInClient; }
        public CheckinStyleRef setRetainInClient(TrimProperty<Boolean> value) { this.RetainInClient = value; return this; }
        public TrimStringProperty getSecurity() { return Security; }
        public CheckinStyleRef setSecurity(TrimStringProperty value) { this.Security = value; return this; }
        public TrimProperty<Boolean> getShowDataEntryForm() { return ShowDataEntryForm; }
        public CheckinStyleRef setShowDataEntryForm(TrimProperty<Boolean> value) { this.ShowDataEntryForm = value; return this; }
        public TrimProperty<Boolean> getUseForServerDocCapture() { return UseForServerDocCapture; }
        public CheckinStyleRef setUseForServerDocCapture(TrimProperty<Boolean> value) { this.UseForServerDocCapture = value; return this; }
        public TrimProperty<Boolean> getUseForServerMailCapture() { return UseForServerMailCapture; }
        public CheckinStyleRef setUseForServerMailCapture(TrimProperty<Boolean> value) { this.UseForServerMailCapture = value; return this; }
        public TrimProperty<MailFolderTypes> getUseForServerMailFolderType() { return UseForServerMailFolderType; }
        public CheckinStyleRef setUseForServerMailFolderType(TrimProperty<MailFolderTypes> value) { this.UseForServerMailFolderType = value; return this; }
    }

    public static enum SearchEditor
    {
        String,
        Profile,
        Boolean;
    }

    public static enum IdolSearchStyles
    {
        ContentOnly,
        WordIndexes,
        AllIndexes;
    }

    public static enum GeographyDistanceUnit
    {
        Metres,
        Kilometres,
        Yard,
        Miles;
    }

    public static enum SearchStartPoint
    {
        Default,
        All,
        Favorites,
        Search;
    }

    public static enum DesktopStartStates
    {
        Default,
        Search,
        Offline,
        RecentDocs,
        ClassBrowser,
        FavRecords,
        Worktray,
        Containers,
        Due,
        In,
        DueOrIn,
        ForReferences,
        Templates,
        ContentBlocks;
    }

    public static enum StartupPaneType
    {
        Empty,
        NewItem,
        Find,
        InTray,
        DueTray,
        InDueTray,
        ActivityDue,
        WorkTray,
        FavoriteRecords,
        RecentContainers,
        RecentDocuments,
        FavoriteWorkflows,
        ClassificationBrowser,
        OfflineRecords,
        Requests,
        FavoriteClassifications,
        DocumentsCheckedOut,
        TodoItems,
        FavoriteSearches,
        FavoriteLocations,
        CheckinStyles,
        ClientMatterHierarchy;
    }

    public static enum DownloadType
    {
        Document,
        Html,
        Resource,
        HtmlArchive,
        Thumbnail;
    }

    public static class DisposalTypeDictionary extends HashMap<DisposalType,BooleanWithReason>
    {
        
    }

    public static class BooleanWithReason
    {
        public Boolean Value = null;
        public String Reason = null;
        
        public Boolean isValue() { return Value; }
        public BooleanWithReason setValue(Boolean value) { this.Value = value; return this; }
        public String getReason() { return Reason; }
        public BooleanWithReason setReason(String value) { this.Reason = value; return this; }
    }

    public static class TextPage
    {
        public String Text = null;
        public Long PageCount = null;
        public Boolean IsLastPage = null;
        
        public String getText() { return Text; }
        public TextPage setText(String value) { this.Text = value; return this; }
        public Long getPageCount() { return PageCount; }
        public TextPage setPageCount(Long value) { this.PageCount = value; return this; }
        public Boolean getIsLastPage() { return IsLastPage; }
        public TextPage setIsLastPage(Boolean value) { this.IsLastPage = value; return this; }
    }

    public static enum CommandIds
    {
        Properties(52001),
        Remove(52002),
        New(52003),
        Copy(52004),
        Jump(52005),
        Search(52006),
        Print(52007),
        Refresh(52008),
        Hyperlink(52010),
        MakeStopWord(52012),
        NewChild(52013),
        ThNewNarrowTerm(52014),
        ThNewUseForTerm(52015),
        ThRelate(52016),
        ThRelateNT(52017),
        ThRelateBT(52018),
        ThRelateRT(52019),
        ThRelateUS(52020),
        ThRelateUF(52021),
        RetentionSchedule(52022),
        FpDefScheduleObs(52023),
        CnsRecords(52024),
        RtyDefStore(52025),
        RtyDefAction(52026),
        RecDocPromote(52027),
        RecAddToCase(52028),
        Extract(52029),
        StzGenerate(52030),
        StzPrint(52031),
        ActUpAction(52035),
        DownAction(52036),
        RecRemoveFromCase(52037),
        NewTopLevel(52039),
        RecNewWorkflow(52040),
        Notes(52045),
        Security(52046),
        SecurityPolicy(52047),
        RecContainer(52048),
        RecCurrentLoc(52049),
        RecHomeLoc(52050),
        RecOwnerLoc(52051),
        RecAddContact(52052),
        RecRemoveContact(52053),
        RecNewPart(52055),
        ShowAuditEvents(52056),
        RecAddRequest(52058),
        RecRelate(52059),
        RecSeries(52060),
        RecPhrase(52062),
        RecId(52064),
        RecClassification(52065),
        RecNewVersion(52067),
        ExLinkPlaceholder(52068),
        RecAttachKeyword(52069),
        RecAttachAction(52071),
        RecBrowseActions(52072),
        RecCompleteCurrAct(52073),
        RecRetention(52074),
        RecDates(52075),
        RecRecordType(52076),
        RecGetDocument(52078),
        RecClass(52079),
        RecDocFinal(52080),
        RecDocDetails(52081),
        CheckoutToTD(52082),
        RecDocRevisions(52083),
        RecDocRemove(52084),
        RecCheckIn(52085),
        NavRelated(52087),
        NavLatestPart(52088),
        NavAllParts(52089),
        NavAllVersions(52090),
        NavContainer(52091),
        NavContents(52092),
        NavSameContact(52093),
        NavClient(52094),
        NavSeries(52095),
        NavSeriesContents(52096),
        View(52098),
        AddToFavorites(52099),
        SendMail(52100),
        WwwPublish(52101),
        PrintMerge(52102),
        ExportToXML(52103),
        NewLocEmail(52104),
        NewLocImage(52105),
        NewLocWebPage(52106),
        RecDocRenditions(52108),
        RecDocSignature(52109),
        ComposeMailMessage(52111),
        CnsComplete(52112),
        MakeReference(52114),
        MakeDefault(52115),
        InsertTerm(52117),
        TopNumbering(52118),
        ActChildStepAdd(52119),
        Download(52121),
        RemoveFromFavorites(52122),
        RemoveFromWorktray(52123),
        RemoveRecentDoc(52124),
        RemoveRecentFolder(52125),
        AddToWorktray(52126),
        AddRecentDoc(52127),
        AddRecentFolder(52128),
        NavLatestVersion(52129),
        SuperCopyToTD(52130),
        RecDropOnContainer(52131),
        DropFile(52133),
        ElinkNewRecord(52135),
        ElinkExistingRecord(52136),
        ElinkInternal(52137),
        ElinkExternal(52138),
        NavLinksTo(52139),
        NavLinkOf(52140),
        PrintDoc(52142),
        Count(52143),
        WorkflowLock(52144),
        WorkflowUnlock(52145),
        RecCopy(52148),
        EstMoveDoc(52149),
        EstIntegrity(52150),
        MakePrimary(52151),
        MergeKeywords(52152),
        Import(52153),
        Export(52154),
        GoBack(52155),
        GoForward(52156),
        SearchHistory(52157),
        Reindex(52160),
        RecReviewSchedule(52161),
        NewChildOrg(52162),
        NewChildPer(52163),
        NewChildPos(52164),
        NavAll(52165),
        NavFavorites(52166),
        ShowRecords(52167),
        LocAssigneeRecs(52168),
        LocClientRecs(52169),
        LocCreatorRecs(52170),
        LocContactRecs(52171),
        NewOrg(52172),
        NewPer(52173),
        NewPos(52174),
        NewGroup(52175),
        SaveSearchAs(52176),
        EstoreTransfer(52177),
        IntegrityCheck(52178),
        SpaceTransfer(52179),
        NewLowerSpaces(52180),
        SpmRecsInSpace(52181),
        SpmRecsInBay(52182),
        SpmRecsInSpaceRecursive(52183),
        SpmRecsInBayRecursive(52184),
        SpmRecsEitherRecursive(52185),
        NewReadOnly(52186),
        StartActivity(52187),
        CompleteActivity(52188),
        RemoveReadOnly(52189),
        SetActiveDates(52190),
        ReassignActivity(52191),
        RecShowWorkflow(52192),
        ShowActivities(52193),
        HoldProperties(52194),
        TriggerEvent(52195),
        ShowActions(52196),
        Move(52197),
        RecUpdateParts(52199),
        SpaceRecalculate(52200),
        SpaceCaptioning(52201),
        ProcessQueue(52202),
        GenerateStats(52203),
        ExportStats(52204),
        NavContainerExt(52205),
        NavContentsExt(52206),
        NavToRec(52207),
        DoTaskAction(52209),
        ShowTaskHistory(52210),
        NewRecord(52213),
        NavByClassification(52214),
        NavInTray(52215),
        NavMyContainers(52216),
        NavDueTray(52217),
        NavWorkTray(52218),
        NavInOrDueTray(52219),
        NavRecentDocs(52220),
        NavDocsCheckedOut(52221),
        NavByTopDrawer(52222),
        CopiedAccess(52223),
        RecDocAnnotate(52224),
        RecNewRedaction(52225),
        RecEditDocument(52226),
        NavFavoriteRecords(52227),
        LocCheckedOutRecs(52229),
        RecDropOnAltCont(52230),
        ViewInNewWindow(52231),
        NavRedactionsOf(52232),
        NavRedactedFrom(52233),
        DesignReport(52234),
        NewLocSignature(52235),
        ViewSignature(52236),
        NewCommittee(52237),
        NewProjectTeam(52238),
        NewChildCommittee(52239),
        NewChildProjectTeam(52240),
        NewChildGroup(52241),
        EditUserfields(52242),
        OpenWorkflow(52243),
        RecDocRemovePrevRev(52244),
        NavActivityDueTray(52245),
        CompareDocument(52246),
        ShowMeetings(52247),
        Suspend(52249),
        Resume(52250),
        NavToDerivations(52252),
        AssignPartRule(52253),
        NavCurrentVersion(52254),
        Preserve(52255),
        ShowLocations(52256),
        AddToUserLabel(52258),
        RemoveFromUserLabel(52259),
        NavUserLabel(52260),
        Preview(52261),
        RecNewCommunication(52262),
        ShowCommunications(52263),
        AuthorizeActivity(52264),
        AcquireActivity(52265),
        RelinquishActivity(52266),
        SuspendActivity(52267),
        ResumeActivity(52268),
        NewSender(52269),
        NewRecipient(52270),
        StreetAddress(52271),
        PostalAddress(52272),
        EmailAddress(52273),
        FaxAddress(52274),
        Filter(52275),
        NavRecord(52276),
        Open(52280),
        NewInactive(52281),
        NewArchive(52284),
        NewDestroy(52285),
        Approve(52287),
        ShowMinuteItems(52288),
        CompleteTodo(52289),
        Schedule(52290),
        NewAgendaItem(52291),
        NewMinuteItem(52292),
        NewStandingItem(52293),
        ShowStandingItems(52294),
        ShowAgendaItems(52295),
        NewVenue(52296),
        NewWorkgroup(52297),
        NewChildVenue(52298),
        NewChildWorkgroup(52299),
        RequestRendition(52300),
        ViewAgenda(52301),
        ViewMinutes(52302),
        NewSubAgendaItem(52303),
        RescheduleAgendaItem(52304),
        ShowClassifications(52306),
        ShowPendingItems(52307),
        NewPendingItem(52308),
        NewCarryForwardItem(52310),
        NavMine(52311),
        ShowOwnerClasses(52312),
        RecCheckOut(52313),
        RecSuperCopy(52314),
        ShowMeetingsAt(52315),
        UncompleteTodo(52316),
        AttachRecord(52317),
        AttachLocation(52318),
        AttachmentProperties(52319),
        ShowTodoItems(52320),
        OutlineNumber(52321),
        RemoveEmptyFolders(52322),
        NewWorkflowReference(52323),
        NewOutput(52324),
        NewReview(52325),
        NewReference(52326),
        AttachRecordLocal(52327),
        AttachRecordOffline(52328),
        AttachRecordExisting(52329),
        AttachRecordSuper(52330),
        DetachRecord(52331),
        LocOverdueActions(52332),
        SelectPlaceholder(52333),
        EmailAgenda(52334),
        EmailMinutes(52335),
        RollbackActivity(52336),
        RejectActivity(52337),
        UncompleteActivity(52338),
        Reschedule(52339),
        NewMotion(52340),
        NewAsciiImport(52341),
        NewFolderImport(52342),
        ShowHistory(52343),
        SpaceFindContiguous(52344),
        MaintainLabels(52345),
        OpenSavedSearch(52346),
        NewFileSystemStore(52350),
        NewExternalStore(52352),
        CopyToClipboard(52353),
        LocOwnerRecs(52354),
        LocHomeRecs(52355),
        NavMembers(52356),
        NewAuthority(52357),
        OpenReadOnly(52358),
        RecMakeInactive(52359),
        ShowDocuments(52360),
        ShowContacts(52361),
        AddJurisdiction(52362),
        RemoveJurisdiction(52363),
        ShowSchedules(52364),
        AddChild(52367),
        AddChildReadOnly(52368),
        CompleteAllActions(52369),
        RemoveAllActions(52370),
        ActionDuration(52371),
        RescheduleActions(52372),
        ActionLocDetails(52373),
        ActionSendMail(52374),
        SearchProperties(52375),
        RunQuery(52376),
        GenerateEvents(52377),
        NewLocOtherDocument(52379),
        NewWindowsQueue(52380),
        NewNotesQueue(52381),
        NewMapiQueue(52382),
        RecOtherFields(52383),
        HoldRecords(52384),
        ReleaseRecords(52385),
        NewControlPoint(52390),
        ShowContainers(52391),
        NavEmailConversation(52392),
        AuditEventDetails(52393),
        AddLocations(52394),
        RemoveLocations(52395),
        RemoveChild(52396),
        NewConnectorStore(52397),
        ClearDeleteRequests(52398),
        StorageTransfer(52399),
        RecShowRequests(52401),
        NewStorageProvider(52402),
        NewChildStorageProvider(52403),
        ShowRequestsBy(52404),
        ShowRequestsOf(52405),
        RecAddRetrieveTemporaryRequest(52406),
        RecAddRetrieveRecurrentRequest(52407),
        RecAddRetrievePermanentRequest(52408),
        RecAddPickupTemporaryRequest(52409),
        RecAddPickupPermanentRequest(52410),
        ApproveRequest(52411),
        RejectRequest(52412),
        CompleteRequest(52414),
        ConfirmPickup(52415),
        NewCenteraStore(52416),
        NavSharePointItems(52418),
        NavSharePointListItems(52419),
        Subscribe(52420),
        Unsubscribe(52421),
        AddSubscribers(52422),
        AddChildSubscribers(52423),
        ShowSharePointItemRecord(52424),
        ShowSharePointListRecord(52425),
        NewTransfer(52426),
        RecDispose(52427),
        RecUndispose(52428),
        RecMakeActive(52429),
        RecNewClient(52430),
        RecNewMatter(52431),
        RecNewMatterItem(52432),
        NavClientRecord(52433),
        NavMatterRecord(52434),
        Exclusions(52435),
        RecChangeClient(52436),
        RecChangeMatter(52437),
        ExamineConsignmentRecords(52438),
        SendApprovalEmails(52439),
        ApproveDisposal(52440),
        ApprovalStatus(52441),
        ConsignmentReport(52442),
        ExecuteDisposal(52443),
        NewDestroyCon(52445),
        NewTransferCon(52446),
        NewArchiveCon(52447),
        ShowIssues(52448),
        AddToMyCheckinStyles(52449),
        ApproveToConsign(52450),
        RejectConsign(52451),
        ShowConsignmentApprovers(52452),
        RemoveRecordFromConsignment(52453),
        SendReviewerEmails(52454),
        IgnoreWarningIssue(52455),
        EncloseRecord(52456),
        CompleteAction(52457),
        ReassignAction(52458),
        UncompleteAction(52459),
        ResolveIssuesAuto(52460),
        MoveRecordToHome(52461),
        RemoveRejectedRecFromCon(52462),
        AddSapBusinessObject(52463),
        ReassignApproval(52464),
        TransferAcknowledged(52465),
        SetReviewComplete(52466),
        CreateVEO(52467),
        RevertToPending(52468),
        ShowMyPendingApprovals(52469),
        AllConsignmentRecords(52470),
        SampleConsignmentRecords(52471),
        ShowPendingIssues(52472),
        Unapprove(52473),
        ManageItems(52474),
        ImportItems(52475),
        ChangeLocationType(52476),
        RecDisposalCheck(52477),
        NavAllRelated(52478),
        RecSyncMailDates(52479),
        NewICASStore(52480),
        NavMatters(52481),
        ShowPlaces(52482),
        RecContinueRedaction(52483),
        StartReview(52484),
        StartAuthorization(52485),
        ViewComments(52486),
        ReviewDocument(52487),
        AuthorizeDocument(52488),
        MaintainCheckinStyles(52489),
        FinalizeDocument(52490),
        RestartDocumentReview(52491),
        LocOtherFields(52492),
        NewEmailCapture(52493),
        ActionCost(52494),
        RecReassignCurrAct(52495),
        ReplaceReferences(52496);

        private final int value;
        CommandIds(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static class TrimSecurityProfile
    {
        public Boolean AlwaysHighest = null;
        public String AsEmailString = null;
        public String AsString = null;
        public SecurityLevelRef SecurityLevel = null;
        public ArrayList<SecurityCaveatRef> Caveats = null;
        public ArrayList<SecurityCaveatRef> CaveatsToAdd = null;
        public ArrayList<SecurityCaveatRef> CaveatsToRemove = null;
        
        public Boolean isAlwaysHighest() { return AlwaysHighest; }
        public TrimSecurityProfile setAlwaysHighest(Boolean value) { this.AlwaysHighest = value; return this; }
        public String getAsEmailString() { return AsEmailString; }
        public TrimSecurityProfile setAsEmailString(String value) { this.AsEmailString = value; return this; }
        public String getAsString() { return AsString; }
        public TrimSecurityProfile setAsString(String value) { this.AsString = value; return this; }
        public SecurityLevelRef getSecurityLevel() { return SecurityLevel; }
        public TrimSecurityProfile setSecurityLevel(SecurityLevelRef value) { this.SecurityLevel = value; return this; }
        public ArrayList<SecurityCaveatRef> getCaveats() { return Caveats; }
        public TrimSecurityProfile setCaveats(ArrayList<SecurityCaveatRef> value) { this.Caveats = value; return this; }
        public ArrayList<SecurityCaveatRef> getCaveatsToAdd() { return CaveatsToAdd; }
        public TrimSecurityProfile setCaveatsToAdd(ArrayList<SecurityCaveatRef> value) { this.CaveatsToAdd = value; return this; }
        public ArrayList<SecurityCaveatRef> getCaveatsToRemove() { return CaveatsToRemove; }
        public TrimSecurityProfile setCaveatsToRemove(ArrayList<SecurityCaveatRef> value) { this.CaveatsToRemove = value; return this; }
    }

    public static enum NewType
    {
        Default,
        Copy,
        Part,
        Version;
    }

    /**
    * Update a RecordClientMatterParty object.
    */
    @Route(Path="/RecordClientMatterParty", Verbs="POST")
    @Api("Update a RecordClientMatterParty object.")
    @DataContract
    public static class RecordClientMatterParty extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordClientMatterPartyInterest")
        @SerializedName("RecordClientMatterPartyInterest")
        @ApiMember(Name="RecordClientMatterPartyInterest", DataType="string", ParameterType="form")
        public TrimProperty<ClientMatterInterestTypes> Interest = null;

        @DataMember(Name="RecordClientMatterPartyParty")
        @SerializedName("RecordClientMatterPartyParty")
        @ApiMember(Name="RecordClientMatterPartyParty", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Party = null;

        @DataMember(Name="RecordClientMatterPartyPartyType")
        @SerializedName("RecordClientMatterPartyPartyType")
        @ApiMember(Name="RecordClientMatterPartyPartyType", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty PartyType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordClientMatterParty setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<ClientMatterInterestTypes> getInterest() { return Interest; }
        public RecordClientMatterParty setInterest(TrimProperty<ClientMatterInterestTypes> value) { this.Interest = value; return this; }
        public LocationRef getParty() { return Party; }
        public RecordClientMatterParty setParty(LocationRef value) { this.Party = value; return this; }
        public TrimStringProperty getPartyType() { return PartyType; }
        public RecordClientMatterParty setPartyType(TrimStringProperty value) { this.PartyType = value; return this; }
    }

    /**
    * Update a RecordClientMatterRole object.
    */
    @Route(Path="/RecordClientMatterRole", Verbs="POST")
    @Api("Update a RecordClientMatterRole object.")
    @DataContract
    public static class RecordClientMatterRole extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordClientMatterRoleRoleLocation")
        @SerializedName("RecordClientMatterRoleRoleLocation")
        @ApiMember(Name="RecordClientMatterRoleRoleLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef RoleLocation = null;

        @DataMember(Name="RecordClientMatterRoleRoleType")
        @SerializedName("RecordClientMatterRoleRoleType")
        @ApiMember(Name="RecordClientMatterRoleRoleType", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty RoleType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordClientMatterRole setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public LocationRef getRoleLocation() { return RoleLocation; }
        public RecordClientMatterRole setRoleLocation(LocationRef value) { this.RoleLocation = value; return this; }
        public TrimStringProperty getRoleType() { return RoleType; }
        public RecordClientMatterRole setRoleType(TrimStringProperty value) { this.RoleType = value; return this; }
    }

    /**
    * Update a RecordHold object.
    */
    @Route(Path="/RecordHold", Verbs="POST")
    @Api("Update a RecordHold object.")
    @DataContract
    public static class RecordHold extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordHoldCase")
        @SerializedName("RecordHoldCase")
        @ApiMember(Name="RecordHoldCase", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public HoldRef Case = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordHold setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public HoldRef getCase() { return Case; }
        public RecordHold setCase(HoldRef value) { this.Case = value; return this; }
    }

    /**
    * Update a RecordJurisdiction object.
    */
    @Route(Path="/RecordJurisdiction", Verbs="POST")
    @Api("Update a RecordJurisdiction object.")
    @DataContract
    public static class RecordJurisdiction extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordJurisdictionJurisdiction")
        @SerializedName("RecordJurisdictionJurisdiction")
        @ApiMember(Name="RecordJurisdictionJurisdiction", DataType="long", ParameterType="form", Verb="POST")
        public JurisdictionRef Jurisdiction = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordJurisdiction setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public JurisdictionRef getJurisdiction() { return Jurisdiction; }
        public RecordJurisdiction setJurisdiction(JurisdictionRef value) { this.Jurisdiction = value; return this; }
    }

    /**
    * Update a RecordKeyword object.
    */
    @Route(Path="/RecordKeyword", Verbs="POST")
    @Api("Update a RecordKeyword object.")
    @DataContract
    public static class RecordKeyword extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordKeywordAttachMethod")
        @SerializedName("RecordKeywordAttachMethod")
        @ApiMember(Name="RecordKeywordAttachMethod", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<KeywordAttachMethod> AttachMethod = null;

        @DataMember(Name="RecordKeywordDescription")
        @SerializedName("RecordKeywordDescription")
        @ApiMember(Name="RecordKeywordDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="RecordKeywordKeyword")
        @SerializedName("RecordKeywordKeyword")
        @ApiMember(Name="RecordKeywordKeyword", DataType="long", ParameterType="form", Verb="POST")
        public KeywordRef Keyword = null;

        @DataMember(Name="RecordKeywordPrompt")
        @SerializedName("RecordKeywordPrompt")
        @ApiMember(Name="RecordKeywordPrompt", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Prompt = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordKeyword setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<KeywordAttachMethod> getAttachMethod() { return AttachMethod; }
        public RecordKeyword setAttachMethod(TrimProperty<KeywordAttachMethod> value) { this.AttachMethod = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public RecordKeyword setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public KeywordRef getKeyword() { return Keyword; }
        public RecordKeyword setKeyword(KeywordRef value) { this.Keyword = value; return this; }
        public TrimStringProperty getPrompt() { return Prompt; }
        public RecordKeyword setPrompt(TrimStringProperty value) { this.Prompt = value; return this; }
    }

    /**
    * Update a RecordLinkedDocument object.
    */
    @Route(Path="/RecordLinkedDocument", Verbs="POST")
    @Api("Update a RecordLinkedDocument object.")
    @DataContract
    public static class RecordLinkedDocument extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordLinkedDocumentBytes")
        @SerializedName("RecordLinkedDocumentBytes")
        @ApiMember(Name="RecordLinkedDocumentBytes", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Bytes = null;

        @DataMember(Name="RecordLinkedDocumentDateModified")
        @SerializedName("RecordLinkedDocumentDateModified")
        @ApiMember(Name="RecordLinkedDocumentDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="RecordLinkedDocumentDocumentName")
        @SerializedName("RecordLinkedDocumentDocumentName")
        @ApiMember(Name="RecordLinkedDocumentDocumentName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocumentName = null;

        @DataMember(Name="RecordLinkedDocumentEStore")
        @SerializedName("RecordLinkedDocumentEStore")
        @ApiMember(Name="RecordLinkedDocumentEStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef EStore = null;

        @DataMember(Name="RecordLinkedDocumentEStoreId")
        @SerializedName("RecordLinkedDocumentEStoreId")
        @ApiMember(Name="RecordLinkedDocumentEStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty EStoreId = null;

        @DataMember(Name="RecordLinkedDocumentExtension")
        @SerializedName("RecordLinkedDocumentExtension")
        @ApiMember(Name="RecordLinkedDocumentExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="RecordLinkedDocumentLinkedRecord")
        @SerializedName("RecordLinkedDocumentLinkedRecord")
        @ApiMember(Name="RecordLinkedDocumentLinkedRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef LinkedRecord = null;

        @DataMember(Name="RecordLinkedDocumentLinkedRevision")
        @SerializedName("RecordLinkedDocumentLinkedRevision")
        @ApiMember(Name="RecordLinkedDocumentLinkedRevision", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> LinkedRevision = null;

        @DataMember(Name="RecordLinkedDocumentLinkType")
        @SerializedName("RecordLinkedDocumentLinkType")
        @ApiMember(Name="RecordLinkedDocumentLinkType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<DocumentLinkType> LinkType = null;

        @DataMember(Name="RecordLinkedDocumentStorageDescription")
        @SerializedName("RecordLinkedDocumentStorageDescription")
        @ApiMember(Name="RecordLinkedDocumentStorageDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty StorageDescription = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordLinkedDocument setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Long> getBytes() { return Bytes; }
        public RecordLinkedDocument setBytes(TrimProperty<Long> value) { this.Bytes = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public RecordLinkedDocument setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimStringProperty getDocumentName() { return DocumentName; }
        public RecordLinkedDocument setDocumentName(TrimStringProperty value) { this.DocumentName = value; return this; }
        public ElectronicStoreRef getEStore() { return EStore; }
        public RecordLinkedDocument setEStore(ElectronicStoreRef value) { this.EStore = value; return this; }
        public TrimStringProperty getEStoreId() { return EStoreId; }
        public RecordLinkedDocument setEStoreId(TrimStringProperty value) { this.EStoreId = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public RecordLinkedDocument setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public RecordRef getLinkedRecord() { return LinkedRecord; }
        public RecordLinkedDocument setLinkedRecord(RecordRef value) { this.LinkedRecord = value; return this; }
        public TrimProperty<Integer> getLinkedRevision() { return LinkedRevision; }
        public RecordLinkedDocument setLinkedRevision(TrimProperty<Integer> value) { this.LinkedRevision = value; return this; }
        public TrimProperty<DocumentLinkType> getLinkType() { return LinkType; }
        public RecordLinkedDocument setLinkType(TrimProperty<DocumentLinkType> value) { this.LinkType = value; return this; }
        public TrimStringProperty getStorageDescription() { return StorageDescription; }
        public RecordLinkedDocument setStorageDescription(TrimStringProperty value) { this.StorageDescription = value; return this; }
    }

    /**
    * Update a RecordLocation object.
    */
    @Route(Path="/RecordLocation", Verbs="POST")
    @Api("Update a RecordLocation object.")
    @DataContract
    public static class RecordLocation extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="RecordLocationComments")
        @SerializedName("RecordLocationComments")
        @ApiMember(Name="RecordLocationComments", DataType="string", ParameterType="form")
        public TrimStringProperty Comments = null;

        @DataMember(Name="RecordLocationDueDate")
        @SerializedName("RecordLocationDueDate")
        @ApiMember(Name="RecordLocationDueDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DueDate = null;

        @DataMember(Name="RecordLocationEmail")
        @SerializedName("RecordLocationEmail")
        @ApiMember(Name="RecordLocationEmail", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Email = null;

        @DataMember(Name="RecordLocationFaxNo")
        @SerializedName("RecordLocationFaxNo")
        @ApiMember(Name="RecordLocationFaxNo", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FaxNo = null;

        @DataMember(Name="RecordLocationFromDateTime")
        @SerializedName("RecordLocationFromDateTime")
        @ApiMember(Name="RecordLocationFromDateTime", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime FromDateTime = null;

        @DataMember(Name="RecordLocationIsComplete")
        @SerializedName("RecordLocationIsComplete")
        @ApiMember(Name="RecordLocationIsComplete", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="RecordLocationIsOverdue")
        @SerializedName("RecordLocationIsOverdue")
        @ApiMember(Name="RecordLocationIsOverdue", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsOverdue = null;

        @DataMember(Name="RecordLocationIsPrimaryContact")
        @SerializedName("RecordLocationIsPrimaryContact")
        @ApiMember(Name="RecordLocationIsPrimaryContact", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsPrimaryContact = null;

        @DataMember(Name="RecordLocationLatestDateTime")
        @SerializedName("RecordLocationLatestDateTime")
        @ApiMember(Name="RecordLocationLatestDateTime", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime LatestDateTime = null;

        @DataMember(Name="RecordLocationLocation")
        @SerializedName("RecordLocationLocation")
        @ApiMember(Name="RecordLocationLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Location = null;

        @DataMember(Name="RecordLocationMobileNo")
        @SerializedName("RecordLocationMobileNo")
        @ApiMember(Name="RecordLocationMobileNo", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MobileNo = null;

        @DataMember(Name="RecordLocationName")
        @SerializedName("RecordLocationName")
        @ApiMember(Name="RecordLocationName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Name = null;

        @DataMember(Name="RecordLocationOrganization")
        @SerializedName("RecordLocationOrganization")
        @ApiMember(Name="RecordLocationOrganization", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Organization = null;

        @DataMember(Name="RecordLocationOriginalName")
        @SerializedName("RecordLocationOriginalName")
        @ApiMember(Name="RecordLocationOriginalName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty OriginalName = null;

        @DataMember(Name="RecordLocationPAddress")
        @SerializedName("RecordLocationPAddress")
        @ApiMember(Name="RecordLocationPAddress", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty PAddress = null;

        @DataMember(Name="RecordLocationPhoneNumber")
        @SerializedName("RecordLocationPhoneNumber")
        @ApiMember(Name="RecordLocationPhoneNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty PhoneNumber = null;

        @DataMember(Name="RecordLocationReturnDateTime")
        @SerializedName("RecordLocationReturnDateTime")
        @ApiMember(Name="RecordLocationReturnDateTime", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ReturnDateTime = null;

        @DataMember(Name="RecordLocationSAddress")
        @SerializedName("RecordLocationSAddress")
        @ApiMember(Name="RecordLocationSAddress", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty SAddress = null;

        @DataMember(Name="RecordLocationSpace")
        @SerializedName("RecordLocationSpace")
        @ApiMember(Name="RecordLocationSpace", DataType="long", ParameterType="form", Verb="POST")
        public SpaceRef Space = null;

        @DataMember(Name="RecordLocationStatus")
        @SerializedName("RecordLocationStatus")
        @ApiMember(Name="RecordLocationStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<RecLocSubTypes> Status = null;

        @DataMember(Name="RecordLocationTypeOfContact")
        @SerializedName("RecordLocationTypeOfContact")
        @ApiMember(Name="RecordLocationTypeOfContact", DataType="string", ParameterType="form")
        public TrimProperty<ContactType> TypeOfContact = null;

        @DataMember(Name="RecordLocationTypeOfRecordLocation")
        @SerializedName("RecordLocationTypeOfRecordLocation")
        @ApiMember(Name="RecordLocationTypeOfRecordLocation", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<RecordLocationType> TypeOfRecordLocation = null;

        @DataMember(Name="RecordLocationWebPage")
        @SerializedName("RecordLocationWebPage")
        @ApiMember(Name="RecordLocationWebPage", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty WebPage = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordLocation setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public RecordLocation setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getComments() { return Comments; }
        public RecordLocation setComments(TrimStringProperty value) { this.Comments = value; return this; }
        public TrimDateTime getDueDate() { return DueDate; }
        public RecordLocation setDueDate(TrimDateTime value) { this.DueDate = value; return this; }
        public TrimStringProperty getEmail() { return Email; }
        public RecordLocation setEmail(TrimStringProperty value) { this.Email = value; return this; }
        public TrimStringProperty getFaxNo() { return FaxNo; }
        public RecordLocation setFaxNo(TrimStringProperty value) { this.FaxNo = value; return this; }
        public TrimDateTime getFromDateTime() { return FromDateTime; }
        public RecordLocation setFromDateTime(TrimDateTime value) { this.FromDateTime = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public RecordLocation setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<Boolean> getIsOverdue() { return IsOverdue; }
        public RecordLocation setIsOverdue(TrimProperty<Boolean> value) { this.IsOverdue = value; return this; }
        public TrimProperty<Boolean> getIsPrimaryContact() { return IsPrimaryContact; }
        public RecordLocation setIsPrimaryContact(TrimProperty<Boolean> value) { this.IsPrimaryContact = value; return this; }
        public TrimDateTime getLatestDateTime() { return LatestDateTime; }
        public RecordLocation setLatestDateTime(TrimDateTime value) { this.LatestDateTime = value; return this; }
        public LocationRef getLocation() { return Location; }
        public RecordLocation setLocation(LocationRef value) { this.Location = value; return this; }
        public TrimStringProperty getMobileNo() { return MobileNo; }
        public RecordLocation setMobileNo(TrimStringProperty value) { this.MobileNo = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public RecordLocation setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getOrganization() { return Organization; }
        public RecordLocation setOrganization(TrimStringProperty value) { this.Organization = value; return this; }
        public TrimStringProperty getOriginalName() { return OriginalName; }
        public RecordLocation setOriginalName(TrimStringProperty value) { this.OriginalName = value; return this; }
        public TrimStringProperty getPAddress() { return PAddress; }
        public RecordLocation setPAddress(TrimStringProperty value) { this.PAddress = value; return this; }
        public TrimStringProperty getPhoneNumber() { return PhoneNumber; }
        public RecordLocation setPhoneNumber(TrimStringProperty value) { this.PhoneNumber = value; return this; }
        public TrimDateTime getReturnDateTime() { return ReturnDateTime; }
        public RecordLocation setReturnDateTime(TrimDateTime value) { this.ReturnDateTime = value; return this; }
        public TrimStringProperty getSAddress() { return SAddress; }
        public RecordLocation setSAddress(TrimStringProperty value) { this.SAddress = value; return this; }
        public SpaceRef getSpace() { return Space; }
        public RecordLocation setSpace(SpaceRef value) { this.Space = value; return this; }
        public TrimProperty<RecLocSubTypes> getStatus() { return Status; }
        public RecordLocation setStatus(TrimProperty<RecLocSubTypes> value) { this.Status = value; return this; }
        public TrimProperty<ContactType> getTypeOfContact() { return TypeOfContact; }
        public RecordLocation setTypeOfContact(TrimProperty<ContactType> value) { this.TypeOfContact = value; return this; }
        public TrimProperty<RecordLocationType> getTypeOfRecordLocation() { return TypeOfRecordLocation; }
        public RecordLocation setTypeOfRecordLocation(TrimProperty<RecordLocationType> value) { this.TypeOfRecordLocation = value; return this; }
        public TrimStringProperty getWebPage() { return WebPage; }
        public RecordLocation setWebPage(TrimStringProperty value) { this.WebPage = value; return this; }
    }

    /**
    * Update a RecordRelationship object.
    */
    @Route(Path="/RecordRelationship", Verbs="POST")
    @Api("Update a RecordRelationship object.")
    @DataContract
    public static class RecordRelationship extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordRelationshipCanView")
        @SerializedName("RecordRelationshipCanView")
        @ApiMember(Name="RecordRelationshipCanView", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> CanView = null;

        @DataMember(Name="RecordRelationshipDescription")
        @SerializedName("RecordRelationshipDescription")
        @ApiMember(Name="RecordRelationshipDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="RecordRelationshipIsReverse")
        @SerializedName("RecordRelationshipIsReverse")
        @ApiMember(Name="RecordRelationshipIsReverse", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsReverse = null;

        @DataMember(Name="RecordRelationshipRelatedRecord")
        @SerializedName("RecordRelationshipRelatedRecord")
        @ApiMember(Name="RecordRelationshipRelatedRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef RelatedRecord = null;

        @DataMember(Name="RecordRelationshipRelatedTitle")
        @SerializedName("RecordRelationshipRelatedTitle")
        @ApiMember(Name="RecordRelationshipRelatedTitle", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RelatedTitle = null;

        @DataMember(Name="RecordRelationshipRelationNumber")
        @SerializedName("RecordRelationshipRelationNumber")
        @ApiMember(Name="RecordRelationshipRelationNumber", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> RelationNumber = null;

        @DataMember(Name="RecordRelationshipRelationType")
        @SerializedName("RecordRelationshipRelationType")
        @ApiMember(Name="RecordRelationshipRelationType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<RecordRelationshipType> RelationType = null;

        @DataMember(Name="RecordRelationshipReverseRelationType")
        @SerializedName("RecordRelationshipReverseRelationType")
        @ApiMember(Name="RecordRelationshipReverseRelationType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<RevRecRelationship> ReverseRelationType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordRelationship setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Boolean> getCanView() { return CanView; }
        public RecordRelationship setCanView(TrimProperty<Boolean> value) { this.CanView = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public RecordRelationship setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getIsReverse() { return IsReverse; }
        public RecordRelationship setIsReverse(TrimProperty<Boolean> value) { this.IsReverse = value; return this; }
        public RecordRef getRelatedRecord() { return RelatedRecord; }
        public RecordRelationship setRelatedRecord(RecordRef value) { this.RelatedRecord = value; return this; }
        public TrimStringProperty getRelatedTitle() { return RelatedTitle; }
        public RecordRelationship setRelatedTitle(TrimStringProperty value) { this.RelatedTitle = value; return this; }
        public TrimProperty<Integer> getRelationNumber() { return RelationNumber; }
        public RecordRelationship setRelationNumber(TrimProperty<Integer> value) { this.RelationNumber = value; return this; }
        public TrimProperty<RecordRelationshipType> getRelationType() { return RelationType; }
        public RecordRelationship setRelationType(TrimProperty<RecordRelationshipType> value) { this.RelationType = value; return this; }
        public TrimProperty<RevRecRelationship> getReverseRelationType() { return ReverseRelationType; }
        public RecordRelationship setReverseRelationType(TrimProperty<RevRecRelationship> value) { this.ReverseRelationType = value; return this; }
    }

    /**
    * Update a RecordRendition object.
    */
    @Route(Path="/RecordRendition", Verbs="POST")
    @Api("Update a RecordRendition object.")
    @DataContract
    public static class RecordRendition extends TrimChildObject
    {
        @DataMember(Name="FromFileName")
        @SerializedName("FromFileName")
        public String FromFileName = null;

        @DataMember(Name="CanAddToNotes")
        @SerializedName("CanAddToNotes")
        public Boolean CanAddToNotes = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordRenditionAddedOn")
        @SerializedName("RecordRenditionAddedOn")
        @ApiMember(Name="RecordRenditionAddedOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime AddedOn = null;

        @DataMember(Name="RecordRenditionBytes")
        @SerializedName("RecordRenditionBytes")
        @ApiMember(Name="RecordRenditionBytes", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Bytes = null;

        @DataMember(Name="RecordRenditionConfidenceLevel")
        @SerializedName("RecordRenditionConfidenceLevel")
        @ApiMember(Name="RecordRenditionConfidenceLevel", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ConfidenceLevel = null;

        @DataMember(Name="RecordRenditionDateModified")
        @SerializedName("RecordRenditionDateModified")
        @ApiMember(Name="RecordRenditionDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="RecordRenditionDescription")
        @SerializedName("RecordRenditionDescription")
        @ApiMember(Name="RecordRenditionDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="RecordRenditionEStore")
        @SerializedName("RecordRenditionEStore")
        @ApiMember(Name="RecordRenditionEStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef EStore = null;

        @DataMember(Name="RecordRenditionEStoreId")
        @SerializedName("RecordRenditionEStoreId")
        @ApiMember(Name="RecordRenditionEStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty EStoreId = null;

        @DataMember(Name="RecordRenditionExtension")
        @SerializedName("RecordRenditionExtension")
        @ApiMember(Name="RecordRenditionExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="RecordRenditionMimeType")
        @SerializedName("RecordRenditionMimeType")
        @ApiMember(Name="RecordRenditionMimeType", DataType="string", ParameterType="form")
        public TrimStringProperty MimeType = null;

        @DataMember(Name="RecordRenditionNbrPages")
        @SerializedName("RecordRenditionNbrPages")
        @ApiMember(Name="RecordRenditionNbrPages", DataType="int", ParameterType="form")
        public TrimProperty<Integer> NbrPages = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="RecordRenditionNotes")
        @SerializedName("RecordRenditionNotes")
        @ApiMember(Name="RecordRenditionNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="RecordRenditionPageNumber")
        @SerializedName("RecordRenditionPageNumber")
        @ApiMember(Name="RecordRenditionPageNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> PageNumber = null;

        @DataMember(Name="RecordRenditionTypeOfRendition")
        @SerializedName("RecordRenditionTypeOfRendition")
        @ApiMember(Name="RecordRenditionTypeOfRendition", DataType="string", ParameterType="form")
        public TrimProperty<RenditionType> TypeOfRendition = null;
        
        public String getFromFileName() { return FromFileName; }
        public RecordRendition setFromFileName(String value) { this.FromFileName = value; return this; }
        public Boolean isCanAddToNotes() { return CanAddToNotes; }
        public RecordRendition setCanAddToNotes(Boolean value) { this.CanAddToNotes = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordRendition setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getAddedOn() { return AddedOn; }
        public RecordRendition setAddedOn(TrimDateTime value) { this.AddedOn = value; return this; }
        public TrimProperty<Long> getBytes() { return Bytes; }
        public RecordRendition setBytes(TrimProperty<Long> value) { this.Bytes = value; return this; }
        public TrimProperty<Integer> getConfidenceLevel() { return ConfidenceLevel; }
        public RecordRendition setConfidenceLevel(TrimProperty<Integer> value) { this.ConfidenceLevel = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public RecordRendition setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public RecordRendition setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public ElectronicStoreRef getEStore() { return EStore; }
        public RecordRendition setEStore(ElectronicStoreRef value) { this.EStore = value; return this; }
        public TrimStringProperty getEStoreId() { return EStoreId; }
        public RecordRendition setEStoreId(TrimStringProperty value) { this.EStoreId = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public RecordRendition setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimStringProperty getMimeType() { return MimeType; }
        public RecordRendition setMimeType(TrimStringProperty value) { this.MimeType = value; return this; }
        public TrimProperty<Integer> getNbrPages() { return NbrPages; }
        public RecordRendition setNbrPages(TrimProperty<Integer> value) { this.NbrPages = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public RecordRendition setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public RecordRendition setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Integer> getPageNumber() { return PageNumber; }
        public RecordRendition setPageNumber(TrimProperty<Integer> value) { this.PageNumber = value; return this; }
        public TrimProperty<RenditionType> getTypeOfRendition() { return TypeOfRendition; }
        public RecordRendition setTypeOfRendition(TrimProperty<RenditionType> value) { this.TypeOfRendition = value; return this; }
    }

    /**
    * Update a RecordRevision object.
    */
    @Route(Path="/RecordRevision", Verbs="POST")
    @Api("Update a RecordRevision object.")
    @DataContract
    public static class RecordRevision extends TrimChildObject
    {
        @DataMember(Name="CanAddToNotes")
        @SerializedName("CanAddToNotes")
        public Boolean CanAddToNotes = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordRevisionBytes")
        @SerializedName("RecordRevisionBytes")
        @ApiMember(Name="RecordRevisionBytes", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Bytes = null;

        @DataMember(Name="RecordRevisionCheckedInBy")
        @SerializedName("RecordRevisionCheckedInBy")
        @ApiMember(Name="RecordRevisionCheckedInBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef CheckedInBy = null;

        @DataMember(Name="RecordRevisionDateModified")
        @SerializedName("RecordRevisionDateModified")
        @ApiMember(Name="RecordRevisionDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="RecordRevisionDescription")
        @SerializedName("RecordRevisionDescription")
        @ApiMember(Name="RecordRevisionDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="RecordRevisionDocumentType")
        @SerializedName("RecordRevisionDocumentType")
        @ApiMember(Name="RecordRevisionDocumentType", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocumentType = null;

        @DataMember(Name="RecordRevisionEStore")
        @SerializedName("RecordRevisionEStore")
        @ApiMember(Name="RecordRevisionEStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef EStore = null;

        @DataMember(Name="RecordRevisionEStoreId")
        @SerializedName("RecordRevisionEStoreId")
        @ApiMember(Name="RecordRevisionEStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty EStoreId = null;

        @DataMember(Name="RecordRevisionExtension")
        @SerializedName("RecordRevisionExtension")
        @ApiMember(Name="RecordRevisionExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="RecordRevisionMimeType")
        @SerializedName("RecordRevisionMimeType")
        @ApiMember(Name="RecordRevisionMimeType", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MimeType = null;

        @DataMember(Name="RecordRevisionNbrPages")
        @SerializedName("RecordRevisionNbrPages")
        @ApiMember(Name="RecordRevisionNbrPages", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> NbrPages = null;

        @DataMember(Name="RecordRevisionPreservationNotes")
        @SerializedName("RecordRevisionPreservationNotes")
        @ApiMember(Name="RecordRevisionPreservationNotes", DataType="string", ParameterType="form")
        public TrimStringProperty PreservationNotes = null;

        @DataMember(Name="RecordRevisionPreserve")
        @SerializedName("RecordRevisionPreserve")
        @ApiMember(Name="RecordRevisionPreserve", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> Preserve = null;

        @DataMember(Name="RecordRevisionRevisionNumber")
        @SerializedName("RecordRevisionRevisionNumber")
        @ApiMember(Name="RecordRevisionRevisionNumber", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> RevisionNumber = null;
        
        public Boolean isCanAddToNotes() { return CanAddToNotes; }
        public RecordRevision setCanAddToNotes(Boolean value) { this.CanAddToNotes = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordRevision setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Long> getBytes() { return Bytes; }
        public RecordRevision setBytes(TrimProperty<Long> value) { this.Bytes = value; return this; }
        public LocationRef getCheckedInBy() { return CheckedInBy; }
        public RecordRevision setCheckedInBy(LocationRef value) { this.CheckedInBy = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public RecordRevision setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public RecordRevision setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimStringProperty getDocumentType() { return DocumentType; }
        public RecordRevision setDocumentType(TrimStringProperty value) { this.DocumentType = value; return this; }
        public ElectronicStoreRef getEStore() { return EStore; }
        public RecordRevision setEStore(ElectronicStoreRef value) { this.EStore = value; return this; }
        public TrimStringProperty getEStoreId() { return EStoreId; }
        public RecordRevision setEStoreId(TrimStringProperty value) { this.EStoreId = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public RecordRevision setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimStringProperty getMimeType() { return MimeType; }
        public RecordRevision setMimeType(TrimStringProperty value) { this.MimeType = value; return this; }
        public TrimProperty<Integer> getNbrPages() { return NbrPages; }
        public RecordRevision setNbrPages(TrimProperty<Integer> value) { this.NbrPages = value; return this; }
        public TrimStringProperty getPreservationNotes() { return PreservationNotes; }
        public RecordRevision setPreservationNotes(TrimStringProperty value) { this.PreservationNotes = value; return this; }
        public TrimProperty<Boolean> getPreserve() { return Preserve; }
        public RecordRevision setPreserve(TrimProperty<Boolean> value) { this.Preserve = value; return this; }
        public TrimProperty<Integer> getRevisionNumber() { return RevisionNumber; }
        public RecordRevision setRevisionNumber(TrimProperty<Integer> value) { this.RevisionNumber = value; return this; }
    }

    /**
    * Update a RecordSapComponent object.
    */
    @Route(Path="/RecordSapComponent", Verbs="POST")
    @Api("Update a RecordSapComponent object.")
    @DataContract
    public static class RecordSapComponent extends TrimChildObject
    {
        @DataMember(Name="FromFileName")
        @SerializedName("FromFileName")
        public String FromFileName = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordSapComponentApplicationVersion")
        @SerializedName("RecordSapComponentApplicationVersion")
        @ApiMember(Name="RecordSapComponentApplicationVersion", DataType="string", ParameterType="form")
        public TrimStringProperty ApplicationVersion = null;

        @DataMember(Name="RecordSapComponentArchiveDate")
        @SerializedName("RecordSapComponentArchiveDate")
        @ApiMember(Name="RecordSapComponentArchiveDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ArchiveDate = null;

        @DataMember(Name="RecordSapComponentArchiveLinkVersion")
        @SerializedName("RecordSapComponentArchiveLinkVersion")
        @ApiMember(Name="RecordSapComponentArchiveLinkVersion", DataType="string", ParameterType="form")
        public TrimStringProperty ArchiveLinkVersion = null;

        @DataMember(Name="RecordSapComponentBytes")
        @SerializedName("RecordSapComponentBytes")
        @ApiMember(Name="RecordSapComponentBytes", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Bytes = null;

        @DataMember(Name="RecordSapComponentCharacterSet")
        @SerializedName("RecordSapComponentCharacterSet")
        @ApiMember(Name="RecordSapComponentCharacterSet", DataType="string", ParameterType="form")
        public TrimStringProperty CharacterSet = null;

        @DataMember(Name="RecordSapComponentComponentId")
        @SerializedName("RecordSapComponentComponentId")
        @ApiMember(Name="RecordSapComponentComponentId", DataType="string", ParameterType="form")
        public TrimStringProperty ComponentId = null;

        @DataMember(Name="RecordSapComponentContentType")
        @SerializedName("RecordSapComponentContentType")
        @ApiMember(Name="RecordSapComponentContentType", DataType="string", ParameterType="form")
        public TrimStringProperty ContentType = null;

        @DataMember(Name="RecordSapComponentDateModified")
        @SerializedName("RecordSapComponentDateModified")
        @ApiMember(Name="RecordSapComponentDateModified", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateModified = null;

        @DataMember(Name="RecordSapComponentExtension")
        @SerializedName("RecordSapComponentExtension")
        @ApiMember(Name="RecordSapComponentExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="RecordSapComponentFileName")
        @SerializedName("RecordSapComponentFileName")
        @ApiMember(Name="RecordSapComponentFileName", DataType="string", ParameterType="form")
        public TrimStringProperty FileName = null;

        @DataMember(Name="RecordSapComponentStoreId")
        @SerializedName("RecordSapComponentStoreId")
        @ApiMember(Name="RecordSapComponentStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty StoreId = null;

        @DataMember(Name="RecordSapComponentStoreUri")
        @SerializedName("RecordSapComponentStoreUri")
        @ApiMember(Name="RecordSapComponentStoreUri", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef StoreUri = null;
        
        public String getFromFileName() { return FromFileName; }
        public RecordSapComponent setFromFileName(String value) { this.FromFileName = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordSapComponent setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getApplicationVersion() { return ApplicationVersion; }
        public RecordSapComponent setApplicationVersion(TrimStringProperty value) { this.ApplicationVersion = value; return this; }
        public TrimDateTime getArchiveDate() { return ArchiveDate; }
        public RecordSapComponent setArchiveDate(TrimDateTime value) { this.ArchiveDate = value; return this; }
        public TrimStringProperty getArchiveLinkVersion() { return ArchiveLinkVersion; }
        public RecordSapComponent setArchiveLinkVersion(TrimStringProperty value) { this.ArchiveLinkVersion = value; return this; }
        public TrimProperty<Long> getBytes() { return Bytes; }
        public RecordSapComponent setBytes(TrimProperty<Long> value) { this.Bytes = value; return this; }
        public TrimStringProperty getCharacterSet() { return CharacterSet; }
        public RecordSapComponent setCharacterSet(TrimStringProperty value) { this.CharacterSet = value; return this; }
        public TrimStringProperty getComponentId() { return ComponentId; }
        public RecordSapComponent setComponentId(TrimStringProperty value) { this.ComponentId = value; return this; }
        public TrimStringProperty getContentType() { return ContentType; }
        public RecordSapComponent setContentType(TrimStringProperty value) { this.ContentType = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public RecordSapComponent setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public RecordSapComponent setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimStringProperty getFileName() { return FileName; }
        public RecordSapComponent setFileName(TrimStringProperty value) { this.FileName = value; return this; }
        public TrimStringProperty getStoreId() { return StoreId; }
        public RecordSapComponent setStoreId(TrimStringProperty value) { this.StoreId = value; return this; }
        public ElectronicStoreRef getStoreUri() { return StoreUri; }
        public RecordSapComponent setStoreUri(ElectronicStoreRef value) { this.StoreUri = value; return this; }
    }

    public static class TrimAccessControlList
    {
        public AllEnumerations FunctionEnum = null;
        public FunctionProfilesDictionary FunctionProfiles = null;
        
        public AllEnumerations getFunctionEnum() { return FunctionEnum; }
        public TrimAccessControlList setFunctionEnum(AllEnumerations value) { this.FunctionEnum = value; return this; }
        public FunctionProfilesDictionary getFunctionProfiles() { return FunctionProfiles; }
        public TrimAccessControlList setFunctionProfiles(FunctionProfilesDictionary value) { this.FunctionProfiles = value; return this; }
    }

    public static enum RecLocSubTypes
    {
        AtLocation,
        AtHome,
        InContainer,
        InSpace,
        Unknown;
    }

    public static enum AuthorizationMethods
    {
        Simple,
        Challenge,
        Docusign;
    }

    public static enum AutoRenditionStatus
    {
        None,
        Longevity,
        Redactable,
        LongevityAndRedactable;
    }

    public static enum RecordClass
    {
        Vital,
        Corporate,
        WorkGroup,
        Personal,
        Reference,
        Temporary;
    }

    @DataContract
    public static class ConsignmentRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ConsignmentAckTransferDate")
        @SerializedName("ConsignmentAckTransferDate")
        @ApiMember(Name="ConsignmentAckTransferDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime AckTransferDate = null;

        @DataMember(Name="ConsignmentAllowOnHold")
        @SerializedName("ConsignmentAllowOnHold")
        @ApiMember(Name="ConsignmentAllowOnHold", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> AllowOnHold = null;

        @DataMember(Name="ConsignmentAllowOutsideSchedule")
        @SerializedName("ConsignmentAllowOutsideSchedule")
        @ApiMember(Name="ConsignmentAllowOutsideSchedule", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> AllowOutsideSchedule = null;

        @DataMember(Name="ConsignmentCutoffDate")
        @SerializedName("ConsignmentCutoffDate")
        @ApiMember(Name="ConsignmentCutoffDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime CutoffDate = null;

        @DataMember(Name="ConsignmentDateApproved")
        @SerializedName("ConsignmentDateApproved")
        @ApiMember(Name="ConsignmentDateApproved", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateApproved = null;

        @DataMember(Name="ConsignmentDateReviewed")
        @SerializedName("ConsignmentDateReviewed")
        @ApiMember(Name="ConsignmentDateReviewed", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateReviewed = null;

        @DataMember(Name="ConsignmentDescription")
        @SerializedName("ConsignmentDescription")
        @ApiMember(Name="ConsignmentDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="ConsignmentDisposalDate")
        @SerializedName("ConsignmentDisposalDate")
        @ApiMember(Name="ConsignmentDisposalDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DisposalDate = null;

        @DataMember(Name="ConsignmentDisposalMethod")
        @SerializedName("ConsignmentDisposalMethod")
        @ApiMember(Name="ConsignmentDisposalMethod", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<ConsignmentDisposalType> DisposalMethod = null;

        @DataMember(Name="ConsignmentFilterString")
        @SerializedName("ConsignmentFilterString")
        @ApiMember(Name="ConsignmentFilterString", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FilterString = null;

        @DataMember(Name="ConsignmentIsComplete")
        @SerializedName("ConsignmentIsComplete")
        @ApiMember(Name="ConsignmentIsComplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="ConsignmentNbrDisposalErrors")
        @SerializedName("ConsignmentNbrDisposalErrors")
        @ApiMember(Name="ConsignmentNbrDisposalErrors", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NbrDisposalErrors = null;

        @DataMember(Name="ConsignmentNbrDisposed")
        @SerializedName("ConsignmentNbrDisposed")
        @ApiMember(Name="ConsignmentNbrDisposed", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NbrDisposed = null;

        @DataMember(Name="ConsignmentNbrIssuesNow")
        @SerializedName("ConsignmentNbrIssuesNow")
        @ApiMember(Name="ConsignmentNbrIssuesNow", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NbrIssuesNow = null;

        @DataMember(Name="ConsignmentNbrIssuesStart")
        @SerializedName("ConsignmentNbrIssuesStart")
        @ApiMember(Name="ConsignmentNbrIssuesStart", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NbrIssuesStart = null;

        @DataMember(Name="ConsignmentNbrRecordsNow")
        @SerializedName("ConsignmentNbrRecordsNow")
        @ApiMember(Name="ConsignmentNbrRecordsNow", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NbrRecordsNow = null;

        @DataMember(Name="ConsignmentNbrRecordsStart")
        @SerializedName("ConsignmentNbrRecordsStart")
        @ApiMember(Name="ConsignmentNbrRecordsStart", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NbrRecordsStart = null;

        @DataMember(Name="ConsignmentNbrRejected")
        @SerializedName("ConsignmentNbrRejected")
        @ApiMember(Name="ConsignmentNbrRejected", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NbrRejected = null;

        @DataMember(Name="ConsignmentNbrRemoved")
        @SerializedName("ConsignmentNbrRemoved")
        @ApiMember(Name="ConsignmentNbrRemoved", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> NbrRemoved = null;

        @DataMember(Name="ConsignmentNumber")
        @SerializedName("ConsignmentNumber")
        @ApiMember(Name="ConsignmentNumber", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Number = null;

        @DataMember(Name="ConsignmentOnlyScheduledDisposal")
        @SerializedName("ConsignmentOnlyScheduledDisposal")
        @ApiMember(Name="ConsignmentOnlyScheduledDisposal", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> OnlyScheduledDisposal = null;

        @DataMember(Name="ConsignmentOwnerAdminApproval")
        @SerializedName("ConsignmentOwnerAdminApproval")
        @ApiMember(Name="ConsignmentOwnerAdminApproval", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> OwnerAdminApproval = null;

        @DataMember(Name="ConsignmentOwnerApproval")
        @SerializedName("ConsignmentOwnerApproval")
        @ApiMember(Name="ConsignmentOwnerApproval", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> OwnerApproval = null;

        @DataMember(Name="ConsignmentQueryString")
        @SerializedName("ConsignmentQueryString")
        @ApiMember(Name="ConsignmentQueryString", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty QueryString = null;

        @DataMember(Name="ConsignmentSelectingTopContainers")
        @SerializedName("ConsignmentSelectingTopContainers")
        @ApiMember(Name="ConsignmentSelectingTopContainers", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> SelectingTopContainers = null;

        @DataMember(Name="ConsignmentStateDescription")
        @SerializedName("ConsignmentStateDescription")
        @ApiMember(Name="ConsignmentStateDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty StateDescription = null;

        @DataMember(Name="ConsignmentWaitingAcknowledgement")
        @SerializedName("ConsignmentWaitingAcknowledgement")
        @ApiMember(Name="ConsignmentWaitingAcknowledgement", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> WaitingAcknowledgement = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ConsignmentRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getAckTransferDate() { return AckTransferDate; }
        public ConsignmentRef setAckTransferDate(TrimDateTime value) { this.AckTransferDate = value; return this; }
        public TrimProperty<Boolean> getAllowOnHold() { return AllowOnHold; }
        public ConsignmentRef setAllowOnHold(TrimProperty<Boolean> value) { this.AllowOnHold = value; return this; }
        public TrimProperty<Boolean> getAllowOutsideSchedule() { return AllowOutsideSchedule; }
        public ConsignmentRef setAllowOutsideSchedule(TrimProperty<Boolean> value) { this.AllowOutsideSchedule = value; return this; }
        public TrimDateTime getCutoffDate() { return CutoffDate; }
        public ConsignmentRef setCutoffDate(TrimDateTime value) { this.CutoffDate = value; return this; }
        public TrimDateTime getDateApproved() { return DateApproved; }
        public ConsignmentRef setDateApproved(TrimDateTime value) { this.DateApproved = value; return this; }
        public TrimDateTime getDateReviewed() { return DateReviewed; }
        public ConsignmentRef setDateReviewed(TrimDateTime value) { this.DateReviewed = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public ConsignmentRef setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getDisposalDate() { return DisposalDate; }
        public ConsignmentRef setDisposalDate(TrimDateTime value) { this.DisposalDate = value; return this; }
        public TrimProperty<ConsignmentDisposalType> getDisposalMethod() { return DisposalMethod; }
        public ConsignmentRef setDisposalMethod(TrimProperty<ConsignmentDisposalType> value) { this.DisposalMethod = value; return this; }
        public TrimStringProperty getFilterString() { return FilterString; }
        public ConsignmentRef setFilterString(TrimStringProperty value) { this.FilterString = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public ConsignmentRef setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<Long> getNbrDisposalErrors() { return NbrDisposalErrors; }
        public ConsignmentRef setNbrDisposalErrors(TrimProperty<Long> value) { this.NbrDisposalErrors = value; return this; }
        public TrimProperty<Long> getNbrDisposed() { return NbrDisposed; }
        public ConsignmentRef setNbrDisposed(TrimProperty<Long> value) { this.NbrDisposed = value; return this; }
        public TrimProperty<Long> getNbrIssuesNow() { return NbrIssuesNow; }
        public ConsignmentRef setNbrIssuesNow(TrimProperty<Long> value) { this.NbrIssuesNow = value; return this; }
        public TrimProperty<Long> getNbrIssuesStart() { return NbrIssuesStart; }
        public ConsignmentRef setNbrIssuesStart(TrimProperty<Long> value) { this.NbrIssuesStart = value; return this; }
        public TrimProperty<Long> getNbrRecordsNow() { return NbrRecordsNow; }
        public ConsignmentRef setNbrRecordsNow(TrimProperty<Long> value) { this.NbrRecordsNow = value; return this; }
        public TrimProperty<Long> getNbrRecordsStart() { return NbrRecordsStart; }
        public ConsignmentRef setNbrRecordsStart(TrimProperty<Long> value) { this.NbrRecordsStart = value; return this; }
        public TrimProperty<Long> getNbrRejected() { return NbrRejected; }
        public ConsignmentRef setNbrRejected(TrimProperty<Long> value) { this.NbrRejected = value; return this; }
        public TrimProperty<Long> getNbrRemoved() { return NbrRemoved; }
        public ConsignmentRef setNbrRemoved(TrimProperty<Long> value) { this.NbrRemoved = value; return this; }
        public TrimStringProperty getNumber() { return Number; }
        public ConsignmentRef setNumber(TrimStringProperty value) { this.Number = value; return this; }
        public TrimProperty<Boolean> getOnlyScheduledDisposal() { return OnlyScheduledDisposal; }
        public ConsignmentRef setOnlyScheduledDisposal(TrimProperty<Boolean> value) { this.OnlyScheduledDisposal = value; return this; }
        public TrimProperty<Boolean> getOwnerAdminApproval() { return OwnerAdminApproval; }
        public ConsignmentRef setOwnerAdminApproval(TrimProperty<Boolean> value) { this.OwnerAdminApproval = value; return this; }
        public TrimProperty<Boolean> getOwnerApproval() { return OwnerApproval; }
        public ConsignmentRef setOwnerApproval(TrimProperty<Boolean> value) { this.OwnerApproval = value; return this; }
        public TrimStringProperty getQueryString() { return QueryString; }
        public ConsignmentRef setQueryString(TrimStringProperty value) { this.QueryString = value; return this; }
        public TrimProperty<Boolean> getSelectingTopContainers() { return SelectingTopContainers; }
        public ConsignmentRef setSelectingTopContainers(TrimProperty<Boolean> value) { this.SelectingTopContainers = value; return this; }
        public TrimStringProperty getStateDescription() { return StateDescription; }
        public ConsignmentRef setStateDescription(TrimStringProperty value) { this.StateDescription = value; return this; }
        public TrimProperty<Boolean> getWaitingAcknowledgement() { return WaitingAcknowledgement; }
        public ConsignmentRef setWaitingAcknowledgement(TrimProperty<Boolean> value) { this.WaitingAcknowledgement = value; return this; }
    }

    public static enum RecordDisp
    {
        Active(1),
        Inactive(2),
        Archived(5),
        Destroyed(6),
        Transferred(7);

        private final int value;
        RecordDisp(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    @DataContract
    public static class OriginRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="OriginAccessControl")
        @SerializedName("OriginAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="OriginAutoStart")
        @SerializedName("OriginAutoStart")
        @ApiMember(Name="OriginAutoStart", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoStart = null;

        @DataMember(Name="OriginContainerCreation")
        @SerializedName("OriginContainerCreation")
        @ApiMember(Name="OriginContainerCreation", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerCreation = null;

        @DataMember(Name="OriginContainerDateInterval")
        @SerializedName("OriginContainerDateInterval")
        @ApiMember(Name="OriginContainerDateInterval", DataType="string", ParameterType="form")
        public TrimProperty<DateIntervalSing> ContainerDateInterval = null;

        @DataMember(Name="OriginContainerHasDateRange")
        @SerializedName("OriginContainerHasDateRange")
        @ApiMember(Name="OriginContainerHasDateRange", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerHasDateRange = null;

        @DataMember(Name="OriginContainerPerOwner")
        @SerializedName("OriginContainerPerOwner")
        @ApiMember(Name="OriginContainerPerOwner", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerPerOwner = null;

        @DataMember(Name="OriginContainerSizeThreshold")
        @SerializedName("OriginContainerSizeThreshold")
        @ApiMember(Name="OriginContainerSizeThreshold", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ContainerSizeThreshold = null;

        @DataMember(Name="OriginDateLastLoaded")
        @SerializedName("OriginDateLastLoaded")
        @ApiMember(Name="OriginDateLastLoaded", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateLastLoaded = null;

        @DataMember(Name="OriginDateModified")
        @SerializedName("OriginDateModified")
        @ApiMember(Name="OriginDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="OriginExtension")
        @SerializedName("OriginExtension")
        @ApiMember(Name="OriginExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="OriginKeepCheckedOut")
        @SerializedName("OriginKeepCheckedOut")
        @ApiMember(Name="OriginKeepCheckedOut", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> KeepCheckedOut = null;

        @DataMember(Name="OriginLocationMatching")
        @SerializedName("OriginLocationMatching")
        @ApiMember(Name="OriginLocationMatching", DataType="string", ParameterType="form")
        public TrimProperty<LocationMatchType> LocationMatching = null;

        @DataMember(Name="OriginMakeNewRevision")
        @SerializedName("OriginMakeNewRevision")
        @ApiMember(Name="OriginMakeNewRevision", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MakeNewRevision = null;

        @DataMember(Name="OriginName")
        @SerializedName("OriginName")
        @ApiMember(Name="OriginName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="OriginNotes")
        @SerializedName("OriginNotes")
        @ApiMember(Name="OriginNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="OriginOriginLocation")
        @SerializedName("OriginOriginLocation")
        @ApiMember(Name="OriginOriginLocation", DataType="string", ParameterType="form")
        public TrimStringProperty OriginLocation = null;

        @DataMember(Name="OriginRunsOnMachine")
        @SerializedName("OriginRunsOnMachine")
        @ApiMember(Name="OriginRunsOnMachine", DataType="string", ParameterType="form")
        public TrimStringProperty RunsOnMachine = null;

        @DataMember(Name="OriginSize")
        @SerializedName("OriginSize")
        @ApiMember(Name="OriginSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Size = null;

        @DataMember(Name="OriginStoreId")
        @SerializedName("OriginStoreId")
        @ApiMember(Name="OriginStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty StoreId = null;

        @DataMember(Name="OriginTimeFrom")
        @SerializedName("OriginTimeFrom")
        @ApiMember(Name="OriginTimeFrom", DataType="int", ParameterType="form")
        public TrimProperty<Integer> TimeFrom = null;

        @DataMember(Name="OriginTimeTo")
        @SerializedName("OriginTimeTo")
        @ApiMember(Name="OriginTimeTo", DataType="int", ParameterType="form")
        public TrimProperty<Integer> TimeTo = null;

        @DataMember(Name="OriginTypeOfOrigin")
        @SerializedName("OriginTypeOfOrigin")
        @ApiMember(Name="OriginTypeOfOrigin", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<OriginType> TypeOfOrigin = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public OriginRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public OriginRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public OriginRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Boolean> getAutoStart() { return AutoStart; }
        public OriginRef setAutoStart(TrimProperty<Boolean> value) { this.AutoStart = value; return this; }
        public TrimProperty<Boolean> getContainerCreation() { return ContainerCreation; }
        public OriginRef setContainerCreation(TrimProperty<Boolean> value) { this.ContainerCreation = value; return this; }
        public TrimProperty<DateIntervalSing> getContainerDateInterval() { return ContainerDateInterval; }
        public OriginRef setContainerDateInterval(TrimProperty<DateIntervalSing> value) { this.ContainerDateInterval = value; return this; }
        public TrimProperty<Boolean> getContainerHasDateRange() { return ContainerHasDateRange; }
        public OriginRef setContainerHasDateRange(TrimProperty<Boolean> value) { this.ContainerHasDateRange = value; return this; }
        public TrimProperty<Boolean> getContainerPerOwner() { return ContainerPerOwner; }
        public OriginRef setContainerPerOwner(TrimProperty<Boolean> value) { this.ContainerPerOwner = value; return this; }
        public TrimProperty<Integer> getContainerSizeThreshold() { return ContainerSizeThreshold; }
        public OriginRef setContainerSizeThreshold(TrimProperty<Integer> value) { this.ContainerSizeThreshold = value; return this; }
        public TrimDateTime getDateLastLoaded() { return DateLastLoaded; }
        public OriginRef setDateLastLoaded(TrimDateTime value) { this.DateLastLoaded = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public OriginRef setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public OriginRef setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimProperty<Boolean> getKeepCheckedOut() { return KeepCheckedOut; }
        public OriginRef setKeepCheckedOut(TrimProperty<Boolean> value) { this.KeepCheckedOut = value; return this; }
        public TrimProperty<LocationMatchType> getLocationMatching() { return LocationMatching; }
        public OriginRef setLocationMatching(TrimProperty<LocationMatchType> value) { this.LocationMatching = value; return this; }
        public TrimProperty<Boolean> getMakeNewRevision() { return MakeNewRevision; }
        public OriginRef setMakeNewRevision(TrimProperty<Boolean> value) { this.MakeNewRevision = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public OriginRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public OriginRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getOriginLocation() { return OriginLocation; }
        public OriginRef setOriginLocation(TrimStringProperty value) { this.OriginLocation = value; return this; }
        public TrimStringProperty getRunsOnMachine() { return RunsOnMachine; }
        public OriginRef setRunsOnMachine(TrimStringProperty value) { this.RunsOnMachine = value; return this; }
        public TrimProperty<Long> getSize() { return Size; }
        public OriginRef setSize(TrimProperty<Long> value) { this.Size = value; return this; }
        public TrimStringProperty getStoreId() { return StoreId; }
        public OriginRef setStoreId(TrimStringProperty value) { this.StoreId = value; return this; }
        public TrimProperty<Integer> getTimeFrom() { return TimeFrom; }
        public OriginRef setTimeFrom(TrimProperty<Integer> value) { this.TimeFrom = value; return this; }
        public TrimProperty<Integer> getTimeTo() { return TimeTo; }
        public OriginRef setTimeTo(TrimProperty<Integer> value) { this.TimeTo = value; return this; }
        public TrimProperty<OriginType> getTypeOfOrigin() { return TypeOfOrigin; }
        public OriginRef setTypeOfOrigin(TrimProperty<OriginType> value) { this.TypeOfOrigin = value; return this; }
    }

    public static enum MediaTypes
    {
        Unknown,
        Paper,
        Electronic,
        OpticalDisk,
        Drawings,
        MagneticStorage,
        Memory,
        Microfilm,
        Film,
        Video,
        Custom1,
        Custom2,
        Custom3,
        Custom4,
        Custom5,
        Custom6,
        Custom7,
        Custom8,
        Custom9,
        Custom10;
    }

    @DataContract
    public static class MeetingRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="MeetingAccessControl")
        @SerializedName("MeetingAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="MeetingAgendaIssueDate")
        @SerializedName("MeetingAgendaIssueDate")
        @ApiMember(Name="MeetingAgendaIssueDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime AgendaIssueDate = null;

        @DataMember(Name="MeetingAgendaOpen")
        @SerializedName("MeetingAgendaOpen")
        @ApiMember(Name="MeetingAgendaOpen", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> AgendaOpen = null;

        @DataMember(Name="MeetingApologies")
        @SerializedName("MeetingApologies")
        @ApiMember(Name="MeetingApologies", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Apologies = null;

        @DataMember(Name="MeetingAttendees")
        @SerializedName("MeetingAttendees")
        @ApiMember(Name="MeetingAttendees", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Attendees = null;

        @DataMember(Name="MeetingInvitations")
        @SerializedName("MeetingInvitations")
        @ApiMember(Name="MeetingInvitations", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Invitations = null;

        @DataMember(Name="MeetingMeetingDate")
        @SerializedName("MeetingMeetingDate")
        @ApiMember(Name="MeetingMeetingDate", DataType="TrimDateTime", IsRequired=true, ParameterType="form")
        public TrimDateTime MeetingDate = null;

        @DataMember(Name="MeetingMeetingDuration")
        @SerializedName("MeetingMeetingDuration")
        @ApiMember(Name="MeetingMeetingDuration", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingDuration = null;

        @DataMember(Name="MeetingName")
        @SerializedName("MeetingName")
        @ApiMember(Name="MeetingName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="MeetingNotes")
        @SerializedName("MeetingNotes")
        @ApiMember(Name="MeetingNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="MeetingPending")
        @SerializedName("MeetingPending")
        @ApiMember(Name="MeetingPending", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Pending = null;

        @DataMember(Name="MeetingSubmissionsCutoffDate")
        @SerializedName("MeetingSubmissionsCutoffDate")
        @ApiMember(Name="MeetingSubmissionsCutoffDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime SubmissionsCutoffDate = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MeetingRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public MeetingRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public MeetingRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getAgendaIssueDate() { return AgendaIssueDate; }
        public MeetingRef setAgendaIssueDate(TrimDateTime value) { this.AgendaIssueDate = value; return this; }
        public TrimProperty<Boolean> getAgendaOpen() { return AgendaOpen; }
        public MeetingRef setAgendaOpen(TrimProperty<Boolean> value) { this.AgendaOpen = value; return this; }
        public TrimStringProperty getApologies() { return Apologies; }
        public MeetingRef setApologies(TrimStringProperty value) { this.Apologies = value; return this; }
        public TrimStringProperty getAttendees() { return Attendees; }
        public MeetingRef setAttendees(TrimStringProperty value) { this.Attendees = value; return this; }
        public TrimStringProperty getInvitations() { return Invitations; }
        public MeetingRef setInvitations(TrimStringProperty value) { this.Invitations = value; return this; }
        public TrimDateTime getMeetingDate() { return MeetingDate; }
        public MeetingRef setMeetingDate(TrimDateTime value) { this.MeetingDate = value; return this; }
        public TrimProperty<Integer> getMeetingDuration() { return MeetingDuration; }
        public MeetingRef setMeetingDuration(TrimProperty<Integer> value) { this.MeetingDuration = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public MeetingRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public MeetingRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getPending() { return Pending; }
        public MeetingRef setPending(TrimProperty<Boolean> value) { this.Pending = value; return this; }
        public TrimDateTime getSubmissionsCutoffDate() { return SubmissionsCutoffDate; }
        public MeetingRef setSubmissionsCutoffDate(TrimDateTime value) { this.SubmissionsCutoffDate = value; return this; }
    }

    @DataContract
    public static class AutoPartRuleRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="AutoPartRuleAccessControl")
        @SerializedName("AutoPartRuleAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="AutoPartRuleContentLimit")
        @SerializedName("AutoPartRuleContentLimit")
        @ApiMember(Name="AutoPartRuleContentLimit", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ContentLimit = null;

        @DataMember(Name="AutoPartRuleDateType")
        @SerializedName("AutoPartRuleDateType")
        @ApiMember(Name="AutoPartRuleDateType", DataType="string", ParameterType="form")
        public TrimProperty<AprDateTypes> DateType = null;

        @DataMember(Name="AutoPartRuleDelayInterval")
        @SerializedName("AutoPartRuleDelayInterval")
        @ApiMember(Name="AutoPartRuleDelayInterval", DataType="int", ParameterType="form")
        public TrimProperty<Integer> DelayInterval = null;

        @DataMember(Name="AutoPartRuleDelayType")
        @SerializedName("AutoPartRuleDelayType")
        @ApiMember(Name="AutoPartRuleDelayType", DataType="string", ParameterType="form")
        public TrimProperty<DateInterval> DelayType = null;

        @DataMember(Name="AutoPartRuleDescription")
        @SerializedName("AutoPartRuleDescription")
        @ApiMember(Name="AutoPartRuleDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="AutoPartRuleFixedDate")
        @SerializedName("AutoPartRuleFixedDate")
        @ApiMember(Name="AutoPartRuleFixedDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime FixedDate = null;

        @DataMember(Name="AutoPartRuleName")
        @SerializedName("AutoPartRuleName")
        @ApiMember(Name="AutoPartRuleName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="AutoPartRuleNotes")
        @SerializedName("AutoPartRuleNotes")
        @ApiMember(Name="AutoPartRuleNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="AutoPartRulePartRuleType")
        @SerializedName("AutoPartRulePartRuleType")
        @ApiMember(Name="AutoPartRulePartRuleType", DataType="string", ParameterType="form")
        public TrimProperty<AprType> PartRuleType = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AutoPartRuleRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public AutoPartRuleRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public AutoPartRuleRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Integer> getContentLimit() { return ContentLimit; }
        public AutoPartRuleRef setContentLimit(TrimProperty<Integer> value) { this.ContentLimit = value; return this; }
        public TrimProperty<AprDateTypes> getDateType() { return DateType; }
        public AutoPartRuleRef setDateType(TrimProperty<AprDateTypes> value) { this.DateType = value; return this; }
        public TrimProperty<Integer> getDelayInterval() { return DelayInterval; }
        public AutoPartRuleRef setDelayInterval(TrimProperty<Integer> value) { this.DelayInterval = value; return this; }
        public TrimProperty<DateInterval> getDelayType() { return DelayType; }
        public AutoPartRuleRef setDelayType(TrimProperty<DateInterval> value) { this.DelayType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public AutoPartRuleRef setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getFixedDate() { return FixedDate; }
        public AutoPartRuleRef setFixedDate(TrimDateTime value) { this.FixedDate = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public AutoPartRuleRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public AutoPartRuleRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<AprType> getPartRuleType() { return PartRuleType; }
        public AutoPartRuleRef setPartRuleType(TrimProperty<AprType> value) { this.PartRuleType = value; return this; }
    }

    public static enum NotesUpdateType
    {
        Overwrite,
        AppendOnly,
        AppendWithNewLine,
        AppendWithUserStamp,
        PrependOnly,
        PrependWithNewLine,
        PrependWithUserStamp;
    }

    public static enum DocumentReviewStates
    {
        None,
        Editing,
        Reviewing,
        Authorizing,
        Finalizing,
        Complete;
    }

    public static enum DisposalScheduleStatus
    {
        Pending,
        AlreadyDisposed,
        Unspecified,
        WaitingUntilInactive,
        NoRelevantTriggers,
        WaitingOnTriggerDate,
        Scheduled,
        SetWithoutSchedule;
    }

    public static enum SpElementType
    {
        None,
        Site,
        List,
        ListItem;
    }

    public static class BatchQuery
    {
        public String q = null;
        public String filter = null;
        public Long fromSearch = null;
        
        public String getQ() { return q; }
        public BatchQuery setQ(String value) { this.q = value; return this; }
        public String getFilter() { return filter; }
        public BatchQuery setFilter(String value) { this.filter = value; return this; }
        public Long getFromSearch() { return fromSearch; }
        public BatchQuery setFromSearch(Long value) { this.fromSearch = value; return this; }
    }

    public static enum PropertyType
    {
        Raw,
        String,
        Both;
    }

    public static enum StringDisplayType
    {
        Default,
        ViewPane,
        TreeColumn,
        Reporter,
        DataEntry,
        ErrorMessage,
        Export,
        Merge,
        WebService,
        WebPublish;
    }

    public static class TrimIcon
    {
        public Boolean IsFileTypeIcon = null;
        public Boolean IsInternalIcon = null;
        public Boolean IsValid = null;
        public String FileType = null;
        public Icons Id = null;
        
        public Boolean getIsFileTypeIcon() { return IsFileTypeIcon; }
        public TrimIcon setIsFileTypeIcon(Boolean value) { this.IsFileTypeIcon = value; return this; }
        public Boolean getIsInternalIcon() { return IsInternalIcon; }
        public TrimIcon setIsInternalIcon(Boolean value) { this.IsInternalIcon = value; return this; }
        public Boolean getIsValid() { return IsValid; }
        public TrimIcon setIsValid(Boolean value) { this.IsValid = value; return this; }
        public String getFileType() { return FileType; }
        public TrimIcon setFileType(String value) { this.FileType = value; return this; }
        public Icons getId() { return Id; }
        public TrimIcon setId(Icons value) { this.Id = value; return this; }
    }

    public static class DataEntryForm
    {
        public String Version = null;
        public Boolean SupportsElectronicDocs = null;
        public TitlingMethods TitlingMethod = null;
        public ArrayList<Page> Pages = null;
        
        public String getVersion() { return Version; }
        public DataEntryForm setVersion(String value) { this.Version = value; return this; }
        public Boolean isSupportsElectronicDocs() { return SupportsElectronicDocs; }
        public DataEntryForm setSupportsElectronicDocs(Boolean value) { this.SupportsElectronicDocs = value; return this; }
        public TitlingMethods getTitlingMethod() { return TitlingMethod; }
        public DataEntryForm setTitlingMethod(TitlingMethods value) { this.TitlingMethod = value; return this; }
        public ArrayList<Page> getPages() { return Pages; }
        public DataEntryForm setPages(ArrayList<Page> value) { this.Pages = value; return this; }
    }

    public static interface IMainObjectActionRequest
    {
        public BaseObjectTypes TrimType = null;
        public String Id = null;
    }

    public static class FieldDictionary extends HashMap<String,ITrimProperty>
    {
        
    }

    @DataContract
    public static class TrimMainObject extends TrimObject
    {
        @DataMember(Name="IsDeleteOk")
        @SerializedName("IsDeleteOk")
        public BooleanWithReason IsDeleteOk = null;

        /**
        * Resets this object to the current state on the database, will revert any changes that might have been made. Only required if you are not using BOBnotifications, or need to guarantee a really up-to-date version of the object state.
        */
        @DataMember
        @ApiMember(Name="Refresh", ParameterType="form", Verb="POST", Description="Resets this object to the current state on the database, will revert any changes that might have been made. Only required if you are not using BOBnotifications, or need to guarantee a really up-to-date version of the object state.")
        public Refresh Refresh = null;

        @DataMember(Name="IsInFavorites")
        @SerializedName("IsInFavorites")
        public Boolean IsInFavorites = null;

        @DataMember(Name="CanAddToNotes")
        @SerializedName("CanAddToNotes")
        public Boolean CanAddToNotes = null;

        @DataMember(Name="DateLastUpdated")
        @SerializedName("DateLastUpdated")
        public TrimDateTime DateLastUpdated = null;

        @DataMember(Name="LastUpdatedBy")
        @SerializedName("LastUpdatedBy")
        public LocationRef LastUpdatedBy = null;

        @DataMember(Name="EnabledCommandIds")
        @SerializedName("EnabledCommandIds")
        public ArrayList<CommandIds> EnabledCommandIds = null;

        @DataMember(Name="AttachedLabels")
        @SerializedName("AttachedLabels")
        public TrimStringProperty AttachedLabels = null;

        /**
        * True to ignore any additional fields sent that are not used by the underlying SDK object.
        */
        @DataMember(Name="IgnoreIrrelevantFields")
        @SerializedName("IgnoreIrrelevantFields")
        @ApiMember(Name="IgnoreIrrelevantFields", DataType="boolean", ParameterType="form", Verb="POST", Description="True to ignore any additional fields sent that are not used by the underlying SDK object.")
        public Boolean IgnoreIrrelevantFields = null;

        /**
        * Specify a query here to apply the update to a set of Records rather than only one (as specified by the Uri).
        */
        @DataMember
        @ApiMember(Name="q", DataType="string", ParameterType="form", Description="Specify a query here to apply the update to a set of Records rather than only one (as specified by the Uri).")
        public BatchQuery Q = null;

        /**
        * Specify which properties, in addition to those posted, should be returned by the request.
        */
        @DataMember(Name="properties")
        @SerializedName("properties")
        @ApiMember(Name="properties", DataType="string", ParameterType="form", Verb="POST", Description="Specify which properties, in addition to those posted, should be returned by the request.", AllowMultiple=true)
        public ArrayList<String> Properties = null;

        /**
        *  A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle.
        */
        @DataMember(Name="DescendantProperties")
        @SerializedName("DescendantProperties")
        @ApiMember(Name="descendantProperties", DataType="string", ParameterType="query", Description=" A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle.", AllowMultiple=true)
        public ArrayList<String> DescendantProperties = null;

        /**
        * Specify Property Sets, in addition to those posted, to be returned by the request.
        */
        @DataMember(Name="propertySets")
        @SerializedName("propertySets")
        @ApiMember(Name="propertySets", DataType="string", ParameterType="form", Verb="POST", Description="Specify Property Sets, in addition to those posted, to be returned by the request.", AllowMultiple=true)
        public ArrayList<String> PropertySets = null;

        /**
        * List of actions to be called after this object is saved.  Use this from HTML form post, otherwise use the service action property on the model.
        */
        @DataMember(Name="ServiceActions")
        @SerializedName("ServiceActions")
        @ApiMember(Name="ServiceActions", DataType="string", ParameterType="form", Verb="POST", Description="List of actions to be called after this object is saved.  Use this from HTML form post, otherwise use the service action property on the model.", AllowMultiple=true)
        public ArrayList<String> ServiceActions = null;

        /**
        * Include the raw value, the string value, or both in the results.
        */
        @DataMember(Name="PropertyValue")
        @SerializedName("PropertyValue")
        @ApiMember(Name="PropertyValue", DataType="string", ParameterType="form", Verb="POST", Description="Include the raw value, the string value, or both in the results.")
        public PropertyType PropertyValue = null;

        @DataMember(Name="StringDisplayType")
        @SerializedName("StringDisplayType")
        public StringDisplayType StringDisplayType = null;

        @DataMember
      //  public BaseObjectTypes TrimType = null;
        
        public BooleanWithReason getIsDeleteOk() { return IsDeleteOk; }
        public TrimMainObject setIsDeleteOk(BooleanWithReason value) { this.IsDeleteOk = value; return this; }
        public Refresh getRefresh() { return Refresh; }
        public TrimMainObject setRefresh(Refresh value) { this.Refresh = value; return this; }
        public Boolean getIsInFavorites() { return IsInFavorites; }
        public TrimMainObject setIsInFavorites(Boolean value) { this.IsInFavorites = value; return this; }
        public Boolean isCanAddToNotes() { return CanAddToNotes; }
        public TrimMainObject setCanAddToNotes(Boolean value) { this.CanAddToNotes = value; return this; }
        public TrimDateTime getDateLastUpdated() { return DateLastUpdated; }
        public TrimMainObject setDateLastUpdated(TrimDateTime value) { this.DateLastUpdated = value; return this; }
        public LocationRef getLastUpdatedBy() { return LastUpdatedBy; }
        public TrimMainObject setLastUpdatedBy(LocationRef value) { this.LastUpdatedBy = value; return this; }
        public ArrayList<CommandIds> getEnabledCommandIds() { return EnabledCommandIds; }
        public TrimMainObject setEnabledCommandIds(ArrayList<CommandIds> value) { this.EnabledCommandIds = value; return this; }
        public TrimStringProperty getAttachedLabels() { return AttachedLabels; }
        public TrimMainObject setAttachedLabels(TrimStringProperty value) { this.AttachedLabels = value; return this; }
        public Boolean isIgnoreIrrelevantFields() { return IgnoreIrrelevantFields; }
        public TrimMainObject setIgnoreIrrelevantFields(Boolean value) { this.IgnoreIrrelevantFields = value; return this; }
        public BatchQuery getQ() { return Q; }
        public TrimMainObject setQ(BatchQuery value) { this.Q = value; return this; }
        public ArrayList<String> getProperties() { return Properties; }
        public TrimMainObject setProperties(ArrayList<String> value) { this.Properties = value; return this; }
        public ArrayList<String> getDescendantProperties() { return DescendantProperties; }
        public TrimMainObject setDescendantProperties(ArrayList<String> value) { this.DescendantProperties = value; return this; }
        public ArrayList<String> getPropertySets() { return PropertySets; }
        public TrimMainObject setPropertySets(ArrayList<String> value) { this.PropertySets = value; return this; }
        public ArrayList<String> getServiceActions() { return ServiceActions; }
        public TrimMainObject setServiceActions(ArrayList<String> value) { this.ServiceActions = value; return this; }
        public PropertyType getPropertyValue() { return PropertyValue; }
        public TrimMainObject setPropertyValue(PropertyType value) { this.PropertyValue = value; return this; }
        public StringDisplayType getStringDisplayType() { return StringDisplayType; }
        public TrimMainObject setStringDisplayType(StringDisplayType value) { this.StringDisplayType = value; return this; }
     //   public BaseObjectTypes getTrimType() { return TrimType; }
     //   public TrimMainObject setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
    }

    @DataContract
    public static class UpdateErrorResponse
    {
        @DataMember(Order=1, EmitDefaultValue=false)
        public String ErrorCode = null;

        @DataMember(Order=2, EmitDefaultValue=false)
        public Long Uri = null;

        @DataMember(Order=3, EmitDefaultValue=false)
        public String Message = null;

        @DataMember(Order=4, EmitDefaultValue=false)
        public String Name = null;

        @DataMember(Order=4, EmitDefaultValue=false)
        public String NameExtra = null;
        
        public String getErrorCode() { return ErrorCode; }
        public UpdateErrorResponse setErrorCode(String value) { this.ErrorCode = value; return this; }
        public Long getUri() { return Uri; }
        public UpdateErrorResponse setUri(Long value) { this.Uri = value; return this; }
        public String getMessage() { return Message; }
        public UpdateErrorResponse setMessage(String value) { this.Message = value; return this; }
        public String getName() { return Name; }
        public UpdateErrorResponse setName(String value) { this.Name = value; return this; }
        public String getNameExtra() { return NameExtra; }
        public UpdateErrorResponse setNameExtra(String value) { this.NameExtra = value; return this; }
    }

    public static class PropertiesDictionary extends HashMap<BaseObjectTypes,PropertyOrFieldDefList>
    {
        
    }

    public static class TrimMainObjectSearchResponse<T>
    {
        public ArrayList<T> Results = null;
        public ArrayList<UpdateErrorResponse> UpdateErrorResults = null;
        public PropertiesDictionary PropertiesAndFields = null;
        public Long TotalResults = null;
        public Long Count = null;
        public Boolean HasMoreItems = null;
        public String SearchTitle = null;
        public String HitHighlightString = null;
        @DataMember
        public BaseObjectTypes TrimType = null;

        public ResponseStatus ResponseStatus = null;
        
        public ArrayList<T> getResults() { return Results; }
        public TrimMainObjectSearchResponse<T> setResults(ArrayList<T> value) { this.Results = value; return this; }
        public ArrayList<UpdateErrorResponse> getUpdateErrorResults() { return UpdateErrorResults; }
        public TrimMainObjectSearchResponse<T> setUpdateErrorResults(ArrayList<UpdateErrorResponse> value) { this.UpdateErrorResults = value; return this; }
        public PropertiesDictionary getPropertiesAndFields() { return PropertiesAndFields; }
        public TrimMainObjectSearchResponse<T> setPropertiesAndFields(PropertiesDictionary value) { this.PropertiesAndFields = value; return this; }
        public Long getTotalResults() { return TotalResults; }
        public TrimMainObjectSearchResponse<T> setTotalResults(Long value) { this.TotalResults = value; return this; }
        public Long getCount() { return Count; }
        public TrimMainObjectSearchResponse<T> setCount(Long value) { this.Count = value; return this; }
        public Boolean isHasMoreItems() { return HasMoreItems; }
        public TrimMainObjectSearchResponse<T> setHasMoreItems(Boolean value) { this.HasMoreItems = value; return this; }
        public String getSearchTitle() { return SearchTitle; }
        public TrimMainObjectSearchResponse<T> setSearchTitle(String value) { this.SearchTitle = value; return this; }
        public String getHitHighlightString() { return HitHighlightString; }
        public TrimMainObjectSearchResponse<T> setHitHighlightString(String value) { this.HitHighlightString = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public TrimMainObjectSearchResponse<T> setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ResponseStatus getResponseStatus() { return ResponseStatus; }
        public TrimMainObjectSearchResponse<T> setResponseStatus(ResponseStatus value) { this.ResponseStatus = value; return this; }
    }

    public static class TrimMainObjectSearch extends BaseTrimMainObjectSearch
    {
        /**
        * Enter a search query, e.g. 'all' to get all objects.
        */
        @ApiMember(Name="q", DataType="string", IsRequired=true, ParameterType="query", Verb="GET", Description="Enter a search query, e.g. 'all' to get all objects.")
        public String q = null;

        public BaseObjectTypes TrimType = null;
        
        public String getQ() { return q; }
        public TrimMainObjectSearch setQ(String value) { this.q = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public TrimMainObjectSearch setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
    }

    /**
    * Update a ActionDefStep object.
    */
    @Route(Path="/ActionDefStep", Verbs="POST")
    @Api("Update a ActionDefStep object.")
    @DataContract
    public static class ActionDefStep extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActionDefStepActionName")
        @SerializedName("ActionDefStepActionName")
        @ApiMember(Name="ActionDefStepActionName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ActionName = null;

        @DataMember(Name="ActionDefStepAssignee")
        @SerializedName("ActionDefStepAssignee")
        @ApiMember(Name="ActionDefStepAssignee", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Assignee = null;

        @DataMember(Name="ActionDefStepBasedOnAction")
        @SerializedName("ActionDefStepBasedOnAction")
        @ApiMember(Name="ActionDefStepBasedOnAction", DataType="long", ParameterType="form", Verb="POST")
        public ActionDefRef BasedOnAction = null;

        @DataMember(Name="ActionDefStepCost")
        @SerializedName("ActionDefStepCost")
        @ApiMember(Name="ActionDefStepCost", DataType="double", ParameterType="form")
        public TrimProperty<BigDecimal> Cost = null;

        @DataMember(Name="ActionDefStepDays")
        @SerializedName("ActionDefStepDays")
        @ApiMember(Name="ActionDefStepDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Days = null;

        @DataMember(Name="ActionDefStepHours")
        @SerializedName("ActionDefStepHours")
        @ApiMember(Name="ActionDefStepHours", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Hours = null;

        @DataMember(Name="ActionDefStepMinutes")
        @SerializedName("ActionDefStepMinutes")
        @ApiMember(Name="ActionDefStepMinutes", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Minutes = null;

        @DataMember(Name="ActionDefStepSequence")
        @SerializedName("ActionDefStepSequence")
        @ApiMember(Name="ActionDefStepSequence", DataType="int", ParameterType="form")
        public TrimProperty<Integer> Sequence = null;

        @DataMember(Name="ActionDefStepUseAssignee")
        @SerializedName("ActionDefStepUseAssignee")
        @ApiMember(Name="ActionDefStepUseAssignee", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseAssignee = null;

        @DataMember(Name="ActionDefStepUseCost")
        @SerializedName("ActionDefStepUseCost")
        @ApiMember(Name="ActionDefStepUseCost", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseCost = null;

        @DataMember(Name="ActionDefStepUseTime")
        @SerializedName("ActionDefStepUseTime")
        @ApiMember(Name="ActionDefStepUseTime", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseTime = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActionDefStep setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getActionName() { return ActionName; }
        public ActionDefStep setActionName(TrimStringProperty value) { this.ActionName = value; return this; }
        public LocationRef getAssignee() { return Assignee; }
        public ActionDefStep setAssignee(LocationRef value) { this.Assignee = value; return this; }
        public ActionDefRef getBasedOnAction() { return BasedOnAction; }
        public ActionDefStep setBasedOnAction(ActionDefRef value) { this.BasedOnAction = value; return this; }
        public TrimProperty<BigDecimal> getCost() { return Cost; }
        public ActionDefStep setCost(TrimProperty<BigDecimal> value) { this.Cost = value; return this; }
        public TrimProperty<Integer> getDays() { return Days; }
        public ActionDefStep setDays(TrimProperty<Integer> value) { this.Days = value; return this; }
        public TrimProperty<Integer> getHours() { return Hours; }
        public ActionDefStep setHours(TrimProperty<Integer> value) { this.Hours = value; return this; }
        public TrimProperty<Integer> getMinutes() { return Minutes; }
        public ActionDefStep setMinutes(TrimProperty<Integer> value) { this.Minutes = value; return this; }
        public TrimProperty<Integer> getSequence() { return Sequence; }
        public ActionDefStep setSequence(TrimProperty<Integer> value) { this.Sequence = value; return this; }
        public TrimProperty<Boolean> getUseAssignee() { return UseAssignee; }
        public ActionDefStep setUseAssignee(TrimProperty<Boolean> value) { this.UseAssignee = value; return this; }
        public TrimProperty<Boolean> getUseCost() { return UseCost; }
        public ActionDefStep setUseCost(TrimProperty<Boolean> value) { this.UseCost = value; return this; }
        public TrimProperty<Boolean> getUseTime() { return UseTime; }
        public ActionDefStep setUseTime(TrimProperty<Boolean> value) { this.UseTime = value; return this; }
    }

    public static class TrimMainObjectByUri
    {
        /**
        * Either the object Uri or unique name.
        */
        @ApiMember(Name="Id", DataType="string", IsRequired=true, Verb="GET", Description="Either the object Uri or unique name.")
        public String Id = null;

        public BaseObjectTypes TrimType = null;
        /**
        * A comma seperated list of object properties, e.g. RecordNumber,RecordTitle.
        */
        @ApiMember(Name="properties", DataType="string", ParameterType="query", Verb="GET", Description="A comma seperated list of object properties, e.g. RecordNumber,RecordTitle.", AllowMultiple=true)
        public ArrayList<String> Properties = null;

        /**
        *  A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle.
        */
        @ApiMember(Name="descendantProperties", DataType="string", ParameterType="query", Description=" A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle.", AllowMultiple=true)
        public ArrayList<String> DescendantProperties = null;

        /**
        * One or more pre-defined property sets, select from DataGridVisible, Detailed, FromSearch, All or a custom property set as defined in your service configuration.
        */
        @ApiMember(Name="propertySets", DataType="string", ParameterType="query", Verb="GET", Description="One or more pre-defined property sets, select from DataGridVisible, Detailed, FromSearch, All or a custom property set as defined in your service configuration.", AllowMultiple=true)
        public ArrayList<String> PropertySets = null;

        /**
        * Include the raw value, the string value, or both in the results.
        */
        @ApiMember(Name="PropertyValue", DataType="string", ParameterType="query", Verb="GET", Description="Include the raw value, the string value, or both in the results.")
        public PropertyType PropertyValue = null;

        /**
        * If returning the string value which format to use.
        */
        @ApiMember(Name="stringDisplayType", DataType="string", ParameterType="query", Verb="GET", Description="If returning the string value which format to use.")
        public StringDisplayType StringDisplayType = null;

        /**
        * True to return an array of the Property Definitions used by properties in this response.
        */
        @DataMember(Name="IncludePropertyDefs")
        @SerializedName("IncludePropertyDefs")
        @ApiMember(Name="IncludePropertyDefs", DataType="boolean", ParameterType="query", Verb="GET", Description="True to return an array of the Property Definitions used by properties in this response.")
        public Boolean IncludePropertyDefs = null;

        @DataMember(Name="CustomFieldParameters")
        @SerializedName("CustomFieldParameters")
        public HashMap<String,String> CustomFieldParameters = null;
        
        public String getId() { return Id; }
        public TrimMainObjectByUri setId(String value) { this.Id = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public TrimMainObjectByUri setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ArrayList<String> getProperties() { return Properties; }
        public TrimMainObjectByUri setProperties(ArrayList<String> value) { this.Properties = value; return this; }
        public ArrayList<String> getDescendantProperties() { return DescendantProperties; }
        public TrimMainObjectByUri setDescendantProperties(ArrayList<String> value) { this.DescendantProperties = value; return this; }
        public ArrayList<String> getPropertySets() { return PropertySets; }
        public TrimMainObjectByUri setPropertySets(ArrayList<String> value) { this.PropertySets = value; return this; }
        public PropertyType getPropertyValue() { return PropertyValue; }
        public TrimMainObjectByUri setPropertyValue(PropertyType value) { this.PropertyValue = value; return this; }
        public StringDisplayType getStringDisplayType() { return StringDisplayType; }
        public TrimMainObjectByUri setStringDisplayType(StringDisplayType value) { this.StringDisplayType = value; return this; }
        public Boolean isIncludePropertyDefs() { return IncludePropertyDefs; }
        public TrimMainObjectByUri setIncludePropertyDefs(Boolean value) { this.IncludePropertyDefs = value; return this; }
        public HashMap<String,String> getCustomFieldParameters() { return CustomFieldParameters; }
        public TrimMainObjectByUri setCustomFieldParameters(HashMap<String,String> value) { this.CustomFieldParameters = value; return this; }
    }

    /**
    * Update a ActivityAuthorization object.
    */
    @Route(Path="/ActivityAuthorization", Verbs="POST")
    @Api("Update a ActivityAuthorization object.")
    @DataContract
    public static class ActivityAuthorization extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActivityAuthorizationAuthorizedBy")
        @SerializedName("ActivityAuthorizationAuthorizedBy")
        @ApiMember(Name="ActivityAuthorizationAuthorizedBy", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef AuthorizedBy = null;

        @DataMember(Name="ActivityAuthorizationAuthorizedOn")
        @SerializedName("ActivityAuthorizationAuthorizedOn")
        @ApiMember(Name="ActivityAuthorizationAuthorizedOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime AuthorizedOn = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActivityAuthorization setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public LocationRef getAuthorizedBy() { return AuthorizedBy; }
        public ActivityAuthorization setAuthorizedBy(LocationRef value) { this.AuthorizedBy = value; return this; }
        public TrimDateTime getAuthorizedOn() { return AuthorizedOn; }
        public ActivityAuthorization setAuthorizedOn(TrimDateTime value) { this.AuthorizedOn = value; return this; }
    }

    /**
    * Update a ActivityDocument object.
    */
    @Route(Path="/ActivityDocument", Verbs="POST")
    @Api("Update a ActivityDocument object.")
    @DataContract
    public static class ActivityDocument extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActivityDocumentAction")
        @SerializedName("ActivityDocumentAction")
        @ApiMember(Name="ActivityDocumentAction", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<ActivityDocumentAction> Action = null;

        @DataMember(Name="ActivityDocumentDefaultContainer")
        @SerializedName("ActivityDocumentDefaultContainer")
        @ApiMember(Name="ActivityDocumentDefaultContainer", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef DefaultContainer = null;

        @DataMember(Name="ActivityDocumentDocumentId")
        @SerializedName("ActivityDocumentDocumentId")
        @ApiMember(Name="ActivityDocumentDocumentId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocumentId = null;

        @DataMember(Name="ActivityDocumentMandatory")
        @SerializedName("ActivityDocumentMandatory")
        @ApiMember(Name="ActivityDocumentMandatory", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> Mandatory = null;

        @DataMember(Name="ActivityDocumentOrigin")
        @SerializedName("ActivityDocumentOrigin")
        @ApiMember(Name="ActivityDocumentOrigin", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<ActivityDocumentOrigin> Origin = null;

        @DataMember(Name="ActivityDocumentOriginatingActivityId")
        @SerializedName("ActivityDocumentOriginatingActivityId")
        @ApiMember(Name="ActivityDocumentOriginatingActivityId", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> OriginatingActivityId = null;

        @DataMember(Name="ActivityDocumentRecord")
        @SerializedName("ActivityDocumentRecord")
        @ApiMember(Name="ActivityDocumentRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="ActivityDocumentRecordType")
        @SerializedName("ActivityDocumentRecordType")
        @ApiMember(Name="ActivityDocumentRecordType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef RecordType = null;

        @DataMember(Name="ActivityDocumentStatus")
        @SerializedName("ActivityDocumentStatus")
        @ApiMember(Name="ActivityDocumentStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<ActivityDocumentStatus> Status = null;

        @DataMember(Name="ActivityDocumentSupercopy")
        @SerializedName("ActivityDocumentSupercopy")
        @ApiMember(Name="ActivityDocumentSupercopy", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Supercopy = null;

        @DataMember(Name="ActivityDocumentTitle")
        @SerializedName("ActivityDocumentTitle")
        @ApiMember(Name="ActivityDocumentTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;

        @DataMember(Name="ActivityDocumentUsage")
        @SerializedName("ActivityDocumentUsage")
        @ApiMember(Name="ActivityDocumentUsage", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<ActivityDocumentUsage> Usage = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActivityDocument setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<ActivityDocumentAction> getAction() { return Action; }
        public ActivityDocument setAction(TrimProperty<ActivityDocumentAction> value) { this.Action = value; return this; }
        public RecordRef getDefaultContainer() { return DefaultContainer; }
        public ActivityDocument setDefaultContainer(RecordRef value) { this.DefaultContainer = value; return this; }
        public TrimStringProperty getDocumentId() { return DocumentId; }
        public ActivityDocument setDocumentId(TrimStringProperty value) { this.DocumentId = value; return this; }
        public TrimProperty<Boolean> getMandatory() { return Mandatory; }
        public ActivityDocument setMandatory(TrimProperty<Boolean> value) { this.Mandatory = value; return this; }
        public TrimProperty<ActivityDocumentOrigin> getOrigin() { return Origin; }
        public ActivityDocument setOrigin(TrimProperty<ActivityDocumentOrigin> value) { this.Origin = value; return this; }
        public TrimProperty<Integer> getOriginatingActivityId() { return OriginatingActivityId; }
        public ActivityDocument setOriginatingActivityId(TrimProperty<Integer> value) { this.OriginatingActivityId = value; return this; }
        public RecordRef getRecord() { return Record; }
        public ActivityDocument setRecord(RecordRef value) { this.Record = value; return this; }
        public RecordTypeRef getRecordType() { return RecordType; }
        public ActivityDocument setRecordType(RecordTypeRef value) { this.RecordType = value; return this; }
        public TrimProperty<ActivityDocumentStatus> getStatus() { return Status; }
        public ActivityDocument setStatus(TrimProperty<ActivityDocumentStatus> value) { this.Status = value; return this; }
        public RecordRef getSupercopy() { return Supercopy; }
        public ActivityDocument setSupercopy(RecordRef value) { this.Supercopy = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public ActivityDocument setTitle(TrimStringProperty value) { this.Title = value; return this; }
        public TrimProperty<ActivityDocumentUsage> getUsage() { return Usage; }
        public ActivityDocument setUsage(TrimProperty<ActivityDocumentUsage> value) { this.Usage = value; return this; }
    }

    /**
    * Update a ActivityEmailRecipient object.
    */
    @Route(Path="/ActivityEmailRecipient", Verbs="POST")
    @Api("Update a ActivityEmailRecipient object.")
    @DataContract
    public static class ActivityEmailRecipient extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActivityEmailRecipientCcTo")
        @SerializedName("ActivityEmailRecipientCcTo")
        @ApiMember(Name="ActivityEmailRecipientCcTo", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef CcTo = null;

        @DataMember(Name="ActivityEmailRecipientMessageTypes")
        @SerializedName("ActivityEmailRecipientMessageTypes")
        @ApiMember(Name="ActivityEmailRecipientMessageTypes", DataType="string", ParameterType="form")
        public TrimStringProperty MessageTypes = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActivityEmailRecipient setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public LocationRef getCcTo() { return CcTo; }
        public ActivityEmailRecipient setCcTo(LocationRef value) { this.CcTo = value; return this; }
        public TrimStringProperty getMessageTypes() { return MessageTypes; }
        public ActivityEmailRecipient setMessageTypes(TrimStringProperty value) { this.MessageTypes = value; return this; }
    }

    /**
    * Update a ActivityEscalation object.
    */
    @Route(Path="/ActivityEscalation", Verbs="POST")
    @Api("Update a ActivityEscalation object.")
    @DataContract
    public static class ActivityEscalation extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActivityEscalationDateEscalationDue")
        @SerializedName("ActivityEscalationDateEscalationDue")
        @ApiMember(Name="ActivityEscalationDateEscalationDue", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateEscalationDue = null;

        @DataMember(Name="ActivityEscalationDescription")
        @SerializedName("ActivityEscalationDescription")
        @ApiMember(Name="ActivityEscalationDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="ActivityEscalationEscalateTo")
        @SerializedName("ActivityEscalationEscalateTo")
        @ApiMember(Name="ActivityEscalationEscalateTo", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef EscalateTo = null;

        @DataMember(Name="ActivityEscalationWaitingPeriod")
        @SerializedName("ActivityEscalationWaitingPeriod")
        @ApiMember(Name="ActivityEscalationWaitingPeriod", DataType="long", IsRequired=true, ParameterType="form")
        public TrimProperty<Long> WaitingPeriod = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActivityEscalation setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getDateEscalationDue() { return DateEscalationDue; }
        public ActivityEscalation setDateEscalationDue(TrimDateTime value) { this.DateEscalationDue = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public ActivityEscalation setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public LocationRef getEscalateTo() { return EscalateTo; }
        public ActivityEscalation setEscalateTo(LocationRef value) { this.EscalateTo = value; return this; }
        public TrimProperty<Long> getWaitingPeriod() { return WaitingPeriod; }
        public ActivityEscalation setWaitingPeriod(TrimProperty<Long> value) { this.WaitingPeriod = value; return this; }
    }

    /**
    * Update a ActivityResult object.
    */
    @Route(Path="/ActivityResult", Verbs="POST")
    @Api("Update a ActivityResult object.")
    @DataContract
    public static class ActivityResult extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActivityResultDescription")
        @SerializedName("ActivityResultDescription")
        @ApiMember(Name="ActivityResultDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="ActivityResultName")
        @SerializedName("ActivityResultName")
        @ApiMember(Name="ActivityResultName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="ActivityResultPositions")
        @SerializedName("ActivityResultPositions")
        @ApiMember(Name="ActivityResultPositions", DataType="string", ParameterType="form")
        public TrimStringProperty Positions = null;

        @DataMember(Name="ActivityResultRollbackToId")
        @SerializedName("ActivityResultRollbackToId")
        @ApiMember(Name="ActivityResultRollbackToId", DataType="int", ParameterType="form")
        public TrimProperty<Integer> RollbackToId = null;

        @DataMember(Name="ActivityResultWasReached")
        @SerializedName("ActivityResultWasReached")
        @ApiMember(Name="ActivityResultWasReached", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> WasReached = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActivityResult setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public ActivityResult setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public ActivityResult setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getPositions() { return Positions; }
        public ActivityResult setPositions(TrimStringProperty value) { this.Positions = value; return this; }
        public TrimProperty<Integer> getRollbackToId() { return RollbackToId; }
        public ActivityResult setRollbackToId(TrimProperty<Integer> value) { this.RollbackToId = value; return this; }
        public TrimProperty<Boolean> getWasReached() { return WasReached; }
        public ActivityResult setWasReached(TrimProperty<Boolean> value) { this.WasReached = value; return this; }
    }

    /**
    * Update a ActivityStartCondition object.
    */
    @Route(Path="/ActivityStartCondition", Verbs="POST")
    @Api("Update a ActivityStartCondition object.")
    @DataContract
    public static class ActivityStartCondition extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActivityStartConditionDescription")
        @SerializedName("ActivityStartConditionDescription")
        @ApiMember(Name="ActivityStartConditionDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="ActivityStartConditionIsMandatory")
        @SerializedName("ActivityStartConditionIsMandatory")
        @ApiMember(Name="ActivityStartConditionIsMandatory", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsMandatory = null;

        @DataMember(Name="ActivityStartConditionLinePositions")
        @SerializedName("ActivityStartConditionLinePositions")
        @ApiMember(Name="ActivityStartConditionLinePositions", DataType="string", ParameterType="form")
        public TrimStringProperty LinePositions = null;

        @DataMember(Name="ActivityStartConditionNormalLinePositionFixed")
        @SerializedName("ActivityStartConditionNormalLinePositionFixed")
        @ApiMember(Name="ActivityStartConditionNormalLinePositionFixed", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NormalLinePositionFixed = null;

        @DataMember(Name="ActivityStartConditionOutlineLinePositionFixed")
        @SerializedName("ActivityStartConditionOutlineLinePositionFixed")
        @ApiMember(Name="ActivityStartConditionOutlineLinePositionFixed", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> OutlineLinePositionFixed = null;

        @DataMember(Name="ActivityStartConditionPredecessorId")
        @SerializedName("ActivityStartConditionPredecessorId")
        @ApiMember(Name="ActivityStartConditionPredecessorId", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> PredecessorId = null;

        @DataMember(Name="ActivityStartConditionPredecessorResult")
        @SerializedName("ActivityStartConditionPredecessorResult")
        @ApiMember(Name="ActivityStartConditionPredecessorResult", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty PredecessorResult = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActivityStartCondition setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public ActivityStartCondition setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getIsMandatory() { return IsMandatory; }
        public ActivityStartCondition setIsMandatory(TrimProperty<Boolean> value) { this.IsMandatory = value; return this; }
        public TrimStringProperty getLinePositions() { return LinePositions; }
        public ActivityStartCondition setLinePositions(TrimStringProperty value) { this.LinePositions = value; return this; }
        public TrimProperty<Boolean> getNormalLinePositionFixed() { return NormalLinePositionFixed; }
        public ActivityStartCondition setNormalLinePositionFixed(TrimProperty<Boolean> value) { this.NormalLinePositionFixed = value; return this; }
        public TrimProperty<Boolean> getOutlineLinePositionFixed() { return OutlineLinePositionFixed; }
        public ActivityStartCondition setOutlineLinePositionFixed(TrimProperty<Boolean> value) { this.OutlineLinePositionFixed = value; return this; }
        public TrimProperty<Integer> getPredecessorId() { return PredecessorId; }
        public ActivityStartCondition setPredecessorId(TrimProperty<Integer> value) { this.PredecessorId = value; return this; }
        public TrimStringProperty getPredecessorResult() { return PredecessorResult; }
        public ActivityStartCondition setPredecessorResult(TrimStringProperty value) { this.PredecessorResult = value; return this; }
    }

    public static enum Priority
    {
        VeryHigh(1),
        High(2),
        Medium(3),
        Low(4),
        VeryLow(5);

        private final int value;
        Priority(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    @DataContract
    public static class WorkflowTemplateRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="WorkflowTemplateAccessControl")
        @SerializedName("WorkflowTemplateAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="WorkflowTemplateActiveFrom")
        @SerializedName("WorkflowTemplateActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="WorkflowTemplateActiveTo")
        @SerializedName("WorkflowTemplateActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="WorkflowTemplateActiveDescription")
        @SerializedName("WorkflowTemplateActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="WorkflowTemplateIsActive")
        @SerializedName("WorkflowTemplateIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="WorkflowTemplateAutoStartActivities")
        @SerializedName("WorkflowTemplateAutoStartActivities")
        @ApiMember(Name="WorkflowTemplateAutoStartActivities", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoStartActivities = null;

        @DataMember(Name="WorkflowTemplateDateRegistered")
        @SerializedName("WorkflowTemplateDateRegistered")
        @ApiMember(Name="WorkflowTemplateDateRegistered", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateRegistered = null;

        @DataMember(Name="WorkflowTemplateDefaultPriority")
        @SerializedName("WorkflowTemplateDefaultPriority")
        @ApiMember(Name="WorkflowTemplateDefaultPriority", DataType="string", ParameterType="form")
        public TrimProperty<Priority> DefaultPriority = null;

        @DataMember(Name="WorkflowTemplateEmailSupervisor")
        @SerializedName("WorkflowTemplateEmailSupervisor")
        @ApiMember(Name="WorkflowTemplateEmailSupervisor", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailSupervisor = null;

        @DataMember(Name="WorkflowTemplateInitRecordBehavior")
        @SerializedName("WorkflowTemplateInitRecordBehavior")
        @ApiMember(Name="WorkflowTemplateInitRecordBehavior", DataType="string", ParameterType="form")
        public TrimProperty<InitiatingRecordBehavior> InitRecordBehavior = null;

        @DataMember(Name="WorkflowTemplateLockedOn")
        @SerializedName("WorkflowTemplateLockedOn")
        @ApiMember(Name="WorkflowTemplateLockedOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime LockedOn = null;

        @DataMember(Name="WorkflowTemplateLockStatus")
        @SerializedName("WorkflowTemplateLockStatus")
        @ApiMember(Name="WorkflowTemplateLockStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty LockStatus = null;

        @DataMember(Name="WorkflowTemplateMonthsToKeep")
        @SerializedName("WorkflowTemplateMonthsToKeep")
        @ApiMember(Name="WorkflowTemplateMonthsToKeep", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MonthsToKeep = null;

        @DataMember(Name="WorkflowTemplateName")
        @SerializedName("WorkflowTemplateName")
        @ApiMember(Name="WorkflowTemplateName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="WorkflowTemplateNotes")
        @SerializedName("WorkflowTemplateNotes")
        @ApiMember(Name="WorkflowTemplateNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="WorkflowTemplateOverheadCost")
        @SerializedName("WorkflowTemplateOverheadCost")
        @ApiMember(Name="WorkflowTemplateOverheadCost", DataType="double", ParameterType="form")
        public TrimProperty<BigDecimal> OverheadCost = null;

        @DataMember(Name="WorkflowTemplateRecalcWhenFinishEarly")
        @SerializedName("WorkflowTemplateRecalcWhenFinishEarly")
        @ApiMember(Name="WorkflowTemplateRecalcWhenFinishEarly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenFinishEarly = null;

        @DataMember(Name="WorkflowTemplateRecalcWhenFinishLate")
        @SerializedName("WorkflowTemplateRecalcWhenFinishLate")
        @ApiMember(Name="WorkflowTemplateRecalcWhenFinishLate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenFinishLate = null;

        @DataMember(Name="WorkflowTemplateRecalcWhenSuspended")
        @SerializedName("WorkflowTemplateRecalcWhenSuspended")
        @ApiMember(Name="WorkflowTemplateRecalcWhenSuspended", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenSuspended = null;

        @DataMember(Name="WorkflowTemplateTotalEstimatedCost")
        @SerializedName("WorkflowTemplateTotalEstimatedCost")
        @ApiMember(Name="WorkflowTemplateTotalEstimatedCost", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> TotalEstimatedCost = null;

        @DataMember(Name="WorkflowTemplateTotalEstimatedDuration")
        @SerializedName("WorkflowTemplateTotalEstimatedDuration")
        @ApiMember(Name="WorkflowTemplateTotalEstimatedDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalEstimatedDuration = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public WorkflowTemplateRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public WorkflowTemplateRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public WorkflowTemplateRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public WorkflowTemplateRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public WorkflowTemplateRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public WorkflowTemplateRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public WorkflowTemplateRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getAutoStartActivities() { return AutoStartActivities; }
        public WorkflowTemplateRef setAutoStartActivities(TrimProperty<Boolean> value) { this.AutoStartActivities = value; return this; }
        public TrimDateTime getDateRegistered() { return DateRegistered; }
        public WorkflowTemplateRef setDateRegistered(TrimDateTime value) { this.DateRegistered = value; return this; }
        public TrimProperty<Priority> getDefaultPriority() { return DefaultPriority; }
        public WorkflowTemplateRef setDefaultPriority(TrimProperty<Priority> value) { this.DefaultPriority = value; return this; }
        public TrimProperty<Boolean> getEmailSupervisor() { return EmailSupervisor; }
        public WorkflowTemplateRef setEmailSupervisor(TrimProperty<Boolean> value) { this.EmailSupervisor = value; return this; }
        public TrimProperty<InitiatingRecordBehavior> getInitRecordBehavior() { return InitRecordBehavior; }
        public WorkflowTemplateRef setInitRecordBehavior(TrimProperty<InitiatingRecordBehavior> value) { this.InitRecordBehavior = value; return this; }
        public TrimDateTime getLockedOn() { return LockedOn; }
        public WorkflowTemplateRef setLockedOn(TrimDateTime value) { this.LockedOn = value; return this; }
        public TrimStringProperty getLockStatus() { return LockStatus; }
        public WorkflowTemplateRef setLockStatus(TrimStringProperty value) { this.LockStatus = value; return this; }
        public TrimProperty<Integer> getMonthsToKeep() { return MonthsToKeep; }
        public WorkflowTemplateRef setMonthsToKeep(TrimProperty<Integer> value) { this.MonthsToKeep = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public WorkflowTemplateRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public WorkflowTemplateRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<BigDecimal> getOverheadCost() { return OverheadCost; }
        public WorkflowTemplateRef setOverheadCost(TrimProperty<BigDecimal> value) { this.OverheadCost = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenFinishEarly() { return RecalcWhenFinishEarly; }
        public WorkflowTemplateRef setRecalcWhenFinishEarly(TrimProperty<Boolean> value) { this.RecalcWhenFinishEarly = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenFinishLate() { return RecalcWhenFinishLate; }
        public WorkflowTemplateRef setRecalcWhenFinishLate(TrimProperty<Boolean> value) { this.RecalcWhenFinishLate = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenSuspended() { return RecalcWhenSuspended; }
        public WorkflowTemplateRef setRecalcWhenSuspended(TrimProperty<Boolean> value) { this.RecalcWhenSuspended = value; return this; }
        public TrimProperty<BigDecimal> getTotalEstimatedCost() { return TotalEstimatedCost; }
        public WorkflowTemplateRef setTotalEstimatedCost(TrimProperty<BigDecimal> value) { this.TotalEstimatedCost = value; return this; }
        public TrimProperty<Long> getTotalEstimatedDuration() { return TotalEstimatedDuration; }
        public WorkflowTemplateRef setTotalEstimatedDuration(TrimProperty<Long> value) { this.TotalEstimatedDuration = value; return this; }
    }

    public static enum ActivityStates
    {
        NotReadyToStart,
        ReadyToStart,
        Started,
        Suspended,
        ReadyToResume,
        PendingAuthorization,
        CompleteAndAuthorized,
        Skipped;
    }

    @DataContract
    public static class WorkflowRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="WorkflowAccessControl")
        @SerializedName("WorkflowAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="WorkflowAutoStartActivities")
        @SerializedName("WorkflowAutoStartActivities")
        @ApiMember(Name="WorkflowAutoStartActivities", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoStartActivities = null;

        @DataMember(Name="WorkflowDateCompleted")
        @SerializedName("WorkflowDateCompleted")
        @ApiMember(Name="WorkflowDateCompleted", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCompleted = null;

        @DataMember(Name="WorkflowDateDue")
        @SerializedName("WorkflowDateDue")
        @ApiMember(Name="WorkflowDateDue", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateDue = null;

        @DataMember(Name="WorkflowDateRegistered")
        @SerializedName("WorkflowDateRegistered")
        @ApiMember(Name="WorkflowDateRegistered", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateRegistered = null;

        @DataMember(Name="WorkflowDateStarted")
        @SerializedName("WorkflowDateStarted")
        @ApiMember(Name="WorkflowDateStarted", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateStarted = null;

        @DataMember(Name="WorkflowDestroyDueDate")
        @SerializedName("WorkflowDestroyDueDate")
        @ApiMember(Name="WorkflowDestroyDueDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DestroyDueDate = null;

        @DataMember(Name="WorkflowEmailSupervisor")
        @SerializedName("WorkflowEmailSupervisor")
        @ApiMember(Name="WorkflowEmailSupervisor", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailSupervisor = null;

        @DataMember(Name="WorkflowIncomplete")
        @SerializedName("WorkflowIncomplete")
        @ApiMember(Name="WorkflowIncomplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Incomplete = null;

        @DataMember(Name="WorkflowIsComplete")
        @SerializedName("WorkflowIsComplete")
        @ApiMember(Name="WorkflowIsComplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="WorkflowIsOverdue")
        @SerializedName("WorkflowIsOverdue")
        @ApiMember(Name="WorkflowIsOverdue", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsOverdue = null;

        @DataMember(Name="WorkflowJobNumber")
        @SerializedName("WorkflowJobNumber")
        @ApiMember(Name="WorkflowJobNumber", DataType="string", ParameterType="form")
        public TrimStringProperty JobNumber = null;

        @DataMember(Name="WorkflowJobNumberExpanded")
        @SerializedName("WorkflowJobNumberExpanded")
        @ApiMember(Name="WorkflowJobNumberExpanded", DataType="string", ParameterType="form")
        public TrimStringProperty JobNumberExpanded = null;

        @DataMember(Name="WorkflowLockedOn")
        @SerializedName("WorkflowLockedOn")
        @ApiMember(Name="WorkflowLockedOn", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime LockedOn = null;

        @DataMember(Name="WorkflowLockStatus")
        @SerializedName("WorkflowLockStatus")
        @ApiMember(Name="WorkflowLockStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty LockStatus = null;

        @DataMember(Name="WorkflowName")
        @SerializedName("WorkflowName")
        @ApiMember(Name="WorkflowName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="WorkflowNormalRect")
        @SerializedName("WorkflowNormalRect")
        @ApiMember(Name="WorkflowNormalRect", DataType="string", ParameterType="form")
        public TrimStringProperty NormalRect = null;

        @DataMember(Name="WorkflowNotes")
        @SerializedName("WorkflowNotes")
        @ApiMember(Name="WorkflowNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="WorkflowOutlineRect")
        @SerializedName("WorkflowOutlineRect")
        @ApiMember(Name="WorkflowOutlineRect", DataType="string", ParameterType="form")
        public TrimStringProperty OutlineRect = null;

        @DataMember(Name="WorkflowOverheadCost")
        @SerializedName("WorkflowOverheadCost")
        @ApiMember(Name="WorkflowOverheadCost", DataType="double", ParameterType="form")
        public TrimProperty<BigDecimal> OverheadCost = null;

        @DataMember(Name="WorkflowPercentageCompleted")
        @SerializedName("WorkflowPercentageCompleted")
        @ApiMember(Name="WorkflowPercentageCompleted", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> PercentageCompleted = null;

        @DataMember(Name="WorkflowRecalcWhenFinishEarly")
        @SerializedName("WorkflowRecalcWhenFinishEarly")
        @ApiMember(Name="WorkflowRecalcWhenFinishEarly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenFinishEarly = null;

        @DataMember(Name="WorkflowRecalcWhenFinishLate")
        @SerializedName("WorkflowRecalcWhenFinishLate")
        @ApiMember(Name="WorkflowRecalcWhenFinishLate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenFinishLate = null;

        @DataMember(Name="WorkflowRecalcWhenSuspended")
        @SerializedName("WorkflowRecalcWhenSuspended")
        @ApiMember(Name="WorkflowRecalcWhenSuspended", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecalcWhenSuspended = null;

        @DataMember(Name="WorkflowScheduledStartDate")
        @SerializedName("WorkflowScheduledStartDate")
        @ApiMember(Name="WorkflowScheduledStartDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ScheduledStartDate = null;

        @DataMember(Name="WorkflowTotalActualCost")
        @SerializedName("WorkflowTotalActualCost")
        @ApiMember(Name="WorkflowTotalActualCost", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> TotalActualCost = null;

        @DataMember(Name="WorkflowTotalActualDuration")
        @SerializedName("WorkflowTotalActualDuration")
        @ApiMember(Name="WorkflowTotalActualDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalActualDuration = null;

        @DataMember(Name="WorkflowTotalEstimatedCost")
        @SerializedName("WorkflowTotalEstimatedCost")
        @ApiMember(Name="WorkflowTotalEstimatedCost", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> TotalEstimatedCost = null;

        @DataMember(Name="WorkflowTotalEstimatedDuration")
        @SerializedName("WorkflowTotalEstimatedDuration")
        @ApiMember(Name="WorkflowTotalEstimatedDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalEstimatedDuration = null;

        @DataMember(Name="WorkflowTotalRemainingDuration")
        @SerializedName("WorkflowTotalRemainingDuration")
        @ApiMember(Name="WorkflowTotalRemainingDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalRemainingDuration = null;

        @DataMember(Name="WorkflowWorkflowPriority")
        @SerializedName("WorkflowWorkflowPriority")
        @ApiMember(Name="WorkflowWorkflowPriority", DataType="string", ParameterType="form")
        public TrimProperty<Priority> WorkflowPriority = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public WorkflowRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public WorkflowRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public WorkflowRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Boolean> getAutoStartActivities() { return AutoStartActivities; }
        public WorkflowRef setAutoStartActivities(TrimProperty<Boolean> value) { this.AutoStartActivities = value; return this; }
        public TrimDateTime getDateCompleted() { return DateCompleted; }
        public WorkflowRef setDateCompleted(TrimDateTime value) { this.DateCompleted = value; return this; }
        public TrimDateTime getDateDue() { return DateDue; }
        public WorkflowRef setDateDue(TrimDateTime value) { this.DateDue = value; return this; }
        public TrimDateTime getDateRegistered() { return DateRegistered; }
        public WorkflowRef setDateRegistered(TrimDateTime value) { this.DateRegistered = value; return this; }
        public TrimDateTime getDateStarted() { return DateStarted; }
        public WorkflowRef setDateStarted(TrimDateTime value) { this.DateStarted = value; return this; }
        public TrimDateTime getDestroyDueDate() { return DestroyDueDate; }
        public WorkflowRef setDestroyDueDate(TrimDateTime value) { this.DestroyDueDate = value; return this; }
        public TrimProperty<Boolean> getEmailSupervisor() { return EmailSupervisor; }
        public WorkflowRef setEmailSupervisor(TrimProperty<Boolean> value) { this.EmailSupervisor = value; return this; }
        public TrimProperty<Boolean> getIncomplete() { return Incomplete; }
        public WorkflowRef setIncomplete(TrimProperty<Boolean> value) { this.Incomplete = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public WorkflowRef setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<Boolean> getIsOverdue() { return IsOverdue; }
        public WorkflowRef setIsOverdue(TrimProperty<Boolean> value) { this.IsOverdue = value; return this; }
        public TrimStringProperty getJobNumber() { return JobNumber; }
        public WorkflowRef setJobNumber(TrimStringProperty value) { this.JobNumber = value; return this; }
        public TrimStringProperty getJobNumberExpanded() { return JobNumberExpanded; }
        public WorkflowRef setJobNumberExpanded(TrimStringProperty value) { this.JobNumberExpanded = value; return this; }
        public TrimDateTime getLockedOn() { return LockedOn; }
        public WorkflowRef setLockedOn(TrimDateTime value) { this.LockedOn = value; return this; }
        public TrimStringProperty getLockStatus() { return LockStatus; }
        public WorkflowRef setLockStatus(TrimStringProperty value) { this.LockStatus = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public WorkflowRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNormalRect() { return NormalRect; }
        public WorkflowRef setNormalRect(TrimStringProperty value) { this.NormalRect = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public WorkflowRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getOutlineRect() { return OutlineRect; }
        public WorkflowRef setOutlineRect(TrimStringProperty value) { this.OutlineRect = value; return this; }
        public TrimProperty<BigDecimal> getOverheadCost() { return OverheadCost; }
        public WorkflowRef setOverheadCost(TrimProperty<BigDecimal> value) { this.OverheadCost = value; return this; }
        public TrimProperty<Integer> getPercentageCompleted() { return PercentageCompleted; }
        public WorkflowRef setPercentageCompleted(TrimProperty<Integer> value) { this.PercentageCompleted = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenFinishEarly() { return RecalcWhenFinishEarly; }
        public WorkflowRef setRecalcWhenFinishEarly(TrimProperty<Boolean> value) { this.RecalcWhenFinishEarly = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenFinishLate() { return RecalcWhenFinishLate; }
        public WorkflowRef setRecalcWhenFinishLate(TrimProperty<Boolean> value) { this.RecalcWhenFinishLate = value; return this; }
        public TrimProperty<Boolean> getRecalcWhenSuspended() { return RecalcWhenSuspended; }
        public WorkflowRef setRecalcWhenSuspended(TrimProperty<Boolean> value) { this.RecalcWhenSuspended = value; return this; }
        public TrimDateTime getScheduledStartDate() { return ScheduledStartDate; }
        public WorkflowRef setScheduledStartDate(TrimDateTime value) { this.ScheduledStartDate = value; return this; }
        public TrimProperty<BigDecimal> getTotalActualCost() { return TotalActualCost; }
        public WorkflowRef setTotalActualCost(TrimProperty<BigDecimal> value) { this.TotalActualCost = value; return this; }
        public TrimProperty<Long> getTotalActualDuration() { return TotalActualDuration; }
        public WorkflowRef setTotalActualDuration(TrimProperty<Long> value) { this.TotalActualDuration = value; return this; }
        public TrimProperty<BigDecimal> getTotalEstimatedCost() { return TotalEstimatedCost; }
        public WorkflowRef setTotalEstimatedCost(TrimProperty<BigDecimal> value) { this.TotalEstimatedCost = value; return this; }
        public TrimProperty<Long> getTotalEstimatedDuration() { return TotalEstimatedDuration; }
        public WorkflowRef setTotalEstimatedDuration(TrimProperty<Long> value) { this.TotalEstimatedDuration = value; return this; }
        public TrimProperty<Long> getTotalRemainingDuration() { return TotalRemainingDuration; }
        public WorkflowRef setTotalRemainingDuration(TrimProperty<Long> value) { this.TotalRemainingDuration = value; return this; }
        public TrimProperty<Priority> getWorkflowPriority() { return WorkflowPriority; }
        public WorkflowRef setWorkflowPriority(TrimProperty<Priority> value) { this.WorkflowPriority = value; return this; }
    }

    /**
    * Update a AgendaItemAttachment object.
    */
    @Route(Path="/AgendaItemAttachment", Verbs="POST")
    @Api("Update a AgendaItemAttachment object.")
    @DataContract
    public static class AgendaItemAttachment extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AgendaItemAttachmentAgendaPrintStyle")
        @SerializedName("AgendaItemAttachmentAgendaPrintStyle")
        @ApiMember(Name="AgendaItemAttachmentAgendaPrintStyle", DataType="string", ParameterType="form")
        public TrimProperty<AgendaPrintStyles> AgendaPrintStyle = null;

        @DataMember(Name="AgendaItemAttachmentAttachedObject")
        @SerializedName("AgendaItemAttachmentAttachedObject")
        @ApiMember(Name="AgendaItemAttachmentAttachedObject", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AttachedObject = null;

        @DataMember(Name="AgendaItemAttachmentAttachedObjectType")
        @SerializedName("AgendaItemAttachmentAttachedObjectType")
        @ApiMember(Name="AgendaItemAttachmentAttachedObjectType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<BaseObjectTypes> AttachedObjectType = null;

        @DataMember(Name="AgendaItemAttachmentDescription")
        @SerializedName("AgendaItemAttachmentDescription")
        @ApiMember(Name="AgendaItemAttachmentDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="AgendaItemAttachmentLocation")
        @SerializedName("AgendaItemAttachmentLocation")
        @ApiMember(Name="AgendaItemAttachmentLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Location = null;

        @DataMember(Name="AgendaItemAttachmentObjectDetails")
        @SerializedName("AgendaItemAttachmentObjectDetails")
        @ApiMember(Name="AgendaItemAttachmentObjectDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ObjectDetails = null;

        @DataMember(Name="AgendaItemAttachmentRecord")
        @SerializedName("AgendaItemAttachmentRecord")
        @ApiMember(Name="AgendaItemAttachmentRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="AgendaItemAttachmentSequenceNumber")
        @SerializedName("AgendaItemAttachmentSequenceNumber")
        @ApiMember(Name="AgendaItemAttachmentSequenceNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> SequenceNumber = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AgendaItemAttachment setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<AgendaPrintStyles> getAgendaPrintStyle() { return AgendaPrintStyle; }
        public AgendaItemAttachment setAgendaPrintStyle(TrimProperty<AgendaPrintStyles> value) { this.AgendaPrintStyle = value; return this; }
        public TrimStringProperty getAttachedObject() { return AttachedObject; }
        public AgendaItemAttachment setAttachedObject(TrimStringProperty value) { this.AttachedObject = value; return this; }
        public TrimProperty<BaseObjectTypes> getAttachedObjectType() { return AttachedObjectType; }
        public AgendaItemAttachment setAttachedObjectType(TrimProperty<BaseObjectTypes> value) { this.AttachedObjectType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public AgendaItemAttachment setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public LocationRef getLocation() { return Location; }
        public AgendaItemAttachment setLocation(LocationRef value) { this.Location = value; return this; }
        public TrimStringProperty getObjectDetails() { return ObjectDetails; }
        public AgendaItemAttachment setObjectDetails(TrimStringProperty value) { this.ObjectDetails = value; return this; }
        public RecordRef getRecord() { return Record; }
        public AgendaItemAttachment setRecord(RecordRef value) { this.Record = value; return this; }
        public TrimProperty<Integer> getSequenceNumber() { return SequenceNumber; }
        public AgendaItemAttachment setSequenceNumber(TrimProperty<Integer> value) { this.SequenceNumber = value; return this; }
    }

    @DataContract
    public static class AgendaItemRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="AgendaItemAccessControl")
        @SerializedName("AgendaItemAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="AgendaItemAgendaItemOrderNumber")
        @SerializedName("AgendaItemAgendaItemOrderNumber")
        @ApiMember(Name="AgendaItemAgendaItemOrderNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AgendaItemOrderNumber = null;

        @DataMember(Name="AgendaItemApproved")
        @SerializedName("AgendaItemApproved")
        @ApiMember(Name="AgendaItemApproved", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Approved = null;

        @DataMember(Name="AgendaItemDateApproved")
        @SerializedName("AgendaItemDateApproved")
        @ApiMember(Name="AgendaItemDateApproved", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateApproved = null;

        @DataMember(Name="AgendaItemDateSubmitted")
        @SerializedName("AgendaItemDateSubmitted")
        @ApiMember(Name="AgendaItemDateSubmitted", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateSubmitted = null;

        @DataMember(Name="AgendaItemDescription")
        @SerializedName("AgendaItemDescription")
        @ApiMember(Name="AgendaItemDescription", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="AgendaItemDocDateModified")
        @SerializedName("AgendaItemDocDateModified")
        @ApiMember(Name="AgendaItemDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DocDateModified = null;

        @DataMember(Name="AgendaItemDocExtension")
        @SerializedName("AgendaItemDocExtension")
        @ApiMember(Name="AgendaItemDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocExtension = null;

        @DataMember(Name="AgendaItemDocSize")
        @SerializedName("AgendaItemDocSize")
        @ApiMember(Name="AgendaItemDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DocSize = null;

        @DataMember(Name="AgendaItemDocStoreId")
        @SerializedName("AgendaItemDocStoreId")
        @ApiMember(Name="AgendaItemDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocStoreId = null;

        @DataMember(Name="AgendaItemExpandedNumber")
        @SerializedName("AgendaItemExpandedNumber")
        @ApiMember(Name="AgendaItemExpandedNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ExpandedNumber = null;

        @DataMember(Name="AgendaItemIsPending")
        @SerializedName("AgendaItemIsPending")
        @ApiMember(Name="AgendaItemIsPending", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsPending = null;

        @DataMember(Name="AgendaItemIsSection")
        @SerializedName("AgendaItemIsSection")
        @ApiMember(Name="AgendaItemIsSection", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsSection = null;

        @DataMember(Name="AgendaItemIsStanding")
        @SerializedName("AgendaItemIsStanding")
        @ApiMember(Name="AgendaItemIsStanding", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsStanding = null;

        @DataMember(Name="AgendaItemNumber")
        @SerializedName("AgendaItemNumber")
        @ApiMember(Name="AgendaItemNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Number = null;

        @DataMember(Name="AgendaItemOutlineNumber")
        @SerializedName("AgendaItemOutlineNumber")
        @ApiMember(Name="AgendaItemOutlineNumber", DataType="string", ParameterType="form")
        public TrimStringProperty OutlineNumber = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AgendaItemRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public AgendaItemRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public AgendaItemRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Integer> getAgendaItemOrderNumber() { return AgendaItemOrderNumber; }
        public AgendaItemRef setAgendaItemOrderNumber(TrimProperty<Integer> value) { this.AgendaItemOrderNumber = value; return this; }
        public TrimProperty<Boolean> getApproved() { return Approved; }
        public AgendaItemRef setApproved(TrimProperty<Boolean> value) { this.Approved = value; return this; }
        public TrimDateTime getDateApproved() { return DateApproved; }
        public AgendaItemRef setDateApproved(TrimDateTime value) { this.DateApproved = value; return this; }
        public TrimDateTime getDateSubmitted() { return DateSubmitted; }
        public AgendaItemRef setDateSubmitted(TrimDateTime value) { this.DateSubmitted = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public AgendaItemRef setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getDocDateModified() { return DocDateModified; }
        public AgendaItemRef setDocDateModified(TrimDateTime value) { this.DocDateModified = value; return this; }
        public TrimStringProperty getDocExtension() { return DocExtension; }
        public AgendaItemRef setDocExtension(TrimStringProperty value) { this.DocExtension = value; return this; }
        public TrimProperty<Long> getDocSize() { return DocSize; }
        public AgendaItemRef setDocSize(TrimProperty<Long> value) { this.DocSize = value; return this; }
        public TrimStringProperty getDocStoreId() { return DocStoreId; }
        public AgendaItemRef setDocStoreId(TrimStringProperty value) { this.DocStoreId = value; return this; }
        public TrimStringProperty getExpandedNumber() { return ExpandedNumber; }
        public AgendaItemRef setExpandedNumber(TrimStringProperty value) { this.ExpandedNumber = value; return this; }
        public TrimProperty<Boolean> getIsPending() { return IsPending; }
        public AgendaItemRef setIsPending(TrimProperty<Boolean> value) { this.IsPending = value; return this; }
        public TrimProperty<Boolean> getIsSection() { return IsSection; }
        public AgendaItemRef setIsSection(TrimProperty<Boolean> value) { this.IsSection = value; return this; }
        public TrimProperty<Boolean> getIsStanding() { return IsStanding; }
        public AgendaItemRef setIsStanding(TrimProperty<Boolean> value) { this.IsStanding = value; return this; }
        public TrimStringProperty getNumber() { return Number; }
        public AgendaItemRef setNumber(TrimStringProperty value) { this.Number = value; return this; }
        public TrimStringProperty getOutlineNumber() { return OutlineNumber; }
        public AgendaItemRef setOutlineNumber(TrimStringProperty value) { this.OutlineNumber = value; return this; }
    }

    @DataContract
    public static class MinuteItemTypeRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="MinuteItemTypeAccessControl")
        @SerializedName("MinuteItemTypeAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="MinuteItemTypeDocDateModified")
        @SerializedName("MinuteItemTypeDocDateModified")
        @ApiMember(Name="MinuteItemTypeDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DocDateModified = null;

        @DataMember(Name="MinuteItemTypeDocExtension")
        @SerializedName("MinuteItemTypeDocExtension")
        @ApiMember(Name="MinuteItemTypeDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocExtension = null;

        @DataMember(Name="MinuteItemTypeDocSize")
        @SerializedName("MinuteItemTypeDocSize")
        @ApiMember(Name="MinuteItemTypeDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DocSize = null;

        @DataMember(Name="MinuteItemTypeDocStoreId")
        @SerializedName("MinuteItemTypeDocStoreId")
        @ApiMember(Name="MinuteItemTypeDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocStoreId = null;

        @DataMember(Name="MinuteItemTypeName")
        @SerializedName("MinuteItemTypeName")
        @ApiMember(Name="MinuteItemTypeName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MinuteItemTypeRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public MinuteItemTypeRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public MinuteItemTypeRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getDocDateModified() { return DocDateModified; }
        public MinuteItemTypeRef setDocDateModified(TrimDateTime value) { this.DocDateModified = value; return this; }
        public TrimStringProperty getDocExtension() { return DocExtension; }
        public MinuteItemTypeRef setDocExtension(TrimStringProperty value) { this.DocExtension = value; return this; }
        public TrimProperty<Long> getDocSize() { return DocSize; }
        public MinuteItemTypeRef setDocSize(TrimProperty<Long> value) { this.DocSize = value; return this; }
        public TrimStringProperty getDocStoreId() { return DocStoreId; }
        public MinuteItemTypeRef setDocStoreId(TrimStringProperty value) { this.DocStoreId = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public MinuteItemTypeRef setName(TrimStringProperty value) { this.Name = value; return this; }
    }

    @DataContract
    public static class AgendaItemTypeRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="AgendaItemTypeAccessControl")
        @SerializedName("AgendaItemTypeAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="AgendaItemTypeDocDateModified")
        @SerializedName("AgendaItemTypeDocDateModified")
        @ApiMember(Name="AgendaItemTypeDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DocDateModified = null;

        @DataMember(Name="AgendaItemTypeDocExtension")
        @SerializedName("AgendaItemTypeDocExtension")
        @ApiMember(Name="AgendaItemTypeDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocExtension = null;

        @DataMember(Name="AgendaItemTypeDocSize")
        @SerializedName("AgendaItemTypeDocSize")
        @ApiMember(Name="AgendaItemTypeDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> DocSize = null;

        @DataMember(Name="AgendaItemTypeDocStoreId")
        @SerializedName("AgendaItemTypeDocStoreId")
        @ApiMember(Name="AgendaItemTypeDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocStoreId = null;

        @DataMember(Name="AgendaItemTypeLastNumber")
        @SerializedName("AgendaItemTypeLastNumber")
        @ApiMember(Name="AgendaItemTypeLastNumber", DataType="string", ParameterType="form")
        public TrimStringProperty LastNumber = null;

        @DataMember(Name="AgendaItemTypeName")
        @SerializedName("AgendaItemTypeName")
        @ApiMember(Name="AgendaItemTypeName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="AgendaItemTypeNumberPattern")
        @SerializedName("AgendaItemTypeNumberPattern")
        @ApiMember(Name="AgendaItemTypeNumberPattern", DataType="string", ParameterType="form")
        public TrimStringProperty NumberPattern = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AgendaItemTypeRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public AgendaItemTypeRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public AgendaItemTypeRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimDateTime getDocDateModified() { return DocDateModified; }
        public AgendaItemTypeRef setDocDateModified(TrimDateTime value) { this.DocDateModified = value; return this; }
        public TrimStringProperty getDocExtension() { return DocExtension; }
        public AgendaItemTypeRef setDocExtension(TrimStringProperty value) { this.DocExtension = value; return this; }
        public TrimProperty<Long> getDocSize() { return DocSize; }
        public AgendaItemTypeRef setDocSize(TrimProperty<Long> value) { this.DocSize = value; return this; }
        public TrimStringProperty getDocStoreId() { return DocStoreId; }
        public AgendaItemTypeRef setDocStoreId(TrimStringProperty value) { this.DocStoreId = value; return this; }
        public TrimStringProperty getLastNumber() { return LastNumber; }
        public AgendaItemTypeRef setLastNumber(TrimStringProperty value) { this.LastNumber = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public AgendaItemTypeRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNumberPattern() { return NumberPattern; }
        public AgendaItemTypeRef setNumberPattern(TrimStringProperty value) { this.NumberPattern = value; return this; }
    }

    @DataContract
    public static class MeetingTypeRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="MeetingTypeAccessControl")
        @SerializedName("MeetingTypeAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="MeetingTypeAgendaIssue")
        @SerializedName("MeetingTypeAgendaIssue")
        @ApiMember(Name="MeetingTypeAgendaIssue", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AgendaIssue = null;

        @DataMember(Name="MeetingTypeAgendaIssueDesc")
        @SerializedName("MeetingTypeAgendaIssueDesc")
        @ApiMember(Name="MeetingTypeAgendaIssueDesc", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AgendaIssueDesc = null;

        @DataMember(Name="MeetingTypeAgendaIssueInterval")
        @SerializedName("MeetingTypeAgendaIssueInterval")
        @ApiMember(Name="MeetingTypeAgendaIssueInterval", DataType="string", ParameterType="form")
        public TrimProperty<TimeInterval> AgendaIssueInterval = null;

        @DataMember(Name="MeetingTypeAtDocDateModified")
        @SerializedName("MeetingTypeAtDocDateModified")
        @ApiMember(Name="MeetingTypeAtDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime AtDocDateModified = null;

        @DataMember(Name="MeetingTypeAtDocExtension")
        @SerializedName("MeetingTypeAtDocExtension")
        @ApiMember(Name="MeetingTypeAtDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AtDocExtension = null;

        @DataMember(Name="MeetingTypeAtDocSize")
        @SerializedName("MeetingTypeAtDocSize")
        @ApiMember(Name="MeetingTypeAtDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> AtDocSize = null;

        @DataMember(Name="MeetingTypeAtDocStoreId")
        @SerializedName("MeetingTypeAtDocStoreId")
        @ApiMember(Name="MeetingTypeAtDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AtDocStoreId = null;

        @DataMember(Name="MeetingTypeLatestMeeting")
        @SerializedName("MeetingTypeLatestMeeting")
        @ApiMember(Name="MeetingTypeLatestMeeting", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime LatestMeeting = null;

        @DataMember(Name="MeetingTypeMeeetingFrequencyDesc")
        @SerializedName("MeetingTypeMeeetingFrequencyDesc")
        @ApiMember(Name="MeetingTypeMeeetingFrequencyDesc", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MeeetingFrequencyDesc = null;

        @DataMember(Name="MeetingTypeMeetingDuration")
        @SerializedName("MeetingTypeMeetingDuration")
        @ApiMember(Name="MeetingTypeMeetingDuration", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingDuration = null;

        @DataMember(Name="MeetingTypeMeetingFrequency")
        @SerializedName("MeetingTypeMeetingFrequency")
        @ApiMember(Name="MeetingTypeMeetingFrequency", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingFrequency = null;

        @DataMember(Name="MeetingTypeMeetingFrequencyType")
        @SerializedName("MeetingTypeMeetingFrequencyType")
        @ApiMember(Name="MeetingTypeMeetingFrequencyType", DataType="string", ParameterType="form")
        public TrimProperty<DateInterval> MeetingFrequencyType = null;

        @DataMember(Name="MeetingTypeMeetingSnapDay")
        @SerializedName("MeetingTypeMeetingSnapDay")
        @ApiMember(Name="MeetingTypeMeetingSnapDay", DataType="string", ParameterType="form")
        public TrimProperty<DayOfTheWeek> MeetingSnapDay = null;

        @DataMember(Name="MeetingTypeMeetingSnapDayCount")
        @SerializedName("MeetingTypeMeetingSnapDayCount")
        @ApiMember(Name="MeetingTypeMeetingSnapDayCount", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingSnapDayCount = null;

        @DataMember(Name="MeetingTypeMeetingTime")
        @SerializedName("MeetingTypeMeetingTime")
        @ApiMember(Name="MeetingTypeMeetingTime", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MeetingTime = null;

        @DataMember(Name="MeetingTypeMtDocDateModified")
        @SerializedName("MeetingTypeMtDocDateModified")
        @ApiMember(Name="MeetingTypeMtDocDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime MtDocDateModified = null;

        @DataMember(Name="MeetingTypeMtDocExtension")
        @SerializedName("MeetingTypeMtDocExtension")
        @ApiMember(Name="MeetingTypeMtDocExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MtDocExtension = null;

        @DataMember(Name="MeetingTypeMtDocSize")
        @SerializedName("MeetingTypeMtDocSize")
        @ApiMember(Name="MeetingTypeMtDocSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> MtDocSize = null;

        @DataMember(Name="MeetingTypeMtDocStoreId")
        @SerializedName("MeetingTypeMtDocStoreId")
        @ApiMember(Name="MeetingTypeMtDocStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty MtDocStoreId = null;

        @DataMember(Name="MeetingTypeName")
        @SerializedName("MeetingTypeName")
        @ApiMember(Name="MeetingTypeName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="MeetingTypeNextMeeting")
        @SerializedName("MeetingTypeNextMeeting")
        @ApiMember(Name="MeetingTypeNextMeeting", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime NextMeeting = null;

        @DataMember(Name="MeetingTypeNotes")
        @SerializedName("MeetingTypeNotes")
        @ApiMember(Name="MeetingTypeNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="MeetingTypeOutlineNumbering")
        @SerializedName("MeetingTypeOutlineNumbering")
        @ApiMember(Name="MeetingTypeOutlineNumbering", DataType="string", ParameterType="form")
        public TrimProperty<OutlineNumberType> OutlineNumbering = null;

        @DataMember(Name="MeetingTypeSubmissionCutoff")
        @SerializedName("MeetingTypeSubmissionCutoff")
        @ApiMember(Name="MeetingTypeSubmissionCutoff", DataType="int", ParameterType="form")
        public TrimProperty<Integer> SubmissionCutoff = null;

        @DataMember(Name="MeetingTypeSubmissionCutoffDesc")
        @SerializedName("MeetingTypeSubmissionCutoffDesc")
        @ApiMember(Name="MeetingTypeSubmissionCutoffDesc", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty SubmissionCutoffDesc = null;

        @DataMember(Name="MeetingTypeSubmissionCutoffInterval")
        @SerializedName("MeetingTypeSubmissionCutoffInterval")
        @ApiMember(Name="MeetingTypeSubmissionCutoffInterval", DataType="string", ParameterType="form")
        public TrimProperty<TimeInterval> SubmissionCutoffInterval = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MeetingTypeRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public MeetingTypeRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public MeetingTypeRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Integer> getAgendaIssue() { return AgendaIssue; }
        public MeetingTypeRef setAgendaIssue(TrimProperty<Integer> value) { this.AgendaIssue = value; return this; }
        public TrimStringProperty getAgendaIssueDesc() { return AgendaIssueDesc; }
        public MeetingTypeRef setAgendaIssueDesc(TrimStringProperty value) { this.AgendaIssueDesc = value; return this; }
        public TrimProperty<TimeInterval> getAgendaIssueInterval() { return AgendaIssueInterval; }
        public MeetingTypeRef setAgendaIssueInterval(TrimProperty<TimeInterval> value) { this.AgendaIssueInterval = value; return this; }
        public TrimDateTime getAtDocDateModified() { return AtDocDateModified; }
        public MeetingTypeRef setAtDocDateModified(TrimDateTime value) { this.AtDocDateModified = value; return this; }
        public TrimStringProperty getAtDocExtension() { return AtDocExtension; }
        public MeetingTypeRef setAtDocExtension(TrimStringProperty value) { this.AtDocExtension = value; return this; }
        public TrimProperty<Long> getAtDocSize() { return AtDocSize; }
        public MeetingTypeRef setAtDocSize(TrimProperty<Long> value) { this.AtDocSize = value; return this; }
        public TrimStringProperty getAtDocStoreId() { return AtDocStoreId; }
        public MeetingTypeRef setAtDocStoreId(TrimStringProperty value) { this.AtDocStoreId = value; return this; }
        public TrimDateTime getLatestMeeting() { return LatestMeeting; }
        public MeetingTypeRef setLatestMeeting(TrimDateTime value) { this.LatestMeeting = value; return this; }
        public TrimStringProperty getMeeetingFrequencyDesc() { return MeeetingFrequencyDesc; }
        public MeetingTypeRef setMeeetingFrequencyDesc(TrimStringProperty value) { this.MeeetingFrequencyDesc = value; return this; }
        public TrimProperty<Integer> getMeetingDuration() { return MeetingDuration; }
        public MeetingTypeRef setMeetingDuration(TrimProperty<Integer> value) { this.MeetingDuration = value; return this; }
        public TrimProperty<Integer> getMeetingFrequency() { return MeetingFrequency; }
        public MeetingTypeRef setMeetingFrequency(TrimProperty<Integer> value) { this.MeetingFrequency = value; return this; }
        public TrimProperty<DateInterval> getMeetingFrequencyType() { return MeetingFrequencyType; }
        public MeetingTypeRef setMeetingFrequencyType(TrimProperty<DateInterval> value) { this.MeetingFrequencyType = value; return this; }
        public TrimProperty<DayOfTheWeek> getMeetingSnapDay() { return MeetingSnapDay; }
        public MeetingTypeRef setMeetingSnapDay(TrimProperty<DayOfTheWeek> value) { this.MeetingSnapDay = value; return this; }
        public TrimProperty<Integer> getMeetingSnapDayCount() { return MeetingSnapDayCount; }
        public MeetingTypeRef setMeetingSnapDayCount(TrimProperty<Integer> value) { this.MeetingSnapDayCount = value; return this; }
        public TrimProperty<Integer> getMeetingTime() { return MeetingTime; }
        public MeetingTypeRef setMeetingTime(TrimProperty<Integer> value) { this.MeetingTime = value; return this; }
        public TrimDateTime getMtDocDateModified() { return MtDocDateModified; }
        public MeetingTypeRef setMtDocDateModified(TrimDateTime value) { this.MtDocDateModified = value; return this; }
        public TrimStringProperty getMtDocExtension() { return MtDocExtension; }
        public MeetingTypeRef setMtDocExtension(TrimStringProperty value) { this.MtDocExtension = value; return this; }
        public TrimProperty<Long> getMtDocSize() { return MtDocSize; }
        public MeetingTypeRef setMtDocSize(TrimProperty<Long> value) { this.MtDocSize = value; return this; }
        public TrimStringProperty getMtDocStoreId() { return MtDocStoreId; }
        public MeetingTypeRef setMtDocStoreId(TrimStringProperty value) { this.MtDocStoreId = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public MeetingTypeRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimDateTime getNextMeeting() { return NextMeeting; }
        public MeetingTypeRef setNextMeeting(TrimDateTime value) { this.NextMeeting = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public MeetingTypeRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<OutlineNumberType> getOutlineNumbering() { return OutlineNumbering; }
        public MeetingTypeRef setOutlineNumbering(TrimProperty<OutlineNumberType> value) { this.OutlineNumbering = value; return this; }
        public TrimProperty<Integer> getSubmissionCutoff() { return SubmissionCutoff; }
        public MeetingTypeRef setSubmissionCutoff(TrimProperty<Integer> value) { this.SubmissionCutoff = value; return this; }
        public TrimStringProperty getSubmissionCutoffDesc() { return SubmissionCutoffDesc; }
        public MeetingTypeRef setSubmissionCutoffDesc(TrimStringProperty value) { this.SubmissionCutoffDesc = value; return this; }
        public TrimProperty<TimeInterval> getSubmissionCutoffInterval() { return SubmissionCutoffInterval; }
        public MeetingTypeRef setSubmissionCutoffInterval(TrimProperty<TimeInterval> value) { this.SubmissionCutoffInterval = value; return this; }
    }

    /**
    * Update a AgendaItemTypeAttachment object.
    */
    @Route(Path="/AgendaItemTypeAttachment", Verbs="POST")
    @Api("Update a AgendaItemTypeAttachment object.")
    @DataContract
    public static class AgendaItemTypeAttachment extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AgendaItemTypeAttachmentAgendaPrintStyle")
        @SerializedName("AgendaItemTypeAttachmentAgendaPrintStyle")
        @ApiMember(Name="AgendaItemTypeAttachmentAgendaPrintStyle", DataType="string", ParameterType="form")
        public TrimProperty<AgendaPrintStyles> AgendaPrintStyle = null;

        @DataMember(Name="AgendaItemTypeAttachmentAttachedObjectType")
        @SerializedName("AgendaItemTypeAttachmentAttachedObjectType")
        @ApiMember(Name="AgendaItemTypeAttachmentAttachedObjectType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<BaseObjectTypes> AttachedObjectType = null;

        @DataMember(Name="AgendaItemTypeAttachmentDescription")
        @SerializedName("AgendaItemTypeAttachmentDescription")
        @ApiMember(Name="AgendaItemTypeAttachmentDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="AgendaItemTypeAttachmentSequenceNumber")
        @SerializedName("AgendaItemTypeAttachmentSequenceNumber")
        @ApiMember(Name="AgendaItemTypeAttachmentSequenceNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> SequenceNumber = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AgendaItemTypeAttachment setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<AgendaPrintStyles> getAgendaPrintStyle() { return AgendaPrintStyle; }
        public AgendaItemTypeAttachment setAgendaPrintStyle(TrimProperty<AgendaPrintStyles> value) { this.AgendaPrintStyle = value; return this; }
        public TrimProperty<BaseObjectTypes> getAttachedObjectType() { return AttachedObjectType; }
        public AgendaItemTypeAttachment setAttachedObjectType(TrimProperty<BaseObjectTypes> value) { this.AttachedObjectType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public AgendaItemTypeAttachment setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Integer> getSequenceNumber() { return SequenceNumber; }
        public AgendaItemTypeAttachment setSequenceNumber(TrimProperty<Integer> value) { this.SequenceNumber = value; return this; }
    }

    /**
    * Update a AlertSubscriber object.
    */
    @Route(Path="/AlertSubscriber", Verbs="POST")
    @Api("Update a AlertSubscriber object.")
    @DataContract
    public static class AlertSubscriber extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AlertSubscriberDescription")
        @SerializedName("AlertSubscriberDescription")
        @ApiMember(Name="AlertSubscriberDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="AlertSubscriberIsSuspended")
        @SerializedName("AlertSubscriberIsSuspended")
        @ApiMember(Name="AlertSubscriberIsSuspended", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsSuspended = null;

        @DataMember(Name="AlertSubscriberSuspendedFrom")
        @SerializedName("AlertSubscriberSuspendedFrom")
        @ApiMember(Name="AlertSubscriberSuspendedFrom", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime SuspendedFrom = null;

        @DataMember(Name="AlertSubscriberSuspendedUntil")
        @SerializedName("AlertSubscriberSuspendedUntil")
        @ApiMember(Name="AlertSubscriberSuspendedUntil", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime SuspendedUntil = null;

        @DataMember(Name="AlertSubscriberUser")
        @SerializedName("AlertSubscriberUser")
        @ApiMember(Name="AlertSubscriberUser", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef User = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public AlertSubscriber setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public AlertSubscriber setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getIsSuspended() { return IsSuspended; }
        public AlertSubscriber setIsSuspended(TrimProperty<Boolean> value) { this.IsSuspended = value; return this; }
        public TrimDateTime getSuspendedFrom() { return SuspendedFrom; }
        public AlertSubscriber setSuspendedFrom(TrimDateTime value) { this.SuspendedFrom = value; return this; }
        public TrimDateTime getSuspendedUntil() { return SuspendedUntil; }
        public AlertSubscriber setSuspendedUntil(TrimDateTime value) { this.SuspendedUntil = value; return this; }
        public LocationRef getUser() { return User; }
        public AlertSubscriber setUser(LocationRef value) { this.User = value; return this; }
    }

    public static enum Events
    {
        ObjectAdded(0),
        ObjectModified(1),
        ObjectRemoved(2),
        SecurityChanged(3),
        AccessControlChanged(4),
        IssueResolved(5),
        RecordApproved(6),
        RecordRejected(7),
        PickListCreated(8),
        Disposed(9),
        RecordExcluded(10),
        SignatureCreated(11),
        SignatureAttached(12),
        SignatureVerified(13),
        SignatureFailVerify(14),
        ActivityCompleted(17),
        ActivityAssigned(18),
        ActivityReassigned(19),
        ActivityUndone(21),
        ActivityCurrent(22),
        TriggersChanged(23),
        RecalcDispEvents(24),
        BreachDetected(25),
        EstoreNearingCapacity(26),
        EstoreFull(27),
        UserLogon(28),
        UserLogoff(29),
        UserLogonFailed(30),
        ActionCompleted(31),
        ActionAssigned(32),
        ActionReassigned(33),
        ActionUndone(34),
        ActionCurrent(35),
        UserLogonImpersonation(36),
        UserLogonImpersonationFailed(37),
        ApproveConsignmentMailOut(38),
        ReviewConsignmentMailOut(39),
        RecordIdChanged(40),
        ContainerChanged(41),
        CurLocChanged(42),
        RecNotesChanged(43),
        CreateDateChanged(44),
        TitleChanged(45),
        RecSchChanged(46),
        HomeChanged(47),
        OwnerChanged(48),
        ContactAdded(49),
        ContactRemoved(50),
        DispositionChanged(51),
        ScheduleReviewed(52),
        MadeVital(53),
        MadeNotVital(54),
        HoldAdded(55),
        HoldRemoved(56),
        ExternalEvent(57),
        RecordExported(59),
        AuditSettingsChanged(60),
        ClassificationChanged(61),
        Finalized(62),
        Unfinalized(63),
        CloseDateChanged(64),
        UdfChanged(65),
        ClassificationApproved(66),
        RecordRelationshipAdded(67),
        RecordRelationshipRemoved(68),
        CsDeclassifyChanged(69),
        CsDowngradeChanged(70),
        ContentIndexAdd(71),
        ContentIndexRemove(73),
        FileTypesModified(74),
        ReindexWords(75),
        ReindexExtra(76),
        ReindexField(79),
        RegDateChanged(80),
        DueDateChanged(81),
        DatePublishedChanged(82),
        DateInactiveChanged(83),
        DateLastActionChanged(84),
        DateDestructionChanged(85),
        DateRetentionChanged(86),
        AgendaNowReady(87),
        MinutesNowReady(88),
        ActivitySkipped(90),
        RecordSuperseded(91),
        ActivityNeedsAuthorization(92),
        AgendaItemApproved(93),
        AgendaItemRescheduled(94),
        TodoItemReassigned(95),
        TodoItemCompleted(96),
        ContentAdded(97),
        ContentRemoved(98),
        SharePointLinkRemoved(99),
        AutoPartCheck(100),
        IdolMetadataSchemaChanged(102),
        IdolMetadataChanged(103),
        IdolMetadataContainerSecurityChanged(104),
        IdolMetadataUserHierarchyChanged(105),
        DataCleanup(106),
        RecordWebPublished(107),
        DocViewed(110),
        DocCheckedOut(111),
        DocExtracted(112),
        DocReplaced(113),
        DocNewVersion(114),
        DocUndoCheckout(115),
        DocRemoved(116),
        DocAttached(117),
        DocPublished(118),
        DocPrinted(119),
        DocExportedToXML(120),
        DocRenditionAdded(121),
        DocRenditionExtracted(122),
        DocRenditionPrinted(123),
        DocRenditionViewed(124),
        DocRevisionExtracted(125),
        DocRevisionPrinted(126),
        DocRevisionViewed(127),
        DocRevisionRemoved(128),
        DocLinkExtracted(129),
        DocLinkPrinted(130),
        DocLinkViewed(131),
        DocMailed(132),
        DocMailedLink(133),
        DocAnnotated(134),
        DocNotAnnotated(135),
        DocRedacted(136),
        CopiedAccessControlChanged(137),
        StorageTransferred(138),
        StorageTransferredInPlace(139),
        DocRenditionRemoved(140),
        CurLocAssigned(141),
        HomeAssigned(142),
        OwnerAssigned(143),
        AccessExclusionsChanged(144),
        HoldDatesChanged(145),
        NewInstantOnUser(146),
        RecordCopied(147),
        CaveatRemoved(148),
        SpiViewed(149),
        SpiEdited(150),
        SpiManaged(151),
        SpiRelocated(152),
        SpiExposed(153),
        DocumentReadyForDrafting(154),
        DocumentReadyForReview(155),
        DocumentReadyForAuthorization(156),
        DocumentReviewCommentsUpdated(157),
        DocumentReviewComplete(158),
        DocumentAuthorizationComplete(159),
        SignedRenditionPromoted(160),
        DocusignFailed(161),
        DataConversionCompleted(162),
        ScheduleReplaced(163),
        DirSyncConfigChanged(164);

        private final int value;
        Events(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum AprDateTypes
    {
        None(0),
        DateCreated(1),
        DatePublished(2),
        DateRegistered(3),
        DateInactive(5),
        DateModified(6),
        DateFinalized(7),
        UserDefined(8),
        FixedDate(9);

        private final int value;
        AprDateTypes(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum AprType
    {
        Close,
        CloseAndCreate;
    }

    public static enum MailFolderTypes
    {
        NormalFolder,
        SentItems,
        ConversationHistory,
        Calendar;
    }

    public static enum CheckinPlaceTypes
    {
        MailForServerProcessing,
        DocsForServerProcessing,
        MailForClientProcessing;
    }

    @DataContract
    public static class JurisdictionRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="JurisdictionActiveFrom")
        @SerializedName("JurisdictionActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="JurisdictionActiveTo")
        @SerializedName("JurisdictionActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="JurisdictionActiveDescription")
        @SerializedName("JurisdictionActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="JurisdictionIsActive")
        @SerializedName("JurisdictionIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="JurisdictionComments")
        @SerializedName("JurisdictionComments")
        @ApiMember(Name="JurisdictionComments", DataType="string", ParameterType="form")
        public TrimStringProperty Comments = null;

        @DataMember(Name="JurisdictionDescription")
        @SerializedName("JurisdictionDescription")
        @ApiMember(Name="JurisdictionDescription", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="JurisdictionJurisdictionType")
        @SerializedName("JurisdictionJurisdictionType")
        @ApiMember(Name="JurisdictionJurisdictionType", DataType="string", ParameterType="form")
        public TrimProperty<JurisdictionTypes> JurisdictionType = null;

        @DataMember(Name="JurisdictionMembers")
        @SerializedName("JurisdictionMembers")
        @ApiMember(Name="JurisdictionMembers", DataType="string", ParameterType="form")
        public TrimStringProperty Members = null;

        @DataMember(Name="JurisdictionName")
        @SerializedName("JurisdictionName")
        @ApiMember(Name="JurisdictionName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public JurisdictionRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public JurisdictionRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public JurisdictionRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public JurisdictionRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public JurisdictionRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getComments() { return Comments; }
        public JurisdictionRef setComments(TrimStringProperty value) { this.Comments = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public JurisdictionRef setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<JurisdictionTypes> getJurisdictionType() { return JurisdictionType; }
        public JurisdictionRef setJurisdictionType(TrimProperty<JurisdictionTypes> value) { this.JurisdictionType = value; return this; }
        public TrimStringProperty getMembers() { return Members; }
        public JurisdictionRef setMembers(TrimStringProperty value) { this.Members = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public JurisdictionRef setName(TrimStringProperty value) { this.Name = value; return this; }
    }

    /**
    * Update a ClassificationSapBusinessObject object.
    */
    @Route(Path="/ClassificationSapBusinessObject", Verbs="POST")
    @Api("Update a ClassificationSapBusinessObject object.")
    @DataContract
    public static class ClassificationSapBusinessObject extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ClassificationSapBusinessObjectBusinessObject")
        @SerializedName("ClassificationSapBusinessObjectBusinessObject")
        @ApiMember(Name="ClassificationSapBusinessObjectBusinessObject", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty BusinessObject = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ClassificationSapBusinessObject setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getBusinessObject() { return BusinessObject; }
        public ClassificationSapBusinessObject setBusinessObject(TrimStringProperty value) { this.BusinessObject = value; return this; }
    }

    public static enum DateIntervalSing
    {
        Day,
        Week,
        Month,
        Year;
    }

    /**
    * Update a CommunicationDetail object.
    */
    @Route(Path="/CommunicationDetail", Verbs="POST")
    @Api("Update a CommunicationDetail object.")
    @DataContract
    public static class CommunicationDetail extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="CommunicationDetailAddressDescription")
        @SerializedName("CommunicationDetailAddressDescription")
        @ApiMember(Name="CommunicationDetailAddressDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AddressDescription = null;

        @DataMember(Name="CommunicationDetailAddressDescriptionISO")
        @SerializedName("CommunicationDetailAddressDescriptionISO")
        @ApiMember(Name="CommunicationDetailAddressDescriptionISO", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AddressDescriptionISO = null;

        @DataMember(Name="CommunicationDetailAddressLines")
        @SerializedName("CommunicationDetailAddressLines")
        @ApiMember(Name="CommunicationDetailAddressLines", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AddressLines = null;

        @DataMember(Name="CommunicationDetailAddressType")
        @SerializedName("CommunicationDetailAddressType")
        @ApiMember(Name="CommunicationDetailAddressType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<SnapAddressType> AddressType = null;

        @DataMember(Name="CommunicationDetailAddressUri")
        @SerializedName("CommunicationDetailAddressUri")
        @ApiMember(Name="CommunicationDetailAddressUri", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AddressUri = null;

        @DataMember(Name="CommunicationDetailCity")
        @SerializedName("CommunicationDetailCity")
        @ApiMember(Name="CommunicationDetailCity", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty City = null;

        @DataMember(Name="CommunicationDetailCountry")
        @SerializedName("CommunicationDetailCountry")
        @ApiMember(Name="CommunicationDetailCountry", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Country = null;

        @DataMember(Name="CommunicationDetailCountryISO")
        @SerializedName("CommunicationDetailCountryISO")
        @ApiMember(Name="CommunicationDetailCountryISO", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CountryISO = null;

        @DataMember(Name="CommunicationDetailDated")
        @SerializedName("CommunicationDetailDated")
        @ApiMember(Name="CommunicationDetailDated", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime Dated = null;

        @DataMember(Name="CommunicationDetailDirection")
        @SerializedName("CommunicationDetailDirection")
        @ApiMember(Name="CommunicationDetailDirection", DataType="string", ParameterType="form")
        public TrimProperty<CommunicatorType> Direction = null;

        @DataMember(Name="CommunicationDetailEmailAddress")
        @SerializedName("CommunicationDetailEmailAddress")
        @ApiMember(Name="CommunicationDetailEmailAddress", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty EmailAddress = null;

        @DataMember(Name="CommunicationDetailFaxNumber")
        @SerializedName("CommunicationDetailFaxNumber")
        @ApiMember(Name="CommunicationDetailFaxNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FaxNumber = null;

        @DataMember(Name="CommunicationDetailLocation")
        @SerializedName("CommunicationDetailLocation")
        @ApiMember(Name="CommunicationDetailLocation", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Location = null;

        @DataMember(Name="CommunicationDetailLocationName")
        @SerializedName("CommunicationDetailLocationName")
        @ApiMember(Name="CommunicationDetailLocationName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty LocationName = null;

        @DataMember(Name="CommunicationDetailPostcode")
        @SerializedName("CommunicationDetailPostcode")
        @ApiMember(Name="CommunicationDetailPostcode", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Postcode = null;

        @DataMember(Name="CommunicationDetailRecordSent")
        @SerializedName("CommunicationDetailRecordSent")
        @ApiMember(Name="CommunicationDetailRecordSent", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef RecordSent = null;

        @DataMember(Name="CommunicationDetailReference")
        @SerializedName("CommunicationDetailReference")
        @ApiMember(Name="CommunicationDetailReference", DataType="string", ParameterType="form")
        public TrimStringProperty Reference = null;

        @DataMember(Name="CommunicationDetailRegion")
        @SerializedName("CommunicationDetailRegion")
        @ApiMember(Name="CommunicationDetailRegion", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Region = null;

        @DataMember(Name="CommunicationDetailState")
        @SerializedName("CommunicationDetailState")
        @ApiMember(Name="CommunicationDetailState", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty State = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public CommunicationDetail setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getAddressDescription() { return AddressDescription; }
        public CommunicationDetail setAddressDescription(TrimStringProperty value) { this.AddressDescription = value; return this; }
        public TrimStringProperty getAddressDescriptionISO() { return AddressDescriptionISO; }
        public CommunicationDetail setAddressDescriptionISO(TrimStringProperty value) { this.AddressDescriptionISO = value; return this; }
        public TrimStringProperty getAddressLines() { return AddressLines; }
        public CommunicationDetail setAddressLines(TrimStringProperty value) { this.AddressLines = value; return this; }
        public TrimProperty<SnapAddressType> getAddressType() { return AddressType; }
        public CommunicationDetail setAddressType(TrimProperty<SnapAddressType> value) { this.AddressType = value; return this; }
        public TrimStringProperty getAddressUri() { return AddressUri; }
        public CommunicationDetail setAddressUri(TrimStringProperty value) { this.AddressUri = value; return this; }
        public TrimStringProperty getCity() { return City; }
        public CommunicationDetail setCity(TrimStringProperty value) { this.City = value; return this; }
        public TrimStringProperty getCountry() { return Country; }
        public CommunicationDetail setCountry(TrimStringProperty value) { this.Country = value; return this; }
        public TrimStringProperty getCountryISO() { return CountryISO; }
        public CommunicationDetail setCountryISO(TrimStringProperty value) { this.CountryISO = value; return this; }
        public TrimDateTime getDated() { return Dated; }
        public CommunicationDetail setDated(TrimDateTime value) { this.Dated = value; return this; }
        public TrimProperty<CommunicatorType> getDirection() { return Direction; }
        public CommunicationDetail setDirection(TrimProperty<CommunicatorType> value) { this.Direction = value; return this; }
        public TrimStringProperty getEmailAddress() { return EmailAddress; }
        public CommunicationDetail setEmailAddress(TrimStringProperty value) { this.EmailAddress = value; return this; }
        public TrimStringProperty getFaxNumber() { return FaxNumber; }
        public CommunicationDetail setFaxNumber(TrimStringProperty value) { this.FaxNumber = value; return this; }
        public LocationRef getLocation() { return Location; }
        public CommunicationDetail setLocation(LocationRef value) { this.Location = value; return this; }
        public TrimStringProperty getLocationName() { return LocationName; }
        public CommunicationDetail setLocationName(TrimStringProperty value) { this.LocationName = value; return this; }
        public TrimStringProperty getPostcode() { return Postcode; }
        public CommunicationDetail setPostcode(TrimStringProperty value) { this.Postcode = value; return this; }
        public RecordRef getRecordSent() { return RecordSent; }
        public CommunicationDetail setRecordSent(RecordRef value) { this.RecordSent = value; return this; }
        public TrimStringProperty getReference() { return Reference; }
        public CommunicationDetail setReference(TrimStringProperty value) { this.Reference = value; return this; }
        public TrimStringProperty getRegion() { return Region; }
        public CommunicationDetail setRegion(TrimStringProperty value) { this.Region = value; return this; }
        public TrimStringProperty getState() { return State; }
        public CommunicationDetail setState(TrimStringProperty value) { this.State = value; return this; }
    }

    public static enum CommunicationDirection
    {
        Incoming,
        Outgoing,
        Internal;
    }

    public static enum CommunicationMedium
    {
        Post,
        Fax,
        Email,
        Courier,
        Custom1,
        Custom2,
        Custom3,
        Custom4;
    }

    public static enum ConsignmentDisposalType
    {
        Archive(1),
        Transfer(2),
        Destroy(3);

        private final int value;
        ConsignmentDisposalType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum ConsignmentItemApprovalStatus
    {
        Pending,
        Approved,
        Rejected,
        Removed;
    }

    public static enum ConsignmentItemIssueType
    {
        ResolveByArchivist,
        IssueSevere,
        MoreInfoNeeded,
        IssueWarning;
    }

    public static enum DocumentUpdateStyles
    {
        NoAction,
        Delete,
        KeepCheckedOut,
        NotApplicable;
    }

    public static enum QueueTypes
    {
        WinFolder(0),
        NotesFolder(3),
        MapiFolder(4);

        private final int value;
        QueueTypes(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum StoreStatus
    {
        Available,
        ClosedForAdd,
        ReadOnly;
    }

    public static enum TieredStorageType
    {
        Unknown,
        Tier1,
        Tier2,
        Tier3,
        CustomA,
        CustomB;
    }

    public static enum EstoreTypes
    {
        FsDirectory(0),
        External(5),
        Connector(6),
        Centera(7),
        Icas(8);

        private final int value;
        EstoreTypes(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum UserFieldFormats
    {
        String(0),
        Number(1),
        Boolean(2),
        Date(3),
        Datetime(4),
        Decimal(5),
        Text(6),
        Currency(7),
        Object(9),
        BigNumber(11),
        Xml(12),
        Geography(13);

        private final int value;
        UserFieldFormats(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum Icons
    {
        Unknown(0),
        Hptrim(1),
        TrfContext(2),
        TrfCaptura(3),
        GrmDropzone(4),
        TrimQueue(5),
        TrimWcfg(6),
        TrimEvnt(7),
        TrimWorkgroup(8),
        TrimEnterpriseStudio(9),
        TrimRender(10),
        TrimDesktop(11),
        Viewer(12),
        Tick(450),
        Cross(451),
        Up(455),
        Down(456),
        MandatoryField(458),
        YellowFile(502),
        YellowDoc(503),
        YellowBox(504),
        YellowBook(505),
        WhiteFile(506),
        WhiteDoc(507),
        WhiteBox(508),
        WhiteBook(509),
        GreenFile(510),
        GreenDoc(511),
        GreenBox(512),
        GreenBook(513),
        LtBlueFile(514),
        LtBlueDoc(515),
        LtBlueBox(516),
        LtBlueBook(517),
        DkBlueFile(518),
        DkBlueDoc(519),
        DkBlueBox(520),
        DkBlueBook(521),
        BlackFile(522),
        BlackDoc(523),
        BlackBox(524),
        BlackBook(525),
        RedFile(526),
        RedDoc(527),
        RedBox(528),
        RedBook(529),
        GreyFile(530),
        GreyDoc(531),
        GreyBox(532),
        GreyBook(533),
        PinkFile(534),
        PinkDoc(535),
        PinkBox(536),
        PinkBook(537),
        TealFile(538),
        TealDoc(539),
        TealBox(540),
        TealBook(541),
        EnvOpen(542),
        EnvClosed(543),
        Cd(544),
        Clipboard(545),
        Tape1(546),
        Tape2(547),
        Floppy3(548),
        Floppy5(549),
        OrangeFile(550),
        OrangeDoc(551),
        OrangeBox(552),
        OrangeBook(553),
        BrownFile(554),
        BrownDoc(555),
        BrownBox(556),
        BrownBook(557),
        Graphic(558),
        LavFile(559),
        LavDoc(560),
        LavBox(561),
        LavBook(562),
        BeigeFile(563),
        BeigeDoc(564),
        BeigeBox(565),
        BeigeBook(566),
        LtGrnFile(567),
        LtGrnDoc(568),
        LtGrnBox(569),
        LtGrnBook(570),
        LtPpleFile(571),
        LtPpleDoc(572),
        LtPpleBox(573),
        LtPpleBook(574),
        ActAction(575),
        ActDone(576),
        ActDue(577),
        ActNormal(578),
        ActOverdue(579),
        ActPrcDone(580),
        ActPrcDue(581),
        ActPrcNormal(582),
        ActPrcOverdue(583),
        ActProcedure(584),
        AdmCensus(585),
        BobCaveat(590),
        BobDocQueueFtp(591),
        BobDocQueueMail(592),
        BobDocQueues(593),
        BobUserDefinedFields(594),
        BobLookupSetItem(596),
        BobLookupSets(597),
        BobNetwork(598),
        BobNotes(599),
        BobSecGuide(600),
        BobOrigin(601),
        BobSecurityLevel(602),
        BobTask(603),
        BobTaskComplete(604),
        BobTaskOverdue(605),
        BobWebLayouts(606),
        Database(610),
        DbpSearchMethod(621),
        SrhFavorites(622),
        DmsDraft(625),
        DmsLinked(626),
        DmsModified(627),
        DmsReadonly(628),
        DmsUnknown(629),
        DmsUnmodified(630),
        FpPlans(637),
        FpFavorites(638),
        LocFavorites(640),
        LocCommittee(641),
        LocContact(642),
        Telephone(643),
        LocList(644),
        LocExtCommittee(645),
        LocExternal(646),
        LocExtPosition(647),
        LocExtProjectteam(648),
        LocGroup(649),
        BobInactive(650),
        LocInternal(651),
        LocLoginAdmin(652),
        LocLoginContributor(653),
        LocLoginDisabled(654),
        LocLoginEndUser(655),
        LocLoginEnquiry(656),
        LocLoginExpired(657),
        LocLoginManager(658),
        LocLoginNone(659),
        LocLoginWorker(660),
        LocOrg(661),
        LocPerson(662),
        LocPosition(663),
        LocZipCode(664),
        LocProjectTeam(665),
        LocUnit(666),
        LocUnknown(667),
        LocVenue(668),
        LocWorkgroup(669),
        LocExtVenue(670),
        LocStreet(671),
        MbxvVmbx(675),
        MbxvVmbxClip(676),
        RecNewRendition(679),
        RecAtHome(680),
        RecCertificate(681),
        RecDocsTray(682),
        RecDueTray(683),
        RecEstatusAvailable(684),
        RecEstatusCheckedoutOther(685),
        RecEstatusCheckedoutYou(686),
        RecEstatusHasEmailAtt(687),
        RecEstatusNoDocument(688),
        RecFavoritesTray(689),
        RecInContainer(690),
        RecInDueTray(691),
        RecInSpace(692),
        RecInTray(693),
        RecMissing(694),
        RecMyContainersTray(695),
        RecOffline(696),
        RecRecentDocsTray(697),
        RecRendition(699),
        RecRequests(700),
        RecRevision(701),
        BobSecurityBreach(702),
        RecTaskTray(703),
        RecTransmittals(704),
        RecWorkTray(705),
        RpBarcode(710),
        RpBitmap(711),
        RpCaption(712),
        RpField(714),
        OcxPaletteLine(715),
        RpNumberBar(716),
        OcxPaletteRectangle(718),
        RpReport(719),
        RpTabstop(722),
        RpText(723),
        RpReportCustom(724),
        OcxPaletteEllipse(725),
        OcxPalettePencil(726),
        OcxPaletteFill(727),
        OcxPaletteDropper(728),
        RtyFormLine(732),
        RtyFormPage(733),
        RtyRecordType(736),
        SchFavorites(739),
        SchDispActive(740),
        SchDispArchived(741),
        SchDispTransferred(743),
        SchDispDestroyed(744),
        SchHolds(747),
        SchHoldsOnlyForDisp(748),
        SchInactive(749),
        SchLesssevere(750),
        SchMaybeMoreSevere(751),
        SchMoreSevere(752),
        SchSchedule(753),
        SpmSpace(755),
        Progress(760),
        ThFavorites(764),
        ThAspect(765),
        ThKeynode(767),
        ThKeyword(768),
        ThList(769),
        ThNonPreferred(770),
        ThPrompt(771),
        ThRelBroader(772),
        ThRelForbidden(773),
        ThRelNarrower(774),
        ThRelPreferred(775),
        ThRelRelated(776),
        ThTerm(777),
        ThKeywordPrompt(778),
        DcqFavorites(779),
        TrmBarcodeScanner(780),
        TrmQueueIdle(781),
        TrmQueueRunning1(782),
        TrmQueueRunning2(783),
        TrmQueueRunning3(784),
        TrmQueueStopped(785),
        TrmQueueStopping(786),
        UtyWord(794),
        UtyAgendaItem(795),
        UtyAgendaItemAttachment(796),
        UtyAgendaItemType(797),
        UtyAlert(798),
        UtyMinuteItemType(799),
        UtyMailTemplates(800),
        UtyMeetingDocument(801),
        UtyMeetingInvitation(802),
        UtyMeetings(803),
        UtyMeetingType(804),
        UtyMinuteItem(805),
        UtyPrinters(806),
        UtyStopword(807),
        UtyStore(808),
        UtyTodoItem(809),
        UtyTodoItemReference(810),
        UtyAgendaItemStanding(812),
        UtyAgendaItemSection(813),
        UtyAgendaItemStandingSection(814),
        WrkActionCreate(815),
        WrkActionReference(816),
        WrkActionReview(817),
        WrkDocStatusClear(818),
        WrkDocStatusIn(819),
        WrkOriginInitiating(824),
        WrkOriginOtherActivity(825),
        WrkOriginReference(826),
        WrkOriginThisActivity(827),
        WrkWorkflow(828),
        WrkActivity(829),
        BobPriorityHigh(830),
        BobPriorityLow(831),
        BobPriorityVeryHigh(833),
        BobPriorityVeryLow(834),
        BobPriorityMedium(835),
        WrkTemplate(837),
        WrkWorkflowFav(838),
        WrkTemplateFav(839),
        WrkActivitiesDueTray(840),
        WrkTemplateAct(841),
        WrkStateNotReadyToStart(842),
        WrkStateReadyToStart(843),
        WrkStateStarted(844),
        WrkStateSuspended(845),
        WrkStateReadyToResume(846),
        WrkStateOverdue(847),
        WrkStateNeedsAuthorization(848),
        WrkStateCompleted(849),
        WrkStateSkipped(850),
        UtyTodoItemsTray(854),
        LocExtGroup(855),
        UtyAutoPartRule(856),
        ArrowUp(857),
        ArrowDown(858),
        Clock(859),
        FaceDownGreen(860),
        FaceDownPurple(861),
        FaceDownRed(862),
        FaceDownYellow(863),
        FaceUpAqua(864),
        FaceUpGreen(865),
        FaceUpRed(866),
        FaceUpYellow(867),
        HeartGold(868),
        HeartPurple(869),
        HeartRed(870),
        HeartTurquoise(871),
        Info(872),
        MarbleWorld(873),
        MarbleWorldGreen(874),
        MarbleWorldRed(875),
        PersonGreen(876),
        PersonOj(877),
        PersonPink(878),
        PersonPurple(879),
        PinAqua(880),
        PinGreen(881),
        PinRed(882),
        SquareAquaHeart(883),
        SquareBlueHeart(884),
        SquareGreenHeart(885),
        SquarePurpleHeart(886),
        Star1(887),
        Star2(888),
        Star3(889),
        Star4(890),
        TheHand(891),
        TheHandBrown(892),
        TheHandGold(893),
        TheHandPurple(894),
        Warning(895),
        Work(896),
        WrkInsertActivities(1002),
        Count(1003),
        WindowCascade(1004),
        WindowTileVert(1005),
        WindowTileHorz(1006),
        MdiCloseChildren(1007),
        TrmNewObject(1008),
        OcxHelpContents(1009),
        HelpIndex(1010),
        Help(1011),
        TrmToggleOnlineOff(1012),
        TrmToggleOnlineOn(1013),
        Open(1014),
        RecCheckin(1015),
        RecCheckout(1016),
        RecSupercopy(1017),
        RecContainer(1018),
        RecDocFinal(1019),
        RecDocRevisions(1020),
        RecDocRemove(1021),
        RecDocRenditions(1022),
        CompareDocument(1023),
        TemDeploy(1024),
        MdiFirstPage(1025),
        MdiNextPage(1026),
        FileSave(1027),
        FileSaveAs(1028),
        RecSaveAndClear(1029),
        Refresh(1030),
        PrintDoc(1031),
        GoBack(1032),
        GoForward(1033),
        Search(1034),
        RecRequest(1035),
        NavFavorites(1036),
        TrmLocationSearch(1037),
        TrmWorkflows(1038),
        SearchHistory(1039),
        SaveSearch(1040),
        NavAll(1041),
        TrmWorkflowActivities(1042),
        TrmCommunications(1043),
        NavContainer(1044),
        NavContents(1045),
        NavContentsExt(1046),
        NavContainerExt(1047),
        NavAllParts(1048),
        RecNewPart(1049),
        NavLatestVersion(1050),
        NavCurrentVersion(1051),
        NavAllVersions(1052),
        NavRelated(1053),
        NavSameContact(1054),
        NavClient(1055),
        NavSeriesContents(1056),
        RecSeries(1057),
        NavLatestPart(1058),
        EditUndo(1059),
        EditCopy(1060),
        EditPaste(1061),
        EditCut(1062),
        EditSelectAll(1063),
        MbToggleAllTags(1064),
        AddToFavorites(1065),
        VwrMailReply(1066),
        VwrMailReplyToAll(1067),
        VwrMailForward(1068),
        ReccurrentLoc(1069),
        RecAddContact(1070),
        Security(1071),
        RecNewVersion(1072),
        RecRetention(1073),
        RecAttachAction(1074),
        RecRelate(1075),
        RecCompleteCurrAct(1076),
        RecDates(1077),
        RecNewWorkflow(1078),
        RecHistory(1079),
        PrintMerge(1080),
        RequestRendition(1081),
        EditFind(1082),
        VwrPinToTrim(1083),
        VwrDither(1084),
        VwrGridLines(1085),
        VwrDraft(1086),
        VwrDocNormal(1087),
        VwrDocPreview(1088),
        VwrShowOriginalSize(1089),
        VwrZoomIn(1090),
        VwrZoomOut(1091),
        VwrZoomSelection(1092),
        VwrZoomReset(1093),
        VwrFitToWindow(1094),
        VwrFitToWindowWidth(1095),
        VwrFitToWindowHeight(1096),
        VwrRotateLeft(1097),
        VwrRotateRight(1098),
        VwrRotateAround(1099),
        VwrZipExtractThisFile(1100),
        VwrZipExtractSelected(1101),
        VwrZipExtractAll(1102),
        WrkAddActivity(1103),
        WrkShowDocuments(1104),
        WrkAlignSameLeft(1105),
        WrkAlignSameCenter(1106),
        WrkAlignSameRight(1107),
        WrkAlignSameTop(1108),
        WrkAlignSameMiddle(1109),
        WrkAlignSameBottom(1110),
        WrkAlignWorkflowTopLeft(1111),
        WrkAlignWorkflowTopRight(1112),
        WrkAlignWorkflowBottomLeft(1113),
        WrkAlignWorkflowBottomRight(1114),
        WrkAlignWorkflowCenter(1115),
        UncompleteActivity(1116),
        RollbackActivity(1117),
        AuthorizeActivity(1118),
        RejectActivity(1119),
        SuspendActivity(1120),
        ResumeActivity(1121),
        StartActivity(1122),
        CompleteActivity(1123),
        ReassignActivity(1124),
        AcquireActivity(1125),
        RelinquishActivity(1126),
        Properties(1127),
        SecurityPolicy(1128),
        MbUntagAll(1129),
        GrmNewCompoundRecord(1130),
        GrmCloseCompoundRecord(1131),
        GrmExtractDocument(1132),
        GrmNewWorkgroup(1133),
        GrmSelectWorkgroup(1134),
        GrmNewShellRecordType(1135),
        GrmImportShellRecordType(1136),
        GrmPendingApproval(1137),
        GrmShowGlobalView(1138),
        GrmModWorkgroupMembers(1139),
        FieldFormat(1140),
        String(1141),
        Number(1142),
        Boolean(1143),
        Calendar(1144),
        Time(1145),
        Decimal(1146),
        Text(1147),
        Currency(1148),
        Enumerated(1149),
        TrimObject(1150),
        Filesize(1151),
        Information(1152),
        OriginTextFile(1153),
        OriginWindowsFolder(1154),
        OriginMailFolder(1155),
        OriginSharePoint(1156),
        GrmPropertiesTask(1157),
        Xml(1158),
        DocumentStoreWindows(1159),
        DocumentStoreFTP(1160),
        DocumentStoreOther(1162),
        Jurisdiction(1163),
        JurisdictionGroup(1164),
        Labels(1165),
        MediaType(1166),
        RecordsAuthority(1167),
        TrimReference(1168),
        AddToWorkTray(1169),
        AddToRecentDocuments(1170),
        AddToRecentContainers(1171),
        Job(1172),
        OfficeRecProperties(1173),
        OfficeInsertText(1174),
        OfficeInsertPicture(1175),
        OfficeInsertObject(1176),
        OpenDocumentNotQueued(1177),
        OpenDocumentEditing(1178),
        OpenDocumentConfirm(1179),
        OpenDocumentCheckingIn(1180),
        NavEmailConversation(1181),
        OnlineAuditLog(1182),
        Refinesearch(1183),
        Searchoptions(1184),
        ClientMatter(1185),
        ClientRecord(1186),
        MatterRecord(1187),
        MatterPartyFor(1188),
        MatterPartyAgainst(1189),
        MatterPartyNeutral(1190),
        ClientMatterRole(1191),
        Consignment(1192),
        CreatePickList(1193),
        ConfirmDisposal(1194),
        ConsignReview(1195),
        EmailApprovers(1196),
        ApproveConsign(1197),
        ApproveRecord(1198),
        RejectRecord(1199),
        EmailLink(1200),
        Sap(1201),
        LicenseBreach(1202),
        LicenseWarning(1203),
        Geography(1204),
        Blank(1205),
        TickedCheckBox(1206),
        UntickedCheckBox(1207),
        Analyse(1208),
        AuditLogViewer(1209),
        Constraints(1210),
        NewRecord(1211),
        HprM8(1212),
        Idol(1213),
        Mail(1214),
        NewDatabase(1215),
        NewServer(1216),
        Remove(1217),
        Repair(1218),
        Report(1219),
        SendToUser(1220),
        Server(1221),
        Spanner(1222),
        TesDeploy(1223),
        Tuning(1224),
        User(1225),
        HpLogo(1226),
        EditRecord(1227),
        UserOptions(1228),
        Modify(1229),
        New(1230),
        BrowseRecords(1231),
        PrintReport(1232),
        SearchForm(1233),
        License(1234),
        CheckinStyle(1235),
        CheckinPlace(1236),
        RedSave(1237),
        RedSaveDraft(1238),
        RedSaveComplete(1239),
        RedToolSelect(1240),
        RedToolDrag(1241),
        RedToolRedactPen(1242),
        RedToolRedactBox(1243),
        RedToolRedactMarker(1244),
        RedToolRedactOval(1245),
        RedGoToPage(1246),
        DocumentReview(1247),
        PolicyCentre(1248);

        private final int value;
        Icons(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum LocationFieldType
    {
        InternalOrExternal,
        InternalOnly,
        ExternalOnly;
    }

    @DataContract
    public static class LookupSetRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="AccessControlList")
        @SerializedName("AccessControlList")
        public TrimAccessControlList AccessControlList = null;

        @DataMember(Name="LookupSetAccessControl")
        @SerializedName("LookupSetAccessControl")
        public TrimStringProperty AccessControl = null;

        @DataMember(Name="LookupSetIconId")
        @SerializedName("LookupSetIconId")
        @ApiMember(Name="LookupSetIconId", DataType="string", ParameterType="form")
        public TrimProperty<Icons> IconId = null;

        @DataMember(Name="LookupSetIsUsedByAdditionalFields")
        @SerializedName("LookupSetIsUsedByAdditionalFields")
        @ApiMember(Name="LookupSetIsUsedByAdditionalFields", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty IsUsedByAdditionalFields = null;

        @DataMember(Name="LookupSetLookupSetType")
        @SerializedName("LookupSetLookupSetType")
        @ApiMember(Name="LookupSetLookupSetType", DataType="string", ParameterType="form")
        public TrimProperty<LookupSetType> LookupSetType = null;

        @DataMember(Name="LookupSetName")
        @SerializedName("LookupSetName")
        @ApiMember(Name="LookupSetName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="LookupSetNotes")
        @SerializedName("LookupSetNotes")
        @ApiMember(Name="LookupSetNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="LookupSetUsesAuthorityStyle")
        @SerializedName("LookupSetUsesAuthorityStyle")
        @ApiMember(Name="LookupSetUsesAuthorityStyle", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UsesAuthorityStyle = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public LookupSetRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimAccessControlList getAccessControlList() { return AccessControlList; }
        public LookupSetRef setAccessControlList(TrimAccessControlList value) { this.AccessControlList = value; return this; }
        public TrimStringProperty getAccessControl() { return AccessControl; }
        public LookupSetRef setAccessControl(TrimStringProperty value) { this.AccessControl = value; return this; }
        public TrimProperty<Icons> getIconId() { return IconId; }
        public LookupSetRef setIconId(TrimProperty<Icons> value) { this.IconId = value; return this; }
        public TrimStringProperty getIsUsedByAdditionalFields() { return IsUsedByAdditionalFields; }
        public LookupSetRef setIsUsedByAdditionalFields(TrimStringProperty value) { this.IsUsedByAdditionalFields = value; return this; }
        public TrimProperty<LookupSetType> getLookupSetType() { return LookupSetType; }
        public LookupSetRef setLookupSetType(TrimProperty<LookupSetType> value) { this.LookupSetType = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public LookupSetRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public LookupSetRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getUsesAuthorityStyle() { return UsesAuthorityStyle; }
        public LookupSetRef setUsesAuthorityStyle(TrimProperty<Boolean> value) { this.UsesAuthorityStyle = value; return this; }
    }

    @DataContract
    public static class ActivityRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ActivityActivityId")
        @SerializedName("ActivityActivityId")
        @ApiMember(Name="ActivityActivityId", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ActivityId = null;

        @DataMember(Name="ActivityActivityPriority")
        @SerializedName("ActivityActivityPriority")
        @ApiMember(Name="ActivityActivityPriority", DataType="string", ParameterType="form")
        public TrimProperty<Priority> ActivityPriority = null;

        @DataMember(Name="ActivityActualCost")
        @SerializedName("ActivityActualCost")
        @ApiMember(Name="ActivityActualCost", DataType="double", ParameterType="form")
        public TrimProperty<BigDecimal> ActualCost = null;

        @DataMember(Name="ActivityActualDuration")
        @SerializedName("ActivityActualDuration")
        @ApiMember(Name="ActivityActualDuration", DataType="long", ParameterType="form")
        public TrimProperty<Long> ActualDuration = null;

        @DataMember(Name="ActivityAutoComplete")
        @SerializedName("ActivityAutoComplete")
        @ApiMember(Name="ActivityAutoComplete", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoComplete = null;

        @DataMember(Name="ActivityCompletedOnTime")
        @SerializedName("ActivityCompletedOnTime")
        @ApiMember(Name="ActivityCompletedOnTime", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> CompletedOnTime = null;

        @DataMember(Name="ActivityDateAssigned")
        @SerializedName("ActivityDateAssigned")
        @ApiMember(Name="ActivityDateAssigned", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateAssigned = null;

        @DataMember(Name="ActivityDateAuthorized")
        @SerializedName("ActivityDateAuthorized")
        @ApiMember(Name="ActivityDateAuthorized", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateAuthorized = null;

        @DataMember(Name="ActivityDateCompleted")
        @SerializedName("ActivityDateCompleted")
        @ApiMember(Name="ActivityDateCompleted", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateCompleted = null;

        @DataMember(Name="ActivityDateDue")
        @SerializedName("ActivityDateDue")
        @ApiMember(Name="ActivityDateDue", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateDue = null;

        @DataMember(Name="ActivityDateEarliestStart")
        @SerializedName("ActivityDateEarliestStart")
        @ApiMember(Name="ActivityDateEarliestStart", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateEarliestStart = null;

        @DataMember(Name="ActivityDateLatestStart")
        @SerializedName("ActivityDateLatestStart")
        @ApiMember(Name="ActivityDateLatestStart", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateLatestStart = null;

        @DataMember(Name="ActivityDateSkipped")
        @SerializedName("ActivityDateSkipped")
        @ApiMember(Name="ActivityDateSkipped", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateSkipped = null;

        @DataMember(Name="ActivityDateStarted")
        @SerializedName("ActivityDateStarted")
        @ApiMember(Name="ActivityDateStarted", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateStarted = null;

        @DataMember(Name="ActivityDateSuspended")
        @SerializedName("ActivityDateSuspended")
        @ApiMember(Name="ActivityDateSuspended", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateSuspended = null;

        @DataMember(Name="ActivityDateSuspendedUntil")
        @SerializedName("ActivityDateSuspendedUntil")
        @ApiMember(Name="ActivityDateSuspendedUntil", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateSuspendedUntil = null;

        @DataMember(Name="ActivityEmailAssigned")
        @SerializedName("ActivityEmailAssigned")
        @ApiMember(Name="ActivityEmailAssigned", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailAssigned = null;

        @DataMember(Name="ActivityEmailAuthorizable")
        @SerializedName("ActivityEmailAuthorizable")
        @ApiMember(Name="ActivityEmailAuthorizable", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailAuthorizable = null;

        @DataMember(Name="ActivityEmailCompleted")
        @SerializedName("ActivityEmailCompleted")
        @ApiMember(Name="ActivityEmailCompleted", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailCompleted = null;

        @DataMember(Name="ActivityEmailCurrent")
        @SerializedName("ActivityEmailCurrent")
        @ApiMember(Name="ActivityEmailCurrent", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailCurrent = null;

        @DataMember(Name="ActivityEmailEscalated")
        @SerializedName("ActivityEmailEscalated")
        @ApiMember(Name="ActivityEmailEscalated", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailEscalated = null;

        @DataMember(Name="ActivityEmailOverdue")
        @SerializedName("ActivityEmailOverdue")
        @ApiMember(Name="ActivityEmailOverdue", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailOverdue = null;

        @DataMember(Name="ActivityEmailReassigned")
        @SerializedName("ActivityEmailReassigned")
        @ApiMember(Name="ActivityEmailReassigned", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailReassigned = null;

        @DataMember(Name="ActivityEmailSkipped")
        @SerializedName("ActivityEmailSkipped")
        @ApiMember(Name="ActivityEmailSkipped", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailSkipped = null;

        @DataMember(Name="ActivityEmailUndone")
        @SerializedName("ActivityEmailUndone")
        @ApiMember(Name="ActivityEmailUndone", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailUndone = null;

        @DataMember(Name="ActivityEstimatedCost")
        @SerializedName("ActivityEstimatedCost")
        @ApiMember(Name="ActivityEstimatedCost", DataType="double", ParameterType="form")
        public TrimProperty<BigDecimal> EstimatedCost = null;

        @DataMember(Name="ActivityEstimatedDuration")
        @SerializedName("ActivityEstimatedDuration")
        @ApiMember(Name="ActivityEstimatedDuration", DataType="long", ParameterType="form")
        public TrimProperty<Long> EstimatedDuration = null;

        @DataMember(Name="ActivityHasSubActivities")
        @SerializedName("ActivityHasSubActivities")
        @ApiMember(Name="ActivityHasSubActivities", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> HasSubActivities = null;

        @DataMember(Name="ActivityIsComplete")
        @SerializedName("ActivityIsComplete")
        @ApiMember(Name="ActivityIsComplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="ActivityIsLastActivity")
        @SerializedName("ActivityIsLastActivity")
        @ApiMember(Name="ActivityIsLastActivity", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsLastActivity = null;

        @DataMember(Name="ActivityIsOverdue")
        @SerializedName("ActivityIsOverdue")
        @ApiMember(Name="ActivityIsOverdue", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsOverdue = null;

        @DataMember(Name="ActivityIsReadyToStart")
        @SerializedName("ActivityIsReadyToStart")
        @ApiMember(Name="ActivityIsReadyToStart", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsReadyToStart = null;

        @DataMember(Name="ActivityIsStartActivity")
        @SerializedName("ActivityIsStartActivity")
        @ApiMember(Name="ActivityIsStartActivity", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsStartActivity = null;

        @DataMember(Name="ActivityName")
        @SerializedName("ActivityName")
        @ApiMember(Name="ActivityName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="ActivityNormalRect")
        @SerializedName("ActivityNormalRect")
        @ApiMember(Name="ActivityNormalRect", DataType="string", ParameterType="form")
        public TrimStringProperty NormalRect = null;

        @DataMember(Name="ActivityNotes")
        @SerializedName("ActivityNotes")
        @ApiMember(Name="ActivityNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="ActivityOutlineRect")
        @SerializedName("ActivityOutlineRect")
        @ApiMember(Name="ActivityOutlineRect", DataType="string", ParameterType="form")
        public TrimStringProperty OutlineRect = null;

        @DataMember(Name="ActivityParentActivityId")
        @SerializedName("ActivityParentActivityId")
        @ApiMember(Name="ActivityParentActivityId", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ParentActivityId = null;

        @DataMember(Name="ActivityPercentComplete")
        @SerializedName("ActivityPercentComplete")
        @ApiMember(Name="ActivityPercentComplete", DataType="int", ParameterType="form")
        public TrimProperty<Integer> PercentComplete = null;

        @DataMember(Name="ActivityReasonForSuspension")
        @SerializedName("ActivityReasonForSuspension")
        @ApiMember(Name="ActivityReasonForSuspension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ReasonForSuspension = null;

        @DataMember(Name="ActivityRequiresAuthorization")
        @SerializedName("ActivityRequiresAuthorization")
        @ApiMember(Name="ActivityRequiresAuthorization", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RequiresAuthorization = null;

        @DataMember(Name="ActivityResult")
        @SerializedName("ActivityResult")
        @ApiMember(Name="ActivityResult", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Result = null;

        @DataMember(Name="ActivityScheduledDuration")
        @SerializedName("ActivityScheduledDuration")
        @ApiMember(Name="ActivityScheduledDuration", DataType="long", ParameterType="form")
        public TrimProperty<Long> ScheduledDuration = null;

        @DataMember(Name="ActivityState")
        @SerializedName("ActivityState")
        @ApiMember(Name="ActivityState", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<ActivityStates> State = null;

        @DataMember(Name="ActivityTotalSuspensionDuration")
        @SerializedName("ActivityTotalSuspensionDuration")
        @ApiMember(Name="ActivityTotalSuspensionDuration", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> TotalSuspensionDuration = null;

        @DataMember(Name="ActivityUseAdvancedCompletionWizard")
        @SerializedName("ActivityUseAdvancedCompletionWizard")
        @ApiMember(Name="ActivityUseAdvancedCompletionWizard", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseAdvancedCompletionWizard = null;

        @DataMember(Name="ActivityWasSkipped")
        @SerializedName("ActivityWasSkipped")
        @ApiMember(Name="ActivityWasSkipped", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> WasSkipped = null;

        @DataMember(Name="ActivityWithinTemplate")
        @SerializedName("ActivityWithinTemplate")
        @ApiMember(Name="ActivityWithinTemplate", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> WithinTemplate = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ActivityRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Integer> getActivityId() { return ActivityId; }
        public ActivityRef setActivityId(TrimProperty<Integer> value) { this.ActivityId = value; return this; }
        public TrimProperty<Priority> getActivityPriority() { return ActivityPriority; }
        public ActivityRef setActivityPriority(TrimProperty<Priority> value) { this.ActivityPriority = value; return this; }
        public TrimProperty<BigDecimal> getActualCost() { return ActualCost; }
        public ActivityRef setActualCost(TrimProperty<BigDecimal> value) { this.ActualCost = value; return this; }
        public TrimProperty<Long> getActualDuration() { return ActualDuration; }
        public ActivityRef setActualDuration(TrimProperty<Long> value) { this.ActualDuration = value; return this; }
        public TrimProperty<Boolean> getAutoComplete() { return AutoComplete; }
        public ActivityRef setAutoComplete(TrimProperty<Boolean> value) { this.AutoComplete = value; return this; }
        public TrimProperty<Boolean> getCompletedOnTime() { return CompletedOnTime; }
        public ActivityRef setCompletedOnTime(TrimProperty<Boolean> value) { this.CompletedOnTime = value; return this; }
        public TrimDateTime getDateAssigned() { return DateAssigned; }
        public ActivityRef setDateAssigned(TrimDateTime value) { this.DateAssigned = value; return this; }
        public TrimDateTime getDateAuthorized() { return DateAuthorized; }
        public ActivityRef setDateAuthorized(TrimDateTime value) { this.DateAuthorized = value; return this; }
        public TrimDateTime getDateCompleted() { return DateCompleted; }
        public ActivityRef setDateCompleted(TrimDateTime value) { this.DateCompleted = value; return this; }
        public TrimDateTime getDateDue() { return DateDue; }
        public ActivityRef setDateDue(TrimDateTime value) { this.DateDue = value; return this; }
        public TrimDateTime getDateEarliestStart() { return DateEarliestStart; }
        public ActivityRef setDateEarliestStart(TrimDateTime value) { this.DateEarliestStart = value; return this; }
        public TrimDateTime getDateLatestStart() { return DateLatestStart; }
        public ActivityRef setDateLatestStart(TrimDateTime value) { this.DateLatestStart = value; return this; }
        public TrimDateTime getDateSkipped() { return DateSkipped; }
        public ActivityRef setDateSkipped(TrimDateTime value) { this.DateSkipped = value; return this; }
        public TrimDateTime getDateStarted() { return DateStarted; }
        public ActivityRef setDateStarted(TrimDateTime value) { this.DateStarted = value; return this; }
        public TrimDateTime getDateSuspended() { return DateSuspended; }
        public ActivityRef setDateSuspended(TrimDateTime value) { this.DateSuspended = value; return this; }
        public TrimDateTime getDateSuspendedUntil() { return DateSuspendedUntil; }
        public ActivityRef setDateSuspendedUntil(TrimDateTime value) { this.DateSuspendedUntil = value; return this; }
        public TrimProperty<Boolean> getEmailAssigned() { return EmailAssigned; }
        public ActivityRef setEmailAssigned(TrimProperty<Boolean> value) { this.EmailAssigned = value; return this; }
        public TrimProperty<Boolean> getEmailAuthorizable() { return EmailAuthorizable; }
        public ActivityRef setEmailAuthorizable(TrimProperty<Boolean> value) { this.EmailAuthorizable = value; return this; }
        public TrimProperty<Boolean> getEmailCompleted() { return EmailCompleted; }
        public ActivityRef setEmailCompleted(TrimProperty<Boolean> value) { this.EmailCompleted = value; return this; }
        public TrimProperty<Boolean> getEmailCurrent() { return EmailCurrent; }
        public ActivityRef setEmailCurrent(TrimProperty<Boolean> value) { this.EmailCurrent = value; return this; }
        public TrimProperty<Boolean> getEmailEscalated() { return EmailEscalated; }
        public ActivityRef setEmailEscalated(TrimProperty<Boolean> value) { this.EmailEscalated = value; return this; }
        public TrimProperty<Boolean> getEmailOverdue() { return EmailOverdue; }
        public ActivityRef setEmailOverdue(TrimProperty<Boolean> value) { this.EmailOverdue = value; return this; }
        public TrimProperty<Boolean> getEmailReassigned() { return EmailReassigned; }
        public ActivityRef setEmailReassigned(TrimProperty<Boolean> value) { this.EmailReassigned = value; return this; }
        public TrimProperty<Boolean> getEmailSkipped() { return EmailSkipped; }
        public ActivityRef setEmailSkipped(TrimProperty<Boolean> value) { this.EmailSkipped = value; return this; }
        public TrimProperty<Boolean> getEmailUndone() { return EmailUndone; }
        public ActivityRef setEmailUndone(TrimProperty<Boolean> value) { this.EmailUndone = value; return this; }
        public TrimProperty<BigDecimal> getEstimatedCost() { return EstimatedCost; }
        public ActivityRef setEstimatedCost(TrimProperty<BigDecimal> value) { this.EstimatedCost = value; return this; }
        public TrimProperty<Long> getEstimatedDuration() { return EstimatedDuration; }
        public ActivityRef setEstimatedDuration(TrimProperty<Long> value) { this.EstimatedDuration = value; return this; }
        public TrimProperty<Boolean> getHasSubActivities() { return HasSubActivities; }
        public ActivityRef setHasSubActivities(TrimProperty<Boolean> value) { this.HasSubActivities = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public ActivityRef setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<Boolean> getIsLastActivity() { return IsLastActivity; }
        public ActivityRef setIsLastActivity(TrimProperty<Boolean> value) { this.IsLastActivity = value; return this; }
        public TrimProperty<Boolean> getIsOverdue() { return IsOverdue; }
        public ActivityRef setIsOverdue(TrimProperty<Boolean> value) { this.IsOverdue = value; return this; }
        public TrimProperty<Boolean> getIsReadyToStart() { return IsReadyToStart; }
        public ActivityRef setIsReadyToStart(TrimProperty<Boolean> value) { this.IsReadyToStart = value; return this; }
        public TrimProperty<Boolean> getIsStartActivity() { return IsStartActivity; }
        public ActivityRef setIsStartActivity(TrimProperty<Boolean> value) { this.IsStartActivity = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public ActivityRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNormalRect() { return NormalRect; }
        public ActivityRef setNormalRect(TrimStringProperty value) { this.NormalRect = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public ActivityRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getOutlineRect() { return OutlineRect; }
        public ActivityRef setOutlineRect(TrimStringProperty value) { this.OutlineRect = value; return this; }
        public TrimProperty<Integer> getParentActivityId() { return ParentActivityId; }
        public ActivityRef setParentActivityId(TrimProperty<Integer> value) { this.ParentActivityId = value; return this; }
        public TrimProperty<Integer> getPercentComplete() { return PercentComplete; }
        public ActivityRef setPercentComplete(TrimProperty<Integer> value) { this.PercentComplete = value; return this; }
        public TrimStringProperty getReasonForSuspension() { return ReasonForSuspension; }
        public ActivityRef setReasonForSuspension(TrimStringProperty value) { this.ReasonForSuspension = value; return this; }
        public TrimProperty<Boolean> getRequiresAuthorization() { return RequiresAuthorization; }
        public ActivityRef setRequiresAuthorization(TrimProperty<Boolean> value) { this.RequiresAuthorization = value; return this; }
        public TrimStringProperty getResult() { return Result; }
        public ActivityRef setResult(TrimStringProperty value) { this.Result = value; return this; }
        public TrimProperty<Long> getScheduledDuration() { return ScheduledDuration; }
        public ActivityRef setScheduledDuration(TrimProperty<Long> value) { this.ScheduledDuration = value; return this; }
        public TrimProperty<ActivityStates> getState() { return State; }
        public ActivityRef setState(TrimProperty<ActivityStates> value) { this.State = value; return this; }
        public TrimProperty<Long> getTotalSuspensionDuration() { return TotalSuspensionDuration; }
        public ActivityRef setTotalSuspensionDuration(TrimProperty<Long> value) { this.TotalSuspensionDuration = value; return this; }
        public TrimProperty<Boolean> getUseAdvancedCompletionWizard() { return UseAdvancedCompletionWizard; }
        public ActivityRef setUseAdvancedCompletionWizard(TrimProperty<Boolean> value) { this.UseAdvancedCompletionWizard = value; return this; }
        public TrimProperty<Boolean> getWasSkipped() { return WasSkipped; }
        public ActivityRef setWasSkipped(TrimProperty<Boolean> value) { this.WasSkipped = value; return this; }
        public TrimProperty<Boolean> getWithinTemplate() { return WithinTemplate; }
        public ActivityRef setWithinTemplate(TrimProperty<Boolean> value) { this.WithinTemplate = value; return this; }
    }

    /**
    * Update a JurisdictionMember object.
    */
    @Route(Path="/JurisdictionMember", Verbs="POST")
    @Api("Update a JurisdictionMember object.")
    @DataContract
    public static class JurisdictionMember extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="JurisdictionMemberJurisdiction")
        @SerializedName("JurisdictionMemberJurisdiction")
        @ApiMember(Name="JurisdictionMemberJurisdiction", DataType="long", ParameterType="form", Verb="POST")
        public JurisdictionRef Jurisdiction = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public JurisdictionMember setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public JurisdictionRef getJurisdiction() { return Jurisdiction; }
        public JurisdictionMember setJurisdiction(JurisdictionRef value) { this.Jurisdiction = value; return this; }
    }

    public static enum JurisdictionTypes
    {
        Single,
        Group,
        Federation;
    }

    public static class SearchDefaultsDictionary extends HashMap<BaseObjectTypes,SearchDefaults>
    {
        
    }

    public static class PermissionsDictionary extends HashMap<UserPermissions,Boolean>
    {
        
    }

    /**
    * Update a LocationAddress object.
    */
    @Route(Path="/LocationAddress", Verbs="POST")
    @Api("Update a LocationAddress object.")
    @DataContract
    public static class LocationAddress extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="LocationAddressActiveFrom")
        @SerializedName("LocationAddressActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="LocationAddressActiveTo")
        @SerializedName("LocationAddressActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="LocationAddressActiveDescription")
        @SerializedName("LocationAddressActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="LocationAddressIsActive")
        @SerializedName("LocationAddressIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="LocationAddressAddressLines")
        @SerializedName("LocationAddressAddressLines")
        @ApiMember(Name="LocationAddressAddressLines", DataType="string", ParameterType="form")
        public TrimStringProperty AddressLines = null;

        @DataMember(Name="LocationAddressAddressType")
        @SerializedName("LocationAddressAddressType")
        @ApiMember(Name="LocationAddressAddressType", DataType="string", ParameterType="form")
        public TrimProperty<AddressTypes> AddressType = null;

        @DataMember(Name="LocationAddressCity")
        @SerializedName("LocationAddressCity")
        @ApiMember(Name="LocationAddressCity", DataType="string", ParameterType="form")
        public TrimStringProperty City = null;

        @DataMember(Name="LocationAddressCountry")
        @SerializedName("LocationAddressCountry")
        @ApiMember(Name="LocationAddressCountry", DataType="string", ParameterType="form")
        public TrimStringProperty Country = null;

        @DataMember(Name="LocationAddressDescription")
        @SerializedName("LocationAddressDescription")
        @ApiMember(Name="LocationAddressDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="LocationAddressIsCurrent")
        @SerializedName("LocationAddressIsCurrent")
        @ApiMember(Name="LocationAddressIsCurrent", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsCurrent = null;

        @DataMember(Name="LocationAddressPostcode")
        @SerializedName("LocationAddressPostcode")
        @ApiMember(Name="LocationAddressPostcode", DataType="string", ParameterType="form")
        public TrimStringProperty Postcode = null;

        @DataMember(Name="LocationAddressRegion")
        @SerializedName("LocationAddressRegion")
        @ApiMember(Name="LocationAddressRegion", DataType="string", ParameterType="form")
        public TrimStringProperty Region = null;

        @DataMember(Name="LocationAddressState")
        @SerializedName("LocationAddressState")
        @ApiMember(Name="LocationAddressState", DataType="string", ParameterType="form")
        public TrimStringProperty State = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public LocationAddress setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public LocationAddress setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public LocationAddress setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public LocationAddress setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public LocationAddress setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getAddressLines() { return AddressLines; }
        public LocationAddress setAddressLines(TrimStringProperty value) { this.AddressLines = value; return this; }
        public TrimProperty<AddressTypes> getAddressType() { return AddressType; }
        public LocationAddress setAddressType(TrimProperty<AddressTypes> value) { this.AddressType = value; return this; }
        public TrimStringProperty getCity() { return City; }
        public LocationAddress setCity(TrimStringProperty value) { this.City = value; return this; }
        public TrimStringProperty getCountry() { return Country; }
        public LocationAddress setCountry(TrimStringProperty value) { this.Country = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public LocationAddress setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getIsCurrent() { return IsCurrent; }
        public LocationAddress setIsCurrent(TrimProperty<Boolean> value) { this.IsCurrent = value; return this; }
        public TrimStringProperty getPostcode() { return Postcode; }
        public LocationAddress setPostcode(TrimStringProperty value) { this.Postcode = value; return this; }
        public TrimStringProperty getRegion() { return Region; }
        public LocationAddress setRegion(TrimStringProperty value) { this.Region = value; return this; }
        public TrimStringProperty getState() { return State; }
        public LocationAddress setState(TrimStringProperty value) { this.State = value; return this; }
    }

    /**
    * Update a LocationEAddress object.
    */
    @Route(Path="/LocationEAddress", Verbs="POST")
    @Api("Update a LocationEAddress object.")
    @DataContract
    public static class LocationEAddress extends TrimChildObject
    {
        /**
        * Sets up this LocEAddress object as an email LocEAddress of the nominated email address, name and type (as used in MAPI systems.)
        */
        @DataMember
        @ApiMember(Name="SetEmailAddress", ParameterType="form", Verb="POST", Description="Sets up this LocEAddress object as an email LocEAddress of the nominated email address, name and type (as used in MAPI systems.)")
        public SetEmailAddress SetEmailAddress = null;

        @DataMember(Name="FromFileName")
        @SerializedName("FromFileName")
        public String FromFileName = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="LocationEAddressActiveFrom")
        @SerializedName("LocationEAddressActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="LocationEAddressActiveTo")
        @SerializedName("LocationEAddressActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="LocationEAddressActiveDescription")
        @SerializedName("LocationEAddressActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="LocationEAddressIsActive")
        @SerializedName("LocationEAddressIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="LocationEAddressDescription")
        @SerializedName("LocationEAddressDescription")
        @ApiMember(Name="LocationEAddressDescription", DataType="string", ParameterType="form")
        public TrimStringProperty Description = null;

        @DataMember(Name="LocationEAddressElectronicAddressData")
        @SerializedName("LocationEAddressElectronicAddressData")
        @ApiMember(Name="LocationEAddressElectronicAddressData", DataType="string", ParameterType="form")
        public TrimStringProperty ElectronicAddressData = null;

        @DataMember(Name="LocationEAddressElectronicAddressType")
        @SerializedName("LocationEAddressElectronicAddressType")
        @ApiMember(Name="LocationEAddressElectronicAddressType", DataType="string", ParameterType="form")
        public TrimProperty<EAddressType> ElectronicAddressType = null;

        @DataMember(Name="LocationEAddressEmailAddressTypeString")
        @SerializedName("LocationEAddressEmailAddressTypeString")
        @ApiMember(Name="LocationEAddressEmailAddressTypeString", DataType="string", ParameterType="form")
        public TrimStringProperty EmailAddressTypeString = null;

        @DataMember(Name="LocationEAddressEStore")
        @SerializedName("LocationEAddressEStore")
        @ApiMember(Name="LocationEAddressEStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef EStore = null;

        @DataMember(Name="LocationEAddressEStoreId")
        @SerializedName("LocationEAddressEStoreId")
        @ApiMember(Name="LocationEAddressEStoreId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty EStoreId = null;

        @DataMember(Name="LocationEAddressIsPreferred")
        @SerializedName("LocationEAddressIsPreferred")
        @ApiMember(Name="LocationEAddressIsPreferred", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IsPreferred = null;

        @DataMember(Name="LocationEAddressName")
        @SerializedName("LocationEAddressName")
        @ApiMember(Name="LocationEAddressName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Name = null;
        
        public SetEmailAddress getSetEmailAddress() { return SetEmailAddress; }
        public LocationEAddress setSetEmailAddress(SetEmailAddress value) { this.SetEmailAddress = value; return this; }
        public String getFromFileName() { return FromFileName; }
        public LocationEAddress setFromFileName(String value) { this.FromFileName = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public LocationEAddress setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public LocationEAddress setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public LocationEAddress setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public LocationEAddress setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public LocationEAddress setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public LocationEAddress setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimStringProperty getElectronicAddressData() { return ElectronicAddressData; }
        public LocationEAddress setElectronicAddressData(TrimStringProperty value) { this.ElectronicAddressData = value; return this; }
        public TrimProperty<EAddressType> getElectronicAddressType() { return ElectronicAddressType; }
        public LocationEAddress setElectronicAddressType(TrimProperty<EAddressType> value) { this.ElectronicAddressType = value; return this; }
        public TrimStringProperty getEmailAddressTypeString() { return EmailAddressTypeString; }
        public LocationEAddress setEmailAddressTypeString(TrimStringProperty value) { this.EmailAddressTypeString = value; return this; }
        public ElectronicStoreRef getEStore() { return EStore; }
        public LocationEAddress setEStore(ElectronicStoreRef value) { this.EStore = value; return this; }
        public TrimStringProperty getEStoreId() { return EStoreId; }
        public LocationEAddress setEStoreId(TrimStringProperty value) { this.EStoreId = value; return this; }
        public TrimProperty<Boolean> getIsPreferred() { return IsPreferred; }
        public LocationEAddress setIsPreferred(TrimProperty<Boolean> value) { this.IsPreferred = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public LocationEAddress setName(TrimStringProperty value) { this.Name = value; return this; }
    }

    public static enum Gender
    {
        Unknown,
        Male,
        Female,
        Custom1,
        Custom2,
        Custom3,
        Custom4,
        Custom5,
        Custom6,
        Unspecified;
    }

    public static enum UserLicenseTypes
    {
        Administrator,
        RecordsCoordinator,
        KnowledgeWorker,
        Contributor,
        InquiryUser,
        NoAccess;
    }

    public static enum UserTypes
    {
        Administrator,
        RecordsManager,
        RecordsWorker,
        EndUser,
        Contributor,
        EnquiryUser;
    }

    public static enum LookupSetType
    {
        Standard(0),
        NenHonorific(2),
        CmPartyType(3),
        CmRoleType(4);

        private final int value;
        LookupSetType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum MailEventType
    {
        All(0),
        ActionAssigned(1),
        ActionReassigned(2),
        ActionUndone(3),
        ActionCurrent(4),
        ActionOverdue(5),
        ActionCompleted(6),
        ActivityAssigned(7),
        ActivityReassigned(8),
        ActivityUndone(9),
        ActivityCurrent(10),
        ActivityOverdue(11),
        ActivityCompleted(12),
        ActivitySkipped(13),
        ActivityEscalated(14),
        ActivityReadyForAuthorization(15),
        EstoreNearCapacity(16),
        EstoreFull(17),
        RecordSecurityBreach(18),
        RecordSuperseded(19),
        ScheduledTaskReady(20),
        AlertRaised(21),
        TodoItemAssigned(22),
        TodoItemOverdue(23),
        TodoItemStillOverdue(24),
        AgendaDistribution(25),
        MinutesDistribution(26),
        ActivityNeedsAssignee(27),
        DeleteAlertRaised(28),
        ActionReminder(30),
        ActivityReminder(31),
        NewRequestAdded(32),
        RecordReturnOverdue(33),
        RecordReceiptAcknowledge(34),
        ApproveRecordConsignment(35),
        IssueReviewConsignment(36),
        LicenseInBreach(37),
        LicenseWarning(38),
        NewUserAutomaticallyRegistered(39),
        ReadyForDrafting(40),
        DraftOverdue(41),
        ReadyForReview(42),
        ReviewerAddedComments(43),
        ReviewOverdue(44),
        ReviewComplete(45),
        ReadyForAuthorization(46),
        AuthorizerAddedComments(47),
        AuthorizationOverdue(48),
        AuthorizationComplete(49),
        EditorAddedReply(50),
        DocusignFailed(51);

        private final int value;
        MailEventType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum PropertyIds
    {
        Unknown(0),
        RecordRecordType(1),
        RecordNumber(2),
        RecordTitle(3),
        RecordLongNumber(4),
        RecordDateCreated(5),
        RecordDateRegistered(6),
        RecordDateClosed(7),
        RecordDateInactive(8),
        RecordDateDue(9),
        RecordSecurity(10),
        RecordAccessionNumber(11),
        RecordExternalReference(12),
        RecordPriority(13),
        RecordIsInPartSeries(14),
        RecordIsRootOfPartSeries(15),
        RecordIsContainer(17),
        RecordHasLinkedDocuments(18),
        RecordFilePath(20),
        RecordLastActionDate(21),
        RecordConsignment(22),
        RecordDisposition(23),
        RecordClassOfRecord(24),
        RecordGeneratedTitle(25),
        RecordTypedTitle(26),
        RecordForeignBarcode(27),
        RecordBarcode(28),
        RecordAccessControl(29),
        RecordFullClassification(30),
        RecordDateFinalized(31),
        RecordReviewDate(32),
        RecordMovementHistory(33),
        RecordBlueprintTitle(34),
        Uri(36),
        DateLastUpdated(37),
        Url(38),
        AttachedLabels(39),
        RecordJurisdictions(40),
        DatabaseMyContainersLimit(41),
        DatabaseRecentDocumentsLimit(42),
        DatabaseEmailActivitySupervisors(43),
        DatabaseEmailExpandOrganisations(44),
        DatabaseAutoFinalizeEmail(45),
        DatabaseFileIntoClosedContainers(46),
        DatabaseViewableRecordTypeThreshold(47),
        DatabaseContainerRulesForAlternate(48),
        DatabasePreventZeroByteFiles(49),
        RecordContainer(50),
        RecordAssignee(52),
        RecordOwnerLocation(53),
        RecordHomeLocation(54),
        RecordCreator(55),
        RecordPrimaryContact(56),
        RecordIsEnclosed(57),
        RecordClient(58),
        RecordAllHolds(59),
        RecordIsElectronic(60),
        RecordDocumentStatus(61),
        RecordDocumentDetails(62),
        RecordDateModified(63),
        RecordIsCheckedOut(64),
        RecordCheckedOutTo(65),
        RecordCheckedOutOn(66),
        RecordCheckedOutPath(67),
        RecordExtension(68),
        RecordRevisionNumber(69),
        RecordDocumentSize(70),
        RecordDocumentType(71),
        RecordEStore(72),
        RecordEStoreId(73),
        RecordESource(74),
        RecordContextURL(76),
        RecordUpgradeNumber(80),
        RecordRenditionCount(81),
        RecordMimeType(82),
        RecordNbrPages(83),
        RecordRenditionMimeType(84),
        RecordRenditionNbrPages(85),
        RecordRevisionNbrPages(86),
        RecordRenditionPageNumber(87),
        RecordRenditionConfidenceLevel(88),
        RecordClassification(100),
        RecordRetentionSchedule(101),
        RecordElinkOf(102),
        RecordViewPaneId(103),
        RecordSeriesRecord(110),
        RecordDatePublished(111),
        RecordNewPartCreationRule(112),
        RecordDestructionDate(117),
        RecordNotes(118),
        RecordCurrentAction(119),
        RecordRenditionDescription(120),
        RecordRenditionDateModified(121),
        RecordManualDestructionDate(122),
        RecordRenditionBytes(123),
        RecordRenditionTypeOfRendition(124),
        RecordRenditionExtension(125),
        RecordRenditionEStore(126),
        RecordRenditionEStoreId(127),
        RecordRenditionNotes(128),
        RecordRenditionAddedOn(129),
        RecordActions(130),
        RecordOverdueActions(131),
        RecordHistory(132),
        RecordAllContacts(133),
        RecordRelatedRecs(134),
        RecordAuthor(135),
        RecordAddressee(136),
        RecordRepresentative(137),
        RecordOtherContact(138),
        RecordAttachedKeywords(139),
        RecordAlternativeContainers(140),
        RecordContents(141),
        RecordKeywords(142),
        RecordRequests(143),
        RecordTopLevelActions(144),
        RecordEnablerFlags(145),
        RecordHasHold(146),
        RecordAssigneeStatus(147),
        RecordHomeLocationStatus(148),
        RecordReturnDueDateTime(149),
        RecordLocationName(150),
        RecordLocationTypeOfRecordLocation(151),
        RecordLocationTypeOfContact(152),
        RecordLocationTypeString(153),
        RecordLocationSubTypeString(154),
        RecordLocationLocation(155),
        RecordLocationSpace(156),
        RecordLocationFromDateTime(157),
        RecordLocationLatestDateTime(158),
        RecordLocationReturnDateTime(159),
        RecordLocationIsPrimaryContact(161),
        RecordLocationOrganization(162),
        RecordLocationPhoneNumber(163),
        RecordLocationStatus(164),
        RecordLocationOriginalName(165),
        RecordSuggestedFileName(166),
        RecordDispositionSchedule(167),
        RecordIsSigned(168),
        RecordElinkedDocuments(169),
        RecordKeywordDescription(170),
        RecordKeywordKeyword(171),
        RecordKeywordAttachMethod(172),
        RecordKeywordPrompt(173),
        RecordNeedsDataEntryForm(175),
        RecordRelationshipIsReverse(176),
        RecordRelationshipReverseRelationType(177),
        RecordAllParts(178),
        RecordAllVersions(179),
        RecordAlternativeContents(180),
        RecordRootPartRecord(181),
        RecordNextPartRecord(182),
        RecordPrevPartRecord(183),
        RecordLastPartRecord(184),
        RecordNextTaskDue(185),
        RecordArchivePermDate(188),
        RecordArchiveTransferDate(189),
        RecordRelationshipRelatedRecord(195),
        RecordRelationshipRelationType(196),
        RecordRelationshipRelationNumber(197),
        RecordRelationshipDescription(198),
        RecordRelationshipRelatedTitle(199),
        RecordRelationshipCanView(200),
        LocationSortName(201),
        LocationNickName(202),
        LocationTypeOfLocation(203),
        LocationIsActive(205),
        LocationIsWithin(206),
        LocationPhoneNumber(207),
        LocationMobileNumber(208),
        LocationFaxNumber(209),
        LocationAfterHoursPhoneNumber(210),
        LocationSecurityString(212),
        LocationFormattedAddress(213),
        LocationForeignBarcode(215),
        LocationActualBarcode(216),
        LocationIdNumber(217),
        LocationNotes(219),
        LocationLoginDetails(220),
        LocationReviewDate(221),
        LocationStreetAddress(223),
        LocationPostalAddress(224),
        LocationInternetMailAddress(225),
        LocationCommittee(228),
        LocationProjectTeam(229),
        LocationSurname(230),
        LocationGivenNames(231),
        LocationHonorific(234),
        LocationPostNominal(235),
        LocationJobDescription(236),
        LocationFormattedName(237),
        LocationPosition(238),
        LocationDateOfBirth(240),
        LocationInitials(241),
        LocationSurnamePrefix(242),
        LocationSurnameNoPrefix(243),
        LocationGenderValue(244),
        LocationFullFormattedName(245),
        LocationSalutation(246),
        LocationFirstInitial(247),
        LocationWorkgroup(248),
        LocationHoldingOrganizationName(249),
        LocationCanLogin(250),
        LocationLogsInAs(251),
        LocationUserType(252),
        LocationFunctionsString(254),
        LocationFormalPreamble(255),
        LocationInformalPreamble(256),
        LocationLoginExpires(257),
        LocationUseProfileOf(258),
        LocationViewPaneId(259),
        LocationSupervisor(260),
        LocationActiveFrom(261),
        LocationActiveTo(262),
        LocationActiveDescription(263),
        LocationAccessControl(264),
        LocationUseAddressOf(265),
        LocationKeepAddressHistory(266),
        LocationLongHonorific(267),
        LocationFormattedAddressISO(268),
        LocationStreetAddressISO(269),
        LocationAddressAddressLines(270),
        LocationAddressCity(271),
        LocationAddressState(272),
        LocationAddressPostcode(273),
        LocationAddressRegion(274),
        LocationAddressCountry(275),
        LocationAddressAddressType(276),
        LocationAddressActiveFrom(277),
        LocationAddressActiveTo(278),
        LocationAddressActiveDescription(279),
        LocationEAddressName(280),
        LocationEAddressElectronicAddressData(281),
        LocationEAddressElectronicAddressType(282),
        LocationEAddressEmailAddressTypeString(283),
        LocationEAddressDescription(284),
        LocationEAddressIsPreferred(285),
        LocationEAddressEStore(286),
        LocationEAddressEStoreId(287),
        LocationEAddressActiveFrom(289),
        LocationEAddressActiveTo(290),
        LocationEAddressActiveDescription(291),
        LocationAddressIsCurrent(295),
        LocationAddressDescription(296),
        LocationAddressCountryISO(297),
        LocationAddressDescriptionISO(298),
        LocationPostalAddressISO(299),
        RecordTypeName(301),
        RecordTypeSortOrder(303),
        RecordTypeClassOfRecord(304),
        RecordTypeDisposition(305),
        RecordTypeHomeLocation(306),
        RecordTypeOwnerLocation(307),
        RecordTypeClassification(308),
        RecordTypeSecProfile(309),
        RecordTypeTrimIconId(310),
        RecordTypeEStore(311),
        RecordTypeTitlingMethod(312),
        RecordTypeStoreType(313),
        RecordTypeUsualBehaviour(314),
        RecordTypeTasks(315),
        RecordTypeUseCensus(320),
        RecordTypeUseRetention(322),
        RecordTypeAllowReplace(334),
        RecordTypeAllowVersions(335),
        RecordTypeDefaultSeries(337),
        RecordTypeNumberMethod(347),
        RecordTypeNumberPattern(348),
        RecordTypeResetAtEnd(349),
        RecordTypeConfirmEachNumber(350),
        RecordTypeUsePartNumber(351),
        RecordTypeCompressPartNumber(352),
        RecordTypeRetentionSchedule(353),
        RecordTypeAction(354),
        RecordTypeDaysDue(355),
        RecordTypePartSeparator(356),
        RecordTypeAllowParts(357),
        RecordTypeLastNumber(360),
        RecordTypeLevel(361),
        RecordTypeNumberFromType(363),
        RecordTypeAllowBlankFreeTextTitle(364),
        RecordTypeHideFreeTextTitle(365),
        RecordTypeSuppressContentIndexing(366),
        RecordTypeSetDueDateFromActions(370),
        RecordTypeStartupTemplate(371),
        RecordTypeDeindexAfterYears(372),
        RecordTypeDeindexAfterDisposition(373),
        RecordTypeNotes(374),
        RecordTypeAnnotateOnly(375),
        RecordTypeAnnotateWhenReadOnly(376),
        RecordTypeMoveWhenReadOnly(377),
        RecordTypeInsecureContainer(378),
        RecordTypeCheckDuplicateTitles(379),
        RecordTypeNumberingIsManual(380),
        RecordTypeAccessControl(381),
        RecordTypeHomeCanBeSpace(382),
        RecordTypeAuditEvents(383),
        RecordTypeActiveFrom(390),
        RecordTypeActiveTo(391),
        RecordTypeIsActive(392),
        RecordTypeActiveDescription(393),
        RecordTypeCopiedAccessControl(394),
        RecordTypePreventDispChangeIfNoSchedule(395),
        RecordTypeWithinSeries(396),
        RecordTypeInsecureDocument(397),
        RecordTypeClassificationMandatory(398),
        StopWordName(401),
        RecordCSinitialSecurity(402),
        RecordCSsecurityDetails(403),
        RecordCSlastUpdateDetails(404),
        RecordCSguideEntries(405),
        RecordCSdeclassifyOn(406),
        RecordCSdowngradeOn(407),
        RecordCSdeclassifyDetails(408),
        RecordCSdowngradeDetails(409),
        RecordCSlastReviewed(410),
        RecordFinalizeOnSave(411),
        RecordPreserveHierarchyOnDataEntry(412),
        RecordNumberPlusName(413),
        RecordDocumentAttachPending(414),
        RecordRelatedRecord(415),
        RecordHomeSpace(416),
        RecordAlternativeContainer(417),
        RecordRedactionsOf(418),
        RecordRedactedFrom(419),
        RecordInitiateTemplate(420),
        RecordLatestVersion(421),
        RecordCurrentVersion(422),
        RecordMeeting(423),
        RecordAllMeetings(424),
        RecordSecurityLevel(425),
        RecordSecurityCaveats(426),
        RecordMostRecentTask(428),
        RecordCSprimordialSecurity(429),
        RecordVitalReviewPeriod(430),
        RecordContainerTitle(431),
        RecordDateAssigned(432),
        RecordHomeSpaceNumber(433),
        RecordHasEmailAttachments(434),
        RecordAutoRenderStatus(435),
        RecordMakeInactiveDate(437),
        RecordBypassRecordTypeAccessControls(438),
        RecordOriginatedFrom(439),
        RecordDateImported(440),
        RecordSpURL(441),
        RecordSpGUID(442),
        RecordSpFarmGUID(443),
        RecordSpListType(444),
        RecordSpListItemCount(445),
        RecordSpType(446),
        RecordDispositionChangedDate(447),
        RecordSpSiteCollectionGUID(448),
        RecordLocationEmail(450),
        RecordLocationMobileNo(451),
        RecordLocationFaxNo(452),
        RecordLocationWebPage(453),
        RecordLocationPAddress(454),
        RecordLocationSAddress(455),
        RecordOriginatedFromRun(456),
        RecordMediaType(457),
        OriginHistoryName(460),
        OriginHistoryOrigin(461),
        OriginHistoryDateRun(462),
        OriginHistoryRecordsCreated(463),
        OriginHistoryRecordsInError(464),
        OriginHistoryRecordsUpdated(465),
        OriginHistoryLocationsCreated(466),
        OriginHistoryLocationsInError(467),
        OriginHistoryOriginLocationUsed(468),
        LocationAllMembers(480),
        LocationAllMemberships(481),
        LocationAllMembershipsRecursive(482),
        LocationUsedForStatistics(483),
        LocationSecurityKeys(484),
        LocationUserLicenseType(485),
        LocationAllAdministrators(486),
        LocationCutoffTime(487),
        LocationRequestResponseHigh(488),
        LocationRequestResponseMedium(489),
        LocationRequestResponseLow(490),
        LocationRequestsNeedApproval(491),
        LocationDeliverContainersOnly(492),
        LocationCanDeliverDirect(493),
        LocationDeliveryLocation(494),
        LocationAdministrator(495),
        LocationProviderLogRecordType(496),
        LocationProviderContainer(497),
        LocationHasAValidLogin(498),
        LocationEmailAddress(499),
        WordName(501),
        WordCount(502),
        WordWordType(503),
        WordField(504),
        UserLabelName(520),
        UserLabelOwner(521),
        UserLabelLabelType(522),
        UserLabelDateCreated(523),
        UserLabelIconId(528),
        UserLabelFullName(529),
        UserLabelParentLabel(536),
        RecordSecurityLocks(547),
        RecordIdolMetadataXML(548),
        RecordFolderOrigin(549),
        MailTemplateName(560),
        MailTemplateForEventType(561),
        MailTemplateRelatingToObjectType(562),
        MailTemplateForPropertyId(563),
        MailTemplateForUserDefinedField(564),
        MailTemplateWithValue(565),
        MailTemplateForRecipientPropertyId(566),
        MailTemplateForRecipientUserDefinedField(567),
        MailTemplateForRecipientWithValue(568),
        MailTemplateReplyTo(569),
        MailTemplateSubjectTemplate(570),
        MailTemplateContentTemplate(571),
        MailTemplateObjectsSelected(572),
        MailTemplateRecipientsSelected(573),
        MailTemplateAttachReference(574),
        MailTemplateUseHTMLformat(575),
        CommunicationDirection(580),
        CommunicationMedium(581),
        CommunicationDated(582),
        CommunicationSender(583),
        CommunicationRecipients(584),
        CommunicationRecord(585),
        CommunicationDescription(586),
        CommunicationDetailLocation(587),
        CommunicationDetailDirection(588),
        CommunicationDetailLocationName(589),
        CommunicationDetailAddressType(590),
        CommunicationDetailAddressUri(591),
        CommunicationDetailReference(592),
        CommunicationDetailAddressDescription(593),
        CommunicationDetailAddressLines(594),
        CommunicationDetailCity(595),
        CommunicationDetailState(596),
        CommunicationDetailPostcode(597),
        ZipCodePostcode(601),
        ZipCodeCity(602),
        ZipCodeState(603),
        ZipCodeRegion(604),
        ZipCodeCountry(605),
        CommunicationDetailRegion(610),
        CommunicationDetailCountry(611),
        CommunicationDetailEmailAddress(612),
        CommunicationDetailFaxNumber(613),
        CommunicationDetailRecordSent(614),
        CommunicationDetailDated(615),
        CommunicationDetailCountryISO(616),
        CommunicationDetailAddressDescriptionISO(617),
        CommunicationViewable(618),
        RecordMessageId(663),
        RecordConversationId(664),
        RecordDocumentLastAccessedDate(665),
        DatabaseCreateUdfChangedEvents(668),
        DatabaseGenerateDeleteAuditSummary(669),
        DatabaseCollectUpdateComments(670),
        DatabaseUpdateCommentsAreMandatory(671),
        DatabaseCatalogAuditLogs(672),
        DatabaseAuditLogRecordType(673),
        DatabaseAuditLogContainer(674),
        DatabaseIdolSearchStyle(676),
        DatabaseTitleAndNotesEvents(677),
        DatabaseRmTerminology(678),
        DatabaseLogStorageTransfers(679),
        DatabaseMailRecipientMustExist(680),
        DatabaseDocumentSingleInstancing(681),
        DatabaseEmlAttachmentSingleInstancing(682),
        DatabaseCheckForDuplicateDocuments(683),
        DatabasePreventDuplicatedDocuments(684),
        DatabaseTransferHashCheck(685),
        DatabaseEmlSpecialHashing(686),
        DatabaseDeduplicationThreshold(687),
        DatabaseStorageHashCheck(688),
        DatabaseManyMemberships(689),
        DatabaseAddToContainerOnHold(690),
        DatabaseNotifyOverdueReturn(691),
        DatabaseAutomaticallyOCR(692),
        DatabaseNotifyRecordRequest(693),
        DatabasePmContributor(694),
        DatabaseNotifyRequestsAwaitingAcknowledgement(695),
        DatabaseRecordOwnersInAuditLog(696),
        MeetingName(700),
        MeetingMeetingDate(701),
        MeetingNotes(704),
        MeetingChair(705),
        MeetingApologies(706),
        MeetingAttendees(707),
        MeetingInvitations(708),
        MeetingMeetingType(709),
        MeetingMeetingPlace(710),
        MeetingMeetingDuration(711),
        MeetingSubmissionsCutoffDate(712),
        MeetingAgendaIssueDate(713),
        MeetingAgendaRecord(714),
        MeetingMinutesRecord(715),
        MeetingPending(716),
        MeetingAgendaOpen(717),
        MeetingInvitationInvitee(720),
        MeetingInvitationInviteeLocation(721),
        MeetingInvitationTypeOfInvite(722),
        MeetingInvitationTypeOfAttendee(723),
        MeetingInvitationNotes(724),
        MeetingInvitationProxy(725),
        MeetingInvitationSequenceNumber(726),
        MeetingDocumentName(730),
        MeetingDocumentRecordReference(731),
        MeetingDocumentDocumentType(732),
        MeetingDocumentOrderNumber(733),
        MeetingDocumentEditStatus(734),
        MeetingTypeName(740),
        MeetingTypeMeetingPlace(741),
        MeetingTypeMeetingTime(742),
        MeetingTypeMeetingDuration(743),
        MeetingTypeLatestMeeting(744),
        MeetingTypeMeetingFrequency(745),
        MeetingTypeMeetingFrequencyType(746),
        MeetingTypeMeetingSnapDay(747),
        MeetingTypeMeetingSnapDayCount(748),
        MeetingTypeMeeetingFrequencyDesc(750),
        MeetingTypeNextMeeting(751),
        MeetingTypeSubmissionCutoff(752),
        MeetingTypeSubmissionCutoffInterval(753),
        MeetingTypeSubmissionCutoffDesc(754),
        MeetingTypeAgendaIssue(755),
        MeetingTypeAgendaIssueInterval(756),
        MeetingTypeAgendaIssueDesc(757),
        MeetingTypeOutlineNumbering(758),
        MeetingTypeAgendaRecordType(759),
        MeetingTypeAgendaClassification(760),
        MeetingTypeAgendaContainer(761),
        MeetingTypeDefaultAgendaItemType(762),
        MeetingTypeMinuteRecordType(763),
        MeetingTypeMinuteClassification(764),
        MeetingTypeMinuteContainer(765),
        MeetingTypeItemsApprovedBy(766),
        MeetingTypeNotes(767),
        MeetingTypeUsualParticipantInvitee(770),
        MeetingTypeUsualParticipantInviteeLocation(771),
        MeetingTypeUsualParticipantTypeOfInvite(772),
        MeetingTypeUsualParticipantSequenceNumber(773),
        AgendaItemNumber(780),
        AgendaItemExpandedNumber(781),
        AgendaItemDescription(782),
        AgendaItemOutlineNumber(783),
        AgendaItemParentMeeting(784),
        AgendaItemParentMeetingType(785),
        AgendaItemParentAgendaItem(786),
        AgendaItemCarriedForwardFromItem(787),
        AgendaItemItemType(788),
        AgendaItemIsSection(789),
        AgendaItemIsPending(790),
        AgendaItemIsStanding(791),
        AgendaItemAgendaItemOrderNumber(792),
        AgendaItemSubmittedBy(793),
        AgendaItemDateSubmitted(794),
        AgendaItemNeedsApprovalBy(795),
        AgendaItemDateApproved(796),
        AgendaItemDocStore(797),
        AgendaItemDocStoreId(798),
        AgendaItemDocExtension(799),
        SecurityLevelName(801),
        SecurityLevelAbbreviation(802),
        SecurityLevelLevelNumber(803),
        SecurityLevelActiveFrom(804),
        SecurityLevelActiveTo(805),
        SecurityLevelIsActive(806),
        SecurityLevelActiveDescription(807),
        SecurityLevelNotes(808),
        AgendaItemTypeName(830),
        AgendaItemTypeNeedsApprovalBy(831),
        AgendaItemTypeOwner(832),
        AgendaItemTypeNumberPattern(833),
        AgendaItemTypeLastNumber(834),
        AgendaItemTypeDocStore(835),
        AgendaItemTypeDocStoreId(836),
        AgendaItemTypeDocExtension(837),
        AgendaItemTypeDocSize(838),
        AgendaItemTypeDocDateModified(839),
        AgendaItemTypeDefaultMinuteItemType(840),
        MeetingTypeAtDocStore(850),
        MeetingTypeAtDocStoreId(851),
        MeetingTypeAtDocExtension(852),
        MeetingTypeAtDocSize(853),
        MeetingTypeAtDocDateModified(854),
        MeetingTypeMtDocStore(855),
        MeetingTypeMtDocStoreId(856),
        MeetingTypeMtDocExtension(857),
        MeetingTypeMtDocSize(858),
        MeetingTypeMtDocDateModified(859),
        MeetingTypeDefaultMinuteItemType(860),
        AgendaItemTypeAttachmentDescription(870),
        AgendaItemTypeAttachmentAttachedObjectType(871),
        AgendaItemTypeAttachmentSequenceNumber(872),
        AgendaItemTypeAttachmentAgendaPrintStyle(873),
        SecurityCaveatName(901),
        SecurityCaveatAbbreviation(902),
        SecurityCaveatCaveatNumber(903),
        SecurityCaveatActiveFrom(904),
        SecurityCaveatActiveTo(905),
        SecurityCaveatIsActive(906),
        SecurityCaveatActiveDescription(907),
        SecurityCaveatNotes(908),
        MinuteItemDescription(920),
        MinuteItemParentAgendaItem(921),
        MinuteItemMinuteItemOrderNumber(923),
        MinuteItemProposedBy(924),
        MinuteItemSecondedBy(925),
        MinuteItemOutcome(926),
        MinuteItemDocStore(927),
        MinuteItemDocStoreId(928),
        MinuteItemDocExtension(929),
        MinuteItemDocSize(930),
        MinuteItemDocDateModified(931),
        MinuteItemItemType(932),
        MinuteItemIsMotion(933),
        MinuteItemMeeting(934),
        TodoItemDescription(940),
        TodoItemTodo(941),
        TodoItemAssignee(942),
        TodoItemDateDue(943),
        TodoItemDateDone(944),
        TodoItemItemPriority(945),
        TodoItemNotes(946),
        TodoItemCreatedBy(947),
        TodoItemDateCreated(948),
        TodoItemNotifyByEmail(949),
        TodoItemItemReferenceDetails(950),
        TodoItemItemReferenceRecord(951),
        TodoItemItemReferenceReferenceType(952),
        TodoItemItemReferenceSequenceNbr(953),
        TodoItemIsComplete(954),
        TodoItemIsOverdue(955),
        AgendaItemAttachmentDescription(960),
        AgendaItemAttachmentObjectDetails(961),
        AgendaItemAttachmentRecord(962),
        AgendaItemAttachmentLocation(963),
        AgendaItemAttachmentAttachedObjectType(964),
        AgendaItemAttachmentAttachedObject(965),
        AgendaItemAttachmentSequenceNumber(966),
        AgendaItemAttachmentAgendaPrintStyle(967),
        MinuteItemActionArisingTitle(970),
        MinuteItemActionArisingTask(971),
        MinuteItemActionArisingSequenceNumber(972),
        AgendaItemDocSize(980),
        AgendaItemDocDateModified(981),
        AgendaItemDefaultMinuteItemType(982),
        AgendaItemPrimaryLocation(983),
        AgendaItemPrimaryRecord(984),
        AgendaItemApproved(985),
        LookupSetName(1001),
        LookupSetNotes(1002),
        LookupSetAccessControl(1003),
        LookupSetLookupSetType(1004),
        LookupSetIconId(1005),
        LookupSetUsesAuthorityStyle(1006),
        LookupSetIsUsedByAdditionalFields(1007),
        WorkflowName(1050),
        WorkflowCustomer(1051),
        WorkflowTemplate(1052),
        WorkflowDateRegistered(1053),
        WorkflowSupervisor(1054),
        WorkflowJobNumber(1055),
        WorkflowJobNumberExpanded(1056),
        WorkflowDateDue(1057),
        WorkflowDateCompleted(1058),
        WorkflowWorkflowPriority(1059),
        WorkflowScheduledStartDate(1060),
        WorkflowDateStarted(1061),
        WorkflowIncomplete(1062),
        WorkflowDefaultContainer(1063),
        WorkflowDestroyDueDate(1064),
        WorkflowOverheadCost(1065),
        WorkflowRecordType(1066),
        WorkflowPercentageCompleted(1067),
        WorkflowCreator(1068),
        WorkflowInitiator(1069),
        WorkflowEmailSupervisor(1070),
        WorkflowAutoStartActivities(1071),
        WorkflowTotalEstimatedCost(1072),
        WorkflowTotalActualCost(1073),
        WorkflowTotalEstimatedDuration(1074),
        WorkflowTotalActualDuration(1075),
        WorkflowTotalRemainingDuration(1076),
        WorkflowNotes(1078),
        WorkflowAccessControl(1079),
        WorkflowNormalRect(1080),
        WorkflowOutlineRect(1081),
        WorkflowLockedBy(1082),
        WorkflowLockedOn(1083),
        WorkflowLockStatus(1084),
        WorkflowRecalcWhenFinishEarly(1085),
        WorkflowRecalcWhenFinishLate(1086),
        WorkflowRecalcWhenSuspended(1087),
        WorkflowIsComplete(1088),
        WorkflowIsOverdue(1089),
        WorkflowDocumentTitle(1090),
        WorkflowDocumentPlaceholderType(1091),
        WorkflowDocumentRecord(1092),
        WorkflowDocumentDocumentId(1093),
        WorkflowTemplateName(1110),
        WorkflowTemplateDateRegistered(1111),
        WorkflowTemplateSupervisor(1112),
        WorkflowTemplateDefaultPriority(1113),
        WorkflowTemplateRecalcWhenFinishEarly(1114),
        WorkflowTemplateRecalcWhenFinishLate(1115),
        WorkflowTemplateRecalcWhenSuspended(1116),
        WorkflowTemplateDefaultContainer(1117),
        WorkflowTemplateOverheadCost(1118),
        WorkflowTemplateRecordType(1119),
        WorkflowTemplateEmailSupervisor(1120),
        WorkflowTemplateAutoStartActivities(1121),
        WorkflowTemplateInitRecordBehavior(1122),
        WorkflowTemplateTotalEstimatedCost(1123),
        WorkflowTemplateTotalEstimatedDuration(1124),
        WorkflowTemplateNotes(1126),
        WorkflowTemplateAccessControl(1127),
        WorkflowTemplateCopiedAccessControl(1128),
        WorkflowTemplateMonthsToKeep(1129),
        WorkflowTemplateLockedBy(1130),
        WorkflowTemplateLockedOn(1131),
        WorkflowTemplateLockStatus(1132),
        ActivityName(1150),
        ActivityWorkflow(1151),
        ActivityTemplate(1152),
        ActivityAssignedTo(1153),
        ActivitySupervisor(1154),
        ActivityEstimatedDuration(1155),
        ActivityEstimatedCost(1156),
        ActivityActivityPriority(1157),
        ActivityWithinTemplate(1159),
        ActivityIsStartActivity(1160),
        ActivityUseAdvancedCompletionWizard(1161),
        ActivityAutoComplete(1162),
        ActivityRequiresAuthorization(1163),
        ActivityDateEarliestStart(1164),
        ActivityDateLatestStart(1165),
        ActivityDateDue(1166),
        ActivityIsReadyToStart(1167),
        ActivityDateAssigned(1168),
        ActivityIsComplete(1169),
        ActivityIsOverdue(1170),
        ActivityDateStarted(1171),
        ActivityPercentComplete(1172),
        ActivityDateCompleted(1173),
        ActivityCompletedBy(1174),
        ActivityDateAuthorized(1175),
        ActivityActualDuration(1176),
        ActivityActualCost(1177),
        ActivityState(1178),
        ActivityNotes(1179),
        ActivityActivityId(1180),
        ActivityParentActivityId(1181),
        ActivityEscalatedTo(1182),
        ActivityOriginalAssignee(1183),
        ActivityIsLastActivity(1184),
        ActivityHasSubActivities(1185),
        ActivityEmailAssigned(1187),
        ActivityEmailReassigned(1188),
        ActivityEmailUndone(1189),
        ActivityEmailCurrent(1190),
        ActivityEmailOverdue(1191),
        ActivityEmailCompleted(1192),
        ActivityEmailSkipped(1193),
        ActivityEmailEscalated(1194),
        ActivityEmailAuthorizable(1195),
        ActivityDateSuspended(1196),
        ActivityDateSuspendedUntil(1197),
        ActivitySuspendedBy(1198),
        ActivityReasonForSuspension(1199),
        ActivityTotalSuspensionDuration(1200),
        ActivityNormalRect(1202),
        ActivityOutlineRect(1203),
        ActivityDateSkipped(1204),
        ActivityDerivedFromTemplate(1205),
        ActivityScheduledDuration(1206),
        ActivityWasSkipped(1207),
        ActivityAssignedBy(1208),
        ActivityResult(1209),
        ActivityDocumentTitle(1210),
        ActivityDocumentAction(1211),
        ActivityDocumentOrigin(1212),
        ActivityDocumentStatus(1213),
        ActivityDocumentRecordType(1214),
        ActivityDocumentRecord(1215),
        ActivityDocumentUsage(1216),
        ActivityDocumentDocumentId(1217),
        ActivityDocumentDefaultContainer(1218),
        ActivityDocumentSupercopy(1219),
        ActivityDocumentMandatory(1220),
        ActivityDocumentOriginatingActivityId(1221),
        ActivityCompletedOnTime(1222),
        ActivityResultName(1230),
        ActivityResultDescription(1231),
        ActivityResultWasReached(1232),
        ActivityResultRollbackToId(1233),
        ActivityResultPositions(1234),
        ActivityStartConditionDescription(1240),
        ActivityStartConditionPredecessorId(1241),
        ActivityStartConditionPredecessorResult(1242),
        ActivityStartConditionIsMandatory(1243),
        ActivityStartConditionLinePositions(1244),
        ActivityStartConditionNormalLinePositionFixed(1245),
        ActivityStartConditionOutlineLinePositionFixed(1246),
        ActivityEscalationDescription(1250),
        ActivityEscalationEscalateTo(1251),
        ActivityEscalationWaitingPeriod(1252),
        ActivityEscalationDateEscalationDue(1253),
        ActivityAuthorizationAuthorizedBy(1260),
        ActivityAuthorizationAuthorizedOn(1261),
        ActivityEmailRecipientCcTo(1263),
        ActivityEmailRecipientMessageTypes(1264),
        WorkflowTemplateDocumentTitle(1270),
        WorkflowTemplateDocumentPlaceholderType(1271),
        WorkflowTemplateDocumentRecord(1272),
        WorkflowTemplateDocumentDocumentId(1273),
        OriginContainerSizeThreshold(1277),
        OriginContainerHasDateRange(1278),
        OriginContainerDateInterval(1279),
        NotificationDescription(1280),
        NotificationObjectType(1281),
        NotificationEventType(1282),
        NotificationEventDate(1283),
        NotificationObjectUri(1284),
        OriginContainerPerOwner(1285),
        OriginContainerPerUserField(1286),
        OriginContainerCreation(1287),
        OriginContainerType(1288),
        Urn(1290),
        SearchFormName(1291),
        SearchFormDescription(1292),
        SearchFormObjectType(1293),
        SearchFormDefinition(1294),
        SearchFormFactoryDefinition(1295),
        SpaceNumber(1301),
        SpaceDescription(1302),
        SpaceNickName(1303),
        SpaceFullDescription(1304),
        SpaceCapacity(1305),
        SpaceAvailable(1306),
        SpaceUsed(1307),
        SpaceForeignBarcode(1308),
        SpaceWithin(1309),
        SpaceSecurity(1310),
        SpaceAccessControl(1311),
        SpaceLevel(1312),
        SpaceRecordsAtHome(1313),
        SpaceRecordsActuallyAtHome(1314),
        SpaceRecordsOut(1315),
        SpaceRecordsInHoldingBay(1316),
        SpaceIsLowestLevel(1317),
        SpaceHasHoldingBay(1318),
        SpaceRecordsActuallyInBay(1319),
        SpaceRecordsOutOfBay(1320),
        SpaceUsageDetails(1321),
        SpaceRecordsAllBays(1322),
        SpaceRecordsActualAllBays(1323),
        SpaceRecordsLoanAllBays(1324),
        SpaceRecordsAddedThisYear(1325),
        SpaceRecordsAddedLastYear(1326),
        SpaceRecordsAdded2YearsAgo(1327),
        SpaceDestroyedRecords(1328),
        SpaceDestroyedInBay(1329),
        SpaceDestroyedAllBays(1330),
        SpaceNodeCapacity(1331),
        SpaceNodeAvailable(1332),
        SpaceNodeUsed(1333),
        SpaceIsCaptioned(1334),
        SpaceAdvancedUsageDetails(1335),
        LocationUnit(1350),
        LocationWebPage(1351),
        LocationAdditionalLogin(1352),
        LocationGpsLocation(1353),
        LocationLdapSynchDN(1354),
        LocationLdapSynchEnabled(1355),
        LocationLdapSynchLastUpdated(1356),
        LocationIsVisitor(1357),
        LocationHomeDataset(1358),
        SharePointItemUniqueId(1360),
        SharePointItemListItemRecord(1361),
        SharePointItemListRecord(1362),
        SharePointItemListItemId(1363),
        SharePointItemItemURL(1364),
        SharePointItemListURL(1365),
        SharePointItemListGUID(1366),
        SharePointItemListType(1367),
        SharePointItemStatus(1368),
        SharePointItemOriginator(1369),
        SharePointItemModifiedTitle(1370),
        SharePointItemRelationship(1371),
        SharePointItemSynchPending(1372),
        SharePointItemIsDocument(1373),
        SharePointItemViewable(1374),
        LastUpdatedBy(1380),
        RecordScheduledDisposalMethod(1381),
        RecordScheduledDisposalDate(1382),
        RecordScheduledDisposalStatus(1383),
        RecordScheduledInactiveStatus(1384),
        RecordDisposalMethod(1385),
        RecordDisposalDate(1386),
        RecordClientRecord(1387),
        RecordClientNumber(1388),
        RecordClientName(1389),
        RecordMatterRecord(1390),
        RecordMatterNumber(1391),
        RecordMatterName(1392),
        RecordClientMatterRoleRoleLocation(1393),
        RecordClientMatterRoleRoleType(1394),
        RecordClientMatterPartyParty(1395),
        RecordClientMatterPartyPartyType(1396),
        RecordClientMatterPartyInterest(1397),
        RecordConsignmentObject(1398),
        RecordAutoClassificationConfidenceLevel(1399),
        MinuteItemTypeName(1400),
        MinuteItemTypeDocStore(1401),
        MinuteItemTypeDocStoreId(1402),
        MinuteItemTypeDocExtension(1403),
        MinuteItemTypeDocSize(1404),
        MinuteItemTypeDocDateModified(1405),
        ConsignmentNumber(1410),
        ConsignmentDisposalMethod(1411),
        ConsignmentStateDescription(1412),
        ConsignmentCutoffDate(1413),
        ConsignmentDescription(1415),
        ConsignmentQueryString(1416),
        ConsignmentFilterString(1417),
        ConsignmentTransferLocation(1418),
        ConsignmentApproverApprover(1422),
        ConsignmentApproverRecord(1423),
        ConsignmentApproverConsignment(1424),
        ConsignmentApproverStatus(1425),
        ConsignmentApproverApprovedOn(1426),
        ConsignmentApproverOrder(1427),
        ConsignmentApproverRejectReason(1428),
        ConsignmentApproverRejectedOn(1429),
        OriginName(1430),
        OriginOriginLocation(1431),
        OriginTypeOfOrigin(1432),
        OriginDateLastLoaded(1433),
        OriginRunsOnMachine(1434),
        OriginAutoStart(1435),
        OriginTimeFrom(1436),
        OriginTimeTo(1437),
        OriginStore(1438),
        OriginStoreId(1439),
        OriginSize(1440),
        OriginDateModified(1441),
        OriginExtension(1442),
        OriginDefaultRecordType(1443),
        OriginDefaultContainer(1444),
        OriginDefaultClassification(1445),
        OriginDefaultHomeLocation(1446),
        OriginDefaultOwnerLocation(1447),
        OriginDefaultCreator(1448),
        OriginDefaultAuthor(1449),
        OriginDefaultSchedule(1450),
        OriginNotes(1451),
        OriginMakeNewRevision(1452),
        OriginKeepCheckedOut(1453),
        OriginLocationMatching(1454),
        JurisdictionDescription(1460),
        JurisdictionName(1461),
        JurisdictionComments(1462),
        JurisdictionJurisdictionType(1463),
        JurisdictionMembers(1464),
        LocationDefaultJurisdiction(1465),
        ConsignmentApproverRecTitle(1466),
        ConsignmentApproverRecRecType(1467),
        ConsignmentApproverRecDateClosed(1468),
        ConsignmentApproverRecDateLastUpdated(1469),
        ConsignmentIssueIssueType(1470),
        ConsignmentIssueRecord(1471),
        ConsignmentIssueConsignment(1476),
        ConsignmentIssueDescription(1477),
        JurisdictionMemberJurisdiction(1480),
        ConsignmentLogRecord(1482),
        ConsignmentArchivist(1483),
        ConsignmentDisposalDate(1484),
        ConsignmentAckTransferDate(1485),
        ConsignmentOnlyScheduledDisposal(1486),
        ConsignmentIssueReviewer(1487),
        ConsignmentIssueIssueId(1488),
        ConsignmentAllowOutsideSchedule(1489),
        RecordTypeAutoSubFolderTitle(1510),
        RecordTypeAutoSubFolderSubRecordType(1511),
        RecordTypeAutoSubFolderSubClassification(1512),
        RecordTypeAutoSubFolderSubSchedule(1513),
        RecordSapReposId(1520),
        RecordSapDocumentId(1521),
        RecordSapArchiveLinkVsn(1522),
        RecordSapDocumentProtection(1523),
        RecordSapArchiveDate(1524),
        RecordSapModifiedDate(1525),
        RecordSapDocumentType(1526),
        RecordSapCustomerNumber(1527),
        RecordSapCustomerName(1528),
        RecordSapCreatorName(1529),
        RecordSapCreatorLocUri(1530),
        RecordSapBusinessObject(1531),
        RecordSapBusinessId(1532),
        RecordCheckedInBy(1533),
        RecordRevisionCheckedInBy(1534),
        RecordDateSuperseded(1535),
        RecordDateReceived(1536),
        RecordAlternateContentsCount(1537),
        RecordCanUseClassification(1538),
        RecordGpsLocation(1539),
        RecordSapComponentComponentId(1540),
        RecordSapComponentArchiveLinkVersion(1541),
        RecordSapComponentApplicationVersion(1542),
        RecordSapComponentContentType(1543),
        RecordSapComponentCharacterSet(1544),
        RecordSapComponentArchiveDate(1545),
        RecordSapComponentDateModified(1546),
        RecordSapComponentStoreUri(1547),
        RecordSapComponentStoreId(1548),
        RecordSapComponentExtension(1549),
        RecordSapComponentBytes(1550),
        RecordSapComponentFileName(1551),
        ConsignmentAllowOnHold(1560),
        ConsignmentOwnerApproval(1561),
        ConsignmentOwnerAdminApproval(1562),
        ConsignmentDateReviewed(1563),
        ConsignmentDateApproved(1564),
        ConsignmentNbrRecordsStart(1565),
        ConsignmentNbrRecordsNow(1566),
        ConsignmentNbrRemoved(1567),
        ConsignmentNbrRejected(1568),
        ConsignmentNbrDisposed(1569),
        ConsignmentNbrDisposalErrors(1570),
        ConsignmentIssueParentRecord(1571),
        ConsignmentWaitingAcknowledgement(1572),
        ConsignmentIsComplete(1573),
        ConsignmentNbrIssuesStart(1574),
        ConsignmentNbrIssuesNow(1575),
        ConsignmentSelectingTopContainers(1576),
        LookupItemParentSet(1580),
        LookupItemName(1581),
        LookupItemAbbreviation(1582),
        LookupItemDescription(1583),
        LookupItemIconId(1584),
        LookupItemUsesAuthorityStyle(1585),
        LookupItemAuthorityReference(1586),
        LookupItemAuthorityDescription(1587),
        LookupItemAuthorityComments(1588),
        JurisdictionIsActive(1590),
        JurisdictionActiveFrom(1591),
        JurisdictionActiveTo(1592),
        JurisdictionActiveDescription(1593),
        SavedSearchAssigneeSearchIncludesAuthorisation(1600),
        SavedSearchAnyWordTitle(1601),
        SavedSearchAnyWordNotes(1602),
        SavedSearchAnyWordContents(1603),
        SavedSearchIdolSearchStyle(1604),
        SavedSearchExtendedIDOLOptimization(1605),
        SavedSearchCanEdit(1606),
        SavedSearchCanExecute(1607),
        RecordNeedsReview(1610),
        RecordNeedsAuthorization(1611),
        RecordAuthorizationMethod(1612),
        RecordReviewState(1613),
        RecordReviewStateDate(1614),
        RecordReviewDueDate(1615),
        RecordEditor(1616),
        RecordLocationComments(1617),
        RecordLocationIsComplete(1618),
        RecordLocationDueDate(1619),
        DatabaseAutoGenerateThumbnail(1620),
        DatabaseNotifyDocumentReviewEvents(1621),
        DatabaseEmailSubjectPrefix(1622),
        DatabaseSuppressWarningsForClosedContainers(1623),
        DatabaseGoogleKey(1624),
        DatabaseCascadeParentFields(1625),
        DatabaseAllowManualSentItemsCheckin(1626),
        DatabaseAllowUsersToSetDblClick(1627),
        DatabaseDblClickDocsDesktop(1628),
        DatabaseDblClickDocsTrim(1629),
        RecordMyReviewComplete(1630),
        RecordMyReviewComments(1632),
        RecordMyAuthorizationComplete(1633),
        RecordMyAuthorizationComments(1634),
        RecordAutoRenderToPDFOnSave(1635),
        RecordLocationIsOverdue(1636),
        SavedSearchDefaultIncludesNumber(1637),
        SavedSearchDefaultIncludesTitle(1638),
        SavedSearchDefaultIncludesNotes(1639),
        ClassificationPolicyCentreGUID(1640),
        ClassificationCanAttachRecords(1641),
        SavedSearchDefaultIncludesContent(1642),
        RecordRevisionCount(1643),
        RecordAggregatedDisposal(1644),
        ScheduleTriggerPolicyCentreGUID(1650),
        ScheduleTriggerPolicyCentreTitle(1651),
        ScheduleTriggerPolicyCentreNotes(1652),
        ScheduleTriggerPolicyCentreMappingGUID(1653),
        ScheduleTriggerAfterDays(1654),
        ScheduleTriggerDelayType(1655),
        LocationOldStreetAddresses(1660),
        LocationOldPostalAddresses(1661),
        LocationOldStreetAddressesISO(1662),
        LocationOldPostalAddressesISO(1663),
        RecordRevisionPreservationNotes(1664),
        DatabaseDblClickContainers(1670),
        DatabaseDeleteEmailCaptureDuplicates(1671),
        DatabaseDblClickExtLink(1672),
        DatabaseIdolHasSecurityFiltering(1673),
        OfflineRecordTitle(1800),
        OfflineRecordFileType(1801),
        OfflineRecordStatus(1802),
        OfflineRecordDateModified(1803),
        OfflineRecordSize(1804),
        OfflineRecordDateCreated(1805),
        OfflineRecordAuthorName(1806),
        OfflineRecordContainer(1807),
        OfflineRecordContainerTitle(1808),
        OfflineRecordNextRevision(1809),
        OfflineRecordFileName(1810),
        OfflineRecordExtension(1811),
        OfflineRecordFullFileName(1812),
        OfflineRecordDateModifiedAtCheckout(1813),
        OfflineRecordIsADocument(1814),
        OfflineRecordIsAFolder(1815),
        OfflineRecordDateCheckedOut(1816),
        OfflineRecordContainerRecord(1817),
        OfflineRecordRecord(1818),
        OfflineRecordRecordUri(1819),
        OfflineRecordRecordNumber(1820),
        OfflineRecordContainedItemsCount(1821),
        CheckinStyleName(1830),
        CheckinStyleDescription(1831),
        CheckinStyleStyleOwner(1832),
        CheckinStyleRecordType(1833),
        CheckinStyleContainer(1834),
        CheckinStyleClassification(1835),
        CheckinStyleIsMatterTemplate(1836),
        CheckinStyleIsMatterSubfolder(1837),
        CheckinStyleMatter(1838),
        CheckinStyleSubFolderRecordType(1839),
        CheckinStyleSecurity(1840),
        CheckinStyleMakePrivate(1841),
        CheckinStyleFinalizeOnSave(1842),
        CheckinStyleAssignee(1843),
        CheckinStyleJurisdiction(1844),
        CheckinStyleRetentionSchedule(1846),
        CheckinStyleAction(1847),
        CheckinStyleInitiateWorkflow(1849),
        CheckinStyleAutoRender(1850),
        CheckinStyleGpsLocation(1851),
        CheckinStyleUseForServerMailCapture(1852),
        CheckinStyleUseForServerDocCapture(1853),
        CheckinStyleRetainInClient(1854),
        CheckinStyleMoveToDeletedItems(1855),
        CheckinStyleShowDataEntryForm(1856),
        CheckinStyleUseForServerMailFolderType(1857),
        CheckinPlaceName(1860),
        CheckinPlaceOwner(1861),
        CheckinPlacePlaceType(1864),
        CheckinPlacePlaceId(1865),
        CheckinPlaceCheckinAs(1866),
        CheckinPlaceSyncState(1867),
        CheckinPlaceMailFolderType(1868),
        ClassificationIdNumber(1901),
        ClassificationName(1902),
        ClassificationIdNumberUncompressed(1903),
        ClassificationLevelNumber(1904),
        ClassificationLevelNumberUncompressed(1905),
        ClassificationTitle(1906),
        ClassificationHomeLocation(1907),
        ClassificationOwnerLocation(1908),
        ClassificationSecurity(1910),
        ClassificationNotes(1911),
        ClassificationClassOfRecord(1914),
        ClassificationChildPattern(1916),
        ClassificationRecordPattern(1917),
        ClassificationChildLastNumber(1918),
        ClassificationRecordLastNumber(1919),
        ClassificationParentClassification(1920),
        ClassificationRetentionSchedule(1921),
        ClassificationAccessControl(1922),
        ClassificationActiveFrom(1923),
        ClassificationActiveTo(1924),
        ClassificationIsActive(1925),
        ClassificationActiveDescription(1926),
        ClassificationCopiedAccessControl(1927),
        ClassificationNumberPlusName(1928),
        ClassificationNumberingIsManual(1929),
        ClassificationOnlyRecordType(1930),
        ClassificationIsApproved(1931),
        ClassificationApprover(1932),
        ClassificationDefaultJurisdiction(1933),
        ClassificationIdolCategory(1934),
        ClassificationPendingAutoClassification(1935),
        ClassificationPreventAutoClassification(1936),
        ClassificationMinimumConfidenceLevel(1937),
        ClassificationSapBusinessObjectBusinessObject(1938),
        ClassificationContainerCreation(1939),
        ClassificationContainerType(1940),
        ClassificationContainerSizeThreshold(1941),
        ClassificationContainerHasDateRange(1942),
        ClassificationContainerDateInterval(1943),
        ClassificationContainerPerOwner(1944),
        ClassificationContainerPerUserField(1945),
        DatabaseStoreAutoClassifyNotes(1946),
        DatabaseSiteId(1947),
        DatabaseEmailFormat(1948),
        DatabaseLicenseMailAddress(1949),
        DatabaseNotifyAutomaticUserRegistrations(1950),
        DatabaseWorkgroupServerURL(1951),
        DatabaseAlternateWorkgroupServerURL(1952),
        DatabaseFilterClassificationsByCopyACL(1953),
        DatabaseScanEmailForSecurityMarkings(1954),
        DatabaseStrictCount(1956),
        DatabaseHideSQLFromClients(1957),
        DatabaseUseServerDocumentCache(1958),
        DatabaseServerDocumentCacheSize(1959),
        ScheduleName(2001),
        ScheduleTitle(2002),
        ScheduleNotes(2003),
        ScheduleAccessControl(2004),
        ScheduleIsAgencySpecific(2005),
        ScheduleInUse(2006),
        ScheduleSource(2008),
        ScheduleTriggerDescription(2011),
        ScheduleTriggerTriggerType(2012),
        ScheduleTriggerTriggerTypeDescription(2013),
        ScheduleTriggerAfterYears(2014),
        ScheduleTriggerAfterMonths(2015),
        ScheduleTriggerDateType(2016),
        ScheduleTriggerFixedDate(2018),
        ScheduleTriggerIsForDestroy(2019),
        ScheduleTriggerUserDefinedDate(2020),
        ScheduleActiveFrom(2021),
        ScheduleActiveTo(2022),
        ScheduleActiveDescription(2023),
        ScheduleTriggerRounding(2024),
        ScheduleParentSchedule(2025),
        ScheduleHasChildSchedules(2026),
        ScheduleExpandedTitle(2027),
        ScheduleTriggerJurisdiction(2028),
        ScheduleCanOnlyDestroyInactive(2029),
        ScheduleIgnoreBlankDestroyTriggers(2030),
        ScheduleUseEarliestDestroyDate(2031),
        ScheduleRetention(2032),
        ScheduleRetainJurisdictions(2033),
        ScheduleTriggerTransferTo(2035),
        ScheduleActionSummary(2036),
        ScheduleSuppressTriggerCalculationEventOnCommit(2037),
        ScheduleSuppressTriggerCalculationAlways(2038),
        SchedulePolicyCentreGUID(2039),
        RecordTypeSapContainerRecordType(2040),
        RecordTypeSapUseCountryCode(2041),
        RecordTypeSapCreateCountries(2042),
        RecordTypeSapUseDeleteDate(2043),
        RecordTypeSapForceDeleteDate(2044),
        RecordTypeAlwaysAuditSecurityBreaches(2045),
        RecordTypePsoEnable(2046),
        RecordTypePsoActionType(2047),
        RecordTypePsoDateType(2048),
        RecordTypePsoYears(2049),
        RecordTypePsoMonths(2050),
        RecordTypePsoBoxRTY(2051),
        RecordTypePsoNewHomeLoc(2052),
        RecordTypeEsoEnable(2053),
        RecordTypeEsoActionType(2054),
        RecordTypeEsoDateType(2055),
        RecordTypeEsoYears(2056),
        RecordTypeEsoMonths(2057),
        RecordTypeEsoStoreUri(2058),
        RecordTypeEsoAllowEvents(2059),
        RecordTypeNeedsReviewProcess(2060),
        RecordTypeNeedsAuthorizationProcess(2061),
        RecordTypeAuthorizationMethod(2062),
        RecordTypeEditorReminderDays(2063),
        RecordTypeReviewerReminderDays(2064),
        RecordTypeAuthorizerReminderDays(2065),
        RecordTypeFinalReminderDays(2066),
        RecordTypeFollowupReminderDays(2067),
        RecordTypeContainerRule(2068),
        RecordTypeContentsRule(2069),
        RecordTypeEndUsersCanModify(2070),
        RecordTypeNotesInsertStyle(2100),
        RecordTypeNewPartCreationRule(2107),
        RecordTypeExternalId(2108),
        RecordTypeVersionNumbering(2110),
        RecordTypeFinalisePreviousVersion(2111),
        RecordTypePurgePreviousVersion(2112),
        RecordTypeAssignee(2113),
        RecordTypeResetAtYearEnd(2114),
        RecordTypeChangeTitleWhenReadOnly(2115),
        RecordTypeDefaultJurisdiction(2116),
        RecordTypeMediaType(2118),
        RecordTypeOldVersionPurgeStyle(2123),
        RecordTypeAuditCreateEventsOffline(2124),
        RecordTypeAuditModifyEventsOffline(2125),
        RecordTypeAuditDeleteEventsOffline(2126),
        RecordTypeNeedsClassification(2127),
        RecordTypeBorrowingLimit(2128),
        RecordTypeExtensionLimit(2129),
        RecordTypeAllowMultipleExtensions(2130),
        RecordTypeAcknowledgeRequests(2131),
        RecordTypeBelongsToAMatter(2132),
        RecordTypeCanHaveSharePointItems(2133),
        RecordTypeSapRepositoryId(2134),
        RecordTypeSapCreateContainers(2135),
        RecordTypeSapTitleTemplate(2136),
        RecordTypeSapTitleTemplateKS(2137),
        RecordTypeSapCreateContact(2138),
        RecordTypeSapCreateCreatorLoc(2139),
        ElectronicStoreName(2301),
        ElectronicStoreStoreType(2302),
        ElectronicStorePath(2303),
        ElectronicStoreDefaultFor(2305),
        ElectronicStoreAlertLevel(2306),
        ElectronicStoreFilesPerFolder(2307),
        ElectronicStoreCapacity(2309),
        ElectronicStoreWriteProtected(2311),
        ElectronicStoreLoginName(2312),
        ElectronicStoreLoginPassword(2313),
        ElectronicStoreStoreLocation(2317),
        ElectronicStoreDeploymentStatus(2328),
        ElectronicStoreInPool(2329),
        ElectronicStoreCompress(2330),
        ElectronicStoreBytesUsed(2331),
        ElectronicStoreBytesRemaining(2333),
        ElectronicStoreMaxFolderSize(2334),
        ElectronicStoreExternalConfig(2335),
        ElectronicStoreExternalProgId(2336),
        ElectronicStoreStorageTier(2337),
        ElectronicStoreKeepAccessDates(2338),
        ElectronicStoreUpdateAccessDateOnAdd(2339),
        ElectronicStoreDefaultAccessDate(2340),
        ElectronicStoreDeleteRetriesQueued(2341),
        ElectronicStoreAutnGroup(2342),
        ElectronicStoreEncrypt(2343),
        AutoPartRuleName(2411),
        AutoPartRulePartRuleType(2412),
        AutoPartRuleDateType(2413),
        AutoPartRuleContentLimit(2414),
        AutoPartRuleDelayInterval(2415),
        AutoPartRuleDelayType(2416),
        AutoPartRuleFixedDate(2417),
        AutoPartRuleNotes(2418),
        AutoPartRuleUserDefinedDateField(2419),
        AutoPartRuleDescription(2420),
        AlertDescription(2431),
        AlertEventType(2432),
        AlertObjectType(2434),
        AlertSuspendUserFrom(2452),
        AlertCriteria(2453),
        AlertSubscriberDescription(2454),
        AlertSubscriberUser(2455),
        AlertSubscriberSuspendedFrom(2456),
        AlertSubscriberSuspendedUntil(2457),
        AlertSubscriberIsSuspended(2458),
        AlertSuspendUserUntil(2459),
        ActionDefActionName(2601),
        ActionDefAssignee(2602),
        ActionDefDays(2603),
        ActionDefHours(2604),
        ActionDefMinutes(2605),
        ActionDefCost(2606),
        ActionDefIsProcedure(2607),
        ActionDefAssignable(2608),
        ActionDefNotes(2609),
        ActionDefStepActionName(2701),
        ActionDefStepDays(2702),
        ActionDefStepHours(2703),
        ActionDefStepMinutes(2704),
        ActionDefStepCost(2705),
        ActionDefStepAssignee(2706),
        ActionDefStepSequence(2707),
        ActionDefStepUseTime(2708),
        ActionDefStepUseAssignee(2709),
        ActionDefStepUseCost(2710),
        ActionDefStepBasedOnAction(2711),
        RecordActionActionName(2901),
        RecordActionRecord(2902),
        RecordActionAttachDate(2905),
        RecordActionStartDate(2907),
        RecordActionDueDate(2909),
        RecordActionEndDate(2911),
        RecordActionDays(2913),
        RecordActionHours(2914),
        RecordActionMinutes(2915),
        RecordActionCost(2916),
        RecordActionActualDays(2917),
        RecordActionActualHours(2918),
        RecordActionActualMinutes(2919),
        RecordActionResponsibility(2920),
        RecordActionCompletedBy(2921),
        RecordActionPercentComplete(2922),
        RecordActionDuration(2926),
        RecordActionActualDuration(2927),
        RecordActionBarcode(2928),
        RecordActionDone(2929),
        RecordActionNotes(2930),
        RecordActionStatus(2931),
        RecordActionOverdue(2932),
        RecordActionProcedure(2933),
        RecordActionIsReadyToStart(2934),
        RecordActionParentRecordAction(2935),
        RecordActionAssignedBy(2936),
        RecordActionCompletedOnTime(2937),
        KeywordName(3001),
        KeywordSource(3002),
        KeywordIdentificationNumber(3003),
        KeywordIsAPrimaryTerm(3004),
        KeywordIsPrompt(3005),
        KeywordIsNodeLabel(3007),
        KeywordIsForbidden(3008),
        KeywordHasRelatedKeywords(3011),
        KeywordNotes(3013),
        KeywordEnablerFlags(3014),
        KeywordActiveFrom(3015),
        KeywordActiveTo(3016),
        KeywordIsActive(3017),
        KeywordActiveDescription(3018),
        KeywordAccessControl(3019),
        RecordLinkedDocumentDocumentName(3600),
        RecordLinkedDocumentExtension(3601),
        RecordLinkedDocumentLinkType(3602),
        RecordLinkedDocumentLinkedRecord(3603),
        RecordLinkedDocumentLinkedRevision(3604),
        RecordLinkedDocumentBytes(3605),
        RecordLinkedDocumentDateModified(3606),
        RecordLinkedDocumentStorageDescription(3607),
        RecordLinkedDocumentIsNewLink(3608),
        RecordLinkedDocumentEStore(3609),
        RecordLinkedDocumentEStoreId(3610),
        RequestRecord(4001),
        RequestRequestor(4002),
        RequestDueDate(4004),
        RequestDescription(4005),
        RequestFrequency(4006),
        RequestFrequencyType(4007),
        RequestEndDate(4008),
        RequestNotes(4009),
        RequestServiceLocation(4010),
        RequestServiceSpace(4011),
        RequestCurrentLocation(4012),
        RequestRequestType(4013),
        RequestTransitLocation(4014),
        RequestTransitAddress(4015),
        RequestContentReference(4016),
        RequestStatus(4017),
        RequestStatusDetails(4018),
        RequestPriority(4019),
        RequestDateCompleted(4020),
        RequestDateCreated(4021),
        RequestIsComplete(4022),
        RequestStatusChangedDate(4023),
        BarcodeScannerName(4101),
        BarcodeScannerReadMode(4102),
        BarcodeScannerFlowControl(4103),
        BarcodeScannerInitString(4104),
        BarcodeScannerSendAck(4105),
        BarcodeScannerStartId(4106),
        BarcodeScannerInteractive(4107),
        BarcodeScannerTimeOut(4108),
        BarcodeScannerFile(4109),
        BarcodeScannerSendsEof(4110),
        BarcodeScannerType(4111),
        StzReportReportName(4701),
        StzReportReportDetails(4702),
        StzReportFrPeriod(4703),
        StzReportToPeriod(4704),
        StzReportCreated(4705),
        StzReportForWorkflow(4706),
        HtmlLayoutName(5201),
        HtmlLayoutTemplate(5202),
        HtmlLayoutExtension(5203),
        HtmlLayoutForType(5205),
        SavedSearchName(5301),
        SavedSearchDescription(5302),
        SavedSearchAccessControl(5304),
        SavedSearchObjectType(5305),
        SavedSearchQueryString(5306),
        SavedSearchFilterString(5307),
        SavedSearchSortString(5308),
        SavedSearchParent(5309),
        SavedSearchIsGrouping(5310),
        SavedSearchIsOldFormat(5311),
        SavedSearchOwner(5312),
        SavedSearchIsPublic(5313),
        SavedSearchIconId(5314),
        SavedSearchFullName(5315),
        SavedSearchAssigneeSearchIncludesPosition(5316),
        SavedSearchAssigneeSearchIncludesGroups(5317),
        SavedSearchAssigneeSearchIncludesDelegates(5318),
        SavedSearchAssigneeSearchIncludesEscalated(5319),
        HistoryRecord(6702),
        HistoryLogin(6703),
        HistoryDoneOn(6704),
        HistoryEventType(6705),
        HistoryEventDescription(6706),
        HistoryEventUri(6707),
        HistoryIsSecurityViolation(6708),
        HistoryMovementLocation(6709),
        HistoryLoginLocation(6710),
        HistoryRawEventDescription(6711),
        HistoryEventObject(6712),
        HistoryLocation(6713),
        HistoryWorkflow(6714),
        HistoryActivity(6715),
        HistoryForObjectType(6716),
        HistoryForObjectUri(6717),
        HistoryOtherEventType(6718),
        HistoryXmlSummary(6719),
        HistoryTextSummary(6720),
        HistoryDoneOnGMT(6721),
        HistoryDoneOnLocal(6722),
        HistoryDoneOnMachine(6723),
        HistoryUpdateComments(6724),
        HistoryConnectionIPAddress(6725),
        HistoryClientIPAddress(6726),
        FieldDefinitionMask(6820),
        FieldDefinitionDefaultCurrency(6825),
        FieldDefinitionId(6826),
        FieldDefinitionPluginId(6827),
        FieldDefinitionObjectType(6828),
        FieldDefinitionLowerLimit(6829),
        FieldDefinitionUpperLimit(6830),
        FieldDefinitionExternalId(6831),
        FieldDefinitionCurrencySymbol(6832),
        FieldDefinitionIconId(6833),
        FieldDefinitionIsUsedByRecordTypes(6834),
        FieldDefinitionSearchClauseName(6835),
        FieldDefinitionLocationRestriction(6836),
        FieldDefinitionNotes(6837),
        FieldDefinitionIsVisible(6838),
        FieldDefinitionSapKeySetField(6839),
        FieldDefinitionSearchClause(6840),
        FieldDefinitionInIDOLtext(6841),
        FieldDefinitionDateTimeIsUTC(6842),
        FieldDefinitionName(6901),
        FieldDefinitionAbbreviation(6902),
        FieldDefinitionFormat(6903),
        FieldDefinitionLookupSet(6904),
        FieldDefinitionLength(6907),
        FieldDefinitionIsSearchable(6908),
        FieldDefinitionDefaultString(6909),
        FieldDefinitionDefaultNumber(6910),
        FieldDefinitionDefaultDate(6911),
        FieldDefinitionDefaultBoolean(6912),
        FieldDefinitionDefaultDecimal(6913),
        FieldDefinitionDefaultDisplay(6914),
        FieldDefinitionDefaultInternal(6915),
        FieldDefinitionIndexNulls(6916),
        FieldDefinitionIsUsedBy(6919),
        HoldName(7001),
        HoldContact(7002),
        HoldActiveFrom(7003),
        HoldActiveTo(7004),
        HoldNotes(7005),
        HoldIsActive(7006),
        HoldActiveDescription(7007),
        HoldAffectsDispositionOnly(7008),
        HoldSearchCriteria(7009),
        RecordHoldCase(7010),
        RecordHoldContact(7011),
        RecordHoldActiveFrom(7012),
        RecordHoldActiveTo(7013),
        RecordHoldIsActive(7014),
        RecordHoldActiveDescription(7015),
        HoldSearchLastRunOn(7016),
        HoldExternalId(7017),
        RecordJurisdictionJurisdiction(7020),
        CensusName(7101),
        CensusCensusLocation(7102),
        CensusStartDate(7103),
        CensusEndDate(7104),
        CensusInProgress(7105),
        CensusRecordsStart(7106),
        CensusRecordsEnd(7107),
        CensusRecordsMissing(7108),
        ReportReportName(7201),
        ReportForBobType(7202),
        ReportForBobTypeDesc(7203),
        ReportDefaultDevice(7204),
        ReportDefaultDriver(7205),
        ReportDefaultPort(7206),
        ReportDefaultTray(7207),
        ReportLoginName(7208),
        ReportDatabaseName(7209),
        ReportDate(7210),
        ReportTime(7211),
        ReportPage(7212),
        ReportLicensee(7213),
        ReportTitle(7214),
        ReportUserTitle(7215),
        ReportSearchTitle(7216),
        ReportReportEnd(7217),
        ReportName(7219),
        ReportCount(7220),
        ReportForObject(7221),
        DatabaseName(7401),
        DatabaseId(7402),
        DatabaseIsDefault(7403),
        DatabaseIsValid(7404),
        DatabaseIsConnected(7405),
        DatabaseCurrentUser(7406),
        DatabaseStartOfDay(7407),
        DatabaseEndOfDay(7408),
        DatabaseDefaultStore(7412),
        DatabaseMinimumThesaurusLevels(7415),
        DatabaseWebServerURL(7416),
        DatabaseInsecureContainer(7418),
        DatabaseRecordBarcode(7419),
        DatabaseOtherBarcode(7420),
        DatabaseInsecureCurrent(7421),
        DatabaseDefaultHome(7422),
        DatabaseDefaultOwner(7423),
        DatabaseDataSecurity(7424),
        DatabaseAlwaysCheckSpelling(7426),
        DatabaseShredderDelete(7427),
        DatabaseJitcCompliant(7428),
        DatabaseRelaxedDates(7429),
        DatabaseRescheduleActionsIfFinishEarly(7430),
        DatabaseRescheduleActionsIfFinishLate(7431),
        DatabaseLocationFormatShowInitials(7435),
        DatabaseLocationFormatSurnameFirst(7436),
        DatabaseLocationFormatShowHonorific(7437),
        DatabaseLocationFormatShowPostNominal(7438),
        DatabaseMailRecipientsAsContacts(7439),
        DatabaseAuditActive(7440),
        DatabaseAuditEvents(7441),
        DatabaseEstoreMailAddress(7444),
        DatabaseSecurityMailAddress(7445),
        DatabaseNotifyNextAction(7446),
        DatabaseNotifyOverdueAction(7447),
        DatabaseNotifyAssignedAction(7448),
        DatabaseSignatureHashingAlgorithm(7450),
        DatabaseRecordAssigneeDefault(7451),
        DatabaseCalculateDispositionEvents(7453),
        DatabasePmRecordsManager(7454),
        DatabasePmRecordsWorker(7455),
        DatabasePmEndUser(7456),
        DatabasePmEnquiryUser(7457),
        DatabaseConfirmContactValidation(7458),
        DatabaseConfirmLocationValidation(7459),
        DatabaseSoftwareVersion(7460),
        DatabaseCurrencySymbol(7461),
        DatabaseCurrencyPositiveFormat(7462),
        DatabaseCurrencyNegativeFormat(7463),
        DatabaseCurrencyDecimalSymbol(7464),
        DatabaseCurrencyDecimalDigits(7465),
        DatabaseCurrencyGroupingSymbol(7466),
        DatabaseCurrencyGroupingFmt(7467),
        DatabaseBlockedSearchMethods(7468),
        DatabaseSuppressAutoProfile(7469),
        DatabaseFilterClassifications(7470),
        DatabaseUseLanguage(7471),
        DatabaseDefaultStoreForRecords(7472),
        DatabaseDefaultStoreForRevisions(7473),
        DatabaseDefaultStoreForLinkedDocuments(7474),
        DatabaseDefaultStoreForRenditions(7475),
        DatabaseDefaultStoreForLocations(7476),
        DatabaseDefaultStoreForWorkflows(7477),
        DatabaseDefaultStoreForTemplates(7478),
        DatabaseDefaultStoreForReports(7479),
        DatabaseWarnWhenChangeDispositionOfRelated(7480),
        DatabaseSdkVersion(7481),
        DatabaseDefaultStoreForReportBitmaps(7482),
        DatabaseDefaultStoreForStatistics(7483),
        DatabaseCurrentWorkgroup(7484),
        DatabaseHideClassificationNumbers(7485),
        DatabaseCaptureNativeMailAs(7486),
        DatabaseClassifiedSecurity(7487),
        DatabaseDeclassifyYears(7488),
        DatabaseEnableScheduledTasks(7489),
        DatabaseScheduledTaskBobs(7490),
        DatabaseUserFieldBobs(7491),
        DatabaseAutoVitalRecordReview(7492),
        DatabaseObjectURLFormat(7493),
        DatabaseOwnerFromContainer(7494),
        DatabaseDocumentsOnlyWithinFolders(7498),
        DatabaseRelaxedActionDates(7499),
        DatabaseLicenceeName(7521),
        DatabaseLockdownSettings(7522),
        DatabaseUsingStoredProcedures(7523),
        DatabaseRuntimeEnvironment(7526),
        DatabaseSaveTransparentRedactions(7527),
        DatabaseAddHoldToContainedRecord(7528),
        DatabaseOnlyEmailTRIMRefsToTRIMUsers(7529),
        DatabaseSchemaVersion(7530),
        DatabaseSurnamePrefixNotInSort(7531),
        DatabaseHideCustomRecordTypes(7533),
        DatabaseWorkgroupServerName(7534),
        DatabaseNotifyWorkflowMail(7535),
        DatabaseLastMonthInFiscalYear(7536),
        DatabaseNENcompliant(7537),
        DatabaseAutoConnect(7538),
        DatabaseWebServerWorkPath(7539),
        DatabaseDocumentSecurity(7540),
        DatabaseTNAcompliant(7541),
        DatabaseClassificationTopPattern(7542),
        DatabaseClassificationLastNumber(7543),
        DatabaseLogWebServiceLogins(7544),
        DatabaseSystemFlags(7546),
        DatabaseNeedLongevityRenditionToArchive(7547),
        DatabaseDefaultStoreForAgendaItemTypes(7548),
        DatabaseDefaultStoreForAgendaItems(7549),
        DatabaseDefaultStoreForMinuteItems(7550),
        ReportBitmapName(7551),
        ReportBitmapEStore(7552),
        ReportBitmapStoreId(7553),
        ReportBitmapSize(7554),
        ReportBitmapDateModified(7555),
        ReportBitmapExtension(7556),
        ReportBitmapBitmapFileName(7557),
        DatabaseClassificationsNeedApproval(7561),
        DatabaseWorkgroupServerPort(7562),
        DatabaseReadOnly(7563),
        DatabaseDefaultStoreForAgendaTemplates(7564),
        DatabaseDefaultStoreForMinuteTemplates(7565),
        DatabaseEmailSecurity(7566),
        DatabaseDefaultAssigneeFromClassificationOwner(7567),
        DatabaseLastDayInFiscalMonth(7568),
        DatabaseIgnoreStaleUpdates(7569),
        DatabaseRestrictClassifications(7570),
        DatabasePaperFoldersBypassRecordTypeRestriction(7571),
        DatabaseDefaultStoreForMinuteItemTypes(7572),
        DatabaseSetLastActionOnView(7574),
        DatabaseDefaultStoreForOriginConfig(7575),
        DatabaseManyKeywords(7576),
        DatabaseManyRecordTypes(7577),
        DatabaseLocationPrefetch(7578),
        DatabaseClassificationPrefetch(7579),
        DatabaseContainerPrefetch(7580),
        DatabaseSchedulePrefetch(7581),
        DatabaseExcessRowsInTree(7584),
        DatabaseRecordTreeSplitterPercent(7585),
        DatabaseManyLookupSets(7586),
        DatabaseBlueprintsConverted(7587),
        DatabaseAlternateWorkgroupServerName(7588),
        DatabaseAlternateWorkgroupServerPort(7589),
        DatabaseRecordCacheSize(7590),
        DatabaseLocationCacheSize(7591),
        DatabaseObjectCacheSize(7592),
        DatabaseServiceRecordCacheSize(7593),
        DatabaseServiceLocationCacheSize(7594),
        DatabaseServiceObjectCacheSize(7595),
        DatabaseAsynchronousFileTransfer(7596),
        DatabaseFDA21CFR11compliant(7597),
        DatabaseAutoPartTimerDelayMinutes(7598),
        DatabaseWorkflowTimerDelayMinutes(7599),
        RecordRevisionExtension(7600),
        RecordRevisionRevisionNumber(7601),
        RecordRevisionDescription(7602),
        RecordRevisionDateModified(7603),
        RecordRevisionBytes(7604),
        RecordRevisionEStore(7605),
        RecordRevisionDocumentType(7606),
        RecordRevisionEStoreId(7607),
        RecordRevisionPreserve(7608),
        RecordRevisionMimeType(7609),
        ControlBarcodeFunction(7700),
        ControlBarcodeFunctionDesc(7701),
        ControlBarcodeBarcode(7702),
        DatabaseUseClientDocumentCache(7720),
        DatabaseClientDocumentCacheSize(7721),
        DatabaseCheckForDocumentLinks(7722),
        DatabaseIgnoreAccentsInWordIndexes(7723),
        DatabaseDefaultStoreForSharepointRBS(7724),
        DatabaseGlobalTimezone(7725),
        DatabaseReportAddInMemoryLeaks(7726),
        DatabaseStatisticsTimeZone(7727),
        DatabaseStatisticsDst(7728),
        DatabasePrefetchForeignBarcodes(7729),
        DatabaseActionReminder(7731),
        DatabaseActionReminderInterval(7732),
        DatabaseActivityReminder(7733),
        DatabaseActivityReminderInterval(7734),
        DatabaseNotifyTodoItems(7735),
        DatabaseDbms(7737),
        DatabaseDateUserKeysSynchronized(7738),
        DatabaseDateSchedulesSynchronized(7739),
        DatabaseAllowLargeFolders(7740),
        DatabaseContentIndex(7741),
        DatabaseCheckForDuplicateEmailMessages(7742),
        DatabasePreventDuplicatedMailMessages(7743),
        DatabaseAlternatelyContainDuplicateMail(7744),
        DatabaseAllowCatalogMessageBodyOnly(7745),
        DatabaseGenerateAddAuditSummary(7746),
        DatabaseGenerateModifyAuditSummary(7747),
        DatabaseModifyLogsPreviousValues(7748),
        DatabaseIncludeLargeTextUpdatesInLogs(7749),
        DocumentQueueName(7750),
        DocumentQueueMachine(7751),
        DocumentQueueLocation(7752),
        DocumentQueueQueueType(7753),
        DocumentQueueLastProcessed(7757),
        DocumentQueueRecordType(7758),
        DocumentQueueContainer(7759),
        DocumentQueueShowHiddenFiles(7760),
        DocumentQueueShowSystemFiles(7761),
        DocumentQueueShowReferenceFiles(7762),
        DocumentQueueShowBinaryFiles(7763),
        DocumentQueueShowRenditions(7764),
        DocumentQueueSelectFilter(7765),
        DocumentQueueConfirmCheckIn(7766),
        DocumentQueueDisplayEntryForm(7767),
        DocumentQueueCheckLinks(7771),
        DocumentQueueIgnoreOriginals(7772),
        DocumentQueueAllowAutomaticProcessing(7773),
        DocumentQueueAutoViewDocuments(7774),
        DocumentQueueNotes(7776),
        DocumentQueueDocumentUpdateStyle(7777),
        DocumentQueueEmailUpdateStyle(7778),
        DocumentQueueLocationDisplay(7779),
        DocumentQueueClassification(7780),
        StatisticsName(7800),
        StatisticsStatType(7801),
        StatisticsStartDateTime(7802),
        StatisticsEndDateTime(7803),
        StatisticsCreateDateTime(7805),
        StatisticsGenDateTime(7806),
        StatisticsGeneratedBy(7807),
        StatisticsCannedPeriod(7808),
        StatisticsPeriodType(7809),
        StatisticsEStore(7811),
        StatisticsEStoreId(7812),
        StatisticsAccessControl(7813),
        StatisticsGroupedBy(7814),
        StatisticsNeedsGen(7815),
        StatisticsPartsOnly(7816),
        StatisticsGroupByDefParentLoc(7817),
        SecurityGuideEntryReference(7900),
        SecurityGuideDescription(7901),
        SecurityGuideSecurityLevel(7902),
        SecurityGuideReason(7903),
        SecurityGuideDeclassify(7904),
        SecurityGuideNotes(7905),
        SecurityGuideActiveFrom(7906),
        SecurityGuideActiveTo(7907),
        SecurityGuideActiveDescription(7908),
        SecurityGuideTypeOfDeclassification(7909),
        SecurityGuideDeclassifyEvent(7910),
        SecurityGuideDeclassifyYears(7911),
        SecurityGuideDeclassifyExemption(7912),
        SecurityGuideDeclassifyDate(7913),
        SecurityGuideSecurityString(7914),
        ScheduledTaskDescription(7950),
        ScheduledTaskAttachDate(7952),
        ScheduledTaskAttachedToObject(7953),
        ScheduledTaskAttachedToObjectType(7954),
        ScheduledTaskAttachedToObjectUri(7955),
        ScheduledTaskStartDate(7956),
        ScheduledTaskCompletionDate(7957),
        ScheduledTaskRepetitions(7958),
        ScheduledTaskIsComplete(7959),
        ScheduledTaskIntervalType(7960),
        ScheduledTaskIntervalSize(7961),
        ScheduledTaskRepetitionsDone(7962),
        ScheduledTaskNextDueDate(7963),
        ScheduledTaskAssignee(7964),
        ScheduledTaskScheduleDescription(7965),
        ScheduledTaskNotes(7966),
        ScheduledTaskStatus(7967),
        ScheduledTaskLastActionedOn(7968),
        ScheduledTaskHistoryActionDate(7971),
        ScheduledTaskHistoryActionedBy(7972),
        ScheduledTaskHistoryDueDate(7973),
        ScheduledTaskHistoryDetails(7974),
        LocaleUserOptionsPreferredLanguage(8006),
        LocaleUserOptionsMonthBeforeDay(8007),
        LocaleUserOptionsYearFirst(8008),
        LocaleUserOptionsDateSeparator(8009),
        StartupUserOptionsNewItem(8010),
        StartupUserOptionsFind(8011),
        StartupUserOptionsInTray(8012),
        StartupUserOptionsDueTray(8013),
        StartupUserOptionsInDueTray(8014),
        StartupUserOptionsActivityDue(8015),
        StartupUserOptionsWorkTray(8016),
        StartupUserOptionsFavoriteRecords(8017),
        StartupUserOptionsRecentContainers(8018),
        StartupUserOptionsRecentDocuments(8019),
        StartupUserOptionsFavoriteWorkflows(8020),
        StartupUserOptionsClassificationBrowser(8021),
        StartupUserOptionsOfflineRecords(8022),
        StartupUserOptionsRequests(8023),
        StartupUserOptionsFavoriteClassifications(8024),
        StartupUserOptionsDocumentsCheckedOut(8025),
        StartupUserOptionsTodoItems(8026),
        StartupUserOptionsFavoriteSearches(8027),
        StartupUserOptionsFavoriteLocations(8028),
        StartupUserOptionsCheckinStyles(8029),
        SpellingUserOptionsExtraDictionaries(8031),
        SpellingUserOptionsUseBritish(8032),
        SpellingUserOptionsUseAmerican(8033),
        SpellingUserOptionsUseFrench(8034),
        SpellingUserOptionsUseSpanish(8035),
        SpellingUserOptionsUseDutch(8036),
        SpellingUserOptionsUseGerman(8037),
        SpellingUserOptionsUseItalian(8038),
        SpellingUserOptionsUsePortuguese(8039),
        SpellingUserOptionsUsePortugueseBrazil(8040),
        SpellingUserOptionsUseRussian(8041),
        SpellingUserOptionsUseChinese(8042),
        SpellingUserOptionsUseVietnamese(8043),
        SpellingUserOptionsUseSwedish(8044),
        StartupUserOptionsClientMatterHierarchy(8045),
        StartupUserOptionsWebClientPane1(8046),
        StartupUserOptionsWebClientPane2(8047),
        StartupUserOptionsWebClientPane3(8048),
        SearchUserOptionsUseSameWindowWhenNavigating(8050),
        SearchUserOptionsAutomaticallyCountResults(8051),
        SearchUserOptionsEditor(8052),
        SearchUserOptionsRecordEditor(8053),
        SearchUserOptionsAutomaticallyViewRecords(8054),
        SearchUserOptionsIncludeAlternateWhenShowingFolderContents(8055),
        SearchUserOptionsStartPointForContainers(8056),
        SearchUserOptionsStartPointForDocuments(8057),
        SearchUserOptionsStartPointRecordDefault(8058),
        SearchUserOptionsAssigneeSearchIncludesPosition(8059),
        SearchUserOptionsAssigneeSearchIncludesGroups(8060),
        SearchUserOptionsAssigneeSearchIncludesDelegates(8061),
        SearchUserOptionsStartPointForLocations(8062),
        SearchUserOptionsStartPointDefault(8063),
        SearchUserOptionsAssigneeSearchIncludesEscalated(8064),
        SearchUserOptionsAssigneeSearchIncludesAuthorisation(8065),
        SearchUserOptionsContentsInReverseDateOrder(8066),
        SearchUserOptionsAnyWordTitle(8067),
        SearchUserOptionsAnyWordNotes(8068),
        SearchUserOptionsAnyWordContents(8069),
        ViewerUserOptionsNativeApplicationFileTypes(8070),
        ViewerUserOptionsBrowserFileTypes(8071),
        ViewerUserOptionsReuseViewerWindow(8072),
        ViewerUserOptionsLaunchNativeMailViewer(8073),
        ViewerUserOptionsPreviewDocument(8074),
        ViewerUserOptionsPreviewRevision(8075),
        ViewerUserOptionsPreviewShowHighlights(8076),
        EmailUserOptionsUseSimpleMAPI(8110),
        EmailUserOptionsSendUsingTrimForm(8111),
        EmailUserOptionsAddEmailToRecentDocuments(8112),
        ReporterUserOptionsHorizontalAdjustment(8120),
        ReporterUserOptionsVerticalAdjustment(8121),
        DroppedFilesUserOptionsRecordType(8170),
        DroppedFilesUserOptionsContainer(8171),
        DroppedFilesUserOptionsConfirmCheckIn(8172),
        DroppedFilesUserOptionsDisplayDataEntryForm(8173),
        DroppedFilesUserOptionsDeleteFromDisk(8174),
        DroppedFilesUserOptionsEmailUpdateStyle(8175),
        DroppedFilesUserOptionsAutoViewDocuments(8176),
        DroppedFoldersUserOptionsShowHiddenFiles(8190),
        DroppedFoldersUserOptionsShowSystemFiles(8191),
        DroppedFoldersUserOptionsShowReferenceFiles(8192),
        DroppedFoldersUserOptionsShowBinaryFiles(8193),
        DroppedFoldersUserOptionsShowRenditionFiles(8194),
        DroppedFoldersUserOptionsDocumentTypeFilter(8195),
        EmailingRecordsUserOptionsAttachDocument(8210),
        EmailingRecordsUserOptionsAttachReference(8211),
        EmailingRecordsUserOptionsAttachURL(8212),
        EmailingRecordsUserOptionsAttachRenditions(8213),
        EmailingRecordsUserOptionsAttachWorkingDocument(8214),
        OutlookUserOptionsDefaultCheckinStyle(8220),
        OutlookUserOptionsSentItemsCheckinStyle(8221),
        OutlookUserOptionsShowDataEntryForm(8222),
        OutlookUserOptionsWarnWhenDuplicateDetected(8223),
        OutlookUserOptionsActionWhenDuplicateDetected(8224),
        OutlookUserOptionsCheckinSentItems(8225),
        DropzoneUserOptionsOnMinimise(8240),
        DropzoneUserOptionsShowMyContainers(8241),
        DropzoneUserOptionsShowMyDocuments(8242),
        DropzoneUserOptionsShowMyClassifications(8243),
        DropzoneUserOptionsShowClassifications(8244),
        ConsignmentLogUserOptionsShowApprovals(8245),
        DropzoneUserOptionsShowFavRecords(8246),
        DropzoneUserOptionsShowSavedSearch(8247),
        DropzoneUserOptionsShowFreeTitleOnly(8248),
        DropzoneUserOptionsShowAllSavedSearch(8249),
        SearchUserOptionsIdolSearchStyle(8250),
        SearchUserOptionsExtendedIDOLOptimization(8251),
        SearchUserOptionsIncludeLocationsByAddressReference(8252),
        SearchUserOptionsIncludeLocationsByProfileReference(8253),
        SearchUserOptionsUseSQLViews(8254),
        SearchUserOptionsAlphaObjectSort(8255),
        SearchUserOptionsUseDirectIDOLquery(8256),
        SearchUserOptionsPreferredDistance(8257),
        SearchUserOptionsPreferredGDU(8258),
        SearchUserOptionsDefaultIncludesNumber(8259),
        AppearanceUserOptionsSkinMode(8260),
        AppearanceUserOptionsSkinColour(8261),
        AppearanceUserOptionsStyle(8262),
        AppearanceUserOptionsDblClickDocsDesktop(8263),
        AppearanceUserOptionsDblClickDocsTrim(8264),
        SearchUserOptionsDefaultIncludesTitle(8265),
        SearchUserOptionsDefaultIncludesNotes(8266),
        SearchUserOptionsDefaultIncludesContent(8267),
        AppearanceUserOptionsDblClickContainers(8269),
        WebClientUserOptionsPageSize(8270),
        WebClientUserOptionsBypassFileTypes(8271),
        WebClientUserOptionsOnstreamFileTypes(8272),
        WebClientUserOptionsTimezone(8273),
        AppearanceUserOptionsDblClickExtLinkName(8274),
        PolicyCentreUserOptionsCreateClassifications(8275),
        PolicyCentreUserOptionsAuthenticationURL(8276),
        PolicyCentreUserOptionsWebServiceURL(8277),
        PolicyCentreUserOptionsPrivateKey(8278),
        PolicyCentreUserOptionsDomain(8279),
        SpellingUserOptionsAdvancedSpellingOptions(8280),
        PolicyCentreUserOptionsUserName(8281),
        PolicyCentreUserOptionsPassword(8282),
        PolicyCentreUserOptionsPageSize(8283),
        PolicyCentreUserOptionsDiagnosticLogging(8284),
        PolicyCentreUserOptionsRunForever(8285),
        PolicyCentreUserOptionsSynchronizationInterval(8286),
        PolicyCentreUserOptionsDateLastRun(8287),
        GisDataUserOptionsStartPoint(8288),
        GisDataUserOptionsSeachPreference(8289),
        GisDataUserOptionsDisplayGISinWebBrowser(8290);

        private final int value;
        PropertyIds(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    /**
    * Update a MeetingDocument object.
    */
    @Route(Path="/MeetingDocument", Verbs="POST")
    @Api("Update a MeetingDocument object.")
    @DataContract
    public static class MeetingDocument extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="MeetingDocumentDocumentType")
        @SerializedName("MeetingDocumentDocumentType")
        @ApiMember(Name="MeetingDocumentDocumentType", DataType="string", ParameterType="form")
        public TrimProperty<MeetingDocumentType> DocumentType = null;

        @DataMember(Name="MeetingDocumentEditStatus")
        @SerializedName("MeetingDocumentEditStatus")
        @ApiMember(Name="MeetingDocumentEditStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty EditStatus = null;

        @DataMember(Name="MeetingDocumentName")
        @SerializedName("MeetingDocumentName")
        @ApiMember(Name="MeetingDocumentName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Name = null;

        @DataMember(Name="MeetingDocumentOrderNumber")
        @SerializedName("MeetingDocumentOrderNumber")
        @ApiMember(Name="MeetingDocumentOrderNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> OrderNumber = null;

        @DataMember(Name="MeetingDocumentRecordReference")
        @SerializedName("MeetingDocumentRecordReference")
        @ApiMember(Name="MeetingDocumentRecordReference", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public RecordRef RecordReference = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MeetingDocument setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<MeetingDocumentType> getDocumentType() { return DocumentType; }
        public MeetingDocument setDocumentType(TrimProperty<MeetingDocumentType> value) { this.DocumentType = value; return this; }
        public TrimStringProperty getEditStatus() { return EditStatus; }
        public MeetingDocument setEditStatus(TrimStringProperty value) { this.EditStatus = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public MeetingDocument setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<Integer> getOrderNumber() { return OrderNumber; }
        public MeetingDocument setOrderNumber(TrimProperty<Integer> value) { this.OrderNumber = value; return this; }
        public RecordRef getRecordReference() { return RecordReference; }
        public MeetingDocument setRecordReference(RecordRef value) { this.RecordReference = value; return this; }
    }

    /**
    * Update a MeetingInvitation object.
    */
    @Route(Path="/MeetingInvitation", Verbs="POST")
    @Api("Update a MeetingInvitation object.")
    @DataContract
    public static class MeetingInvitation extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="MeetingInvitationInvitee")
        @SerializedName("MeetingInvitationInvitee")
        @ApiMember(Name="MeetingInvitationInvitee", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Invitee = null;

        @DataMember(Name="MeetingInvitationInviteeLocation")
        @SerializedName("MeetingInvitationInviteeLocation")
        @ApiMember(Name="MeetingInvitationInviteeLocation", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef InviteeLocation = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="MeetingInvitationNotes")
        @SerializedName("MeetingInvitationNotes")
        @ApiMember(Name="MeetingInvitationNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="MeetingInvitationProxy")
        @SerializedName("MeetingInvitationProxy")
        @ApiMember(Name="MeetingInvitationProxy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef Proxy = null;

        @DataMember(Name="MeetingInvitationSequenceNumber")
        @SerializedName("MeetingInvitationSequenceNumber")
        @ApiMember(Name="MeetingInvitationSequenceNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> SequenceNumber = null;

        @DataMember(Name="MeetingInvitationTypeOfAttendee")
        @SerializedName("MeetingInvitationTypeOfAttendee")
        @ApiMember(Name="MeetingInvitationTypeOfAttendee", DataType="string", ParameterType="form")
        public TrimProperty<AttendanceType> TypeOfAttendee = null;

        @DataMember(Name="MeetingInvitationTypeOfInvite")
        @SerializedName("MeetingInvitationTypeOfInvite")
        @ApiMember(Name="MeetingInvitationTypeOfInvite", DataType="string", ParameterType="form")
        public TrimProperty<InvitationType> TypeOfInvite = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MeetingInvitation setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getInvitee() { return Invitee; }
        public MeetingInvitation setInvitee(TrimStringProperty value) { this.Invitee = value; return this; }
        public LocationRef getInviteeLocation() { return InviteeLocation; }
        public MeetingInvitation setInviteeLocation(LocationRef value) { this.InviteeLocation = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public MeetingInvitation setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public MeetingInvitation setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public LocationRef getProxy() { return Proxy; }
        public MeetingInvitation setProxy(LocationRef value) { this.Proxy = value; return this; }
        public TrimProperty<Integer> getSequenceNumber() { return SequenceNumber; }
        public MeetingInvitation setSequenceNumber(TrimProperty<Integer> value) { this.SequenceNumber = value; return this; }
        public TrimProperty<AttendanceType> getTypeOfAttendee() { return TypeOfAttendee; }
        public MeetingInvitation setTypeOfAttendee(TrimProperty<AttendanceType> value) { this.TypeOfAttendee = value; return this; }
        public TrimProperty<InvitationType> getTypeOfInvite() { return TypeOfInvite; }
        public MeetingInvitation setTypeOfInvite(TrimProperty<InvitationType> value) { this.TypeOfInvite = value; return this; }
    }

    /**
    * Update a MeetingTypeUsualParticipant object.
    */
    @Route(Path="/MeetingTypeUsualParticipant", Verbs="POST")
    @Api("Update a MeetingTypeUsualParticipant object.")
    @DataContract
    public static class MeetingTypeUsualParticipant extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="MeetingTypeUsualParticipantInvitee")
        @SerializedName("MeetingTypeUsualParticipantInvitee")
        @ApiMember(Name="MeetingTypeUsualParticipantInvitee", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Invitee = null;

        @DataMember(Name="MeetingTypeUsualParticipantInviteeLocation")
        @SerializedName("MeetingTypeUsualParticipantInviteeLocation")
        @ApiMember(Name="MeetingTypeUsualParticipantInviteeLocation", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public LocationRef InviteeLocation = null;

        @DataMember(Name="MeetingTypeUsualParticipantSequenceNumber")
        @SerializedName("MeetingTypeUsualParticipantSequenceNumber")
        @ApiMember(Name="MeetingTypeUsualParticipantSequenceNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> SequenceNumber = null;

        @DataMember(Name="MeetingTypeUsualParticipantTypeOfInvite")
        @SerializedName("MeetingTypeUsualParticipantTypeOfInvite")
        @ApiMember(Name="MeetingTypeUsualParticipantTypeOfInvite", DataType="string", ParameterType="form")
        public TrimProperty<InvitationType> TypeOfInvite = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MeetingTypeUsualParticipant setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getInvitee() { return Invitee; }
        public MeetingTypeUsualParticipant setInvitee(TrimStringProperty value) { this.Invitee = value; return this; }
        public LocationRef getInviteeLocation() { return InviteeLocation; }
        public MeetingTypeUsualParticipant setInviteeLocation(LocationRef value) { this.InviteeLocation = value; return this; }
        public TrimProperty<Integer> getSequenceNumber() { return SequenceNumber; }
        public MeetingTypeUsualParticipant setSequenceNumber(TrimProperty<Integer> value) { this.SequenceNumber = value; return this; }
        public TrimProperty<InvitationType> getTypeOfInvite() { return TypeOfInvite; }
        public MeetingTypeUsualParticipant setTypeOfInvite(TrimProperty<InvitationType> value) { this.TypeOfInvite = value; return this; }
    }

    public static enum TimeInterval
    {
        Seconds,
        Minutes,
        Hours,
        Days,
        Weeks,
        Months;
    }

    public static enum DayOfTheWeek
    {
        Monday,
        Tuesday,
        Wednesday,
        Thursday,
        Friday,
        Saturday,
        Sunday;
    }

    public static enum OutlineNumberType
    {
        StandardDecimal,
        StandardRoman,
        DecimalThenRoman,
        DecimalAlphaRoman;
    }

    /**
    * Update a MinuteItemActionArising object.
    */
    @Route(Path="/MinuteItemActionArising", Verbs="POST")
    @Api("Update a MinuteItemActionArising object.")
    @DataContract
    public static class MinuteItemActionArising extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="MinuteItemActionArisingSequenceNumber")
        @SerializedName("MinuteItemActionArisingSequenceNumber")
        @ApiMember(Name="MinuteItemActionArisingSequenceNumber", DataType="int", ParameterType="form")
        public TrimProperty<Integer> SequenceNumber = null;

        @DataMember(Name="MinuteItemActionArisingTask")
        @SerializedName("MinuteItemActionArisingTask")
        @ApiMember(Name="MinuteItemActionArisingTask", DataType="long", ParameterType="form", Verb="POST")
        public TodoItemRef Task = null;

        @DataMember(Name="MinuteItemActionArisingTitle")
        @SerializedName("MinuteItemActionArisingTitle")
        @ApiMember(Name="MinuteItemActionArisingTitle", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Title = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public MinuteItemActionArising setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Integer> getSequenceNumber() { return SequenceNumber; }
        public MinuteItemActionArising setSequenceNumber(TrimProperty<Integer> value) { this.SequenceNumber = value; return this; }
        public TodoItemRef getTask() { return Task; }
        public MinuteItemActionArising setTask(TodoItemRef value) { this.Task = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public MinuteItemActionArising setTitle(TrimStringProperty value) { this.Title = value; return this; }
    }

    public static enum MotionOutcome
    {
        NotApplicable,
        Carried,
        CarriedUnanimous,
        CarriedOnHands,
        CarriedOnVoices,
        Lost,
        LostUnanimous,
        LostOnHands,
        LostOnVoices,
        HeldOver,
        OtherOutcome1,
        OtherOutcome2,
        OtherOutcome3,
        NotDecided;
    }

    @DataContract
    public static class OfflineRecordRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="OfflineRecordAuthorName")
        @SerializedName("OfflineRecordAuthorName")
        @ApiMember(Name="OfflineRecordAuthorName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty AuthorName = null;

        @DataMember(Name="OfflineRecordContainedItemsCount")
        @SerializedName("OfflineRecordContainedItemsCount")
        @ApiMember(Name="OfflineRecordContainedItemsCount", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ContainedItemsCount = null;

        @DataMember(Name="OfflineRecordContainerTitle")
        @SerializedName("OfflineRecordContainerTitle")
        @ApiMember(Name="OfflineRecordContainerTitle", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ContainerTitle = null;

        @DataMember(Name="OfflineRecordDateCheckedOut")
        @SerializedName("OfflineRecordDateCheckedOut")
        @ApiMember(Name="OfflineRecordDateCheckedOut", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCheckedOut = null;

        @DataMember(Name="OfflineRecordDateCreated")
        @SerializedName("OfflineRecordDateCreated")
        @ApiMember(Name="OfflineRecordDateCreated", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="OfflineRecordDateModified")
        @SerializedName("OfflineRecordDateModified")
        @ApiMember(Name="OfflineRecordDateModified", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModified = null;

        @DataMember(Name="OfflineRecordDateModifiedAtCheckout")
        @SerializedName("OfflineRecordDateModifiedAtCheckout")
        @ApiMember(Name="OfflineRecordDateModifiedAtCheckout", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateModifiedAtCheckout = null;

        @DataMember(Name="OfflineRecordExtension")
        @SerializedName("OfflineRecordExtension")
        @ApiMember(Name="OfflineRecordExtension", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Extension = null;

        @DataMember(Name="OfflineRecordFileName")
        @SerializedName("OfflineRecordFileName")
        @ApiMember(Name="OfflineRecordFileName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FileName = null;

        @DataMember(Name="OfflineRecordFileType")
        @SerializedName("OfflineRecordFileType")
        @ApiMember(Name="OfflineRecordFileType", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FileType = null;

        @DataMember(Name="OfflineRecordFullFileName")
        @SerializedName("OfflineRecordFullFileName")
        @ApiMember(Name="OfflineRecordFullFileName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty FullFileName = null;

        @DataMember(Name="OfflineRecordIsADocument")
        @SerializedName("OfflineRecordIsADocument")
        @ApiMember(Name="OfflineRecordIsADocument", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsADocument = null;

        @DataMember(Name="OfflineRecordIsAFolder")
        @SerializedName("OfflineRecordIsAFolder")
        @ApiMember(Name="OfflineRecordIsAFolder", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsAFolder = null;

        @DataMember(Name="OfflineRecordNextRevision")
        @SerializedName("OfflineRecordNextRevision")
        @ApiMember(Name="OfflineRecordNextRevision", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> NextRevision = null;

        @DataMember(Name="OfflineRecordRecordNumber")
        @SerializedName("OfflineRecordRecordNumber")
        @ApiMember(Name="OfflineRecordRecordNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RecordNumber = null;

        @DataMember(Name="OfflineRecordRecordUri")
        @SerializedName("OfflineRecordRecordUri")
        @ApiMember(Name="OfflineRecordRecordUri", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty RecordUri = null;

        @DataMember(Name="OfflineRecordSize")
        @SerializedName("OfflineRecordSize")
        @ApiMember(Name="OfflineRecordSize", DataType="long", ParameterType="form", Verb="GET")
        public TrimProperty<Long> Size = null;

        @DataMember(Name="OfflineRecordStatus")
        @SerializedName("OfflineRecordStatus")
        @ApiMember(Name="OfflineRecordStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<OfflineStatus> Status = null;

        @DataMember(Name="OfflineRecordTitle")
        @SerializedName("OfflineRecordTitle")
        @ApiMember(Name="OfflineRecordTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public OfflineRecordRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getAuthorName() { return AuthorName; }
        public OfflineRecordRef setAuthorName(TrimStringProperty value) { this.AuthorName = value; return this; }
        public TrimProperty<Integer> getContainedItemsCount() { return ContainedItemsCount; }
        public OfflineRecordRef setContainedItemsCount(TrimProperty<Integer> value) { this.ContainedItemsCount = value; return this; }
        public TrimStringProperty getContainerTitle() { return ContainerTitle; }
        public OfflineRecordRef setContainerTitle(TrimStringProperty value) { this.ContainerTitle = value; return this; }
        public TrimDateTime getDateCheckedOut() { return DateCheckedOut; }
        public OfflineRecordRef setDateCheckedOut(TrimDateTime value) { this.DateCheckedOut = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public OfflineRecordRef setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimDateTime getDateModified() { return DateModified; }
        public OfflineRecordRef setDateModified(TrimDateTime value) { this.DateModified = value; return this; }
        public TrimDateTime getDateModifiedAtCheckout() { return DateModifiedAtCheckout; }
        public OfflineRecordRef setDateModifiedAtCheckout(TrimDateTime value) { this.DateModifiedAtCheckout = value; return this; }
        public TrimStringProperty getExtension() { return Extension; }
        public OfflineRecordRef setExtension(TrimStringProperty value) { this.Extension = value; return this; }
        public TrimStringProperty getFileName() { return FileName; }
        public OfflineRecordRef setFileName(TrimStringProperty value) { this.FileName = value; return this; }
        public TrimStringProperty getFileType() { return FileType; }
        public OfflineRecordRef setFileType(TrimStringProperty value) { this.FileType = value; return this; }
        public TrimStringProperty getFullFileName() { return FullFileName; }
        public OfflineRecordRef setFullFileName(TrimStringProperty value) { this.FullFileName = value; return this; }
        public TrimProperty<Boolean> getIsADocument() { return IsADocument; }
        public OfflineRecordRef setIsADocument(TrimProperty<Boolean> value) { this.IsADocument = value; return this; }
        public TrimProperty<Boolean> getIsAFolder() { return IsAFolder; }
        public OfflineRecordRef setIsAFolder(TrimProperty<Boolean> value) { this.IsAFolder = value; return this; }
        public TrimProperty<Integer> getNextRevision() { return NextRevision; }
        public OfflineRecordRef setNextRevision(TrimProperty<Integer> value) { this.NextRevision = value; return this; }
        public TrimStringProperty getRecordNumber() { return RecordNumber; }
        public OfflineRecordRef setRecordNumber(TrimStringProperty value) { this.RecordNumber = value; return this; }
        public TrimStringProperty getRecordUri() { return RecordUri; }
        public OfflineRecordRef setRecordUri(TrimStringProperty value) { this.RecordUri = value; return this; }
        public TrimProperty<Long> getSize() { return Size; }
        public OfflineRecordRef setSize(TrimProperty<Long> value) { this.Size = value; return this; }
        public TrimProperty<OfflineStatus> getStatus() { return Status; }
        public OfflineRecordRef setStatus(TrimProperty<OfflineStatus> value) { this.Status = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public OfflineRecordRef setTitle(TrimStringProperty value) { this.Title = value; return this; }
    }

    public static enum OfflineStatus
    {
        Draft,
        Original,
        Modified,
        Reference,
        Container,
        Linked,
        Invalid;
    }

    public static enum LocationMatchType
    {
        UniqueMatch,
        AnyMatch,
        NeverMatch,
        MustMatch;
    }

    public static enum OriginType
    {
        TextFile(0),
        WindowsFolder(1),
        ExchangeMailbox(2),
        NotesMailbox(3),
        GroupwiseMailbox(4),
        SharePoint(5),
        XmlFile(6),
        ControlPoint(8),
        EmailCapture(9),
        Reserved4(10),
        Reserved5(11),
        Custom1(12),
        Custom2(13),
        Custom3(14),
        Custom4(15),
        Custom5(16),
        Custom6(17),
        Custom7(18),
        Custom8(19);

        private final int value;
        OriginType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    @DataContract
    public static class RecordActionRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordActionActionName")
        @SerializedName("RecordActionActionName")
        @ApiMember(Name="RecordActionActionName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ActionName = null;

        @DataMember(Name="RecordActionActualDays")
        @SerializedName("RecordActionActualDays")
        @ApiMember(Name="RecordActionActualDays", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ActualDays = null;

        @DataMember(Name="RecordActionActualDuration")
        @SerializedName("RecordActionActualDuration")
        @ApiMember(Name="RecordActionActualDuration", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ActualDuration = null;

        @DataMember(Name="RecordActionActualHours")
        @SerializedName("RecordActionActualHours")
        @ApiMember(Name="RecordActionActualHours", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ActualHours = null;

        @DataMember(Name="RecordActionActualMinutes")
        @SerializedName("RecordActionActualMinutes")
        @ApiMember(Name="RecordActionActualMinutes", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> ActualMinutes = null;

        @DataMember(Name="RecordActionAttachDate")
        @SerializedName("RecordActionAttachDate")
        @ApiMember(Name="RecordActionAttachDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime AttachDate = null;

        @DataMember(Name="RecordActionBarcode")
        @SerializedName("RecordActionBarcode")
        @ApiMember(Name="RecordActionBarcode", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Barcode = null;

        @DataMember(Name="RecordActionCompletedOnTime")
        @SerializedName("RecordActionCompletedOnTime")
        @ApiMember(Name="RecordActionCompletedOnTime", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> CompletedOnTime = null;

        @DataMember(Name="RecordActionCost")
        @SerializedName("RecordActionCost")
        @ApiMember(Name="RecordActionCost", DataType="double", ParameterType="form", Verb="GET")
        public TrimProperty<BigDecimal> Cost = null;

        @DataMember(Name="RecordActionDays")
        @SerializedName("RecordActionDays")
        @ApiMember(Name="RecordActionDays", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> Days = null;

        @DataMember(Name="RecordActionDone")
        @SerializedName("RecordActionDone")
        @ApiMember(Name="RecordActionDone", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Done = null;

        @DataMember(Name="RecordActionDueDate")
        @SerializedName("RecordActionDueDate")
        @ApiMember(Name="RecordActionDueDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DueDate = null;

        @DataMember(Name="RecordActionDuration")
        @SerializedName("RecordActionDuration")
        @ApiMember(Name="RecordActionDuration", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Duration = null;

        @DataMember(Name="RecordActionEndDate")
        @SerializedName("RecordActionEndDate")
        @ApiMember(Name="RecordActionEndDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime EndDate = null;

        @DataMember(Name="RecordActionHours")
        @SerializedName("RecordActionHours")
        @ApiMember(Name="RecordActionHours", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> Hours = null;

        @DataMember(Name="RecordActionIsReadyToStart")
        @SerializedName("RecordActionIsReadyToStart")
        @ApiMember(Name="RecordActionIsReadyToStart", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsReadyToStart = null;

        @DataMember(Name="RecordActionMinutes")
        @SerializedName("RecordActionMinutes")
        @ApiMember(Name="RecordActionMinutes", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> Minutes = null;

        @DataMember(Name="RecordActionNotes")
        @SerializedName("RecordActionNotes")
        @ApiMember(Name="RecordActionNotes", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Notes = null;

        @DataMember(Name="RecordActionOverdue")
        @SerializedName("RecordActionOverdue")
        @ApiMember(Name="RecordActionOverdue", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Overdue = null;

        @DataMember(Name="RecordActionPercentComplete")
        @SerializedName("RecordActionPercentComplete")
        @ApiMember(Name="RecordActionPercentComplete", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> PercentComplete = null;

        @DataMember(Name="RecordActionProcedure")
        @SerializedName("RecordActionProcedure")
        @ApiMember(Name="RecordActionProcedure", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> Procedure = null;

        @DataMember(Name="RecordActionStartDate")
        @SerializedName("RecordActionStartDate")
        @ApiMember(Name="RecordActionStartDate", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime StartDate = null;

        @DataMember(Name="RecordActionStatus")
        @SerializedName("RecordActionStatus")
        @ApiMember(Name="RecordActionStatus", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Status = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordActionRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getActionName() { return ActionName; }
        public RecordActionRef setActionName(TrimStringProperty value) { this.ActionName = value; return this; }
        public TrimProperty<Integer> getActualDays() { return ActualDays; }
        public RecordActionRef setActualDays(TrimProperty<Integer> value) { this.ActualDays = value; return this; }
        public TrimStringProperty getActualDuration() { return ActualDuration; }
        public RecordActionRef setActualDuration(TrimStringProperty value) { this.ActualDuration = value; return this; }
        public TrimProperty<Integer> getActualHours() { return ActualHours; }
        public RecordActionRef setActualHours(TrimProperty<Integer> value) { this.ActualHours = value; return this; }
        public TrimProperty<Integer> getActualMinutes() { return ActualMinutes; }
        public RecordActionRef setActualMinutes(TrimProperty<Integer> value) { this.ActualMinutes = value; return this; }
        public TrimDateTime getAttachDate() { return AttachDate; }
        public RecordActionRef setAttachDate(TrimDateTime value) { this.AttachDate = value; return this; }
        public TrimStringProperty getBarcode() { return Barcode; }
        public RecordActionRef setBarcode(TrimStringProperty value) { this.Barcode = value; return this; }
        public TrimProperty<Boolean> getCompletedOnTime() { return CompletedOnTime; }
        public RecordActionRef setCompletedOnTime(TrimProperty<Boolean> value) { this.CompletedOnTime = value; return this; }
        public TrimProperty<BigDecimal> getCost() { return Cost; }
        public RecordActionRef setCost(TrimProperty<BigDecimal> value) { this.Cost = value; return this; }
        public TrimProperty<Integer> getDays() { return Days; }
        public RecordActionRef setDays(TrimProperty<Integer> value) { this.Days = value; return this; }
        public TrimProperty<Boolean> getDone() { return Done; }
        public RecordActionRef setDone(TrimProperty<Boolean> value) { this.Done = value; return this; }
        public TrimDateTime getDueDate() { return DueDate; }
        public RecordActionRef setDueDate(TrimDateTime value) { this.DueDate = value; return this; }
        public TrimStringProperty getDuration() { return Duration; }
        public RecordActionRef setDuration(TrimStringProperty value) { this.Duration = value; return this; }
        public TrimDateTime getEndDate() { return EndDate; }
        public RecordActionRef setEndDate(TrimDateTime value) { this.EndDate = value; return this; }
        public TrimProperty<Integer> getHours() { return Hours; }
        public RecordActionRef setHours(TrimProperty<Integer> value) { this.Hours = value; return this; }
        public TrimProperty<Boolean> getIsReadyToStart() { return IsReadyToStart; }
        public RecordActionRef setIsReadyToStart(TrimProperty<Boolean> value) { this.IsReadyToStart = value; return this; }
        public TrimProperty<Integer> getMinutes() { return Minutes; }
        public RecordActionRef setMinutes(TrimProperty<Integer> value) { this.Minutes = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public RecordActionRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getOverdue() { return Overdue; }
        public RecordActionRef setOverdue(TrimProperty<Boolean> value) { this.Overdue = value; return this; }
        public TrimProperty<Integer> getPercentComplete() { return PercentComplete; }
        public RecordActionRef setPercentComplete(TrimProperty<Integer> value) { this.PercentComplete = value; return this; }
        public TrimProperty<Boolean> getProcedure() { return Procedure; }
        public RecordActionRef setProcedure(TrimProperty<Boolean> value) { this.Procedure = value; return this; }
        public TrimDateTime getStartDate() { return StartDate; }
        public RecordActionRef setStartDate(TrimDateTime value) { this.StartDate = value; return this; }
        public TrimStringProperty getStatus() { return Status; }
        public RecordActionRef setStatus(TrimStringProperty value) { this.Status = value; return this; }
    }

    /**
    * Update a RecordTypeAutoSubFolder object.
    */
    @Route(Path="/RecordTypeAutoSubFolder", Verbs="POST")
    @Api("Update a RecordTypeAutoSubFolder object.")
    @DataContract
    public static class RecordTypeAutoSubFolder extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="RecordTypeAutoSubFolderSubClassification")
        @SerializedName("RecordTypeAutoSubFolderSubClassification")
        @ApiMember(Name="RecordTypeAutoSubFolderSubClassification", DataType="long", ParameterType="form", Verb="POST")
        public ClassificationRef SubClassification = null;

        @DataMember(Name="RecordTypeAutoSubFolderSubRecordType")
        @SerializedName("RecordTypeAutoSubFolderSubRecordType")
        @ApiMember(Name="RecordTypeAutoSubFolderSubRecordType", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public RecordTypeRef SubRecordType = null;

        @DataMember(Name="RecordTypeAutoSubFolderSubSchedule")
        @SerializedName("RecordTypeAutoSubFolderSubSchedule")
        @ApiMember(Name="RecordTypeAutoSubFolderSubSchedule", DataType="long", ParameterType="form", Verb="POST")
        public ScheduleRef SubSchedule = null;

        @DataMember(Name="RecordTypeAutoSubFolderTitle")
        @SerializedName("RecordTypeAutoSubFolderTitle")
        @ApiMember(Name="RecordTypeAutoSubFolderTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public RecordTypeAutoSubFolder setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public ClassificationRef getSubClassification() { return SubClassification; }
        public RecordTypeAutoSubFolder setSubClassification(ClassificationRef value) { this.SubClassification = value; return this; }
        public RecordTypeRef getSubRecordType() { return SubRecordType; }
        public RecordTypeAutoSubFolder setSubRecordType(RecordTypeRef value) { this.SubRecordType = value; return this; }
        public ScheduleRef getSubSchedule() { return SubSchedule; }
        public RecordTypeAutoSubFolder setSubSchedule(ScheduleRef value) { this.SubSchedule = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public RecordTypeAutoSubFolder setTitle(TrimStringProperty value) { this.Title = value; return this; }
    }

    public static enum GeneralExceptionHandling
    {
        Ignore,
        Warn,
        Prevent;
    }

    public static enum ContainmentRule
    {
        ByLevel,
        ByLevelInclusive,
        ByBehavior,
        ByList,
        Prevented;
    }

    public static enum EsoActionType
    {
        MoveToStore,
        MoveToTier2,
        MoveToTier3;
    }

    public static enum EsoDateType
    {
        DateClosed,
        DateInactive,
        DateLastAction,
        DateFinalized,
        DatePublished,
        DateUpdated,
        DateModified,
        DateLastAccessed;
    }

    public static enum ContainerSecurityHandling
    {
        Ignore,
        Warn,
        WarnAndUpgrade,
        Upgrade,
        Prevent,
        WarnAndUpgradeDoc,
        UpgradeDoc;
    }

    public static enum DocumentSecurityHandling
    {
        Ignore,
        Warn,
        Prevent,
        WarnAndUpgradeDoc,
        UpgradeDoc;
    }

    public static enum NotesInsertStyles
    {
        Wherever,
        AtStart,
        AtBottom;
    }

    public static enum NumberingMethods
    {
        Unknown,
        ByContainer,
        ByPattern,
        ByRecType,
        ByClientMatter;
    }

    public static enum OldVersionPurgeOptions
    {
        Purge,
        Keep,
        Confirm;
    }

    public static enum PsoActionType
    {
        PutInBox,
        MoveToNewHome;
    }

    public static enum PsoDateType
    {
        DateClosed,
        DateInactive,
        DateLastAction,
        DateFinalized,
        DatePublished,
        DateUpdated;
    }

    public static enum UseStoreType
    {
        NoStore,
        UseStore,
        UseDefault;
    }

    public static enum TitlingMethods
    {
        FreeText,
        Classification,
        KeywordIso,
        KeywordDescriptor,
        Contact,
        ClientMatter;
    }

    public static enum RecordBehaviour
    {
        Document(1),
        Folder(2),
        Series(3),
        Box(4),
        Custom1(5),
        Custom2(6),
        Custom3(7),
        Custom4(8),
        Custom5(9),
        Custom6(10),
        Custom7(11),
        Custom8(12),
        Custom9(13),
        Custom10(14),
        PaperFolder(15),
        Template(16),
        ContentBlock(17),
        SharepointSite(18),
        SharepointList(19),
        Client(21),
        Matter(22),
        SapDocument(23);

        private final int value;
        RecordBehaviour(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum RequestStatus
    {
        NewAwaitingApproval,
        New,
        AddedToVendor,
        PickupReady,
        SentOrder,
        OnPicklist,
        AtDeliveryLocation,
        FinalTransit,
        Complete,
        Denied,
        AcknowlodgeReceipt;
    }

    public static class TrimSearchDefinition
    {
        public TrimSearchStack SearchStack = null;
        public ArrayList<PropertyOrFieldDef> SearchResultsProperties = null;
        
        public TrimSearchStack getSearchStack() { return SearchStack; }
        public TrimSearchDefinition setSearchStack(TrimSearchStack value) { this.SearchStack = value; return this; }
        public ArrayList<PropertyOrFieldDef> getSearchResultsProperties() { return SearchResultsProperties; }
        public TrimSearchDefinition setSearchResultsProperties(ArrayList<PropertyOrFieldDef> value) { this.SearchResultsProperties = value; return this; }
    }

    /**
    * Update a ScheduleTrigger object.
    */
    @Route(Path="/ScheduleTrigger", Verbs="POST")
    @Api("Update a ScheduleTrigger object.")
    @DataContract
    public static class ScheduleTrigger extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ScheduleTriggerAfterDays")
        @SerializedName("ScheduleTriggerAfterDays")
        @ApiMember(Name="ScheduleTriggerAfterDays", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AfterDays = null;

        @DataMember(Name="ScheduleTriggerAfterMonths")
        @SerializedName("ScheduleTriggerAfterMonths")
        @ApiMember(Name="ScheduleTriggerAfterMonths", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AfterMonths = null;

        @DataMember(Name="ScheduleTriggerAfterYears")
        @SerializedName("ScheduleTriggerAfterYears")
        @ApiMember(Name="ScheduleTriggerAfterYears", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AfterYears = null;

        @DataMember(Name="ScheduleTriggerDateType")
        @SerializedName("ScheduleTriggerDateType")
        @ApiMember(Name="ScheduleTriggerDateType", DataType="string", ParameterType="form")
        public TrimProperty<TriggerTypes> DateType = null;

        @DataMember(Name="ScheduleTriggerDelayType")
        @SerializedName("ScheduleTriggerDelayType")
        @ApiMember(Name="ScheduleTriggerDelayType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<TriggerDelayTypes> DelayType = null;

        @DataMember(Name="ScheduleTriggerDescription")
        @SerializedName("ScheduleTriggerDescription")
        @ApiMember(Name="ScheduleTriggerDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="ScheduleTriggerFixedDate")
        @SerializedName("ScheduleTriggerFixedDate")
        @ApiMember(Name="ScheduleTriggerFixedDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime FixedDate = null;

        @DataMember(Name="ScheduleTriggerIsForDestroy")
        @SerializedName("ScheduleTriggerIsForDestroy")
        @ApiMember(Name="ScheduleTriggerIsForDestroy", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsForDestroy = null;

        @DataMember(Name="ScheduleTriggerJurisdiction")
        @SerializedName("ScheduleTriggerJurisdiction")
        @ApiMember(Name="ScheduleTriggerJurisdiction", DataType="long", ParameterType="form", Verb="POST")
        public JurisdictionRef Jurisdiction = null;

        @DataMember(Name="ScheduleTriggerPolicyCentreGUID")
        @SerializedName("ScheduleTriggerPolicyCentreGUID")
        @ApiMember(Name="ScheduleTriggerPolicyCentreGUID", DataType="string", ParameterType="form")
        public TrimStringProperty PolicyCentreGUID = null;

        @DataMember(Name="ScheduleTriggerPolicyCentreMappingGUID")
        @SerializedName("ScheduleTriggerPolicyCentreMappingGUID")
        @ApiMember(Name="ScheduleTriggerPolicyCentreMappingGUID", DataType="string", ParameterType="form")
        public TrimStringProperty PolicyCentreMappingGUID = null;

        @DataMember(Name="ScheduleTriggerPolicyCentreNotes")
        @SerializedName("ScheduleTriggerPolicyCentreNotes")
        @ApiMember(Name="ScheduleTriggerPolicyCentreNotes", DataType="string", ParameterType="form")
        public TrimStringProperty PolicyCentreNotes = null;

        @DataMember(Name="ScheduleTriggerPolicyCentreTitle")
        @SerializedName("ScheduleTriggerPolicyCentreTitle")
        @ApiMember(Name="ScheduleTriggerPolicyCentreTitle", DataType="string", ParameterType="form")
        public TrimStringProperty PolicyCentreTitle = null;

        @DataMember(Name="ScheduleTriggerRounding")
        @SerializedName("ScheduleTriggerRounding")
        @ApiMember(Name="ScheduleTriggerRounding", DataType="string", ParameterType="form")
        public TrimProperty<TriggerRounding> Rounding = null;

        @DataMember(Name="ScheduleTriggerTransferTo")
        @SerializedName("ScheduleTriggerTransferTo")
        @ApiMember(Name="ScheduleTriggerTransferTo", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef TransferTo = null;

        @DataMember(Name="ScheduleTriggerTriggerType")
        @SerializedName("ScheduleTriggerTriggerType")
        @ApiMember(Name="ScheduleTriggerTriggerType", DataType="string", ParameterType="form")
        public TrimProperty<RecordDisp> TriggerType = null;

        @DataMember(Name="ScheduleTriggerTriggerTypeDescription")
        @SerializedName("ScheduleTriggerTriggerTypeDescription")
        @ApiMember(Name="ScheduleTriggerTriggerTypeDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty TriggerTypeDescription = null;

        @DataMember(Name="ScheduleTriggerUserDefinedDate")
        @SerializedName("ScheduleTriggerUserDefinedDate")
        @ApiMember(Name="ScheduleTriggerUserDefinedDate", DataType="long", ParameterType="form", Verb="POST")
        public FieldDefinitionRef UserDefinedDate = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ScheduleTrigger setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Integer> getAfterDays() { return AfterDays; }
        public ScheduleTrigger setAfterDays(TrimProperty<Integer> value) { this.AfterDays = value; return this; }
        public TrimProperty<Integer> getAfterMonths() { return AfterMonths; }
        public ScheduleTrigger setAfterMonths(TrimProperty<Integer> value) { this.AfterMonths = value; return this; }
        public TrimProperty<Integer> getAfterYears() { return AfterYears; }
        public ScheduleTrigger setAfterYears(TrimProperty<Integer> value) { this.AfterYears = value; return this; }
        public TrimProperty<TriggerTypes> getDateType() { return DateType; }
        public ScheduleTrigger setDateType(TrimProperty<TriggerTypes> value) { this.DateType = value; return this; }
        public TrimProperty<TriggerDelayTypes> getDelayType() { return DelayType; }
        public ScheduleTrigger setDelayType(TrimProperty<TriggerDelayTypes> value) { this.DelayType = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public ScheduleTrigger setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimDateTime getFixedDate() { return FixedDate; }
        public ScheduleTrigger setFixedDate(TrimDateTime value) { this.FixedDate = value; return this; }
        public TrimProperty<Boolean> getIsForDestroy() { return IsForDestroy; }
        public ScheduleTrigger setIsForDestroy(TrimProperty<Boolean> value) { this.IsForDestroy = value; return this; }
        public JurisdictionRef getJurisdiction() { return Jurisdiction; }
        public ScheduleTrigger setJurisdiction(JurisdictionRef value) { this.Jurisdiction = value; return this; }
        public TrimStringProperty getPolicyCentreGUID() { return PolicyCentreGUID; }
        public ScheduleTrigger setPolicyCentreGUID(TrimStringProperty value) { this.PolicyCentreGUID = value; return this; }
        public TrimStringProperty getPolicyCentreMappingGUID() { return PolicyCentreMappingGUID; }
        public ScheduleTrigger setPolicyCentreMappingGUID(TrimStringProperty value) { this.PolicyCentreMappingGUID = value; return this; }
        public TrimStringProperty getPolicyCentreNotes() { return PolicyCentreNotes; }
        public ScheduleTrigger setPolicyCentreNotes(TrimStringProperty value) { this.PolicyCentreNotes = value; return this; }
        public TrimStringProperty getPolicyCentreTitle() { return PolicyCentreTitle; }
        public ScheduleTrigger setPolicyCentreTitle(TrimStringProperty value) { this.PolicyCentreTitle = value; return this; }
        public TrimProperty<TriggerRounding> getRounding() { return Rounding; }
        public ScheduleTrigger setRounding(TrimProperty<TriggerRounding> value) { this.Rounding = value; return this; }
        public LocationRef getTransferTo() { return TransferTo; }
        public ScheduleTrigger setTransferTo(LocationRef value) { this.TransferTo = value; return this; }
        public TrimProperty<RecordDisp> getTriggerType() { return TriggerType; }
        public ScheduleTrigger setTriggerType(TrimProperty<RecordDisp> value) { this.TriggerType = value; return this; }
        public TrimStringProperty getTriggerTypeDescription() { return TriggerTypeDescription; }
        public ScheduleTrigger setTriggerTypeDescription(TrimStringProperty value) { this.TriggerTypeDescription = value; return this; }
        public FieldDefinitionRef getUserDefinedDate() { return UserDefinedDate; }
        public ScheduleTrigger setUserDefinedDate(FieldDefinitionRef value) { this.UserDefinedDate = value; return this; }
    }

    public static enum RetainOptions
    {
        CanBeDestroyed,
        KeepForever,
        KeepForeverInSomeJurisdictions;
    }

    /**
    * Update a ScheduledTaskHistory object.
    */
    @Route(Path="/ScheduledTaskHistory", Verbs="POST")
    @Api("Update a ScheduledTaskHistory object.")
    @DataContract
    public static class ScheduledTaskHistory extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="ScheduledTaskHistoryActionDate")
        @SerializedName("ScheduledTaskHistoryActionDate")
        @ApiMember(Name="ScheduledTaskHistoryActionDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime ActionDate = null;

        @DataMember(Name="ScheduledTaskHistoryActionedBy")
        @SerializedName("ScheduledTaskHistoryActionedBy")
        @ApiMember(Name="ScheduledTaskHistoryActionedBy", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef ActionedBy = null;

        @DataMember(Name="NotesUpdateType")
        @SerializedName("NotesUpdateType")
        @ApiMember(Name="NotesUpdateType", DataType="string", ParameterType="form")
        public TrimProperty<NotesUpdateType> NotesUpdateType = null;

        @DataMember(Name="ScheduledTaskHistoryDetails")
        @SerializedName("ScheduledTaskHistoryDetails")
        @ApiMember(Name="ScheduledTaskHistoryDetails", DataType="string", ParameterType="form")
        public TrimStringProperty Details = null;

        @DataMember(Name="ScheduledTaskHistoryDueDate")
        @SerializedName("ScheduledTaskHistoryDueDate")
        @ApiMember(Name="ScheduledTaskHistoryDueDate", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DueDate = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public ScheduledTaskHistory setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActionDate() { return ActionDate; }
        public ScheduledTaskHistory setActionDate(TrimDateTime value) { this.ActionDate = value; return this; }
        public LocationRef getActionedBy() { return ActionedBy; }
        public ScheduledTaskHistory setActionedBy(LocationRef value) { this.ActionedBy = value; return this; }
        public TrimProperty<NotesUpdateType> getNotesUpdateType() { return NotesUpdateType; }
        public ScheduledTaskHistory setNotesUpdateType(TrimProperty<NotesUpdateType> value) { this.NotesUpdateType = value; return this; }
        public TrimStringProperty getDetails() { return Details; }
        public ScheduledTaskHistory setDetails(TrimStringProperty value) { this.Details = value; return this; }
        public TrimDateTime getDueDate() { return DueDate; }
        public ScheduledTaskHistory setDueDate(TrimDateTime value) { this.DueDate = value; return this; }
    }

    public static enum TaskStatus
    {
        Due,
        Overdue,
        Complete;
    }

    public static class MultiFieldSearchForm
    {
        public ArrayList<SearchPage> Pages = null;
        
        public ArrayList<SearchPage> getPages() { return Pages; }
        public MultiFieldSearchForm setPages(ArrayList<SearchPage> value) { this.Pages = value; return this; }
    }

    public static enum DeclassifyType
    {
        AfterDate,
        AfterEvent,
        Exempt;
    }

    public static enum SpListItemOriginator
    {
        ThisList,
        Other;
    }

    public static enum SpManagedItemStatus
    {
        Exposed,
        Relocated;
    }

    public static enum SpaceLevel
    {
        Warehouse(1),
        Floor(2),
        Area(3),
        Bay(4),
        Row(5),
        Shelf(6),
        Slot(7);

        private final int value;
        SpaceLevel(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    /**
    * Update a TodoItemItemReference object.
    */
    @Route(Path="/TodoItemItemReference", Verbs="POST")
    @Api("Update a TodoItemItemReference object.")
    @DataContract
    public static class TodoItemItemReference extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="TodoItemItemReferenceDetails")
        @SerializedName("TodoItemItemReferenceDetails")
        @ApiMember(Name="TodoItemItemReferenceDetails", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Details = null;

        @DataMember(Name="TodoItemItemReferenceRecord")
        @SerializedName("TodoItemItemReferenceRecord")
        @ApiMember(Name="TodoItemItemReferenceRecord", DataType="long", IsRequired=true, ParameterType="form", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="TodoItemItemReferenceReferenceType")
        @SerializedName("TodoItemItemReferenceReferenceType")
        @ApiMember(Name="TodoItemItemReferenceReferenceType", DataType="string", ParameterType="form")
        public TrimProperty<TodoReferenceType> ReferenceType = null;

        @DataMember(Name="TodoItemItemReferenceSequenceNbr")
        @SerializedName("TodoItemItemReferenceSequenceNbr")
        @ApiMember(Name="TodoItemItemReferenceSequenceNbr", DataType="int", ParameterType="form")
        public TrimProperty<Integer> SequenceNbr = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public TodoItemItemReference setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getDetails() { return Details; }
        public TodoItemItemReference setDetails(TrimStringProperty value) { this.Details = value; return this; }
        public RecordRef getRecord() { return Record; }
        public TodoItemItemReference setRecord(RecordRef value) { this.Record = value; return this; }
        public TrimProperty<TodoReferenceType> getReferenceType() { return ReferenceType; }
        public TodoItemItemReference setReferenceType(TrimProperty<TodoReferenceType> value) { this.ReferenceType = value; return this; }
        public TrimProperty<Integer> getSequenceNbr() { return SequenceNbr; }
        public TodoItemItemReference setSequenceNbr(TrimProperty<Integer> value) { this.SequenceNbr = value; return this; }
    }

    public static enum UserLabelType
    {
        Tag(0),
        Favorites(3),
        Worktray(4),
        Documents(5),
        Containers(6),
        Templates(7),
        ContentBlocks(8);

        private final int value;
        UserLabelType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum WordTypes
    {
        TitleWord,
        NoteWord,
        AnyWord,
        ClassificationWord,
        ScheduleWord,
        ThesaurusWord,
        LocAddressWord,
        CommAddressWord;
    }

    /**
    * Update a WorkflowDocument object.
    */
    @Route(Path="/WorkflowDocument", Verbs="POST")
    @Api("Update a WorkflowDocument object.")
    @DataContract
    public static class WorkflowDocument extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="WorkflowDocumentDocumentId")
        @SerializedName("WorkflowDocumentDocumentId")
        @ApiMember(Name="WorkflowDocumentDocumentId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocumentId = null;

        @DataMember(Name="WorkflowDocumentPlaceholderType")
        @SerializedName("WorkflowDocumentPlaceholderType")
        @ApiMember(Name="WorkflowDocumentPlaceholderType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<WorkflowDocumentPlaceholderType> PlaceholderType = null;

        @DataMember(Name="WorkflowDocumentRecord")
        @SerializedName("WorkflowDocumentRecord")
        @ApiMember(Name="WorkflowDocumentRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="WorkflowDocumentTitle")
        @SerializedName("WorkflowDocumentTitle")
        @ApiMember(Name="WorkflowDocumentTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public WorkflowDocument setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getDocumentId() { return DocumentId; }
        public WorkflowDocument setDocumentId(TrimStringProperty value) { this.DocumentId = value; return this; }
        public TrimProperty<WorkflowDocumentPlaceholderType> getPlaceholderType() { return PlaceholderType; }
        public WorkflowDocument setPlaceholderType(TrimProperty<WorkflowDocumentPlaceholderType> value) { this.PlaceholderType = value; return this; }
        public RecordRef getRecord() { return Record; }
        public WorkflowDocument setRecord(RecordRef value) { this.Record = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public WorkflowDocument setTitle(TrimStringProperty value) { this.Title = value; return this; }
    }

    /**
    * Update a WorkflowTemplateDocument object.
    */
    @Route(Path="/WorkflowTemplateDocument", Verbs="POST")
    @Api("Update a WorkflowTemplateDocument object.")
    @DataContract
    public static class WorkflowTemplateDocument extends TrimChildObject
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="WorkflowTemplateDocumentDocumentId")
        @SerializedName("WorkflowTemplateDocumentDocumentId")
        @ApiMember(Name="WorkflowTemplateDocumentDocumentId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty DocumentId = null;

        @DataMember(Name="WorkflowTemplateDocumentPlaceholderType")
        @SerializedName("WorkflowTemplateDocumentPlaceholderType")
        @ApiMember(Name="WorkflowTemplateDocumentPlaceholderType", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<WorkflowDocumentPlaceholderType> PlaceholderType = null;

        @DataMember(Name="WorkflowTemplateDocumentRecord")
        @SerializedName("WorkflowTemplateDocumentRecord")
        @ApiMember(Name="WorkflowTemplateDocumentRecord", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef Record = null;

        @DataMember(Name="WorkflowTemplateDocumentTitle")
        @SerializedName("WorkflowTemplateDocumentTitle")
        @ApiMember(Name="WorkflowTemplateDocumentTitle", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Title = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public WorkflowTemplateDocument setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimStringProperty getDocumentId() { return DocumentId; }
        public WorkflowTemplateDocument setDocumentId(TrimStringProperty value) { this.DocumentId = value; return this; }
        public TrimProperty<WorkflowDocumentPlaceholderType> getPlaceholderType() { return PlaceholderType; }
        public WorkflowTemplateDocument setPlaceholderType(TrimProperty<WorkflowDocumentPlaceholderType> value) { this.PlaceholderType = value; return this; }
        public RecordRef getRecord() { return Record; }
        public WorkflowTemplateDocument setRecord(RecordRef value) { this.Record = value; return this; }
        public TrimStringProperty getTitle() { return Title; }
        public WorkflowTemplateDocument setTitle(TrimStringProperty value) { this.Title = value; return this; }
    }

    public static enum InitiatingRecordBehavior
    {
        Working,
        Reference,
        Container,
        Ignore;
    }

    /**
    * Update a Database object.
    */
    @Route(Path="/Database", Verbs="POST")
    @Api("Update a Database object.")
    @DataContract
    public static class Database extends TrimMainObject
    {
        @DataMember(Name="LicensedModules")
        @SerializedName("LicensedModules")
        public ArrayList<LicenseTypes> LicensedModules = null;

        @DataMember(Name="LicensedProductFeatures")
        @SerializedName("LicensedProductFeatures")
        public ArrayList<ProductFeatures> LicensedProductFeatures = null;

        @DataMember(Name="ActivatedProductFeatures")
        @SerializedName("ActivatedProductFeatures")
        public ArrayList<ProductFeatures> ActivatedProductFeatures = null;

        @DataMember(Name="DefinitionForm")
        @SerializedName("DefinitionForm")
        public MultiFieldSearchForm DefinitionForm = null;

        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="DatabaseActionReminder")
        @SerializedName("DatabaseActionReminder")
        @ApiMember(Name="DatabaseActionReminder", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ActionReminder = null;

        @DataMember(Name="DatabaseActionReminderInterval")
        @SerializedName("DatabaseActionReminderInterval")
        @ApiMember(Name="DatabaseActionReminderInterval", DataType="long", ParameterType="form")
        public TrimProperty<Long> ActionReminderInterval = null;

        @DataMember(Name="DatabaseActivityReminder")
        @SerializedName("DatabaseActivityReminder")
        @ApiMember(Name="DatabaseActivityReminder", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ActivityReminder = null;

        @DataMember(Name="DatabaseActivityReminderInterval")
        @SerializedName("DatabaseActivityReminderInterval")
        @ApiMember(Name="DatabaseActivityReminderInterval", DataType="long", ParameterType="form")
        public TrimProperty<Long> ActivityReminderInterval = null;

        @DataMember(Name="DatabaseAddHoldToContainedRecord")
        @SerializedName("DatabaseAddHoldToContainedRecord")
        @ApiMember(Name="DatabaseAddHoldToContainedRecord", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AddHoldToContainedRecord = null;

        @DataMember(Name="DatabaseAddToContainerOnHold")
        @SerializedName("DatabaseAddToContainerOnHold")
        @ApiMember(Name="DatabaseAddToContainerOnHold", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AddToContainerOnHold = null;

        @DataMember(Name="DatabaseAllowCatalogMessageBodyOnly")
        @SerializedName("DatabaseAllowCatalogMessageBodyOnly")
        @ApiMember(Name="DatabaseAllowCatalogMessageBodyOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowCatalogMessageBodyOnly = null;

        @DataMember(Name="DatabaseAllowLargeFolders")
        @SerializedName("DatabaseAllowLargeFolders")
        @ApiMember(Name="DatabaseAllowLargeFolders", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowLargeFolders = null;

        @DataMember(Name="DatabaseAllowManualSentItemsCheckin")
        @SerializedName("DatabaseAllowManualSentItemsCheckin")
        @ApiMember(Name="DatabaseAllowManualSentItemsCheckin", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowManualSentItemsCheckin = null;

        @DataMember(Name="DatabaseAllowUsersToSetDblClick")
        @SerializedName("DatabaseAllowUsersToSetDblClick")
        @ApiMember(Name="DatabaseAllowUsersToSetDblClick", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AllowUsersToSetDblClick = null;

        @DataMember(Name="DatabaseAlternatelyContainDuplicateMail")
        @SerializedName("DatabaseAlternatelyContainDuplicateMail")
        @ApiMember(Name="DatabaseAlternatelyContainDuplicateMail", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AlternatelyContainDuplicateMail = null;

        @DataMember(Name="DatabaseAlternateWorkgroupServerName")
        @SerializedName("DatabaseAlternateWorkgroupServerName")
        @ApiMember(Name="DatabaseAlternateWorkgroupServerName", DataType="string", ParameterType="form")
        public TrimStringProperty AlternateWorkgroupServerName = null;

        @DataMember(Name="DatabaseAlternateWorkgroupServerPort")
        @SerializedName("DatabaseAlternateWorkgroupServerPort")
        @ApiMember(Name="DatabaseAlternateWorkgroupServerPort", DataType="int", ParameterType="form")
        public TrimProperty<Integer> AlternateWorkgroupServerPort = null;

        @DataMember(Name="DatabaseAlternateWorkgroupServerURL")
        @SerializedName("DatabaseAlternateWorkgroupServerURL")
        @ApiMember(Name="DatabaseAlternateWorkgroupServerURL", DataType="string", ParameterType="form")
        public TrimStringProperty AlternateWorkgroupServerURL = null;

        @DataMember(Name="DatabaseAlwaysCheckSpelling")
        @SerializedName("DatabaseAlwaysCheckSpelling")
        @ApiMember(Name="DatabaseAlwaysCheckSpelling", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AlwaysCheckSpelling = null;

        @DataMember(Name="DatabaseAuditActive")
        @SerializedName("DatabaseAuditActive")
        @ApiMember(Name="DatabaseAuditActive", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AuditActive = null;

        @DataMember(Name="DatabaseAuditLogContainer")
        @SerializedName("DatabaseAuditLogContainer")
        @ApiMember(Name="DatabaseAuditLogContainer", DataType="long", ParameterType="form", Verb="POST")
        public RecordRef AuditLogContainer = null;

        @DataMember(Name="DatabaseAuditLogRecordType")
        @SerializedName("DatabaseAuditLogRecordType")
        @ApiMember(Name="DatabaseAuditLogRecordType", DataType="long", ParameterType="form", Verb="POST")
        public RecordTypeRef AuditLogRecordType = null;

        @DataMember(Name="DatabaseAutoConnect")
        @SerializedName("DatabaseAutoConnect")
        @ApiMember(Name="DatabaseAutoConnect", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoConnect = null;

        @DataMember(Name="DatabaseAutoFinalizeEmail")
        @SerializedName("DatabaseAutoFinalizeEmail")
        @ApiMember(Name="DatabaseAutoFinalizeEmail", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoFinalizeEmail = null;

        @DataMember(Name="DatabaseAutoGenerateThumbnail")
        @SerializedName("DatabaseAutoGenerateThumbnail")
        @ApiMember(Name="DatabaseAutoGenerateThumbnail", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoGenerateThumbnail = null;

        @DataMember(Name="DatabaseAutomaticallyOCR")
        @SerializedName("DatabaseAutomaticallyOCR")
        @ApiMember(Name="DatabaseAutomaticallyOCR", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutomaticallyOCR = null;

        @DataMember(Name="DatabaseAutoVitalRecordReview")
        @SerializedName("DatabaseAutoVitalRecordReview")
        @ApiMember(Name="DatabaseAutoVitalRecordReview", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AutoVitalRecordReview = null;

        @DataMember(Name="DatabaseBlueprintsConverted")
        @SerializedName("DatabaseBlueprintsConverted")
        @ApiMember(Name="DatabaseBlueprintsConverted", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> BlueprintsConverted = null;

        @DataMember(Name="DatabaseCalculateDispositionEvents")
        @SerializedName("DatabaseCalculateDispositionEvents")
        @ApiMember(Name="DatabaseCalculateDispositionEvents", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CalculateDispositionEvents = null;

        @DataMember(Name="DatabaseCaptureNativeMailAs")
        @SerializedName("DatabaseCaptureNativeMailAs")
        @ApiMember(Name="DatabaseCaptureNativeMailAs", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<NativeMailStyles> CaptureNativeMailAs = null;

        @DataMember(Name="DatabaseCascadeParentFields")
        @SerializedName("DatabaseCascadeParentFields")
        @ApiMember(Name="DatabaseCascadeParentFields", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CascadeParentFields = null;

        @DataMember(Name="DatabaseCatalogAuditLogs")
        @SerializedName("DatabaseCatalogAuditLogs")
        @ApiMember(Name="DatabaseCatalogAuditLogs", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CatalogAuditLogs = null;

        @DataMember(Name="DatabaseCheckForDocumentLinks")
        @SerializedName("DatabaseCheckForDocumentLinks")
        @ApiMember(Name="DatabaseCheckForDocumentLinks", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> CheckForDocumentLinks = null;

        @DataMember(Name="DatabaseCheckForDuplicateDocuments")
        @SerializedName("DatabaseCheckForDuplicateDocuments")
        @ApiMember(Name="DatabaseCheckForDuplicateDocuments", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CheckForDuplicateDocuments = null;

        @DataMember(Name="DatabaseCheckForDuplicateEmailMessages")
        @SerializedName("DatabaseCheckForDuplicateEmailMessages")
        @ApiMember(Name="DatabaseCheckForDuplicateEmailMessages", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CheckForDuplicateEmailMessages = null;

        @DataMember(Name="DatabaseClassificationLastNumber")
        @SerializedName("DatabaseClassificationLastNumber")
        @ApiMember(Name="DatabaseClassificationLastNumber", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ClassificationLastNumber = null;

        @DataMember(Name="DatabaseClassificationsNeedApproval")
        @SerializedName("DatabaseClassificationsNeedApproval")
        @ApiMember(Name="DatabaseClassificationsNeedApproval", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ClassificationsNeedApproval = null;

        @DataMember(Name="DatabaseClassificationTopPattern")
        @SerializedName("DatabaseClassificationTopPattern")
        @ApiMember(Name="DatabaseClassificationTopPattern", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty ClassificationTopPattern = null;

        @DataMember(Name="DatabaseClassifiedSecurity")
        @SerializedName("DatabaseClassifiedSecurity")
        @ApiMember(Name="DatabaseClassifiedSecurity", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> ClassifiedSecurity = null;

        @DataMember(Name="DatabaseClientDocumentCacheSize")
        @SerializedName("DatabaseClientDocumentCacheSize")
        @ApiMember(Name="DatabaseClientDocumentCacheSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ClientDocumentCacheSize = null;

        @DataMember(Name="DatabaseCollectUpdateComments")
        @SerializedName("DatabaseCollectUpdateComments")
        @ApiMember(Name="DatabaseCollectUpdateComments", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CollectUpdateComments = null;

        @DataMember(Name="DatabaseConfirmContactValidation")
        @SerializedName("DatabaseConfirmContactValidation")
        @ApiMember(Name="DatabaseConfirmContactValidation", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ConfirmContactValidation = null;

        @DataMember(Name="DatabaseConfirmLocationValidation")
        @SerializedName("DatabaseConfirmLocationValidation")
        @ApiMember(Name="DatabaseConfirmLocationValidation", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ConfirmLocationValidation = null;

        @DataMember(Name="DatabaseContainerRulesForAlternate")
        @SerializedName("DatabaseContainerRulesForAlternate")
        @ApiMember(Name="DatabaseContainerRulesForAlternate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ContainerRulesForAlternate = null;

        @DataMember(Name="DatabaseContentIndex")
        @SerializedName("DatabaseContentIndex")
        @ApiMember(Name="DatabaseContentIndex", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<ContentIndexType> ContentIndex = null;

        @DataMember(Name="DatabaseCreateUdfChangedEvents")
        @SerializedName("DatabaseCreateUdfChangedEvents")
        @ApiMember(Name="DatabaseCreateUdfChangedEvents", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> CreateUdfChangedEvents = null;

        @DataMember(Name="DatabaseCurrencyDecimalDigits")
        @SerializedName("DatabaseCurrencyDecimalDigits")
        @ApiMember(Name="DatabaseCurrencyDecimalDigits", DataType="int", ParameterType="form")
        public TrimProperty<Integer> CurrencyDecimalDigits = null;

        @DataMember(Name="DatabaseCurrencyDecimalSymbol")
        @SerializedName("DatabaseCurrencyDecimalSymbol")
        @ApiMember(Name="DatabaseCurrencyDecimalSymbol", DataType="string", ParameterType="form")
        public TrimStringProperty CurrencyDecimalSymbol = null;

        @DataMember(Name="DatabaseCurrencyGroupingFmt")
        @SerializedName("DatabaseCurrencyGroupingFmt")
        @ApiMember(Name="DatabaseCurrencyGroupingFmt", DataType="int", ParameterType="form")
        public TrimProperty<Integer> CurrencyGroupingFmt = null;

        @DataMember(Name="DatabaseCurrencyGroupingSymbol")
        @SerializedName("DatabaseCurrencyGroupingSymbol")
        @ApiMember(Name="DatabaseCurrencyGroupingSymbol", DataType="string", ParameterType="form")
        public TrimStringProperty CurrencyGroupingSymbol = null;

        @DataMember(Name="DatabaseCurrencyNegativeFormat")
        @SerializedName("DatabaseCurrencyNegativeFormat")
        @ApiMember(Name="DatabaseCurrencyNegativeFormat", DataType="int", ParameterType="form")
        public TrimProperty<Integer> CurrencyNegativeFormat = null;

        @DataMember(Name="DatabaseCurrencyPositiveFormat")
        @SerializedName("DatabaseCurrencyPositiveFormat")
        @ApiMember(Name="DatabaseCurrencyPositiveFormat", DataType="int", ParameterType="form")
        public TrimProperty<Integer> CurrencyPositiveFormat = null;

        @DataMember(Name="DatabaseCurrencySymbol")
        @SerializedName("DatabaseCurrencySymbol")
        @ApiMember(Name="DatabaseCurrencySymbol", DataType="string", ParameterType="form")
        public TrimStringProperty CurrencySymbol = null;

        @DataMember(Name="DatabaseCurrentUser")
        @SerializedName("DatabaseCurrentUser")
        @ApiMember(Name="DatabaseCurrentUser", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef CurrentUser = null;

        @DataMember(Name="DatabaseCurrentWorkgroup")
        @SerializedName("DatabaseCurrentWorkgroup")
        @ApiMember(Name="DatabaseCurrentWorkgroup", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty CurrentWorkgroup = null;

        @DataMember(Name="DatabaseDataSecurity")
        @SerializedName("DatabaseDataSecurity")
        @ApiMember(Name="DatabaseDataSecurity", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DataSecurity = null;

        @DataMember(Name="DatabaseDateSchedulesSynchronized")
        @SerializedName("DatabaseDateSchedulesSynchronized")
        @ApiMember(Name="DatabaseDateSchedulesSynchronized", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateSchedulesSynchronized = null;

        @DataMember(Name="DatabaseDateUserKeysSynchronized")
        @SerializedName("DatabaseDateUserKeysSynchronized")
        @ApiMember(Name="DatabaseDateUserKeysSynchronized", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateUserKeysSynchronized = null;

        @DataMember(Name="DatabaseDblClickContainers")
        @SerializedName("DatabaseDblClickContainers")
        @ApiMember(Name="DatabaseDblClickContainers", DataType="string", ParameterType="form")
        public TrimProperty<DblClickContainerStyle> DblClickContainers = null;

        @DataMember(Name="DatabaseDblClickDocsDesktop")
        @SerializedName("DatabaseDblClickDocsDesktop")
        @ApiMember(Name="DatabaseDblClickDocsDesktop", DataType="string", ParameterType="form")
        public TrimProperty<DblClickStyle> DblClickDocsDesktop = null;

        @DataMember(Name="DatabaseDblClickDocsTrim")
        @SerializedName("DatabaseDblClickDocsTrim")
        @ApiMember(Name="DatabaseDblClickDocsTrim", DataType="string", ParameterType="form")
        public TrimProperty<DblClickStyle> DblClickDocsTrim = null;

        @DataMember(Name="DatabaseDblClickExtLink")
        @SerializedName("DatabaseDblClickExtLink")
        @ApiMember(Name="DatabaseDblClickExtLink", DataType="string", ParameterType="form")
        public TrimStringProperty DblClickExtLink = null;

        @DataMember(Name="DatabaseDbms")
        @SerializedName("DatabaseDbms")
        @ApiMember(Name="DatabaseDbms", DataType="string", ParameterType="form", Verb="GET")
        public TrimProperty<DatabaseTypes> Dbms = null;

        @DataMember(Name="DatabaseDeclassifyYears")
        @SerializedName("DatabaseDeclassifyYears")
        @ApiMember(Name="DatabaseDeclassifyYears", DataType="int", ParameterType="form")
        public TrimProperty<Integer> DeclassifyYears = null;

        @DataMember(Name="DatabaseDeduplicationThreshold")
        @SerializedName("DatabaseDeduplicationThreshold")
        @ApiMember(Name="DatabaseDeduplicationThreshold", DataType="long", ParameterType="form")
        public TrimProperty<Long> DeduplicationThreshold = null;

        @DataMember(Name="DatabaseDefaultAssigneeFromClassificationOwner")
        @SerializedName("DatabaseDefaultAssigneeFromClassificationOwner")
        @ApiMember(Name="DatabaseDefaultAssigneeFromClassificationOwner", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DefaultAssigneeFromClassificationOwner = null;

        @DataMember(Name="DatabaseDefaultHome")
        @SerializedName("DatabaseDefaultHome")
        @ApiMember(Name="DatabaseDefaultHome", DataType="string", ParameterType="form")
        public TrimProperty<LocationDefault> DefaultHome = null;

        @DataMember(Name="DatabaseDefaultOwner")
        @SerializedName("DatabaseDefaultOwner")
        @ApiMember(Name="DatabaseDefaultOwner", DataType="string", ParameterType="form")
        public TrimProperty<LocationDefault> DefaultOwner = null;

        @DataMember(Name="DatabaseDefaultStore")
        @SerializedName("DatabaseDefaultStore")
        @ApiMember(Name="DatabaseDefaultStore", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef DefaultStore = null;

        @DataMember(Name="DatabaseDefaultStoreForSharepointRBS")
        @SerializedName("DatabaseDefaultStoreForSharepointRBS")
        @ApiMember(Name="DatabaseDefaultStoreForSharepointRBS", DataType="long", ParameterType="form", Verb="POST")
        public ElectronicStoreRef DefaultStoreForSharepointRBS = null;

        @DataMember(Name="DatabaseDeleteEmailCaptureDuplicates")
        @SerializedName("DatabaseDeleteEmailCaptureDuplicates")
        @ApiMember(Name="DatabaseDeleteEmailCaptureDuplicates", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DeleteEmailCaptureDuplicates = null;

        @DataMember(Name="DatabaseDocumentSecurity")
        @SerializedName("DatabaseDocumentSecurity")
        @ApiMember(Name="DatabaseDocumentSecurity", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DocumentSecurity = null;

        @DataMember(Name="DatabaseDocumentSingleInstancing")
        @SerializedName("DatabaseDocumentSingleInstancing")
        @ApiMember(Name="DatabaseDocumentSingleInstancing", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DocumentSingleInstancing = null;

        @DataMember(Name="DatabaseDocumentsOnlyWithinFolders")
        @SerializedName("DatabaseDocumentsOnlyWithinFolders")
        @ApiMember(Name="DatabaseDocumentsOnlyWithinFolders", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> DocumentsOnlyWithinFolders = null;

        @DataMember(Name="DatabaseEmailActivitySupervisors")
        @SerializedName("DatabaseEmailActivitySupervisors")
        @ApiMember(Name="DatabaseEmailActivitySupervisors", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailActivitySupervisors = null;

        @DataMember(Name="DatabaseEmailExpandOrganisations")
        @SerializedName("DatabaseEmailExpandOrganisations")
        @ApiMember(Name="DatabaseEmailExpandOrganisations", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmailExpandOrganisations = null;

        @DataMember(Name="DatabaseEmailFormat")
        @SerializedName("DatabaseEmailFormat")
        @ApiMember(Name="DatabaseEmailFormat", DataType="string", ParameterType="form")
        public TrimProperty<MailFormat> EmailFormat = null;

        @DataMember(Name="DatabaseEmailSecurity")
        @SerializedName("DatabaseEmailSecurity")
        @ApiMember(Name="DatabaseEmailSecurity", DataType="string", ParameterType="form")
        public TrimProperty<EmailSecurityMode> EmailSecurity = null;

        @DataMember(Name="DatabaseEmailSubjectPrefix")
        @SerializedName("DatabaseEmailSubjectPrefix")
        @ApiMember(Name="DatabaseEmailSubjectPrefix", DataType="string", ParameterType="form")
        public TrimStringProperty EmailSubjectPrefix = null;

        @DataMember(Name="DatabaseEmlAttachmentSingleInstancing")
        @SerializedName("DatabaseEmlAttachmentSingleInstancing")
        @ApiMember(Name="DatabaseEmlAttachmentSingleInstancing", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmlAttachmentSingleInstancing = null;

        @DataMember(Name="DatabaseEmlSpecialHashing")
        @SerializedName("DatabaseEmlSpecialHashing")
        @ApiMember(Name="DatabaseEmlSpecialHashing", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> EmlSpecialHashing = null;

        @DataMember(Name="DatabaseEnableScheduledTasks")
        @SerializedName("DatabaseEnableScheduledTasks")
        @ApiMember(Name="DatabaseEnableScheduledTasks", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> EnableScheduledTasks = null;

        @DataMember(Name="DatabaseEndOfDay")
        @SerializedName("DatabaseEndOfDay")
        @ApiMember(Name="DatabaseEndOfDay", DataType="int", ParameterType="form")
        public TrimProperty<Integer> EndOfDay = null;

        @DataMember(Name="DatabaseEstoreMailAddress")
        @SerializedName("DatabaseEstoreMailAddress")
        @ApiMember(Name="DatabaseEstoreMailAddress", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef EstoreMailAddress = null;

        @DataMember(Name="DatabaseFDA21CFR11compliant")
        @SerializedName("DatabaseFDA21CFR11compliant")
        @ApiMember(Name="DatabaseFDA21CFR11compliant", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> FDA21CFR11compliant = null;

        @DataMember(Name="DatabaseFileIntoClosedContainers")
        @SerializedName("DatabaseFileIntoClosedContainers")
        @ApiMember(Name="DatabaseFileIntoClosedContainers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> FileIntoClosedContainers = null;

        @DataMember(Name="DatabaseFilterClassifications")
        @SerializedName("DatabaseFilterClassifications")
        @ApiMember(Name="DatabaseFilterClassifications", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> FilterClassifications = null;

        @DataMember(Name="DatabaseFilterClassificationsByCopyACL")
        @SerializedName("DatabaseFilterClassificationsByCopyACL")
        @ApiMember(Name="DatabaseFilterClassificationsByCopyACL", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> FilterClassificationsByCopyACL = null;

        @DataMember(Name="DatabaseGenerateAddAuditSummary")
        @SerializedName("DatabaseGenerateAddAuditSummary")
        @ApiMember(Name="DatabaseGenerateAddAuditSummary", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> GenerateAddAuditSummary = null;

        @DataMember(Name="DatabaseGenerateDeleteAuditSummary")
        @SerializedName("DatabaseGenerateDeleteAuditSummary")
        @ApiMember(Name="DatabaseGenerateDeleteAuditSummary", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> GenerateDeleteAuditSummary = null;

        @DataMember(Name="DatabaseGenerateModifyAuditSummary")
        @SerializedName("DatabaseGenerateModifyAuditSummary")
        @ApiMember(Name="DatabaseGenerateModifyAuditSummary", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> GenerateModifyAuditSummary = null;

        @DataMember(Name="DatabaseGlobalTimezone")
        @SerializedName("DatabaseGlobalTimezone")
        @ApiMember(Name="DatabaseGlobalTimezone", DataType="int", ParameterType="form")
        public TrimProperty<Integer> GlobalTimezone = null;

        @DataMember(Name="DatabaseGoogleKey")
        @SerializedName("DatabaseGoogleKey")
        @ApiMember(Name="DatabaseGoogleKey", DataType="string", ParameterType="form")
        public TrimStringProperty GoogleKey = null;

        @DataMember(Name="DatabaseHideClassificationNumbers")
        @SerializedName("DatabaseHideClassificationNumbers")
        @ApiMember(Name="DatabaseHideClassificationNumbers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HideClassificationNumbers = null;

        @DataMember(Name="DatabaseHideCustomRecordTypes")
        @SerializedName("DatabaseHideCustomRecordTypes")
        @ApiMember(Name="DatabaseHideCustomRecordTypes", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HideCustomRecordTypes = null;

        @DataMember(Name="DatabaseHideSQLFromClients")
        @SerializedName("DatabaseHideSQLFromClients")
        @ApiMember(Name="DatabaseHideSQLFromClients", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> HideSQLFromClients = null;

        @DataMember(Name="DatabaseId")
        @SerializedName("DatabaseId")
        @ApiMember(Name="DatabaseId", DataType="string", ParameterType="form")
        public TrimStringProperty Id = null;

        @DataMember(Name="DatabaseIdolHasSecurityFiltering")
        @SerializedName("DatabaseIdolHasSecurityFiltering")
        @ApiMember(Name="DatabaseIdolHasSecurityFiltering", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IdolHasSecurityFiltering = null;

        @DataMember(Name="DatabaseIdolSearchStyle")
        @SerializedName("DatabaseIdolSearchStyle")
        @ApiMember(Name="DatabaseIdolSearchStyle", DataType="string", ParameterType="form")
        public TrimProperty<IdolSearchStyles> IdolSearchStyle = null;

        @DataMember(Name="DatabaseIgnoreAccentsInWordIndexes")
        @SerializedName("DatabaseIgnoreAccentsInWordIndexes")
        @ApiMember(Name="DatabaseIgnoreAccentsInWordIndexes", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IgnoreAccentsInWordIndexes = null;

        @DataMember(Name="DatabaseIgnoreStaleUpdates")
        @SerializedName("DatabaseIgnoreStaleUpdates")
        @ApiMember(Name="DatabaseIgnoreStaleUpdates", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IgnoreStaleUpdates = null;

        @DataMember(Name="DatabaseIncludeLargeTextUpdatesInLogs")
        @SerializedName("DatabaseIncludeLargeTextUpdatesInLogs")
        @ApiMember(Name="DatabaseIncludeLargeTextUpdatesInLogs", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> IncludeLargeTextUpdatesInLogs = null;

        @DataMember(Name="DatabaseInsecureContainer")
        @SerializedName("DatabaseInsecureContainer")
        @ApiMember(Name="DatabaseInsecureContainer", DataType="string", ParameterType="form")
        public TrimProperty<ContainerSecurityHandling> InsecureContainer = null;

        @DataMember(Name="DatabaseInsecureCurrent")
        @SerializedName("DatabaseInsecureCurrent")
        @ApiMember(Name="DatabaseInsecureCurrent", DataType="string", ParameterType="form")
        public TrimProperty<GeneralExceptionHandling> InsecureCurrent = null;

        @DataMember(Name="DatabaseIsConnected")
        @SerializedName("DatabaseIsConnected")
        @ApiMember(Name="DatabaseIsConnected", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsConnected = null;

        @DataMember(Name="DatabaseIsDefault")
        @SerializedName("DatabaseIsDefault")
        @ApiMember(Name="DatabaseIsDefault", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsDefault = null;

        @DataMember(Name="DatabaseIsValid")
        @SerializedName("DatabaseIsValid")
        @ApiMember(Name="DatabaseIsValid", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsValid = null;

        @DataMember(Name="DatabaseJitcCompliant")
        @SerializedName("DatabaseJitcCompliant")
        @ApiMember(Name="DatabaseJitcCompliant", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> JitcCompliant = null;

        @DataMember(Name="DatabaseLastDayInFiscalMonth")
        @SerializedName("DatabaseLastDayInFiscalMonth")
        @ApiMember(Name="DatabaseLastDayInFiscalMonth", DataType="int", ParameterType="form")
        public TrimProperty<Integer> LastDayInFiscalMonth = null;

        @DataMember(Name="DatabaseLastMonthInFiscalYear")
        @SerializedName("DatabaseLastMonthInFiscalYear")
        @ApiMember(Name="DatabaseLastMonthInFiscalYear", DataType="string", ParameterType="form")
        public TrimProperty<Months> LastMonthInFiscalYear = null;

        @DataMember(Name="DatabaseLicenceeName")
        @SerializedName("DatabaseLicenceeName")
        @ApiMember(Name="DatabaseLicenceeName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty LicenceeName = null;

        @DataMember(Name="DatabaseLicenseMailAddress")
        @SerializedName("DatabaseLicenseMailAddress")
        @ApiMember(Name="DatabaseLicenseMailAddress", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef LicenseMailAddress = null;

        @DataMember(Name="DatabaseLocationCacheSize")
        @SerializedName("DatabaseLocationCacheSize")
        @ApiMember(Name="DatabaseLocationCacheSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> LocationCacheSize = null;

        @DataMember(Name="DatabaseLocationFormatShowHonorific")
        @SerializedName("DatabaseLocationFormatShowHonorific")
        @ApiMember(Name="DatabaseLocationFormatShowHonorific", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> LocationFormatShowHonorific = null;

        @DataMember(Name="DatabaseLocationFormatShowInitials")
        @SerializedName("DatabaseLocationFormatShowInitials")
        @ApiMember(Name="DatabaseLocationFormatShowInitials", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> LocationFormatShowInitials = null;

        @DataMember(Name="DatabaseLocationFormatShowPostNominal")
        @SerializedName("DatabaseLocationFormatShowPostNominal")
        @ApiMember(Name="DatabaseLocationFormatShowPostNominal", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> LocationFormatShowPostNominal = null;

        @DataMember(Name="DatabaseLocationFormatSurnameFirst")
        @SerializedName("DatabaseLocationFormatSurnameFirst")
        @ApiMember(Name="DatabaseLocationFormatSurnameFirst", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> LocationFormatSurnameFirst = null;

        @DataMember(Name="DatabaseLockdownSettings")
        @SerializedName("DatabaseLockdownSettings")
        @ApiMember(Name="DatabaseLockdownSettings", DataType="string", ParameterType="form")
        public TrimProperty<LockdownStyles> LockdownSettings = null;

        @DataMember(Name="DatabaseLogStorageTransfers")
        @SerializedName("DatabaseLogStorageTransfers")
        @ApiMember(Name="DatabaseLogStorageTransfers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> LogStorageTransfers = null;

        @DataMember(Name="DatabaseLogWebServiceLogins")
        @SerializedName("DatabaseLogWebServiceLogins")
        @ApiMember(Name="DatabaseLogWebServiceLogins", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> LogWebServiceLogins = null;

        @DataMember(Name="DatabaseMailRecipientMustExist")
        @SerializedName("DatabaseMailRecipientMustExist")
        @ApiMember(Name="DatabaseMailRecipientMustExist", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MailRecipientMustExist = null;

        @DataMember(Name="DatabaseMailRecipientsAsContacts")
        @SerializedName("DatabaseMailRecipientsAsContacts")
        @ApiMember(Name="DatabaseMailRecipientsAsContacts", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> MailRecipientsAsContacts = null;

        @DataMember(Name="DatabaseMinimumThesaurusLevels")
        @SerializedName("DatabaseMinimumThesaurusLevels")
        @ApiMember(Name="DatabaseMinimumThesaurusLevels", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MinimumThesaurusLevels = null;

        @DataMember(Name="DatabaseModifyLogsPreviousValues")
        @SerializedName("DatabaseModifyLogsPreviousValues")
        @ApiMember(Name="DatabaseModifyLogsPreviousValues", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ModifyLogsPreviousValues = null;

        @DataMember(Name="DatabaseMyContainersLimit")
        @SerializedName("DatabaseMyContainersLimit")
        @ApiMember(Name="DatabaseMyContainersLimit", DataType="int", ParameterType="form")
        public TrimProperty<Integer> MyContainersLimit = null;

        @DataMember(Name="DatabaseName")
        @SerializedName("DatabaseName")
        @ApiMember(Name="DatabaseName", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Name = null;

        @DataMember(Name="DatabaseNeedLongevityRenditionToArchive")
        @SerializedName("DatabaseNeedLongevityRenditionToArchive")
        @ApiMember(Name="DatabaseNeedLongevityRenditionToArchive", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NeedLongevityRenditionToArchive = null;

        @DataMember(Name="DatabaseNENcompliant")
        @SerializedName("DatabaseNENcompliant")
        @ApiMember(Name="DatabaseNENcompliant", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NENcompliant = null;

        @DataMember(Name="DatabaseNotifyAssignedAction")
        @SerializedName("DatabaseNotifyAssignedAction")
        @ApiMember(Name="DatabaseNotifyAssignedAction", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyAssignedAction = null;

        @DataMember(Name="DatabaseNotifyAutomaticUserRegistrations")
        @SerializedName("DatabaseNotifyAutomaticUserRegistrations")
        @ApiMember(Name="DatabaseNotifyAutomaticUserRegistrations", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyAutomaticUserRegistrations = null;

        @DataMember(Name="DatabaseNotifyDocumentReviewEvents")
        @SerializedName("DatabaseNotifyDocumentReviewEvents")
        @ApiMember(Name="DatabaseNotifyDocumentReviewEvents", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyDocumentReviewEvents = null;

        @DataMember(Name="DatabaseNotifyNextAction")
        @SerializedName("DatabaseNotifyNextAction")
        @ApiMember(Name="DatabaseNotifyNextAction", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyNextAction = null;

        @DataMember(Name="DatabaseNotifyOverdueAction")
        @SerializedName("DatabaseNotifyOverdueAction")
        @ApiMember(Name="DatabaseNotifyOverdueAction", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyOverdueAction = null;

        @DataMember(Name="DatabaseNotifyOverdueReturn")
        @SerializedName("DatabaseNotifyOverdueReturn")
        @ApiMember(Name="DatabaseNotifyOverdueReturn", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyOverdueReturn = null;

        @DataMember(Name="DatabaseNotifyRecordRequest")
        @SerializedName("DatabaseNotifyRecordRequest")
        @ApiMember(Name="DatabaseNotifyRecordRequest", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyRecordRequest = null;

        @DataMember(Name="DatabaseNotifyRequestsAwaitingAcknowledgement")
        @SerializedName("DatabaseNotifyRequestsAwaitingAcknowledgement")
        @ApiMember(Name="DatabaseNotifyRequestsAwaitingAcknowledgement", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyRequestsAwaitingAcknowledgement = null;

        @DataMember(Name="DatabaseNotifyTodoItems")
        @SerializedName("DatabaseNotifyTodoItems")
        @ApiMember(Name="DatabaseNotifyTodoItems", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyTodoItems = null;

        @DataMember(Name="DatabaseNotifyWorkflowMail")
        @SerializedName("DatabaseNotifyWorkflowMail")
        @ApiMember(Name="DatabaseNotifyWorkflowMail", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyWorkflowMail = null;

        @DataMember(Name="DatabaseObjectCacheSize")
        @SerializedName("DatabaseObjectCacheSize")
        @ApiMember(Name="DatabaseObjectCacheSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ObjectCacheSize = null;

        @DataMember(Name="DatabaseObjectURLFormat")
        @SerializedName("DatabaseObjectURLFormat")
        @ApiMember(Name="DatabaseObjectURLFormat", DataType="string", ParameterType="form")
        public TrimProperty<ObjectURLformats> ObjectURLFormat = null;

        @DataMember(Name="DatabaseOnlyEmailTRIMRefsToTRIMUsers")
        @SerializedName("DatabaseOnlyEmailTRIMRefsToTRIMUsers")
        @ApiMember(Name="DatabaseOnlyEmailTRIMRefsToTRIMUsers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> OnlyEmailTRIMRefsToTRIMUsers = null;

        @DataMember(Name="DatabaseOtherBarcode")
        @SerializedName("DatabaseOtherBarcode")
        @ApiMember(Name="DatabaseOtherBarcode", DataType="string", ParameterType="form")
        public TrimProperty<BarcodePrintOption> OtherBarcode = null;

        @DataMember(Name="DatabaseOwnerFromContainer")
        @SerializedName("DatabaseOwnerFromContainer")
        @ApiMember(Name="DatabaseOwnerFromContainer", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> OwnerFromContainer = null;

        @DataMember(Name="DatabasePaperFoldersBypassRecordTypeRestriction")
        @SerializedName("DatabasePaperFoldersBypassRecordTypeRestriction")
        @ApiMember(Name="DatabasePaperFoldersBypassRecordTypeRestriction", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PaperFoldersBypassRecordTypeRestriction = null;

        @DataMember(Name="DatabasePrefetchForeignBarcodes")
        @SerializedName("DatabasePrefetchForeignBarcodes")
        @ApiMember(Name="DatabasePrefetchForeignBarcodes", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PrefetchForeignBarcodes = null;

        @DataMember(Name="DatabasePreventDuplicatedDocuments")
        @SerializedName("DatabasePreventDuplicatedDocuments")
        @ApiMember(Name="DatabasePreventDuplicatedDocuments", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PreventDuplicatedDocuments = null;

        @DataMember(Name="DatabasePreventDuplicatedMailMessages")
        @SerializedName("DatabasePreventDuplicatedMailMessages")
        @ApiMember(Name="DatabasePreventDuplicatedMailMessages", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PreventDuplicatedMailMessages = null;

        @DataMember(Name="DatabasePreventZeroByteFiles")
        @SerializedName("DatabasePreventZeroByteFiles")
        @ApiMember(Name="DatabasePreventZeroByteFiles", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> PreventZeroByteFiles = null;

        @DataMember(Name="DatabaseReadOnly")
        @SerializedName("DatabaseReadOnly")
        @ApiMember(Name="DatabaseReadOnly", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> ReadOnly = null;

        @DataMember(Name="DatabaseRecentDocumentsLimit")
        @SerializedName("DatabaseRecentDocumentsLimit")
        @ApiMember(Name="DatabaseRecentDocumentsLimit", DataType="int", ParameterType="form")
        public TrimProperty<Integer> RecentDocumentsLimit = null;

        @DataMember(Name="DatabaseRecordAssigneeDefault")
        @SerializedName("DatabaseRecordAssigneeDefault")
        @ApiMember(Name="DatabaseRecordAssigneeDefault", DataType="string", ParameterType="form")
        public TrimProperty<CurrLocDef> RecordAssigneeDefault = null;

        @DataMember(Name="DatabaseRecordBarcode")
        @SerializedName("DatabaseRecordBarcode")
        @ApiMember(Name="DatabaseRecordBarcode", DataType="string", ParameterType="form")
        public TrimProperty<BarcodePrintOption> RecordBarcode = null;

        @DataMember(Name="DatabaseRecordCacheSize")
        @SerializedName("DatabaseRecordCacheSize")
        @ApiMember(Name="DatabaseRecordCacheSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> RecordCacheSize = null;

        @DataMember(Name="DatabaseRecordOwnersInAuditLog")
        @SerializedName("DatabaseRecordOwnersInAuditLog")
        @ApiMember(Name="DatabaseRecordOwnersInAuditLog", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RecordOwnersInAuditLog = null;

        @DataMember(Name="DatabaseRelaxedActionDates")
        @SerializedName("DatabaseRelaxedActionDates")
        @ApiMember(Name="DatabaseRelaxedActionDates", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RelaxedActionDates = null;

        @DataMember(Name="DatabaseRelaxedDates")
        @SerializedName("DatabaseRelaxedDates")
        @ApiMember(Name="DatabaseRelaxedDates", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RelaxedDates = null;

        @DataMember(Name="DatabaseReportAddInMemoryLeaks")
        @SerializedName("DatabaseReportAddInMemoryLeaks")
        @ApiMember(Name="DatabaseReportAddInMemoryLeaks", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ReportAddInMemoryLeaks = null;

        @DataMember(Name="DatabaseRescheduleActionsIfFinishEarly")
        @SerializedName("DatabaseRescheduleActionsIfFinishEarly")
        @ApiMember(Name="DatabaseRescheduleActionsIfFinishEarly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RescheduleActionsIfFinishEarly = null;

        @DataMember(Name="DatabaseRescheduleActionsIfFinishLate")
        @SerializedName("DatabaseRescheduleActionsIfFinishLate")
        @ApiMember(Name="DatabaseRescheduleActionsIfFinishLate", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> RescheduleActionsIfFinishLate = null;

        @DataMember(Name="DatabaseRestrictClassifications")
        @SerializedName("DatabaseRestrictClassifications")
        @ApiMember(Name="DatabaseRestrictClassifications", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> RestrictClassifications = null;

        @DataMember(Name="DatabaseRmTerminology")
        @SerializedName("DatabaseRmTerminology")
        @ApiMember(Name="DatabaseRmTerminology", DataType="string", ParameterType="form")
        public TrimProperty<RmTerminologyType> RmTerminology = null;

        @DataMember(Name="DatabaseSaveTransparentRedactions")
        @SerializedName("DatabaseSaveTransparentRedactions")
        @ApiMember(Name="DatabaseSaveTransparentRedactions", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SaveTransparentRedactions = null;

        @DataMember(Name="DatabaseScanEmailForSecurityMarkings")
        @SerializedName("DatabaseScanEmailForSecurityMarkings")
        @ApiMember(Name="DatabaseScanEmailForSecurityMarkings", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ScanEmailForSecurityMarkings = null;

        @DataMember(Name="DatabaseSchemaVersion")
        @SerializedName("DatabaseSchemaVersion")
        @ApiMember(Name="DatabaseSchemaVersion", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> SchemaVersion = null;

        @DataMember(Name="DatabaseSecurityMailAddress")
        @SerializedName("DatabaseSecurityMailAddress")
        @ApiMember(Name="DatabaseSecurityMailAddress", DataType="long", ParameterType="form", Verb="POST")
        public LocationRef SecurityMailAddress = null;

        @DataMember(Name="DatabaseServerDocumentCacheSize")
        @SerializedName("DatabaseServerDocumentCacheSize")
        @ApiMember(Name="DatabaseServerDocumentCacheSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ServerDocumentCacheSize = null;

        @DataMember(Name="DatabaseServiceLocationCacheSize")
        @SerializedName("DatabaseServiceLocationCacheSize")
        @ApiMember(Name="DatabaseServiceLocationCacheSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ServiceLocationCacheSize = null;

        @DataMember(Name="DatabaseServiceObjectCacheSize")
        @SerializedName("DatabaseServiceObjectCacheSize")
        @ApiMember(Name="DatabaseServiceObjectCacheSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ServiceObjectCacheSize = null;

        @DataMember(Name="DatabaseServiceRecordCacheSize")
        @SerializedName("DatabaseServiceRecordCacheSize")
        @ApiMember(Name="DatabaseServiceRecordCacheSize", DataType="int", ParameterType="form")
        public TrimProperty<Integer> ServiceRecordCacheSize = null;

        @DataMember(Name="DatabaseSetLastActionOnView")
        @SerializedName("DatabaseSetLastActionOnView")
        @ApiMember(Name="DatabaseSetLastActionOnView", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SetLastActionOnView = null;

        @DataMember(Name="DatabaseShredderDelete")
        @SerializedName("DatabaseShredderDelete")
        @ApiMember(Name="DatabaseShredderDelete", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> ShredderDelete = null;

        @DataMember(Name="DatabaseSignatureHashingAlgorithm")
        @SerializedName("DatabaseSignatureHashingAlgorithm")
        @ApiMember(Name="DatabaseSignatureHashingAlgorithm", DataType="string", ParameterType="form")
        public TrimProperty<HashingAlgorithms> SignatureHashingAlgorithm = null;

        @DataMember(Name="DatabaseSiteId")
        @SerializedName("DatabaseSiteId")
        @ApiMember(Name="DatabaseSiteId", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty SiteId = null;

        @DataMember(Name="DatabaseStartOfDay")
        @SerializedName("DatabaseStartOfDay")
        @ApiMember(Name="DatabaseStartOfDay", DataType="int", ParameterType="form")
        public TrimProperty<Integer> StartOfDay = null;

        @DataMember(Name="DatabaseStatisticsDst")
        @SerializedName("DatabaseStatisticsDst")
        @ApiMember(Name="DatabaseStatisticsDst", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> StatisticsDst = null;

        @DataMember(Name="DatabaseStatisticsTimeZone")
        @SerializedName("DatabaseStatisticsTimeZone")
        @ApiMember(Name="DatabaseStatisticsTimeZone", DataType="string", ParameterType="form")
        public TrimStringProperty StatisticsTimeZone = null;

        @DataMember(Name="DatabaseStorageHashCheck")
        @SerializedName("DatabaseStorageHashCheck")
        @ApiMember(Name="DatabaseStorageHashCheck", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> StorageHashCheck = null;

        @DataMember(Name="DatabaseStoreAutoClassifyNotes")
        @SerializedName("DatabaseStoreAutoClassifyNotes")
        @ApiMember(Name="DatabaseStoreAutoClassifyNotes", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> StoreAutoClassifyNotes = null;

        @DataMember(Name="DatabaseStrictCount")
        @SerializedName("DatabaseStrictCount")
        @ApiMember(Name="DatabaseStrictCount", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> StrictCount = null;

        @DataMember(Name="DatabaseSuppressAutoProfile")
        @SerializedName("DatabaseSuppressAutoProfile")
        @ApiMember(Name="DatabaseSuppressAutoProfile", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SuppressAutoProfile = null;

        @DataMember(Name="DatabaseSuppressWarningsForClosedContainers")
        @SerializedName("DatabaseSuppressWarningsForClosedContainers")
        @ApiMember(Name="DatabaseSuppressWarningsForClosedContainers", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SuppressWarningsForClosedContainers = null;

        @DataMember(Name="DatabaseSurnamePrefixNotInSort")
        @SerializedName("DatabaseSurnamePrefixNotInSort")
        @ApiMember(Name="DatabaseSurnamePrefixNotInSort", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> SurnamePrefixNotInSort = null;

        @DataMember(Name="DatabaseTitleAndNotesEvents")
        @SerializedName("DatabaseTitleAndNotesEvents")
        @ApiMember(Name="DatabaseTitleAndNotesEvents", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> TitleAndNotesEvents = null;

        @DataMember(Name="DatabaseTNAcompliant")
        @SerializedName("DatabaseTNAcompliant")
        @ApiMember(Name="DatabaseTNAcompliant", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> TNAcompliant = null;

        @DataMember(Name="DatabaseTransferHashCheck")
        @SerializedName("DatabaseTransferHashCheck")
        @ApiMember(Name="DatabaseTransferHashCheck", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> TransferHashCheck = null;

        @DataMember(Name="DatabaseUpdateCommentsAreMandatory")
        @SerializedName("DatabaseUpdateCommentsAreMandatory")
        @ApiMember(Name="DatabaseUpdateCommentsAreMandatory", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UpdateCommentsAreMandatory = null;

        @DataMember(Name="DatabaseUseClientDocumentCache")
        @SerializedName("DatabaseUseClientDocumentCache")
        @ApiMember(Name="DatabaseUseClientDocumentCache", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseClientDocumentCache = null;

        @DataMember(Name="DatabaseUseServerDocumentCache")
        @SerializedName("DatabaseUseServerDocumentCache")
        @ApiMember(Name="DatabaseUseServerDocumentCache", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> UseServerDocumentCache = null;

        @DataMember(Name="DatabaseUsingStoredProcedures")
        @SerializedName("DatabaseUsingStoredProcedures")
        @ApiMember(Name="DatabaseUsingStoredProcedures", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> UsingStoredProcedures = null;

        @DataMember(Name="DatabaseWarnWhenChangeDispositionOfRelated")
        @SerializedName("DatabaseWarnWhenChangeDispositionOfRelated")
        @ApiMember(Name="DatabaseWarnWhenChangeDispositionOfRelated", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> WarnWhenChangeDispositionOfRelated = null;

        @DataMember(Name="DatabaseWebServerURL")
        @SerializedName("DatabaseWebServerURL")
        @ApiMember(Name="DatabaseWebServerURL", DataType="string", ParameterType="form")
        public TrimStringProperty WebServerURL = null;

        @DataMember(Name="DatabaseWorkgroupServerName")
        @SerializedName("DatabaseWorkgroupServerName")
        @ApiMember(Name="DatabaseWorkgroupServerName", DataType="string", ParameterType="form")
        public TrimStringProperty WorkgroupServerName = null;

        @DataMember(Name="DatabaseWorkgroupServerPort")
        @SerializedName("DatabaseWorkgroupServerPort")
        @ApiMember(Name="DatabaseWorkgroupServerPort", DataType="int", ParameterType="form")
        public TrimProperty<Integer> WorkgroupServerPort = null;

        @DataMember(Name="DatabaseWorkgroupServerURL")
        @SerializedName("DatabaseWorkgroupServerURL")
        @ApiMember(Name="DatabaseWorkgroupServerURL", DataType="string", ParameterType="form")
        public TrimStringProperty WorkgroupServerURL = null;
        
        public ArrayList<LicenseTypes> getLicensedModules() { return LicensedModules; }
        public Database setLicensedModules(ArrayList<LicenseTypes> value) { this.LicensedModules = value; return this; }
        public ArrayList<ProductFeatures> getLicensedProductFeatures() { return LicensedProductFeatures; }
        public Database setLicensedProductFeatures(ArrayList<ProductFeatures> value) { this.LicensedProductFeatures = value; return this; }
        public ArrayList<ProductFeatures> getActivatedProductFeatures() { return ActivatedProductFeatures; }
        public Database setActivatedProductFeatures(ArrayList<ProductFeatures> value) { this.ActivatedProductFeatures = value; return this; }
        public MultiFieldSearchForm getDefinitionForm() { return DefinitionForm; }
        public Database setDefinitionForm(MultiFieldSearchForm value) { this.DefinitionForm = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public Database setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimProperty<Boolean> getActionReminder() { return ActionReminder; }
        public Database setActionReminder(TrimProperty<Boolean> value) { this.ActionReminder = value; return this; }
        public TrimProperty<Long> getActionReminderInterval() { return ActionReminderInterval; }
        public Database setActionReminderInterval(TrimProperty<Long> value) { this.ActionReminderInterval = value; return this; }
        public TrimProperty<Boolean> getActivityReminder() { return ActivityReminder; }
        public Database setActivityReminder(TrimProperty<Boolean> value) { this.ActivityReminder = value; return this; }
        public TrimProperty<Long> getActivityReminderInterval() { return ActivityReminderInterval; }
        public Database setActivityReminderInterval(TrimProperty<Long> value) { this.ActivityReminderInterval = value; return this; }
        public TrimProperty<Boolean> getAddHoldToContainedRecord() { return AddHoldToContainedRecord; }
        public Database setAddHoldToContainedRecord(TrimProperty<Boolean> value) { this.AddHoldToContainedRecord = value; return this; }
        public TrimProperty<Boolean> getAddToContainerOnHold() { return AddToContainerOnHold; }
        public Database setAddToContainerOnHold(TrimProperty<Boolean> value) { this.AddToContainerOnHold = value; return this; }
        public TrimProperty<Boolean> getAllowCatalogMessageBodyOnly() { return AllowCatalogMessageBodyOnly; }
        public Database setAllowCatalogMessageBodyOnly(TrimProperty<Boolean> value) { this.AllowCatalogMessageBodyOnly = value; return this; }
        public TrimProperty<Boolean> getAllowLargeFolders() { return AllowLargeFolders; }
        public Database setAllowLargeFolders(TrimProperty<Boolean> value) { this.AllowLargeFolders = value; return this; }
        public TrimProperty<Boolean> getAllowManualSentItemsCheckin() { return AllowManualSentItemsCheckin; }
        public Database setAllowManualSentItemsCheckin(TrimProperty<Boolean> value) { this.AllowManualSentItemsCheckin = value; return this; }
        public TrimProperty<Boolean> getAllowUsersToSetDblClick() { return AllowUsersToSetDblClick; }
        public Database setAllowUsersToSetDblClick(TrimProperty<Boolean> value) { this.AllowUsersToSetDblClick = value; return this; }
        public TrimProperty<Boolean> getAlternatelyContainDuplicateMail() { return AlternatelyContainDuplicateMail; }
        public Database setAlternatelyContainDuplicateMail(TrimProperty<Boolean> value) { this.AlternatelyContainDuplicateMail = value; return this; }
        public TrimStringProperty getAlternateWorkgroupServerName() { return AlternateWorkgroupServerName; }
        public Database setAlternateWorkgroupServerName(TrimStringProperty value) { this.AlternateWorkgroupServerName = value; return this; }
        public TrimProperty<Integer> getAlternateWorkgroupServerPort() { return AlternateWorkgroupServerPort; }
        public Database setAlternateWorkgroupServerPort(TrimProperty<Integer> value) { this.AlternateWorkgroupServerPort = value; return this; }
        public TrimStringProperty getAlternateWorkgroupServerURL() { return AlternateWorkgroupServerURL; }
        public Database setAlternateWorkgroupServerURL(TrimStringProperty value) { this.AlternateWorkgroupServerURL = value; return this; }
        public TrimProperty<Boolean> getAlwaysCheckSpelling() { return AlwaysCheckSpelling; }
        public Database setAlwaysCheckSpelling(TrimProperty<Boolean> value) { this.AlwaysCheckSpelling = value; return this; }
        public TrimProperty<Boolean> getAuditActive() { return AuditActive; }
        public Database setAuditActive(TrimProperty<Boolean> value) { this.AuditActive = value; return this; }
        public RecordRef getAuditLogContainer() { return AuditLogContainer; }
        public Database setAuditLogContainer(RecordRef value) { this.AuditLogContainer = value; return this; }
        public RecordTypeRef getAuditLogRecordType() { return AuditLogRecordType; }
        public Database setAuditLogRecordType(RecordTypeRef value) { this.AuditLogRecordType = value; return this; }
        public TrimProperty<Boolean> getAutoConnect() { return AutoConnect; }
        public Database setAutoConnect(TrimProperty<Boolean> value) { this.AutoConnect = value; return this; }
        public TrimProperty<Boolean> getAutoFinalizeEmail() { return AutoFinalizeEmail; }
        public Database setAutoFinalizeEmail(TrimProperty<Boolean> value) { this.AutoFinalizeEmail = value; return this; }
        public TrimProperty<Boolean> getAutoGenerateThumbnail() { return AutoGenerateThumbnail; }
        public Database setAutoGenerateThumbnail(TrimProperty<Boolean> value) { this.AutoGenerateThumbnail = value; return this; }
        public TrimProperty<Boolean> getAutomaticallyOCR() { return AutomaticallyOCR; }
        public Database setAutomaticallyOCR(TrimProperty<Boolean> value) { this.AutomaticallyOCR = value; return this; }
        public TrimProperty<Boolean> getAutoVitalRecordReview() { return AutoVitalRecordReview; }
        public Database setAutoVitalRecordReview(TrimProperty<Boolean> value) { this.AutoVitalRecordReview = value; return this; }
        public TrimProperty<Boolean> getBlueprintsConverted() { return BlueprintsConverted; }
        public Database setBlueprintsConverted(TrimProperty<Boolean> value) { this.BlueprintsConverted = value; return this; }
        public TrimProperty<Boolean> getCalculateDispositionEvents() { return CalculateDispositionEvents; }
        public Database setCalculateDispositionEvents(TrimProperty<Boolean> value) { this.CalculateDispositionEvents = value; return this; }
        public TrimProperty<NativeMailStyles> getCaptureNativeMailAs() { return CaptureNativeMailAs; }
        public Database setCaptureNativeMailAs(TrimProperty<NativeMailStyles> value) { this.CaptureNativeMailAs = value; return this; }
        public TrimProperty<Boolean> getCascadeParentFields() { return CascadeParentFields; }
        public Database setCascadeParentFields(TrimProperty<Boolean> value) { this.CascadeParentFields = value; return this; }
        public TrimProperty<Boolean> getCatalogAuditLogs() { return CatalogAuditLogs; }
        public Database setCatalogAuditLogs(TrimProperty<Boolean> value) { this.CatalogAuditLogs = value; return this; }
        public TrimProperty<Boolean> getCheckForDocumentLinks() { return CheckForDocumentLinks; }
        public Database setCheckForDocumentLinks(TrimProperty<Boolean> value) { this.CheckForDocumentLinks = value; return this; }
        public TrimProperty<Boolean> getCheckForDuplicateDocuments() { return CheckForDuplicateDocuments; }
        public Database setCheckForDuplicateDocuments(TrimProperty<Boolean> value) { this.CheckForDuplicateDocuments = value; return this; }
        public TrimProperty<Boolean> getCheckForDuplicateEmailMessages() { return CheckForDuplicateEmailMessages; }
        public Database setCheckForDuplicateEmailMessages(TrimProperty<Boolean> value) { this.CheckForDuplicateEmailMessages = value; return this; }
        public TrimStringProperty getClassificationLastNumber() { return ClassificationLastNumber; }
        public Database setClassificationLastNumber(TrimStringProperty value) { this.ClassificationLastNumber = value; return this; }
        public TrimProperty<Boolean> getClassificationsNeedApproval() { return ClassificationsNeedApproval; }
        public Database setClassificationsNeedApproval(TrimProperty<Boolean> value) { this.ClassificationsNeedApproval = value; return this; }
        public TrimStringProperty getClassificationTopPattern() { return ClassificationTopPattern; }
        public Database setClassificationTopPattern(TrimStringProperty value) { this.ClassificationTopPattern = value; return this; }
        public TrimProperty<Boolean> getClassifiedSecurity() { return ClassifiedSecurity; }
        public Database setClassifiedSecurity(TrimProperty<Boolean> value) { this.ClassifiedSecurity = value; return this; }
        public TrimProperty<Integer> getClientDocumentCacheSize() { return ClientDocumentCacheSize; }
        public Database setClientDocumentCacheSize(TrimProperty<Integer> value) { this.ClientDocumentCacheSize = value; return this; }
        public TrimProperty<Boolean> getCollectUpdateComments() { return CollectUpdateComments; }
        public Database setCollectUpdateComments(TrimProperty<Boolean> value) { this.CollectUpdateComments = value; return this; }
        public TrimProperty<Boolean> getConfirmContactValidation() { return ConfirmContactValidation; }
        public Database setConfirmContactValidation(TrimProperty<Boolean> value) { this.ConfirmContactValidation = value; return this; }
        public TrimProperty<Boolean> getConfirmLocationValidation() { return ConfirmLocationValidation; }
        public Database setConfirmLocationValidation(TrimProperty<Boolean> value) { this.ConfirmLocationValidation = value; return this; }
        public TrimProperty<Boolean> getContainerRulesForAlternate() { return ContainerRulesForAlternate; }
        public Database setContainerRulesForAlternate(TrimProperty<Boolean> value) { this.ContainerRulesForAlternate = value; return this; }
        public TrimProperty<ContentIndexType> getContentIndex() { return ContentIndex; }
        public Database setContentIndex(TrimProperty<ContentIndexType> value) { this.ContentIndex = value; return this; }
        public TrimProperty<Boolean> getCreateUdfChangedEvents() { return CreateUdfChangedEvents; }
        public Database setCreateUdfChangedEvents(TrimProperty<Boolean> value) { this.CreateUdfChangedEvents = value; return this; }
        public TrimProperty<Integer> getCurrencyDecimalDigits() { return CurrencyDecimalDigits; }
        public Database setCurrencyDecimalDigits(TrimProperty<Integer> value) { this.CurrencyDecimalDigits = value; return this; }
        public TrimStringProperty getCurrencyDecimalSymbol() { return CurrencyDecimalSymbol; }
        public Database setCurrencyDecimalSymbol(TrimStringProperty value) { this.CurrencyDecimalSymbol = value; return this; }
        public TrimProperty<Integer> getCurrencyGroupingFmt() { return CurrencyGroupingFmt; }
        public Database setCurrencyGroupingFmt(TrimProperty<Integer> value) { this.CurrencyGroupingFmt = value; return this; }
        public TrimStringProperty getCurrencyGroupingSymbol() { return CurrencyGroupingSymbol; }
        public Database setCurrencyGroupingSymbol(TrimStringProperty value) { this.CurrencyGroupingSymbol = value; return this; }
        public TrimProperty<Integer> getCurrencyNegativeFormat() { return CurrencyNegativeFormat; }
        public Database setCurrencyNegativeFormat(TrimProperty<Integer> value) { this.CurrencyNegativeFormat = value; return this; }
        public TrimProperty<Integer> getCurrencyPositiveFormat() { return CurrencyPositiveFormat; }
        public Database setCurrencyPositiveFormat(TrimProperty<Integer> value) { this.CurrencyPositiveFormat = value; return this; }
        public TrimStringProperty getCurrencySymbol() { return CurrencySymbol; }
        public Database setCurrencySymbol(TrimStringProperty value) { this.CurrencySymbol = value; return this; }
        public LocationRef getCurrentUser() { return CurrentUser; }
        public Database setCurrentUser(LocationRef value) { this.CurrentUser = value; return this; }
        public TrimStringProperty getCurrentWorkgroup() { return CurrentWorkgroup; }
        public Database setCurrentWorkgroup(TrimStringProperty value) { this.CurrentWorkgroup = value; return this; }
        public TrimProperty<Boolean> getDataSecurity() { return DataSecurity; }
        public Database setDataSecurity(TrimProperty<Boolean> value) { this.DataSecurity = value; return this; }
        public TrimDateTime getDateSchedulesSynchronized() { return DateSchedulesSynchronized; }
        public Database setDateSchedulesSynchronized(TrimDateTime value) { this.DateSchedulesSynchronized = value; return this; }
        public TrimDateTime getDateUserKeysSynchronized() { return DateUserKeysSynchronized; }
        public Database setDateUserKeysSynchronized(TrimDateTime value) { this.DateUserKeysSynchronized = value; return this; }
        public TrimProperty<DblClickContainerStyle> getDblClickContainers() { return DblClickContainers; }
        public Database setDblClickContainers(TrimProperty<DblClickContainerStyle> value) { this.DblClickContainers = value; return this; }
        public TrimProperty<DblClickStyle> getDblClickDocsDesktop() { return DblClickDocsDesktop; }
        public Database setDblClickDocsDesktop(TrimProperty<DblClickStyle> value) { this.DblClickDocsDesktop = value; return this; }
        public TrimProperty<DblClickStyle> getDblClickDocsTrim() { return DblClickDocsTrim; }
        public Database setDblClickDocsTrim(TrimProperty<DblClickStyle> value) { this.DblClickDocsTrim = value; return this; }
        public TrimStringProperty getDblClickExtLink() { return DblClickExtLink; }
        public Database setDblClickExtLink(TrimStringProperty value) { this.DblClickExtLink = value; return this; }
        public TrimProperty<DatabaseTypes> getDbms() { return Dbms; }
        public Database setDbms(TrimProperty<DatabaseTypes> value) { this.Dbms = value; return this; }
        public TrimProperty<Integer> getDeclassifyYears() { return DeclassifyYears; }
        public Database setDeclassifyYears(TrimProperty<Integer> value) { this.DeclassifyYears = value; return this; }
        public TrimProperty<Long> getDeduplicationThreshold() { return DeduplicationThreshold; }
        public Database setDeduplicationThreshold(TrimProperty<Long> value) { this.DeduplicationThreshold = value; return this; }
        public TrimProperty<Boolean> getDefaultAssigneeFromClassificationOwner() { return DefaultAssigneeFromClassificationOwner; }
        public Database setDefaultAssigneeFromClassificationOwner(TrimProperty<Boolean> value) { this.DefaultAssigneeFromClassificationOwner = value; return this; }
        public TrimProperty<LocationDefault> getDefaultHome() { return DefaultHome; }
        public Database setDefaultHome(TrimProperty<LocationDefault> value) { this.DefaultHome = value; return this; }
        public TrimProperty<LocationDefault> getDefaultOwner() { return DefaultOwner; }
        public Database setDefaultOwner(TrimProperty<LocationDefault> value) { this.DefaultOwner = value; return this; }
        public ElectronicStoreRef getDefaultStore() { return DefaultStore; }
        public Database setDefaultStore(ElectronicStoreRef value) { this.DefaultStore = value; return this; }
        public ElectronicStoreRef getDefaultStoreForSharepointRBS() { return DefaultStoreForSharepointRBS; }
        public Database setDefaultStoreForSharepointRBS(ElectronicStoreRef value) { this.DefaultStoreForSharepointRBS = value; return this; }
        public TrimProperty<Boolean> getDeleteEmailCaptureDuplicates() { return DeleteEmailCaptureDuplicates; }
        public Database setDeleteEmailCaptureDuplicates(TrimProperty<Boolean> value) { this.DeleteEmailCaptureDuplicates = value; return this; }
        public TrimProperty<Boolean> getDocumentSecurity() { return DocumentSecurity; }
        public Database setDocumentSecurity(TrimProperty<Boolean> value) { this.DocumentSecurity = value; return this; }
        public TrimProperty<Boolean> getDocumentSingleInstancing() { return DocumentSingleInstancing; }
        public Database setDocumentSingleInstancing(TrimProperty<Boolean> value) { this.DocumentSingleInstancing = value; return this; }
        public TrimProperty<Boolean> getDocumentsOnlyWithinFolders() { return DocumentsOnlyWithinFolders; }
        public Database setDocumentsOnlyWithinFolders(TrimProperty<Boolean> value) { this.DocumentsOnlyWithinFolders = value; return this; }
        public TrimProperty<Boolean> getEmailActivitySupervisors() { return EmailActivitySupervisors; }
        public Database setEmailActivitySupervisors(TrimProperty<Boolean> value) { this.EmailActivitySupervisors = value; return this; }
        public TrimProperty<Boolean> getEmailExpandOrganisations() { return EmailExpandOrganisations; }
        public Database setEmailExpandOrganisations(TrimProperty<Boolean> value) { this.EmailExpandOrganisations = value; return this; }
        public TrimProperty<MailFormat> getEmailFormat() { return EmailFormat; }
        public Database setEmailFormat(TrimProperty<MailFormat> value) { this.EmailFormat = value; return this; }
        public TrimProperty<EmailSecurityMode> getEmailSecurity() { return EmailSecurity; }
        public Database setEmailSecurity(TrimProperty<EmailSecurityMode> value) { this.EmailSecurity = value; return this; }
        public TrimStringProperty getEmailSubjectPrefix() { return EmailSubjectPrefix; }
        public Database setEmailSubjectPrefix(TrimStringProperty value) { this.EmailSubjectPrefix = value; return this; }
        public TrimProperty<Boolean> getEmlAttachmentSingleInstancing() { return EmlAttachmentSingleInstancing; }
        public Database setEmlAttachmentSingleInstancing(TrimProperty<Boolean> value) { this.EmlAttachmentSingleInstancing = value; return this; }
        public TrimProperty<Boolean> getEmlSpecialHashing() { return EmlSpecialHashing; }
        public Database setEmlSpecialHashing(TrimProperty<Boolean> value) { this.EmlSpecialHashing = value; return this; }
        public TrimProperty<Boolean> getEnableScheduledTasks() { return EnableScheduledTasks; }
        public Database setEnableScheduledTasks(TrimProperty<Boolean> value) { this.EnableScheduledTasks = value; return this; }
        public TrimProperty<Integer> getEndOfDay() { return EndOfDay; }
        public Database setEndOfDay(TrimProperty<Integer> value) { this.EndOfDay = value; return this; }
        public LocationRef getEstoreMailAddress() { return EstoreMailAddress; }
        public Database setEstoreMailAddress(LocationRef value) { this.EstoreMailAddress = value; return this; }
        public TrimProperty<Boolean> getFdA21CFR11compliant() { return FDA21CFR11compliant; }
        public Database setFdA21CFR11compliant(TrimProperty<Boolean> value) { this.FDA21CFR11compliant = value; return this; }
        public TrimProperty<Boolean> getFileIntoClosedContainers() { return FileIntoClosedContainers; }
        public Database setFileIntoClosedContainers(TrimProperty<Boolean> value) { this.FileIntoClosedContainers = value; return this; }
        public TrimProperty<Boolean> getFilterClassifications() { return FilterClassifications; }
        public Database setFilterClassifications(TrimProperty<Boolean> value) { this.FilterClassifications = value; return this; }
        public TrimProperty<Boolean> getFilterClassificationsByCopyACL() { return FilterClassificationsByCopyACL; }
        public Database setFilterClassificationsByCopyACL(TrimProperty<Boolean> value) { this.FilterClassificationsByCopyACL = value; return this; }
        public TrimProperty<Boolean> getGenerateAddAuditSummary() { return GenerateAddAuditSummary; }
        public Database setGenerateAddAuditSummary(TrimProperty<Boolean> value) { this.GenerateAddAuditSummary = value; return this; }
        public TrimProperty<Boolean> getGenerateDeleteAuditSummary() { return GenerateDeleteAuditSummary; }
        public Database setGenerateDeleteAuditSummary(TrimProperty<Boolean> value) { this.GenerateDeleteAuditSummary = value; return this; }
        public TrimProperty<Boolean> getGenerateModifyAuditSummary() { return GenerateModifyAuditSummary; }
        public Database setGenerateModifyAuditSummary(TrimProperty<Boolean> value) { this.GenerateModifyAuditSummary = value; return this; }
        public TrimProperty<Integer> getGlobalTimezone() { return GlobalTimezone; }
        public Database setGlobalTimezone(TrimProperty<Integer> value) { this.GlobalTimezone = value; return this; }
        public TrimStringProperty getGoogleKey() { return GoogleKey; }
        public Database setGoogleKey(TrimStringProperty value) { this.GoogleKey = value; return this; }
        public TrimProperty<Boolean> getHideClassificationNumbers() { return HideClassificationNumbers; }
        public Database setHideClassificationNumbers(TrimProperty<Boolean> value) { this.HideClassificationNumbers = value; return this; }
        public TrimProperty<Boolean> getHideCustomRecordTypes() { return HideCustomRecordTypes; }
        public Database setHideCustomRecordTypes(TrimProperty<Boolean> value) { this.HideCustomRecordTypes = value; return this; }
        public TrimProperty<Boolean> getHideSQLFromClients() { return HideSQLFromClients; }
        public Database setHideSQLFromClients(TrimProperty<Boolean> value) { this.HideSQLFromClients = value; return this; }
        public TrimStringProperty getId() { return Id; }
        public Database setId(TrimStringProperty value) { this.Id = value; return this; }
        public TrimProperty<Boolean> getIdolHasSecurityFiltering() { return IdolHasSecurityFiltering; }
        public Database setIdolHasSecurityFiltering(TrimProperty<Boolean> value) { this.IdolHasSecurityFiltering = value; return this; }
        public TrimProperty<IdolSearchStyles> getIdolSearchStyle() { return IdolSearchStyle; }
        public Database setIdolSearchStyle(TrimProperty<IdolSearchStyles> value) { this.IdolSearchStyle = value; return this; }
        public TrimProperty<Boolean> getIgnoreAccentsInWordIndexes() { return IgnoreAccentsInWordIndexes; }
        public Database setIgnoreAccentsInWordIndexes(TrimProperty<Boolean> value) { this.IgnoreAccentsInWordIndexes = value; return this; }
        public TrimProperty<Boolean> getIgnoreStaleUpdates() { return IgnoreStaleUpdates; }
        public Database setIgnoreStaleUpdates(TrimProperty<Boolean> value) { this.IgnoreStaleUpdates = value; return this; }
        public TrimProperty<Boolean> getIncludeLargeTextUpdatesInLogs() { return IncludeLargeTextUpdatesInLogs; }
        public Database setIncludeLargeTextUpdatesInLogs(TrimProperty<Boolean> value) { this.IncludeLargeTextUpdatesInLogs = value; return this; }
        public TrimProperty<ContainerSecurityHandling> getInsecureContainer() { return InsecureContainer; }
        public Database setInsecureContainer(TrimProperty<ContainerSecurityHandling> value) { this.InsecureContainer = value; return this; }
        public TrimProperty<GeneralExceptionHandling> getInsecureCurrent() { return InsecureCurrent; }
        public Database setInsecureCurrent(TrimProperty<GeneralExceptionHandling> value) { this.InsecureCurrent = value; return this; }
        public TrimProperty<Boolean> getIsConnected() { return IsConnected; }
        public Database setIsConnected(TrimProperty<Boolean> value) { this.IsConnected = value; return this; }
        public TrimProperty<Boolean> getIsDefault() { return IsDefault; }
        public Database setIsDefault(TrimProperty<Boolean> value) { this.IsDefault = value; return this; }
        public TrimProperty<Boolean> getIsValid() { return IsValid; }
        public Database setIsValid(TrimProperty<Boolean> value) { this.IsValid = value; return this; }
        public TrimProperty<Boolean> getJitcCompliant() { return JitcCompliant; }
        public Database setJitcCompliant(TrimProperty<Boolean> value) { this.JitcCompliant = value; return this; }
        public TrimProperty<Integer> getLastDayInFiscalMonth() { return LastDayInFiscalMonth; }
        public Database setLastDayInFiscalMonth(TrimProperty<Integer> value) { this.LastDayInFiscalMonth = value; return this; }
        public TrimProperty<Months> getLastMonthInFiscalYear() { return LastMonthInFiscalYear; }
        public Database setLastMonthInFiscalYear(TrimProperty<Months> value) { this.LastMonthInFiscalYear = value; return this; }
        public TrimStringProperty getLicenceeName() { return LicenceeName; }
        public Database setLicenceeName(TrimStringProperty value) { this.LicenceeName = value; return this; }
        public LocationRef getLicenseMailAddress() { return LicenseMailAddress; }
        public Database setLicenseMailAddress(LocationRef value) { this.LicenseMailAddress = value; return this; }
        public TrimProperty<Integer> getLocationCacheSize() { return LocationCacheSize; }
        public Database setLocationCacheSize(TrimProperty<Integer> value) { this.LocationCacheSize = value; return this; }
        public TrimProperty<Boolean> getLocationFormatShowHonorific() { return LocationFormatShowHonorific; }
        public Database setLocationFormatShowHonorific(TrimProperty<Boolean> value) { this.LocationFormatShowHonorific = value; return this; }
        public TrimProperty<Boolean> getLocationFormatShowInitials() { return LocationFormatShowInitials; }
        public Database setLocationFormatShowInitials(TrimProperty<Boolean> value) { this.LocationFormatShowInitials = value; return this; }
        public TrimProperty<Boolean> getLocationFormatShowPostNominal() { return LocationFormatShowPostNominal; }
        public Database setLocationFormatShowPostNominal(TrimProperty<Boolean> value) { this.LocationFormatShowPostNominal = value; return this; }
        public TrimProperty<Boolean> getLocationFormatSurnameFirst() { return LocationFormatSurnameFirst; }
        public Database setLocationFormatSurnameFirst(TrimProperty<Boolean> value) { this.LocationFormatSurnameFirst = value; return this; }
        public TrimProperty<LockdownStyles> getLockdownSettings() { return LockdownSettings; }
        public Database setLockdownSettings(TrimProperty<LockdownStyles> value) { this.LockdownSettings = value; return this; }
        public TrimProperty<Boolean> getLogStorageTransfers() { return LogStorageTransfers; }
        public Database setLogStorageTransfers(TrimProperty<Boolean> value) { this.LogStorageTransfers = value; return this; }
        public TrimProperty<Boolean> getLogWebServiceLogins() { return LogWebServiceLogins; }
        public Database setLogWebServiceLogins(TrimProperty<Boolean> value) { this.LogWebServiceLogins = value; return this; }
        public TrimProperty<Boolean> getMailRecipientMustExist() { return MailRecipientMustExist; }
        public Database setMailRecipientMustExist(TrimProperty<Boolean> value) { this.MailRecipientMustExist = value; return this; }
        public TrimProperty<Boolean> getMailRecipientsAsContacts() { return MailRecipientsAsContacts; }
        public Database setMailRecipientsAsContacts(TrimProperty<Boolean> value) { this.MailRecipientsAsContacts = value; return this; }
        public TrimProperty<Integer> getMinimumThesaurusLevels() { return MinimumThesaurusLevels; }
        public Database setMinimumThesaurusLevels(TrimProperty<Integer> value) { this.MinimumThesaurusLevels = value; return this; }
        public TrimProperty<Boolean> getModifyLogsPreviousValues() { return ModifyLogsPreviousValues; }
        public Database setModifyLogsPreviousValues(TrimProperty<Boolean> value) { this.ModifyLogsPreviousValues = value; return this; }
        public TrimProperty<Integer> getMyContainersLimit() { return MyContainersLimit; }
        public Database setMyContainersLimit(TrimProperty<Integer> value) { this.MyContainersLimit = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public Database setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimProperty<Boolean> getNeedLongevityRenditionToArchive() { return NeedLongevityRenditionToArchive; }
        public Database setNeedLongevityRenditionToArchive(TrimProperty<Boolean> value) { this.NeedLongevityRenditionToArchive = value; return this; }
        public TrimProperty<Boolean> getNeNcompliant() { return NENcompliant; }
        public Database setNeNcompliant(TrimProperty<Boolean> value) { this.NENcompliant = value; return this; }
        public TrimProperty<Boolean> getNotifyAssignedAction() { return NotifyAssignedAction; }
        public Database setNotifyAssignedAction(TrimProperty<Boolean> value) { this.NotifyAssignedAction = value; return this; }
        public TrimProperty<Boolean> getNotifyAutomaticUserRegistrations() { return NotifyAutomaticUserRegistrations; }
        public Database setNotifyAutomaticUserRegistrations(TrimProperty<Boolean> value) { this.NotifyAutomaticUserRegistrations = value; return this; }
        public TrimProperty<Boolean> getNotifyDocumentReviewEvents() { return NotifyDocumentReviewEvents; }
        public Database setNotifyDocumentReviewEvents(TrimProperty<Boolean> value) { this.NotifyDocumentReviewEvents = value; return this; }
        public TrimProperty<Boolean> getNotifyNextAction() { return NotifyNextAction; }
        public Database setNotifyNextAction(TrimProperty<Boolean> value) { this.NotifyNextAction = value; return this; }
        public TrimProperty<Boolean> getNotifyOverdueAction() { return NotifyOverdueAction; }
        public Database setNotifyOverdueAction(TrimProperty<Boolean> value) { this.NotifyOverdueAction = value; return this; }
        public TrimProperty<Boolean> getNotifyOverdueReturn() { return NotifyOverdueReturn; }
        public Database setNotifyOverdueReturn(TrimProperty<Boolean> value) { this.NotifyOverdueReturn = value; return this; }
        public TrimProperty<Boolean> getNotifyRecordRequest() { return NotifyRecordRequest; }
        public Database setNotifyRecordRequest(TrimProperty<Boolean> value) { this.NotifyRecordRequest = value; return this; }
        public TrimProperty<Boolean> getNotifyRequestsAwaitingAcknowledgement() { return NotifyRequestsAwaitingAcknowledgement; }
        public Database setNotifyRequestsAwaitingAcknowledgement(TrimProperty<Boolean> value) { this.NotifyRequestsAwaitingAcknowledgement = value; return this; }
        public TrimProperty<Boolean> getNotifyTodoItems() { return NotifyTodoItems; }
        public Database setNotifyTodoItems(TrimProperty<Boolean> value) { this.NotifyTodoItems = value; return this; }
        public TrimProperty<Boolean> getNotifyWorkflowMail() { return NotifyWorkflowMail; }
        public Database setNotifyWorkflowMail(TrimProperty<Boolean> value) { this.NotifyWorkflowMail = value; return this; }
        public TrimProperty<Integer> getObjectCacheSize() { return ObjectCacheSize; }
        public Database setObjectCacheSize(TrimProperty<Integer> value) { this.ObjectCacheSize = value; return this; }
        public TrimProperty<ObjectURLformats> getObjectURLFormat() { return ObjectURLFormat; }
        public Database setObjectURLFormat(TrimProperty<ObjectURLformats> value) { this.ObjectURLFormat = value; return this; }
        public TrimProperty<Boolean> getOnlyEmailTRIMRefsToTRIMUsers() { return OnlyEmailTRIMRefsToTRIMUsers; }
        public Database setOnlyEmailTRIMRefsToTRIMUsers(TrimProperty<Boolean> value) { this.OnlyEmailTRIMRefsToTRIMUsers = value; return this; }
        public TrimProperty<BarcodePrintOption> getOtherBarcode() { return OtherBarcode; }
        public Database setOtherBarcode(TrimProperty<BarcodePrintOption> value) { this.OtherBarcode = value; return this; }
        public TrimProperty<Boolean> getOwnerFromContainer() { return OwnerFromContainer; }
        public Database setOwnerFromContainer(TrimProperty<Boolean> value) { this.OwnerFromContainer = value; return this; }
        public TrimProperty<Boolean> getPaperFoldersBypassRecordTypeRestriction() { return PaperFoldersBypassRecordTypeRestriction; }
        public Database setPaperFoldersBypassRecordTypeRestriction(TrimProperty<Boolean> value) { this.PaperFoldersBypassRecordTypeRestriction = value; return this; }
        public TrimProperty<Boolean> getPrefetchForeignBarcodes() { return PrefetchForeignBarcodes; }
        public Database setPrefetchForeignBarcodes(TrimProperty<Boolean> value) { this.PrefetchForeignBarcodes = value; return this; }
        public TrimProperty<Boolean> getPreventDuplicatedDocuments() { return PreventDuplicatedDocuments; }
        public Database setPreventDuplicatedDocuments(TrimProperty<Boolean> value) { this.PreventDuplicatedDocuments = value; return this; }
        public TrimProperty<Boolean> getPreventDuplicatedMailMessages() { return PreventDuplicatedMailMessages; }
        public Database setPreventDuplicatedMailMessages(TrimProperty<Boolean> value) { this.PreventDuplicatedMailMessages = value; return this; }
        public TrimProperty<Boolean> getPreventZeroByteFiles() { return PreventZeroByteFiles; }
        public Database setPreventZeroByteFiles(TrimProperty<Boolean> value) { this.PreventZeroByteFiles = value; return this; }
        public TrimProperty<Boolean> getReadOnly() { return ReadOnly; }
        public Database setReadOnly(TrimProperty<Boolean> value) { this.ReadOnly = value; return this; }
        public TrimProperty<Integer> getRecentDocumentsLimit() { return RecentDocumentsLimit; }
        public Database setRecentDocumentsLimit(TrimProperty<Integer> value) { this.RecentDocumentsLimit = value; return this; }
        public TrimProperty<CurrLocDef> getRecordAssigneeDefault() { return RecordAssigneeDefault; }
        public Database setRecordAssigneeDefault(TrimProperty<CurrLocDef> value) { this.RecordAssigneeDefault = value; return this; }
        public TrimProperty<BarcodePrintOption> getRecordBarcode() { return RecordBarcode; }
        public Database setRecordBarcode(TrimProperty<BarcodePrintOption> value) { this.RecordBarcode = value; return this; }
        public TrimProperty<Integer> getRecordCacheSize() { return RecordCacheSize; }
        public Database setRecordCacheSize(TrimProperty<Integer> value) { this.RecordCacheSize = value; return this; }
        public TrimProperty<Boolean> getRecordOwnersInAuditLog() { return RecordOwnersInAuditLog; }
        public Database setRecordOwnersInAuditLog(TrimProperty<Boolean> value) { this.RecordOwnersInAuditLog = value; return this; }
        public TrimProperty<Boolean> getRelaxedActionDates() { return RelaxedActionDates; }
        public Database setRelaxedActionDates(TrimProperty<Boolean> value) { this.RelaxedActionDates = value; return this; }
        public TrimProperty<Boolean> getRelaxedDates() { return RelaxedDates; }
        public Database setRelaxedDates(TrimProperty<Boolean> value) { this.RelaxedDates = value; return this; }
        public TrimProperty<Boolean> getReportAddInMemoryLeaks() { return ReportAddInMemoryLeaks; }
        public Database setReportAddInMemoryLeaks(TrimProperty<Boolean> value) { this.ReportAddInMemoryLeaks = value; return this; }
        public TrimProperty<Boolean> getRescheduleActionsIfFinishEarly() { return RescheduleActionsIfFinishEarly; }
        public Database setRescheduleActionsIfFinishEarly(TrimProperty<Boolean> value) { this.RescheduleActionsIfFinishEarly = value; return this; }
        public TrimProperty<Boolean> getRescheduleActionsIfFinishLate() { return RescheduleActionsIfFinishLate; }
        public Database setRescheduleActionsIfFinishLate(TrimProperty<Boolean> value) { this.RescheduleActionsIfFinishLate = value; return this; }
        public TrimProperty<Boolean> getRestrictClassifications() { return RestrictClassifications; }
        public Database setRestrictClassifications(TrimProperty<Boolean> value) { this.RestrictClassifications = value; return this; }
        public TrimProperty<RmTerminologyType> getRmTerminology() { return RmTerminology; }
        public Database setRmTerminology(TrimProperty<RmTerminologyType> value) { this.RmTerminology = value; return this; }
        public TrimProperty<Boolean> getSaveTransparentRedactions() { return SaveTransparentRedactions; }
        public Database setSaveTransparentRedactions(TrimProperty<Boolean> value) { this.SaveTransparentRedactions = value; return this; }
        public TrimProperty<Boolean> getScanEmailForSecurityMarkings() { return ScanEmailForSecurityMarkings; }
        public Database setScanEmailForSecurityMarkings(TrimProperty<Boolean> value) { this.ScanEmailForSecurityMarkings = value; return this; }
        public TrimProperty<Integer> getSchemaVersion() { return SchemaVersion; }
        public Database setSchemaVersion(TrimProperty<Integer> value) { this.SchemaVersion = value; return this; }
        public LocationRef getSecurityMailAddress() { return SecurityMailAddress; }
        public Database setSecurityMailAddress(LocationRef value) { this.SecurityMailAddress = value; return this; }
        public TrimProperty<Integer> getServerDocumentCacheSize() { return ServerDocumentCacheSize; }
        public Database setServerDocumentCacheSize(TrimProperty<Integer> value) { this.ServerDocumentCacheSize = value; return this; }
        public TrimProperty<Integer> getServiceLocationCacheSize() { return ServiceLocationCacheSize; }
        public Database setServiceLocationCacheSize(TrimProperty<Integer> value) { this.ServiceLocationCacheSize = value; return this; }
        public TrimProperty<Integer> getServiceObjectCacheSize() { return ServiceObjectCacheSize; }
        public Database setServiceObjectCacheSize(TrimProperty<Integer> value) { this.ServiceObjectCacheSize = value; return this; }
        public TrimProperty<Integer> getServiceRecordCacheSize() { return ServiceRecordCacheSize; }
        public Database setServiceRecordCacheSize(TrimProperty<Integer> value) { this.ServiceRecordCacheSize = value; return this; }
        public TrimProperty<Boolean> getSetLastActionOnView() { return SetLastActionOnView; }
        public Database setSetLastActionOnView(TrimProperty<Boolean> value) { this.SetLastActionOnView = value; return this; }
        public TrimProperty<Boolean> getShredderDelete() { return ShredderDelete; }
        public Database setShredderDelete(TrimProperty<Boolean> value) { this.ShredderDelete = value; return this; }
        public TrimProperty<HashingAlgorithms> getSignatureHashingAlgorithm() { return SignatureHashingAlgorithm; }
        public Database setSignatureHashingAlgorithm(TrimProperty<HashingAlgorithms> value) { this.SignatureHashingAlgorithm = value; return this; }
        public TrimStringProperty getSiteId() { return SiteId; }
        public Database setSiteId(TrimStringProperty value) { this.SiteId = value; return this; }
        public TrimProperty<Integer> getStartOfDay() { return StartOfDay; }
        public Database setStartOfDay(TrimProperty<Integer> value) { this.StartOfDay = value; return this; }
        public TrimProperty<Boolean> getStatisticsDst() { return StatisticsDst; }
        public Database setStatisticsDst(TrimProperty<Boolean> value) { this.StatisticsDst = value; return this; }
        public TrimStringProperty getStatisticsTimeZone() { return StatisticsTimeZone; }
        public Database setStatisticsTimeZone(TrimStringProperty value) { this.StatisticsTimeZone = value; return this; }
        public TrimProperty<Boolean> getStorageHashCheck() { return StorageHashCheck; }
        public Database setStorageHashCheck(TrimProperty<Boolean> value) { this.StorageHashCheck = value; return this; }
        public TrimProperty<Boolean> getStoreAutoClassifyNotes() { return StoreAutoClassifyNotes; }
        public Database setStoreAutoClassifyNotes(TrimProperty<Boolean> value) { this.StoreAutoClassifyNotes = value; return this; }
        public TrimProperty<Boolean> getStrictCount() { return StrictCount; }
        public Database setStrictCount(TrimProperty<Boolean> value) { this.StrictCount = value; return this; }
        public TrimProperty<Boolean> getSuppressAutoProfile() { return SuppressAutoProfile; }
        public Database setSuppressAutoProfile(TrimProperty<Boolean> value) { this.SuppressAutoProfile = value; return this; }
        public TrimProperty<Boolean> getSuppressWarningsForClosedContainers() { return SuppressWarningsForClosedContainers; }
        public Database setSuppressWarningsForClosedContainers(TrimProperty<Boolean> value) { this.SuppressWarningsForClosedContainers = value; return this; }
        public TrimProperty<Boolean> getSurnamePrefixNotInSort() { return SurnamePrefixNotInSort; }
        public Database setSurnamePrefixNotInSort(TrimProperty<Boolean> value) { this.SurnamePrefixNotInSort = value; return this; }
        public TrimProperty<Boolean> getTitleAndNotesEvents() { return TitleAndNotesEvents; }
        public Database setTitleAndNotesEvents(TrimProperty<Boolean> value) { this.TitleAndNotesEvents = value; return this; }
        public TrimProperty<Boolean> getTnAcompliant() { return TNAcompliant; }
        public Database setTnAcompliant(TrimProperty<Boolean> value) { this.TNAcompliant = value; return this; }
        public TrimProperty<Boolean> getTransferHashCheck() { return TransferHashCheck; }
        public Database setTransferHashCheck(TrimProperty<Boolean> value) { this.TransferHashCheck = value; return this; }
        public TrimProperty<Boolean> getUpdateCommentsAreMandatory() { return UpdateCommentsAreMandatory; }
        public Database setUpdateCommentsAreMandatory(TrimProperty<Boolean> value) { this.UpdateCommentsAreMandatory = value; return this; }
        public TrimProperty<Boolean> getUseClientDocumentCache() { return UseClientDocumentCache; }
        public Database setUseClientDocumentCache(TrimProperty<Boolean> value) { this.UseClientDocumentCache = value; return this; }
        public TrimProperty<Boolean> getUseServerDocumentCache() { return UseServerDocumentCache; }
        public Database setUseServerDocumentCache(TrimProperty<Boolean> value) { this.UseServerDocumentCache = value; return this; }
        public TrimProperty<Boolean> getUsingStoredProcedures() { return UsingStoredProcedures; }
        public Database setUsingStoredProcedures(TrimProperty<Boolean> value) { this.UsingStoredProcedures = value; return this; }
        public TrimProperty<Boolean> getWarnWhenChangeDispositionOfRelated() { return WarnWhenChangeDispositionOfRelated; }
        public Database setWarnWhenChangeDispositionOfRelated(TrimProperty<Boolean> value) { this.WarnWhenChangeDispositionOfRelated = value; return this; }
        public TrimStringProperty getWebServerURL() { return WebServerURL; }
        public Database setWebServerURL(TrimStringProperty value) { this.WebServerURL = value; return this; }
        public TrimStringProperty getWorkgroupServerName() { return WorkgroupServerName; }
        public Database setWorkgroupServerName(TrimStringProperty value) { this.WorkgroupServerName = value; return this; }
        public TrimProperty<Integer> getWorkgroupServerPort() { return WorkgroupServerPort; }
        public Database setWorkgroupServerPort(TrimProperty<Integer> value) { this.WorkgroupServerPort = value; return this; }
        public TrimStringProperty getWorkgroupServerURL() { return WorkgroupServerURL; }
        public Database setWorkgroupServerURL(TrimStringProperty value) { this.WorkgroupServerURL = value; return this; }
    }

    public static class CommandDef
    {
        public CommandRefreshTypes RefreshStyle = null;
        public Boolean IsListCommand = null;
        public Boolean IsNavigationCommand = null;
        public Boolean NeedsAnObject = null;
        public Icons Icon = null;
        public CommandIds CommandId = null;
        public MenuItemTypes MenuItemType = null;
        public String MenuEntryString = null;
        public String Tooltip = null;
        public String StatusBarMessage = null;
        
        public CommandRefreshTypes getRefreshStyle() { return RefreshStyle; }
        public CommandDef setRefreshStyle(CommandRefreshTypes value) { this.RefreshStyle = value; return this; }
        public Boolean getIsListCommand() { return IsListCommand; }
        public CommandDef setIsListCommand(Boolean value) { this.IsListCommand = value; return this; }
        public Boolean getIsNavigationCommand() { return IsNavigationCommand; }
        public CommandDef setIsNavigationCommand(Boolean value) { this.IsNavigationCommand = value; return this; }
        public Boolean isNeedsAnObject() { return NeedsAnObject; }
        public CommandDef setNeedsAnObject(Boolean value) { this.NeedsAnObject = value; return this; }
        public Icons getIcon() { return Icon; }
        public CommandDef setIcon(Icons value) { this.Icon = value; return this; }
        public CommandIds getCommandId() { return CommandId; }
        public CommandDef setCommandId(CommandIds value) { this.CommandId = value; return this; }
        public MenuItemTypes getMenuItemType() { return MenuItemType; }
        public CommandDef setMenuItemType(MenuItemTypes value) { this.MenuItemType = value; return this; }
        public String getMenuEntryString() { return MenuEntryString; }
        public CommandDef setMenuEntryString(String value) { this.MenuEntryString = value; return this; }
        public String getTooltip() { return Tooltip; }
        public CommandDef setTooltip(String value) { this.Tooltip = value; return this; }
        public String getStatusBarMessage() { return StatusBarMessage; }
        public CommandDef setStatusBarMessage(String value) { this.StatusBarMessage = value; return this; }
    }

    public static enum AllEnumerations
    {
        Unknown(0),
        DatabaseTypes(1),
        UserTypes(2),
        GenericPurposes(3),
        AccessControlSettings(4),
        TitlingMethods(5),
        NumberingMethods(6),
        RecordBehaviour(7),
        RecordClass(8),
        HistoryTypes(9),
        RecordDisp(10),
        TriggerTypes(11),
        EstoreTypes(12),
        WordTypes(13),
        NbrTypes(14),
        KeywordAttachMethod(15),
        RecordLocationType(16),
        ContactType(17),
        SearchContactType(18),
        KeywordRelationship(19),
        RecordRelationshipType(20),
        RevRecRelationship(21),
        RenditionType(23),
        RecordTypeFilter(24),
        Events(25),
        EventProcessType(26),
        TrayType(27),
        LocationType(28),
        SearchLocationType(29),
        EAddressType(30),
        LocationPurpose(32),
        PropertyFormats(33),
        UserFieldFormats(34),
        SearchFilterTypes(35),
        RecordSortFields(36),
        BarcodeLabelType(37),
        ControlLabelType(38),
        BarcodeError(39),
        RecLocSubTypes(43),
        DateInterval(44),
        DocumentLinkType(45),
        GeneralExceptionHandling(47),
        ContainerSecurityHandling(48),
        BarcodePrintOption(49),
        LocationDefault(50),
        UseStoreType(52),
        AddressTypes(54),
        LocRelationshipType(55),
        PropertiesStringType(56),
        ClassificationPurpose(57),
        HashingAlgorithms(58),
        GeneralAccess(59),
        WorkflowAccess(61),
        RecordAccess(62),
        AccessReferenceStyle(63),
        CurrLocDef(64),
        FlowControl(65),
        SpaceLevel(66),
        SpacePurposes(67),
        SpaceRecordsSelection(68),
        SpaceAllocation(69),
        DateIntervalSing(70),
        FinalizedFilter(71),
        CensusRecords(72),
        WorkflowLockOperation(73),
        RecordPurposes(74),
        MailRecipientType(76),
        XmlDocumentExportType(77),
        LayoutPurpose(79),
        StringDisplayType(80),
        Language(86),
        PendingEventReviewFilter(88),
        DocumentSecurityHandling(89),
        QueueTypes(90),
        StatTypes(91),
        QueueUsageType(92),
        StatGroupByType(93),
        QueueItemAttributes(94),
        QueueCapability(95),
        ServerMessageTypes(96),
        NativeMailStyles(97),
        DeclassifyType(98),
        TaskStatus(99),
        SecurityUpdateTypes(100),
        ObjectURLformats(101),
        PluginPageType(102),
        NotesUpdateType(103),
        LockdownStyles(104),
        Environments(106),
        NotesInsertStyles(107),
        MeetingDocumentType(110),
        InvitationType(111),
        AttendanceType(112),
        LookupSetType(113),
        AprType(114),
        AprDateTypes(115),
        DocumentSelectionType(116),
        XmlSchemaTypes(117),
        AlertType(118),
        Gender(119),
        WgsCacheType(120),
        PropertyOrFieldFormat(121),
        Priority(122),
        UserLabelType(123),
        PsoActionType(124),
        MailEventType(125),
        CommunicationMedium(126),
        CommunicationDirection(127),
        CommunicatorType(128),
        OfflineStatus(129),
        SnapAddressType(130),
        EsoActionType(131),
        TriggerRounding(132),
        Months(133),
        DesktopStartStates(134),
        DayOfTheWeek(135),
        TimeInterval(136),
        MeetingAccess(137),
        EmailSecurityMode(138),
        MotionOutcome(139),
        TodoReferenceType(140),
        OutlineNumberType(141),
        NotificationType(142),
        ActivityDocumentUsage(143),
        WorkflowDocumentPlaceholderType(144),
        ActivityStates(145),
        InitiatingRecordBehavior(146),
        AutoRenditionStatus(148),
        AgendaItemAccess(152),
        GenderSalutation(153),
        AgendaPrintStyles(154),
        CommandRefreshTypes(155),
        ActivityDocumentAction(156),
        ActivityDocumentOrigin(157),
        ActivityDocumentStatus(158),
        WordProcessorMergeFormats(159),
        TrimPathType(160),
        AlertConditionTypes(161),
        FavoriteType(162),
        OriginType(163),
        DocumentUpdateStyles(164),
        EmailUpdateStyles(165),
        IconDisplayMode(166),
        IconUsage(167),
        StringDisplayAlignment(168),
        PropertySortMode(169),
        PrefetchStyles(170),
        DataEntryPageType(172),
        SearchClauseGroup(173),
        ProductString(174),
        ActionPurpose(175),
        WordListPurpose(176),
        RecordHistoryPurpose(177),
        MeetingPurpose(178),
        OfflineRecordPurpose(179),
        SearchPurposes(180),
        StorePurposes(181),
        SpecialDates(182),
        LabelPurposes(183),
        KeywordPurposes(184),
        EventProcessorStatus(185),
        ActivityPurposes(186),
        AuthenticationMethod(187),
        SpListItemOriginator(188),
        SpManagedItemStatus(189),
        SpElementType(190),
        SearchTimePeriodSingular(191),
        SearchTimePeriodPlural(192),
        SearchTimeTense(193),
        SearchGrammarItem(194),
        SearchEditor(195),
        ReferenceFileApplication(196),
        FontStyle(197),
        LocationFieldType(198),
        RecordDeclassifyTypes(199),
        SearchStartPoint(200),
        ReporterFonts(201),
        TabBarStyle(202),
        SkinStyle(203),
        WindowsFrameType(204),
        ColumnIndexType(205),
        MigrationType(206),
        WordFileTypes(207),
        ExcelFileTypes(208),
        PowerpointFileTypes(209),
        ProjectFileTypes(210),
        Word11FileTypes(212),
        Excel11FileTypes(213),
        Powerpoint11FileTypes(214),
        Project11FileTypes(215),
        WordOpenFileTypes(216),
        ExcelOpenFileTypes(217),
        PowerpointOpenFileTypes(218),
        ProjectOpenFileTypes(219),
        LocationMatchType(220),
        PathTypes(225),
        IdolIndexType(228),
        IdolIndexStatus(229),
        EditNotesStyle(230),
        StoreStatus(231),
        FileSizeUnits(232),
        MediaTypes(233),
        StatisticsOutputType(234),
        DatabaseLockType(236),
        SearchParameterFormats(237),
        JurisdictionTypes(238),
        PrimaryRecordStatisticsGrouping(239),
        LocationGrouping(240),
        StatisticalDateRangeTypes(248),
        ProductFeatures(249),
        OpenDocumentStatus(250),
        BulkLoaderCopyMode(251),
        FieldAccess(252),
        DuplicateEmailOptions(253),
        ContentIndexType(254),
        LicenseTypes(255),
        FeatureState(256),
        UserLicenseTypes(257),
        OldVersionPurgeOptions(258),
        ObjectCapabilities(259),
        IdolSearchStyles(260),
        RmGrammarItem(261),
        RmTerminologyType(262),
        TieredStorageType(263),
        RequestPurposes(264),
        RequestTypes(265),
        RequestPriority(266),
        RequestStatus(268),
        SqlErrorTypes(269),
        RetainOptions(270),
        DisposalType(271),
        DisposalScheduleStatus(272),
        ClientMatterInterestTypes(273),
        ConsignmentItemApprovalStatus(274),
        ConsignmentItemIssueType(276),
        ConsignmentPickListFormat(278),
        ConsignmentDisposalType(280),
        FieldPurposeType(281),
        UnregisteredUsers(282),
        MailFormat(283),
        LookupItemPurposeType(284),
        ClientServerProtocol(285),
        IpConnectionType(286),
        StartupPaneType(287),
        JurisdictionPurposes(288),
        OauthImplementationType(289),
        ClientAuthenticationMechanism(290),
        FrameAppearance(291),
        PsoDateType(292),
        EsoDateType(293),
        DateSearchType(294),
        GeographyDistanceUnit(295),
        GeographySearchType(296),
        CheckinPlaceTypes(297),
        AuthorizationMethods(298),
        LocationAccess(299),
        DocumentReviewStates(300),
        EncryptionAlgorithm(301),
        LabelPositionChange(302),
        ContainmentRule(303),
        DblClickStyle(304),
        DblClickContainerStyle(305),
        MailFolderTypes(306),
        LdapMatchingType(307),
        LdapSearchScope(308),
        LdapAuthMethod(309),
        SchedulePurposes(310),
        TriggerDelayTypes(311),
        CuspDateDisplayType(312),
        LogLevels(313),
        OutputPathTypes(314),
        BaseObjectTypes(1000),
        Selectors(1001),
        Enumerations(1002),
        CommandIds(1003),
        UserPermissions(1004),
        PermissionGroups(1005),
        PropertyIds(1006),
        Icons(1007),
        SearchClauseIds(1008),
        UserOptionSetIds(1009),
        MenuIds(1010),
        MenuItemIds(1011);

        private final int value;
        AllEnumerations(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static class EnumItemDetailDictionary extends HashMap<AllEnumerations,EnumItemList>
    {
        
    }

    public static enum TrimObjectType
    {
        All,
        Main,
        Searchable,
        WebClient;
    }

    public static class ObjectDef
    {
        public ArrayList<DataEntryForm> DataEntryFormDefinition = null;
        public MultiFieldSearchForm DefaultSearchFormDefinition = null;
        public Boolean HasAudit = null;
        public Boolean HasContextMenu = null;
        public Boolean AvailableOffline = null;
        public Boolean HasLabels = null;
        public Icons Icon = null;
        public SearchClauseIds PrefixSearchClauseId = null;
        public SearchClauseIds HierarchySearchClauseId = null;
        public PropertyIds NotesPropertyId = null;
        public PropertyIds ToolTipPropertyId = null;
        public PropertyIds PrefixPropertyId = null;
        public PropertyIds NamePropertyId = null;
        public Boolean HasCopiedSecurity = null;
        public Boolean HasSecurity = null;
        public AllEnumerations CopiedACLEnum = null;
        public AllEnumerations PrimaryACLEnum = null;
        public Boolean HasCopiedACL = null;
        public Boolean HasPrimaryACL = null;
        public Boolean HasNotes = null;
        public Boolean HasBarcode = null;
        public Boolean HasUserFields = null;
        public Boolean HasValidDateRange = null;
        public Boolean HasHierarchy = null;
        public Boolean InXMLSchema = null;
        public Boolean HasFavorites = null;
        public Boolean IsChild = null;
        public String CaptionPlural = null;
        public String Caption = null;
        public String Abbreviation = null;
        public String Name = null;
        public BaseObjectTypes Id = null;
        public ArrayList<String> HaveExtraPurposeParamater = null;
        public AllEnumerations PurposeEnum = null;
        public AllEnumByKeyDictionary ExtraPurposeEnums = null;
        public BaseObjectTypeByKeyDictionary ExtraPurposeObjectTypes = null;
        
        public ArrayList<DataEntryForm> getDataEntryFormDefinition() { return DataEntryFormDefinition; }
        public ObjectDef setDataEntryFormDefinition(ArrayList<DataEntryForm> value) { this.DataEntryFormDefinition = value; return this; }
        public MultiFieldSearchForm getDefaultSearchFormDefinition() { return DefaultSearchFormDefinition; }
        public ObjectDef setDefaultSearchFormDefinition(MultiFieldSearchForm value) { this.DefaultSearchFormDefinition = value; return this; }
        public Boolean isHasAudit() { return HasAudit; }
        public ObjectDef setHasAudit(Boolean value) { this.HasAudit = value; return this; }
        public Boolean isHasContextMenu() { return HasContextMenu; }
        public ObjectDef setHasContextMenu(Boolean value) { this.HasContextMenu = value; return this; }
        public Boolean isAvailableOffline() { return AvailableOffline; }
        public ObjectDef setAvailableOffline(Boolean value) { this.AvailableOffline = value; return this; }
        public Boolean isHasLabels() { return HasLabels; }
        public ObjectDef setHasLabels(Boolean value) { this.HasLabels = value; return this; }
        public Icons getIcon() { return Icon; }
        public ObjectDef setIcon(Icons value) { this.Icon = value; return this; }
        public SearchClauseIds getPrefixSearchClauseId() { return PrefixSearchClauseId; }
        public ObjectDef setPrefixSearchClauseId(SearchClauseIds value) { this.PrefixSearchClauseId = value; return this; }
        public SearchClauseIds getHierarchySearchClauseId() { return HierarchySearchClauseId; }
        public ObjectDef setHierarchySearchClauseId(SearchClauseIds value) { this.HierarchySearchClauseId = value; return this; }
        public PropertyIds getNotesPropertyId() { return NotesPropertyId; }
        public ObjectDef setNotesPropertyId(PropertyIds value) { this.NotesPropertyId = value; return this; }
        public PropertyIds getToolTipPropertyId() { return ToolTipPropertyId; }
        public ObjectDef setToolTipPropertyId(PropertyIds value) { this.ToolTipPropertyId = value; return this; }
        public PropertyIds getPrefixPropertyId() { return PrefixPropertyId; }
        public ObjectDef setPrefixPropertyId(PropertyIds value) { this.PrefixPropertyId = value; return this; }
        public PropertyIds getNamePropertyId() { return NamePropertyId; }
        public ObjectDef setNamePropertyId(PropertyIds value) { this.NamePropertyId = value; return this; }
        public Boolean isHasCopiedSecurity() { return HasCopiedSecurity; }
        public ObjectDef setHasCopiedSecurity(Boolean value) { this.HasCopiedSecurity = value; return this; }
        public Boolean isHasSecurity() { return HasSecurity; }
        public ObjectDef setHasSecurity(Boolean value) { this.HasSecurity = value; return this; }
        public AllEnumerations getCopiedACLEnum() { return CopiedACLEnum; }
        public ObjectDef setCopiedACLEnum(AllEnumerations value) { this.CopiedACLEnum = value; return this; }
        public AllEnumerations getPrimaryACLEnum() { return PrimaryACLEnum; }
        public ObjectDef setPrimaryACLEnum(AllEnumerations value) { this.PrimaryACLEnum = value; return this; }
        public Boolean isHasCopiedACL() { return HasCopiedACL; }
        public ObjectDef setHasCopiedACL(Boolean value) { this.HasCopiedACL = value; return this; }
        public Boolean isHasPrimaryACL() { return HasPrimaryACL; }
        public ObjectDef setHasPrimaryACL(Boolean value) { this.HasPrimaryACL = value; return this; }
        public Boolean isHasNotes() { return HasNotes; }
        public ObjectDef setHasNotes(Boolean value) { this.HasNotes = value; return this; }
        public Boolean isHasBarcode() { return HasBarcode; }
        public ObjectDef setHasBarcode(Boolean value) { this.HasBarcode = value; return this; }
        public Boolean isHasUserFields() { return HasUserFields; }
        public ObjectDef setHasUserFields(Boolean value) { this.HasUserFields = value; return this; }
        public Boolean isHasValidDateRange() { return HasValidDateRange; }
        public ObjectDef setHasValidDateRange(Boolean value) { this.HasValidDateRange = value; return this; }
        public Boolean isHasHierarchy() { return HasHierarchy; }
        public ObjectDef setHasHierarchy(Boolean value) { this.HasHierarchy = value; return this; }
        public Boolean isInXMLSchema() { return InXMLSchema; }
        public ObjectDef setInXMLSchema(Boolean value) { this.InXMLSchema = value; return this; }
        public Boolean isHasFavorites() { return HasFavorites; }
        public ObjectDef setHasFavorites(Boolean value) { this.HasFavorites = value; return this; }
        public Boolean getIsChild() { return IsChild; }
        public ObjectDef setIsChild(Boolean value) { this.IsChild = value; return this; }
        public String getCaptionPlural() { return CaptionPlural; }
        public ObjectDef setCaptionPlural(String value) { this.CaptionPlural = value; return this; }
        public String getCaption() { return Caption; }
        public ObjectDef setCaption(String value) { this.Caption = value; return this; }
        public String getAbbreviation() { return Abbreviation; }
        public ObjectDef setAbbreviation(String value) { this.Abbreviation = value; return this; }
        public String getName() { return Name; }
        public ObjectDef setName(String value) { this.Name = value; return this; }
        public BaseObjectTypes getId() { return Id; }
        public ObjectDef setId(BaseObjectTypes value) { this.Id = value; return this; }
        public ArrayList<String> getHaveExtraPurposeParamater() { return HaveExtraPurposeParamater; }
        public ObjectDef setHaveExtraPurposeParamater(ArrayList<String> value) { this.HaveExtraPurposeParamater = value; return this; }
        public AllEnumerations getPurposeEnum() { return PurposeEnum; }
        public ObjectDef setPurposeEnum(AllEnumerations value) { this.PurposeEnum = value; return this; }
        public AllEnumByKeyDictionary getExtraPurposeEnums() { return ExtraPurposeEnums; }
        public ObjectDef setExtraPurposeEnums(AllEnumByKeyDictionary value) { this.ExtraPurposeEnums = value; return this; }
        public BaseObjectTypeByKeyDictionary getExtraPurposeObjectTypes() { return ExtraPurposeObjectTypes; }
        public ObjectDef setExtraPurposeObjectTypes(BaseObjectTypeByKeyDictionary value) { this.ExtraPurposeObjectTypes = value; return this; }
    }

    public static class SearchClauseDef
    {
        public Boolean NeedsSubQueryObjectTypeParameter = null;
        public Boolean NeedsAccessControlTypeParameter = null;
        public PropertyFormats ParameterFormat = null;
        public SearchClauseGroup MethodGroup = null;
        public PropertyIds BasedOnProperty = null;
        public BaseObjectTypes OnlyForType = null;
        public String Caption = null;
        public String InternalName = null;
        public Icons Icon = null;
        public String Name = null;
        public SearchClauseIds Id = null;
        public Boolean CanSort = null;
        public BaseObjectTypes ObjectTypeParameter = null;
        public String ToolTip = null;
        public String ParametersTooltip = null;
        public String SortToolTip = null;
        public String DefaultValue = null;
        public AllEnumerations EnumTypeParameter = null;
        
        public Boolean isNeedsSubQueryObjectTypeParameter() { return NeedsSubQueryObjectTypeParameter; }
        public SearchClauseDef setNeedsSubQueryObjectTypeParameter(Boolean value) { this.NeedsSubQueryObjectTypeParameter = value; return this; }
        public Boolean isNeedsAccessControlTypeParameter() { return NeedsAccessControlTypeParameter; }
        public SearchClauseDef setNeedsAccessControlTypeParameter(Boolean value) { this.NeedsAccessControlTypeParameter = value; return this; }
        public PropertyFormats getParameterFormat() { return ParameterFormat; }
        public SearchClauseDef setParameterFormat(PropertyFormats value) { this.ParameterFormat = value; return this; }
        public SearchClauseGroup getMethodGroup() { return MethodGroup; }
        public SearchClauseDef setMethodGroup(SearchClauseGroup value) { this.MethodGroup = value; return this; }
        public PropertyIds getBasedOnProperty() { return BasedOnProperty; }
        public SearchClauseDef setBasedOnProperty(PropertyIds value) { this.BasedOnProperty = value; return this; }
        public BaseObjectTypes getOnlyForType() { return OnlyForType; }
        public SearchClauseDef setOnlyForType(BaseObjectTypes value) { this.OnlyForType = value; return this; }
        public String getCaption() { return Caption; }
        public SearchClauseDef setCaption(String value) { this.Caption = value; return this; }
        public String getInternalName() { return InternalName; }
        public SearchClauseDef setInternalName(String value) { this.InternalName = value; return this; }
        public Icons getIcon() { return Icon; }
        public SearchClauseDef setIcon(Icons value) { this.Icon = value; return this; }
        public String getName() { return Name; }
        public SearchClauseDef setName(String value) { this.Name = value; return this; }
        public SearchClauseIds getId() { return Id; }
        public SearchClauseDef setId(SearchClauseIds value) { this.Id = value; return this; }
        public Boolean isCanSort() { return CanSort; }
        public SearchClauseDef setCanSort(Boolean value) { this.CanSort = value; return this; }
        public BaseObjectTypes getObjectTypeParameter() { return ObjectTypeParameter; }
        public SearchClauseDef setObjectTypeParameter(BaseObjectTypes value) { this.ObjectTypeParameter = value; return this; }
        public String getToolTip() { return ToolTip; }
        public SearchClauseDef setToolTip(String value) { this.ToolTip = value; return this; }
        public String getParametersTooltip() { return ParametersTooltip; }
        public SearchClauseDef setParametersTooltip(String value) { this.ParametersTooltip = value; return this; }
        public String getSortToolTip() { return SortToolTip; }
        public SearchClauseDef setSortToolTip(String value) { this.SortToolTip = value; return this; }
        public String getDefaultValue() { return DefaultValue; }
        public SearchClauseDef setDefaultValue(String value) { this.DefaultValue = value; return this; }
        public AllEnumerations getEnumTypeParameter() { return EnumTypeParameter; }
        public SearchClauseDef setEnumTypeParameter(AllEnumerations value) { this.EnumTypeParameter = value; return this; }
    }

    public static class TrimSearchStack extends ArrayList<ITrimSearchStackItem>
    {
        
    }

    public static class MessagesDictionary extends HashMap<String,String>
    {
        
    }

    public static enum PropertyOrFieldDefType
    {
        All,
        Detailed,
        DataGridVisible,
        ViewPane,
        SearchOptions;
    }

    public static class BasePropertyOrFieldDefDetails
    {
        /**
        * Chose a property set from which to return property definitions.
        */
        @ApiMember(Name="Get", DataType="string", ParameterType="query", Verb="GET", Description="Chose a property set from which to return property definitions.")
        public PropertyOrFieldDefType Get = null;

        /**
        * The properties of the TrimType you wish to return (e.g. RecordTitle or RecordOwnerLocation).  Use as an alternative to 'Get'.
        */
        @ApiMember(Name="GetProperties", DataType="string", ParameterType="query", Verb="GET", Description="The properties of the TrimType you wish to return (e.g. RecordTitle or RecordOwnerLocation).  Use as an alternative to 'Get'.", AllowMultiple=true)
        public ArrayList<String> GetProperties = null;
        
        public PropertyOrFieldDefType getGet() { return Get; }
        public BasePropertyOrFieldDefDetails setGet(PropertyOrFieldDefType value) { this.Get = value; return this; }
        public ArrayList<String> getGetProperties() { return GetProperties; }
        public BasePropertyOrFieldDefDetails setGetProperties(ArrayList<String> value) { this.GetProperties = value; return this; }
    }

    public static class PropertyOrFieldDefList extends ArrayList<PropertyOrFieldDef>
    {
        
    }

    public static class PropertyOrFieldDef
    {
        public String Id = null;
        public Boolean IsEMailAddress = null;
        public Boolean IsHyperlink = null;
        public Integer DefaultColumnCharacters = null;
        public Integer ColumnWidth = null;
        public Boolean IsDefaultDataGridColumn = null;
        public Boolean BestFitColumn = null;
        public IconDisplayMode IconAndOrTextMode = null;
        public StringDisplayAlignment StringAlignment = null;
        public PropertySortMode SortMode = null;
        public String Caption = null;
        public BaseObjectTypes ObjectType = null;
        public PropertyOrFieldFormat PFFormat = null;
        @Ignore()
        public FieldDefinitionRef Field = null;

        @Ignore()
        public PropertyDef Property = null;

        public PropertyIds PropertyId = null;
        public Boolean IsAField = null;
        public Boolean IsAProperty = null;
        public Boolean IsMandatory = null;
        
        public String getId() { return Id; }
        public PropertyOrFieldDef setId(String value) { this.Id = value; return this; }
        public Boolean getIsEMailAddress() { return IsEMailAddress; }
        public PropertyOrFieldDef setIsEMailAddress(Boolean value) { this.IsEMailAddress = value; return this; }
        public Boolean getIsHyperlink() { return IsHyperlink; }
        public PropertyOrFieldDef setIsHyperlink(Boolean value) { this.IsHyperlink = value; return this; }
        public Integer getDefaultColumnCharacters() { return DefaultColumnCharacters; }
        public PropertyOrFieldDef setDefaultColumnCharacters(Integer value) { this.DefaultColumnCharacters = value; return this; }
        public Integer getColumnWidth() { return ColumnWidth; }
        public PropertyOrFieldDef setColumnWidth(Integer value) { this.ColumnWidth = value; return this; }
        public Boolean getIsDefaultDataGridColumn() { return IsDefaultDataGridColumn; }
        public PropertyOrFieldDef setIsDefaultDataGridColumn(Boolean value) { this.IsDefaultDataGridColumn = value; return this; }
        public Boolean isBestFitColumn() { return BestFitColumn; }
        public PropertyOrFieldDef setBestFitColumn(Boolean value) { this.BestFitColumn = value; return this; }
        public IconDisplayMode getIconAndOrTextMode() { return IconAndOrTextMode; }
        public PropertyOrFieldDef setIconAndOrTextMode(IconDisplayMode value) { this.IconAndOrTextMode = value; return this; }
        public StringDisplayAlignment getStringAlignment() { return StringAlignment; }
        public PropertyOrFieldDef setStringAlignment(StringDisplayAlignment value) { this.StringAlignment = value; return this; }
        public PropertySortMode getSortMode() { return SortMode; }
        public PropertyOrFieldDef setSortMode(PropertySortMode value) { this.SortMode = value; return this; }
        public String getCaption() { return Caption; }
        public PropertyOrFieldDef setCaption(String value) { this.Caption = value; return this; }
        public BaseObjectTypes getObjectType() { return ObjectType; }
        public PropertyOrFieldDef setObjectType(BaseObjectTypes value) { this.ObjectType = value; return this; }
        public PropertyOrFieldFormat getPfFormat() { return PFFormat; }
        public PropertyOrFieldDef setPfFormat(PropertyOrFieldFormat value) { this.PFFormat = value; return this; }
        public FieldDefinitionRef getField() { return Field; }
        public PropertyOrFieldDef setField(FieldDefinitionRef value) { this.Field = value; return this; }
        public PropertyDef getProperty() { return Property; }
        public PropertyOrFieldDef setProperty(PropertyDef value) { this.Property = value; return this; }
        public PropertyIds getPropertyId() { return PropertyId; }
        public PropertyOrFieldDef setPropertyId(PropertyIds value) { this.PropertyId = value; return this; }
        public Boolean getIsAField() { return IsAField; }
        public PropertyOrFieldDef setIsAField(Boolean value) { this.IsAField = value; return this; }
        public Boolean getIsAProperty() { return IsAProperty; }
        public PropertyOrFieldDef setIsAProperty(Boolean value) { this.IsAProperty = value; return this; }
        public Boolean getIsMandatory() { return IsMandatory; }
        public PropertyOrFieldDef setIsMandatory(Boolean value) { this.IsMandatory = value; return this; }
    }

    public static class UserOptionPropertiesDictionary extends HashMap<UserOptionSetIds,UserOptionPropertyDefList>
    {
        
    }

    public static class BaseTrimMainObjectSearch
    {
        /**
        * A comma seperated list of object properties, e.g. RecordNumber,RecordTitle.
        */
        @ApiMember(Name="properties", DataType="string", ParameterType="query", Description="A comma seperated list of object properties, e.g. RecordNumber,RecordTitle.", AllowMultiple=true)
        public ArrayList<String> Properties = null;

        /**
        *  A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle.
        */
        @ApiMember(Name="descendantProperties", DataType="string", ParameterType="query", Description=" A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle.", AllowMultiple=true)
        public ArrayList<String> DescendantProperties = null;

        /**
        * One or more pre-defined property sets, select from DataGridVisible, Detailed, FromSearch, All or a custom property set as defined in your service configuration.
        */
        @ApiMember(Name="propertySets", DataType="string", ParameterType="query", Description="One or more pre-defined property sets, select from DataGridVisible, Detailed, FromSearch, All or a custom property set as defined in your service configuration.", AllowMultiple=true)
        public ArrayList<String> PropertySets = null;

        /**
        * A comma seperated list of search clause Ids.  Use - to specify descending.  E.g. 'Number-' to sort Records by number descending.
        */
        @ApiMember(Name="sortBy", DataType="string", ParameterType="query", Description="A comma seperated list of search clause Ids.  Use - to specify descending.  E.g. 'Number-' to sort Records by number descending.", AllowMultiple=true)
        public ArrayList<String> sortBy = null;

        /**
        * A space seperated list of search clauses to apply as a filter.
        */
        @ApiMember(Name="filter", DataType="string", ParameterType="query", Description="A space seperated list of search clauses to apply as a filter.")
        public String Filter = null;

        /**
        * The uri of a Saved Search from which to contstruct this search.
        */
        @ApiMember(Name="fromSearch", DataType="long", ParameterType="query", Description="The uri of a Saved Search from which to contstruct this search.")
        public Long FromSearch = null;

        /**
        * The number of items to return in each page of results, if empty defaults to default value set in configuration.
        */
        @ApiMember(Name="pageSize", DataType="int", ParameterType="query", Description="The number of items to return in each page of results, if empty defaults to default value set in configuration.")
        public Integer pageSize = null;

        /**
        * The position in the result set to start, empty (or 1) to start at the beginning, 2 to start at the second object, 3 at the third, etc.
        */
        @ApiMember(Name="start", DataType="int", ParameterType="query", Description="The position in the result set to start, empty (or 1) to start at the beginning, 2 to start at the second object, 3 at the third, etc.")
        public Integer start = null;

        /**
        * Include the raw value, the string value, or both in the results.
        */
        @ApiMember(Name="PropertyValue", DataType="string", ParameterType="query", Description="Include the raw value, the string value, or both in the results.")
        public PropertyType PropertyValue = null;

        /**
        * If returning the string value which format to use.
        */
        @ApiMember(Name="stringDisplayType", DataType="string", ParameterType="query", Description="If returning the string value which format to use.")
        public StringDisplayType StringDisplayType = null;

        /**
        * A special property to filter search results based on object Purpose enum values.
        */
        @ApiMember(Name="purpose", DataType="int", ParameterType="query", Description="A special property to filter search results based on object Purpose enum values.")
        public Integer purpose = null;

        /**
        * Necessary as a supplement to some purposes.  The ObjectDef service provides information on the enum or TrimMainObject type to specify, in particular ObjectDef.ExtraPurposeEnums, ObjectDef.ExtraPurposeObjectTypes, and HaveExtraPurposeParamater.
        */
        @ApiMember(Name="purposeExtra", DataType="int", ParameterType="query", Description="Necessary as a supplement to some purposes.  The ObjectDef service provides information on the enum or TrimMainObject type to specify, in particular ObjectDef.ExtraPurposeEnums, ObjectDef.ExtraPurposeObjectTypes, and HaveExtraPurposeParamater.")
        public Long purposeExtra = null;

        /**
        * True to return an array of the Property Definitions used by properties in this response.
        */
        @DataMember(Name="IncludePropertyDefs")
        @SerializedName("IncludePropertyDefs")
        @ApiMember(Name="IncludePropertyDefs", DataType="boolean", ParameterType="query", Description="True to return an array of the Property Definitions used by properties in this response.")
        public Boolean IncludePropertyDefs = null;

        /**
        * True to apply the user's default filter and sort to this search.
        */
        @DataMember(Name="ApplyDefaults")
        @SerializedName("ApplyDefaults")
        @ApiMember(Name="ApplyDefaults", DataType="boolean", ParameterType="query", Verb="GET", Description="True to apply the user's default filter and sort to this search.")
        public Boolean ApplyDefaults = null;

        /**
        * Returning the TotalResults and SearchTitle can degrade performance. Set to true if TotalResults and SearchTitle are not required.
        */
        @DataMember(Name="ExcludeCount")
        @SerializedName("ExcludeCount")
        @ApiMember(Name="ExcludeCount", DataType="boolean", ParameterType="query", Description="Returning the TotalResults and SearchTitle can degrade performance. Set to true if TotalResults and SearchTitle are not required.")
        public Boolean ResultsOnly = null;

        /**
        * CountResults returns the most reliable and the slowest count of the total search results. The resulting count is in the response Count property.
        */
        @DataMember(Name="CountResults")
        @SerializedName("CountResults")
        @ApiMember(Name="CountResults", DataType="boolean", ParameterType="query", Description="CountResults returns the most reliable and the slowest count of the total search results. The resulting count is in the response Count property.")
        public Boolean CountResults = null;

        @DataMember(Name="CustomFieldParameters")
        @SerializedName("CustomFieldParameters")
        public HashMap<String,String> CustomFieldParameters = null;

        /**
        * Set one or more of the options typically set in User Options for this search only.  Use ids from the /PropertyDef?Get=SearchOptions service, append a minus sign to set to false, otherwise true is assumed.
        */
        @DataMember(Name="Options")
        @SerializedName("Options")
        @ApiMember(Name="Options", DataType="string", ParameterType="query", Description="Set one or more of the options typically set in User Options for this search only.  Use ids from the /PropertyDef?Get=SearchOptions service, append a minus sign to set to false, otherwise true is assumed.")
        public ArrayList<String> Options = null;
        
        public ArrayList<String> getProperties() { return Properties; }
        public BaseTrimMainObjectSearch setProperties(ArrayList<String> value) { this.Properties = value; return this; }
        public ArrayList<String> getDescendantProperties() { return DescendantProperties; }
        public BaseTrimMainObjectSearch setDescendantProperties(ArrayList<String> value) { this.DescendantProperties = value; return this; }
        public ArrayList<String> getPropertySets() { return PropertySets; }
        public BaseTrimMainObjectSearch setPropertySets(ArrayList<String> value) { this.PropertySets = value; return this; }
        public ArrayList<String> getSortBy() { return sortBy; }
        public BaseTrimMainObjectSearch setSortBy(ArrayList<String> value) { this.sortBy = value; return this; }
        public String getFilter() { return Filter; }
        public BaseTrimMainObjectSearch setFilter(String value) { this.Filter = value; return this; }
        public Long getFromSearch() { return FromSearch; }
        public BaseTrimMainObjectSearch setFromSearch(Long value) { this.FromSearch = value; return this; }
        public Integer getPageSize() { return pageSize; }
        public BaseTrimMainObjectSearch setPageSize(Integer value) { this.pageSize = value; return this; }
        public Integer getStart() { return start; }
        public BaseTrimMainObjectSearch setStart(Integer value) { this.start = value; return this; }
        public PropertyType getPropertyValue() { return PropertyValue; }
        public BaseTrimMainObjectSearch setPropertyValue(PropertyType value) { this.PropertyValue = value; return this; }
        public StringDisplayType getStringDisplayType() { return StringDisplayType; }
        public BaseTrimMainObjectSearch setStringDisplayType(StringDisplayType value) { this.StringDisplayType = value; return this; }
        public Integer getPurpose() { return purpose; }
        public BaseTrimMainObjectSearch setPurpose(Integer value) { this.purpose = value; return this; }
        public Long getPurposeExtra() { return purposeExtra; }
        public BaseTrimMainObjectSearch setPurposeExtra(Long value) { this.purposeExtra = value; return this; }
        public Boolean isIncludePropertyDefs() { return IncludePropertyDefs; }
        public BaseTrimMainObjectSearch setIncludePropertyDefs(Boolean value) { this.IncludePropertyDefs = value; return this; }
        public Boolean isApplyDefaults() { return ApplyDefaults; }
        public BaseTrimMainObjectSearch setApplyDefaults(Boolean value) { this.ApplyDefaults = value; return this; }
        public Boolean isResultsOnly() { return ResultsOnly; }
        public BaseTrimMainObjectSearch setResultsOnly(Boolean value) { this.ResultsOnly = value; return this; }
        public Boolean isCountResults() { return CountResults; }
        public BaseTrimMainObjectSearch setCountResults(Boolean value) { this.CountResults = value; return this; }
        public HashMap<String,String> getCustomFieldParameters() { return CustomFieldParameters; }
        public BaseTrimMainObjectSearch setCustomFieldParameters(HashMap<String,String> value) { this.CustomFieldParameters = value; return this; }
        public ArrayList<String> getOptions() { return Options; }
        public BaseTrimMainObjectSearch setOptions(ArrayList<String> value) { this.Options = value; return this; }
    }

    @DataContract
    public static class ITrimProperty
    {
        @DataMember
        public String StringValue = null;
        
        public String getStringValue() { return StringValue; }
        public ITrimProperty setStringValue(String value) { this.StringValue = value; return this; }
    }

    @DataContract
    public static class Injectable extends ITrimProperty
    {
        
    }

    @DataContract
    public static class PropertySet extends Injectable
    {
        
    }

    @DataContract
    public static class SecurityLevelRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="SecurityLevelActiveFrom")
        @SerializedName("SecurityLevelActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="SecurityLevelActiveTo")
        @SerializedName("SecurityLevelActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="SecurityLevelActiveDescription")
        @SerializedName("SecurityLevelActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="SecurityLevelIsActive")
        @SerializedName("SecurityLevelIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="SecurityLevelAbbreviation")
        @SerializedName("SecurityLevelAbbreviation")
        @ApiMember(Name="SecurityLevelAbbreviation", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Abbreviation = null;

        @DataMember(Name="SecurityLevelLevelNumber")
        @SerializedName("SecurityLevelLevelNumber")
        @ApiMember(Name="SecurityLevelLevelNumber", DataType="int", IsRequired=true, ParameterType="form")
        public TrimProperty<Integer> LevelNumber = null;

        @DataMember(Name="SecurityLevelName")
        @SerializedName("SecurityLevelName")
        @ApiMember(Name="SecurityLevelName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="SecurityLevelNotes")
        @SerializedName("SecurityLevelNotes")
        @ApiMember(Name="SecurityLevelNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SecurityLevelRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public SecurityLevelRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public SecurityLevelRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public SecurityLevelRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public SecurityLevelRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getAbbreviation() { return Abbreviation; }
        public SecurityLevelRef setAbbreviation(TrimStringProperty value) { this.Abbreviation = value; return this; }
        public TrimProperty<Integer> getLevelNumber() { return LevelNumber; }
        public SecurityLevelRef setLevelNumber(TrimProperty<Integer> value) { this.LevelNumber = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public SecurityLevelRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public SecurityLevelRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
    }

    @DataContract
    public static class SecurityCaveatRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="SecurityCaveatActiveFrom")
        @SerializedName("SecurityCaveatActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="SecurityCaveatActiveTo")
        @SerializedName("SecurityCaveatActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="SecurityCaveatActiveDescription")
        @SerializedName("SecurityCaveatActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="SecurityCaveatIsActive")
        @SerializedName("SecurityCaveatIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="SecurityCaveatAbbreviation")
        @SerializedName("SecurityCaveatAbbreviation")
        @ApiMember(Name="SecurityCaveatAbbreviation", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Abbreviation = null;

        @DataMember(Name="SecurityCaveatCaveatNumber")
        @SerializedName("SecurityCaveatCaveatNumber")
        @ApiMember(Name="SecurityCaveatCaveatNumber", DataType="int", ParameterType="form", Verb="GET")
        public TrimProperty<Integer> CaveatNumber = null;

        @DataMember(Name="SecurityCaveatName")
        @SerializedName("SecurityCaveatName")
        @ApiMember(Name="SecurityCaveatName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="SecurityCaveatNotes")
        @SerializedName("SecurityCaveatNotes")
        @ApiMember(Name="SecurityCaveatNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember
        @ApiMember(Name="Remove", DataType="boolean", ParameterType="body")
        public Boolean Remove = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public SecurityCaveatRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public SecurityCaveatRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public SecurityCaveatRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public SecurityCaveatRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public SecurityCaveatRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimStringProperty getAbbreviation() { return Abbreviation; }
        public SecurityCaveatRef setAbbreviation(TrimStringProperty value) { this.Abbreviation = value; return this; }
        public TrimProperty<Integer> getCaveatNumber() { return CaveatNumber; }
        public SecurityCaveatRef setCaveatNumber(TrimProperty<Integer> value) { this.CaveatNumber = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public SecurityCaveatRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public SecurityCaveatRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public Boolean isRemove() { return Remove; }
        public SecurityCaveatRef setRemove(Boolean value) { this.Remove = value; return this; }
    }

    public static enum ClientMatterInterestTypes
    {
        For,
        Against,
        Neutral;
    }

    @DataContract
    public static class TrimChildObject extends TrimObject
    {
        @DataMember
        @ApiMember(Name="Delete", DataType="boolean", ParameterType="body")
        public Boolean Delete = null;
        
        public Boolean isDelete() { return Delete; }
        public TrimChildObject setDelete(Boolean value) { this.Delete = value; return this; }
    }

    @DataContract
    public static class HoldRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="HoldActiveFrom")
        @SerializedName("HoldActiveFrom")
        public TrimDateTime ActiveFrom = null;

        @DataMember(Name="HoldActiveTo")
        @SerializedName("HoldActiveTo")
        public TrimDateTime ActiveTo = null;

        @DataMember(Name="HoldActiveDescription")
        @SerializedName("HoldActiveDescription")
        public TrimStringProperty ActiveDescription = null;

        @DataMember(Name="HoldIsActive")
        @SerializedName("HoldIsActive")
        public TrimProperty<Boolean> IsActive = null;

        @DataMember(Name="HoldAffectsDispositionOnly")
        @SerializedName("HoldAffectsDispositionOnly")
        @ApiMember(Name="HoldAffectsDispositionOnly", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> AffectsDispositionOnly = null;

        @DataMember(Name="HoldExternalId")
        @SerializedName("HoldExternalId")
        @ApiMember(Name="HoldExternalId", DataType="string", ParameterType="form")
        public TrimStringProperty ExternalId = null;

        @DataMember(Name="HoldName")
        @SerializedName("HoldName")
        @ApiMember(Name="HoldName", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Name = null;

        @DataMember(Name="HoldNotes")
        @SerializedName("HoldNotes")
        @ApiMember(Name="HoldNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="HoldSearchCriteria")
        @SerializedName("HoldSearchCriteria")
        @ApiMember(Name="HoldSearchCriteria", DataType="string", ParameterType="form")
        public TrimStringProperty SearchCriteria = null;

        @DataMember(Name="HoldSearchLastRunOn")
        @SerializedName("HoldSearchLastRunOn")
        @ApiMember(Name="HoldSearchLastRunOn", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime SearchLastRunOn = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public HoldRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getActiveFrom() { return ActiveFrom; }
        public HoldRef setActiveFrom(TrimDateTime value) { this.ActiveFrom = value; return this; }
        public TrimDateTime getActiveTo() { return ActiveTo; }
        public HoldRef setActiveTo(TrimDateTime value) { this.ActiveTo = value; return this; }
        public TrimStringProperty getActiveDescription() { return ActiveDescription; }
        public HoldRef setActiveDescription(TrimStringProperty value) { this.ActiveDescription = value; return this; }
        public TrimProperty<Boolean> getIsActive() { return IsActive; }
        public HoldRef setIsActive(TrimProperty<Boolean> value) { this.IsActive = value; return this; }
        public TrimProperty<Boolean> getAffectsDispositionOnly() { return AffectsDispositionOnly; }
        public HoldRef setAffectsDispositionOnly(TrimProperty<Boolean> value) { this.AffectsDispositionOnly = value; return this; }
        public TrimStringProperty getExternalId() { return ExternalId; }
        public HoldRef setExternalId(TrimStringProperty value) { this.ExternalId = value; return this; }
        public TrimStringProperty getName() { return Name; }
        public HoldRef setName(TrimStringProperty value) { this.Name = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public HoldRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimStringProperty getSearchCriteria() { return SearchCriteria; }
        public HoldRef setSearchCriteria(TrimStringProperty value) { this.SearchCriteria = value; return this; }
        public TrimDateTime getSearchLastRunOn() { return SearchLastRunOn; }
        public HoldRef setSearchLastRunOn(TrimDateTime value) { this.SearchLastRunOn = value; return this; }
    }

    public static enum KeywordAttachMethod
    {
        ByTitling,
        ByAttach;
    }

    public static enum DocumentLinkType
    {
        External,
        Record,
        StoreId;
    }

    public static enum RecordLocationType
    {
        Current,
        Home,
        Owner,
        Creator,
        Contact,
        Editor,
        Reviewer,
        Authorizer;
    }

    public static enum RecordRelationshipType
    {
        IsRelatedTo(0),
        IsTempCopy(1),
        IsRootPart(3),
        DoesSupersede(4),
        IsInSeries(5),
        IsAttachmentOf(6),
        IsVersion(7),
        IsAltIn(8),
        Custom1(9),
        Custom2(10),
        Custom3(11),
        Custom4(12),
        Custom5(13),
        Custom6(14),
        Custom7(15),
        Custom8(16),
        Custom9(17),
        Custom10(18),
        RedactionOf(19),
        DerivedFrom(20),
        ContainsClause(21),
        InSharepointSite(22),
        IsReplyTo(23);

        private final int value;
        RecordRelationshipType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum RevRecRelationship
    {
        RisRelatedTo(0),
        RisTempCopy(1),
        RisRootPart(3),
        RdoesSupersede(4),
        RisInSeries(5),
        RisAttachmentOf(6),
        RisVersion(7),
        RisAltIn(8),
        Rcustom1(9),
        Rcustom2(10),
        Rcustom3(11),
        Rcustom4(12),
        Rcustom5(13),
        Rcustom6(14),
        Rcustom7(15),
        Rcustom8(16),
        Rcustom9(17),
        Rcustom10(18),
        RRedactionOf(19),
        RDerivedFrom(20),
        ClauseWithin(21),
        RinSharepointSite(22),
        RisReplyTo(23);

        private final int value;
        RevRecRelationship(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static class FunctionProfilesDictionary extends HashMap<String,TrimAccessControlFunction>
    {
        
    }

    public static class Page
    {
        public DataEntryPageType Type = null;
        public String Caption = null;
        public Boolean CaptionsAbove = null;
        public Boolean HighlightMandatory = null;
        public Boolean Mandatory = null;
        public Integer NotesStyle = null;
        public ArrayList<IPageItem> PageItems = null;
        public BaseObjectTypes ChildType = null;
        
        public DataEntryPageType getType() { return Type; }
        public Page setType(DataEntryPageType value) { this.Type = value; return this; }
        public String getCaption() { return Caption; }
        public Page setCaption(String value) { this.Caption = value; return this; }
        public Boolean isCaptionsAbove() { return CaptionsAbove; }
        public Page setCaptionsAbove(Boolean value) { this.CaptionsAbove = value; return this; }
        public Boolean isHighlightMandatory() { return HighlightMandatory; }
        public Page setHighlightMandatory(Boolean value) { this.HighlightMandatory = value; return this; }
        public Boolean isMandatory() { return Mandatory; }
        public Page setMandatory(Boolean value) { this.Mandatory = value; return this; }
        public Integer getNotesStyle() { return NotesStyle; }
        public Page setNotesStyle(Integer value) { this.NotesStyle = value; return this; }
        public ArrayList<IPageItem> getPageItems() { return PageItems; }
        public Page setPageItems(ArrayList<IPageItem> value) { this.PageItems = value; return this; }
        public BaseObjectTypes getChildType() { return ChildType; }
        public Page setChildType(BaseObjectTypes value) { this.ChildType = value; return this; }
    }

    @DataContract
    public static class TrimObject extends PropertySet
    {
        /**
        * Delete an object.
        */
        @DataMember
        @ApiMember(Name="DeleteMainObject", ParameterType="form", Verb="POST", Description="Delete an object.")
        public DeleteMainObject DeleteMainObject = null;

        @DataMember(Name="Icon")
        @SerializedName("Icon")
        public TrimIcon Icon = null;

        @DataMember(Name="DataEntryFormDefinition")
        @SerializedName("DataEntryFormDefinition")
        public DataEntryForm DataEntryFormDefinition = null;

        @DataMember(Name="NameString")
        @SerializedName("NameString")
        public String NameString = null;

        @DataMember(Name="ToolTip")
        @SerializedName("ToolTip")
        public String ToolTip = null;

        @DataMember(Name="URN")
        @SerializedName("URN")
        public String URN = null;

        @DataMember
        @ApiMember(Name="Uri", DataType="long", ParameterType="form")
        public Long Uri = null;

        @DataMember(Name="ActionsToCall")
        @SerializedName("ActionsToCall")
        @ApiMember(ExcludeInSchema=true)
        public ArrayList<IMainObjectActionRequest> ActionsToCall = null;

        @DataMember(Name="Validate")
        @SerializedName("Validate")
        public Boolean Validate = null;

        @DataMember
        @ApiMember(ExcludeInSchema=true)
        public FieldDictionary Fields = null;

        /**
        * Use this to post additional fields, all values must be posted as strings.
        */
        @DataMember
        @ApiMember(Name="AdditionalFields", Verb="POST", Description="Use this to post additional fields, all values must be posted as strings.")
        public HashMap<String,String> AdditionalFields = null;

        @DataMember
        public TrimStringProperty Url = null;
        
        public DeleteMainObject getDeleteMainObject() { return DeleteMainObject; }
        public TrimObject setDeleteMainObject(DeleteMainObject value) { this.DeleteMainObject = value; return this; }
        public TrimIcon getIcon() { return Icon; }
        public TrimObject setIcon(TrimIcon value) { this.Icon = value; return this; }
        public DataEntryForm getDataEntryFormDefinition() { return DataEntryFormDefinition; }
        public TrimObject setDataEntryFormDefinition(DataEntryForm value) { this.DataEntryFormDefinition = value; return this; }
        public String getNameString() { return NameString; }
        public TrimObject setNameString(String value) { this.NameString = value; return this; }
        public String getToolTip() { return ToolTip; }
        public TrimObject setToolTip(String value) { this.ToolTip = value; return this; }
        public String getUrn() { return URN; }
        public TrimObject setUrn(String value) { this.URN = value; return this; }
        public Long getUri() { return Uri; }
        public TrimObject setUri(Long value) { this.Uri = value; return this; }
        public ArrayList<IMainObjectActionRequest> getActionsToCall() { return ActionsToCall; }
        public TrimObject setActionsToCall(ArrayList<IMainObjectActionRequest> value) { this.ActionsToCall = value; return this; }
        public Boolean isValidate() { return Validate; }
        public TrimObject setValidate(Boolean value) { this.Validate = value; return this; }
        public FieldDictionary getFields() { return Fields; }
        public TrimObject setFields(FieldDictionary value) { this.Fields = value; return this; }
        public HashMap<String,String> getAdditionalFields() { return AdditionalFields; }
        public TrimObject setAdditionalFields(HashMap<String,String> value) { this.AdditionalFields = value; return this; }
        public TrimStringProperty getUrl() { return Url; }
        public TrimObject setUrl(TrimStringProperty value) { this.Url = value; return this; }
    }

    public static enum ActivityDocumentAction
    {
        Reference,
        Create,
        Review;
    }

    public static enum ActivityDocumentOrigin
    {
        Reference,
        InitiatingRecord,
        ThisActivity,
        PrecedingActivity;
    }

    public static enum ActivityDocumentStatus
    {
        Unlinked,
        Linked;
    }

    public static enum ActivityDocumentUsage
    {
        Reference,
        Working,
        Review;
    }

    public static enum AgendaPrintStyles
    {
        NotPrinted,
        InlinePrint,
        AppendixPrint;
    }

    public static enum SnapAddressType
    {
        Street,
        Postal,
        Email,
        Fax;
    }

    public static enum CommunicatorType
    {
        Sender,
        Recipient,
        Custom1,
        Custom2,
        Custom3,
        Custom4;
    }

    public static class SearchDefaults
    {
        public String SortString = null;
        public ArrayList<TrimSearchClause> Filters = null;
        
        public String getSortString() { return SortString; }
        public SearchDefaults setSortString(String value) { this.SortString = value; return this; }
        public ArrayList<TrimSearchClause> getFilters() { return Filters; }
        public SearchDefaults setFilters(ArrayList<TrimSearchClause> value) { this.Filters = value; return this; }
    }

    public static enum AddressTypes
    {
        Street,
        Postal,
        Custom1,
        Custom2,
        Custom3,
        Custom4,
        Custom5;
    }

    public static enum EAddressType
    {
        Mail,
        Url,
        Rdn,
        Image,
        Signature,
        Other;
    }

    public static enum MeetingDocumentType
    {
        Custom6,
        Custom7,
        Submission,
        Custom4,
        Custom5,
        Custom1,
        Custom2,
        Custom3;
    }

    public static enum AttendanceType
    {
        Present,
        Apology,
        NotPresent,
        Proxy,
        Custom1,
        Custom2,
        Custom3;
    }

    public static enum InvitationType
    {
        Invited,
        Chair,
        Secretary,
        Required,
        Optional,
        Custom1,
        Custom2,
        Custom3;
    }

    @DataContract
    public static class TodoItemRef extends TrimMainObjectRef
    {
        @DataMember
        public BaseObjectTypes TrimType = null;

        @DataMember(Name="TodoItemDateCreated")
        @SerializedName("TodoItemDateCreated")
        @ApiMember(Name="TodoItemDateCreated", DataType="TrimDateTime", ParameterType="form", Verb="GET")
        public TrimDateTime DateCreated = null;

        @DataMember(Name="TodoItemDateDone")
        @SerializedName("TodoItemDateDone")
        @ApiMember(Name="TodoItemDateDone", DataType="TrimDateTime", ParameterType="form")
        public TrimDateTime DateDone = null;

        @DataMember(Name="TodoItemDateDue")
        @SerializedName("TodoItemDateDue")
        @ApiMember(Name="TodoItemDateDue", DataType="TrimDateTime", IsRequired=true, ParameterType="form")
        public TrimDateTime DateDue = null;

        @DataMember(Name="TodoItemDescription")
        @SerializedName("TodoItemDescription")
        @ApiMember(Name="TodoItemDescription", DataType="string", ParameterType="form", Verb="GET")
        public TrimStringProperty Description = null;

        @DataMember(Name="TodoItemIsComplete")
        @SerializedName("TodoItemIsComplete")
        @ApiMember(Name="TodoItemIsComplete", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsComplete = null;

        @DataMember(Name="TodoItemIsOverdue")
        @SerializedName("TodoItemIsOverdue")
        @ApiMember(Name="TodoItemIsOverdue", DataType="boolean", ParameterType="form", Verb="GET")
        public TrimProperty<Boolean> IsOverdue = null;

        @DataMember(Name="TodoItemItemPriority")
        @SerializedName("TodoItemItemPriority")
        @ApiMember(Name="TodoItemItemPriority", DataType="string", ParameterType="form")
        public TrimProperty<Priority> ItemPriority = null;

        @DataMember(Name="TodoItemNotes")
        @SerializedName("TodoItemNotes")
        @ApiMember(Name="TodoItemNotes", DataType="string", ParameterType="form")
        public TrimStringProperty Notes = null;

        @DataMember(Name="TodoItemNotifyByEmail")
        @SerializedName("TodoItemNotifyByEmail")
        @ApiMember(Name="TodoItemNotifyByEmail", DataType="boolean", ParameterType="form")
        public TrimProperty<Boolean> NotifyByEmail = null;

        @DataMember(Name="TodoItemTodo")
        @SerializedName("TodoItemTodo")
        @ApiMember(Name="TodoItemTodo", DataType="string", IsRequired=true, ParameterType="form")
        public TrimStringProperty Todo = null;
        
        public BaseObjectTypes getTrimType() { return TrimType; }
        public TodoItemRef setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
        public TrimDateTime getDateCreated() { return DateCreated; }
        public TodoItemRef setDateCreated(TrimDateTime value) { this.DateCreated = value; return this; }
        public TrimDateTime getDateDone() { return DateDone; }
        public TodoItemRef setDateDone(TrimDateTime value) { this.DateDone = value; return this; }
        public TrimDateTime getDateDue() { return DateDue; }
        public TodoItemRef setDateDue(TrimDateTime value) { this.DateDue = value; return this; }
        public TrimStringProperty getDescription() { return Description; }
        public TodoItemRef setDescription(TrimStringProperty value) { this.Description = value; return this; }
        public TrimProperty<Boolean> getIsComplete() { return IsComplete; }
        public TodoItemRef setIsComplete(TrimProperty<Boolean> value) { this.IsComplete = value; return this; }
        public TrimProperty<Boolean> getIsOverdue() { return IsOverdue; }
        public TodoItemRef setIsOverdue(TrimProperty<Boolean> value) { this.IsOverdue = value; return this; }
        public TrimProperty<Priority> getItemPriority() { return ItemPriority; }
        public TodoItemRef setItemPriority(TrimProperty<Priority> value) { this.ItemPriority = value; return this; }
        public TrimStringProperty getNotes() { return Notes; }
        public TodoItemRef setNotes(TrimStringProperty value) { this.Notes = value; return this; }
        public TrimProperty<Boolean> getNotifyByEmail() { return NotifyByEmail; }
        public TodoItemRef setNotifyByEmail(TrimProperty<Boolean> value) { this.NotifyByEmail = value; return this; }
        public TrimStringProperty getTodo() { return Todo; }
        public TodoItemRef setTodo(TrimStringProperty value) { this.Todo = value; return this; }
    }

    public static enum TriggerTypes
    {
        DateCreated(0),
        DateClosed(1),
        DateRegistered(2),
        FixedDate(4),
        DateLastAction(5),
        DateArchived(6),
        DateInactive(7),
        UserDefined(8),
        DateModified(9),
        RootDateCreated(10),
        ContentDateFinalized(12),
        DateFinalized(13),
        LastPartDateClosed(14),
        LastPartDateCreated(15),
        ContentDateCreated(16),
        ContentDateModified(17),
        ContentDateClosed(18),
        ContentDateLastAction(19),
        DateMatterClosed(20),
        SapArchiveDate(21),
        SapModifiedDate(22),
        DateSuperseded(23),
        DateReceived(24);

        private final int value;
        TriggerTypes(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum TriggerDelayTypes
    {
        YearsAndMonths,
        Days,
        NoDelay;
    }

    public static enum TriggerRounding
    {
        NoRounding,
        EndOfMonth,
        EndOfCalendarYear,
        EndOfFiscalYear,
        EndOfQuarter,
        EndOfHalfYear,
        EndOfJanuary,
        EndOfFebruary,
        EndOfMarch,
        EndOfApril,
        EndOfMay,
        EndOfJune,
        EndOfJuly,
        EndOfAugust,
        EndOfSeptember,
        EndOfOctober,
        EndOfNovember,
        EndOfDecember;
    }

    public static class SearchPage
    {
        public String Caption = null;
        public ArrayList<SearchPageItem> PageItems = null;
        
        public String getCaption() { return Caption; }
        public SearchPage setCaption(String value) { this.Caption = value; return this; }
        public ArrayList<SearchPageItem> getPageItems() { return PageItems; }
        public SearchPage setPageItems(ArrayList<SearchPageItem> value) { this.PageItems = value; return this; }
    }

    public static enum TodoReferenceType
    {
        Fyi,
        Also,
        Update,
        RefTypeOther1,
        RefTypeOther2,
        RefTypeOther3,
        RefTypeOther4,
        RefTypeOther5;
    }

    public static enum WorkflowDocumentPlaceholderType
    {
        Reference,
        InitiatingRecord,
        WorkingDocument;
    }

    public static enum LicenseTypes
    {
        StorageOptimization,
        SpaceManagement,
        Jurisdictions,
        Ocr,
        AutoClassification,
        AdvancedDisposal,
        ExternalWarehousing,
        Rendering,
        Sap,
        PolicyCenter;
    }

    public static enum ProductFeatures
    {
        Workflow(0),
        Keywords(1),
        SpaceManagement(2),
        PhysicalRecords(3),
        Classifications(4),
        Retention(5),
        Communications(6),
        Meetings(7),
        Rendering(8),
        AnnotateRedact(9),
        Jurisdictions(10),
        Sharepoint(11),
        ContentIndexing(13),
        ClassifiedSecurity(14),
        Labels(15),
        AltClassification(16),
        Actions(17),
        TodoItems(18),
        Requests(19),
        Origins(20),
        Holds(21),
        Series(22),
        TemplatesAndContentBlocks(23),
        EmbeddedLinks(24),
        WebAndXMLPublishing(25),
        DocumentQueues(26),
        VitalRecords(27),
        Alerts(28),
        Parts(29),
        Versions(30),
        ReportsAndStatistics(31),
        SaPintegration(32),
        VeoRendering(33),
        ExternalStores(34),
        CfsManageInPlace(35),
        AdvancedRequests(36),
        DocumentHashing(37),
        CenteraStorage(38),
        WebClient(39),
        SharePointZF(40),
        ClientMatter(41),
        AdvancedDisposal(42),
        AutoClassification(44),
        TieredStorage(45),
        StoreEncryption(46),
        Srms(47),
        IcasStorage(48),
        PhysicalInactiveRecordsManagement(49),
        ElectronicInactiveRecordsManagement(50),
        GeoLocations(51),
        CheckinStyles(52),
        DocumentReview(53),
        PolicyCentre(54),
        EmailCapture(55),
        Ldap(56),
        AccessExclusions(57);

        private final int value;
        ProductFeatures(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum NativeMailStyles
    {
        None,
        Simple,
        Advanced;
    }

    public static enum ContentIndexType
    {
        None(0),
        IdolOEMTrimIndex(2),
        IdolOEMCfsIndex(3),
        IdolEnterpriseTrimIndex(4),
        IdolEnterpriseCfsIndex(5);

        private final int value;
        ContentIndexType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum DatabaseTypes
    {
        Unknown,
        Oracle,
        SqlServer,
        Postgres;
    }

    public static enum LocationDefault
    {
        Current,
        CurrentOrg;
    }

    public static enum MailFormat
    {
        Msg,
        Eml;
    }

    public static enum EmailSecurityMode
    {
        Disabled,
        LevelOnlyPrefix,
        LevelAndCaveatsPrefix,
        LevelOnlySuffix,
        LevelAndCaveatsSuffix;
    }

    public static enum Months
    {
        January(1),
        February(2),
        March(3),
        April(4),
        May(5),
        June(6),
        July(7),
        August(8),
        September(9),
        October(10),
        November(11),
        December(12);

        private final int value;
        Months(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum LockdownStyles
    {
        Normal,
        SessionLock,
        TotalLock;
    }

    public static enum ObjectURLformats
    {
        WebClient(0),
        WebDrawer(1),
        None(3),
        External(4);

        private final int value;
        ObjectURLformats(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum BarcodePrintOption
    {
        Internal,
        InternalClear,
        External;
    }

    public static enum CurrLocDef
    {
        LoginUser,
        LoginUserPosn,
        LoginUserOrg;
    }

    public static enum RmTerminologyType
    {
        TrimClassic,
        Us;
    }

    public static enum HashingAlgorithms
    {
        Sha,
        Md5;
    }

    public static enum CommandRefreshTypes
    {
        None,
        Current,
        Add,
        ChildList,
        ChildListCurrent,
        Parent,
        AllBobs,
        All,
        Delete,
        CurrentAndKids,
        CurrentAndParent,
        Up,
        Down,
        Append,
        AddChild,
        AddChildCurrent,
        AddChildCurrentParent;
    }

    public static enum MenuItemTypes
    {
        MenuItemCommand,
        MenuItemPopup,
        MenuItemSeparator;
    }

    public static class EnumItemList extends ArrayList<EnumItem>
    {
        
    }

    public static enum SearchClauseIds
    {
        Unknown(0),
        Uri(1),
        All(2),
        None(3),
        Usable(4),
        Active(5),
        Updated(6),
        Top(7),
        Default(8),
        Favorite(9),
        Label(10),
        Barcode(11),
        Acl(12),
        Copyacl(13),
        Saved(14),
        ActiveFrom(15),
        ActiveTo(16),
        Batch(17),
        Fbarcode(18),
        UpdatedBy(19),
        WordType(20),
        ZipCodeCity(21),
        ZipCodePostcode(22),
        ZipCodeRegion(23),
        ZipCodeState(24),
        ZipCodeCountry(25),
        ScheduleTriggerType(26),
        SecurityLevelName(27),
        SecurityLevelAbbreviation(28),
        SecurityLevelLevelNumber(29),
        ScheduleTriggerAfterYears(30),
        ScheduleTriggerAfterMonths(31),
        SecurityCaveatName(32),
        SecurityCaveatAbbreviation(33),
        SecurityCaveatCaveatNumber(34),
        ScheduleTriggerDateType(35),
        ScheduleTriggerFixedDate(36),
        LookupSetName(37),
        ScheduleTriggerDestroy(38),
        SpaceNumber(39),
        SpaceKey(40),
        ClassificationNumber(41),
        ClassificationWord(42),
        ClassificationName(43),
        ClassificationApprover(44),
        ClassificationOwner(45),
        ScheduleTriggerUserDateType(46),
        ScheduleTriggerRounding(47),
        ElectronicStoreName(48),
        ElectronicStoreStoreType(49),
        ScheduleTrigger(50),
        ActionDefName(51),
        ActionDefIsProcedure(52),
        ActionDefAssignable(53),
        SpaceWithin(54),
        RecordActionName(56),
        KeywordName(57),
        KeywordWord(58),
        KeywordSource(59),
        ClassificationParent(60),
        KeywordNarrower(61),
        KeywordPrimary(62),
        RequestRecord(63),
        RequestBy(64),
        RequestDueOn(65),
        RequestServiceLocation(67),
        RequestAssignee(68),
        BarcodeScannerName(69),
        StzReportName(70),
        StzReportCreated(71),
        OfflineRecordContainer(72),
        SavedSearchName(73),
        HistoryDate(75),
        HistoryLogin(76),
        HistoryType(77),
        FieldDefinitionName(78),
        LocationName(79),
        FieldDefinitionFormat(80),
        FieldDefinitionLookupSet(81),
        HoldName(82),
        HoldContact(83),
        RecordTypeName(84),
        StopWordName(85),
        CensusName(86),
        CensusCensusLocation(87),
        CensusInProgress(88),
        CensusStartDate(89),
        CensusEndDate(90),
        WordName(91),
        ReportName(92),
        ReportType(93),
        CommunicationDetailLocation(94),
        ReportBitmapName(95),
        CommunicationDetailType(96),
        DocumentQueueName(97),
        DocumentQueueMachine(98),
        CommunicationDetailReference(99),
        StatisticsName(100),
        StatisticsCreated(101),
        StatisticsFrom(102),
        StatisticsTo(103),
        FieldDefinitionUsedFor(104),
        SecurityGuideEntryReference(105),
        SecurityGuideSecurityLevel(106),
        FieldDefinitionForRecords(110),
        FieldDefinitionForLocations(114),
        AutoPartRuleName(115),
        AutoPartRuleType(116),
        UserLabelName(117),
        AlertEventType(118),
        AlertUser(119),
        UserLabelOwner(120),
        UserLabelType(121),
        UserLabelDateCreated(122),
        UserLabelParent(123),
        HoldRecord(124),
        SecurityLevelHeld(125),
        MailTemplateName(126),
        MailTemplateType(127),
        SecurityCaveatHeld(128),
        CommunicationDated(129),
        CommunicationRecord(130),
        CommunicationMedium(131),
        CommunicationDirection(132),
        CommunicationDetail(133),
        ElectronicStoreReadonly(134),
        OfflineRecordTitle(135),
        OfflineRecordStatus(136),
        RecordTypeBehaviour(138),
        RecordTypeAssignee(139),
        OriginName(140),
        OriginSource(141),
        OriginType(142),
        OriginLoadedOn(143),
        OriginMachine(144),
        OriginAuto(145),
        RecordTypeHome(146),
        MeetingName(147),
        MeetingDate(148),
        MeetingType(149),
        MeetingPlace(150),
        MeetingCutoff(151),
        MeetingIssue(152),
        MeetingAgenda(153),
        MeetingMinutes(154),
        MeetingInvite(155),
        MeetingDocument(156),
        RecordTypeOwner(157),
        AgendaItemTypeName(158),
        AgendaItemNumber(159),
        AgendaItemMeeting(160),
        AgendaItemSubmittedBy(161),
        AgendaItemSubmittedOn(162),
        AgendaItemApprover(163),
        AgendaItemApprovedOn(164),
        RecordTypeClassification(165),
        MinuteItemTypeName(166),
        RecordTypeStore(167),
        MinuteItemName(168),
        MinuteItemAgenda(169),
        MinuteItemAction(170),
        RecordTypeTitling(171),
        RecordTypeSchedule(172),
        TodoItemName(173),
        TodoItemAssignee(174),
        TodoItemDueOn(175),
        TodoItemDoneOn(176),
        TodoItemPriority(177),
        TodoItemCreator(178),
        RecordTypeAction(179),
        WorkflowName(180),
        WorkflowSupervisor(181),
        WorkflowCustomer(182),
        WorkflowContainer(183),
        WorkflowJob(184),
        WorkflowDueOn(185),
        WorkflowDoneOn(186),
        WorkflowStartedOn(187),
        WorkflowRegisteredOn(188),
        WorkflowDestroyOn(189),
        WorkflowTemplate(190),
        WorkflowRecord(191),
        WorkflowPriority(192),
        WorkflowScheduledStartOn(193),
        WorkflowCreator(194),
        RecordTypeCensus(195),
        WorkflowTemplateName(196),
        WorkflowTemplateSupervisor(197),
        WorkflowTemplateDateRegistered(198),
        WorkflowTemplatePriority(199),
        RecordTypeArchive(200),
        RecordTypeLevel(201),
        ActivityWithin(202),
        ActivityName(203),
        ActivityWorkflow(204),
        ActivityTemplate(205),
        ActivityAssignee(206),
        ActivitySupervisor(207),
        ActivityPriority(208),
        ActivityDueOn(209),
        ActivityDoneOn(210),
        ActivityCanStart(211),
        ActivityAssignedOn(212),
        ActivityAuthorizedOn(213),
        ActivityDoneBy(214),
        ActivityDone(215),
        ActivityOverdue(216),
        ActivityRecord(217),
        RecordTypeTemplate(218),
        RecordTypeSpace(219),
        AgendaItemParent(220),
        HistoryRecord(222),
        HtmlLayoutName(223),
        HtmlLayoutType(224),
        RecordTypeExternalId(225),
        KeywordForbidden(226),
        MeetingTypeName(227),
        MeetingTypePlace(228),
        LookupSetType(229),
        RecordTypeSortOrder(230),
        ScheduleName(231),
        ScheduleAgency(232),
        ScheduleSource(233),
        ScheduleParent(234),
        ScheduleWord(235),
        RecordNumber(238),
        LocationMembers(239),
        StzReportWorkflow(240),
        RecordActionRecord(243),
        RecordActionAssignee(244),
        RecordActionCompletedBy(245),
        RecordActionDone(246),
        RecordActionOverdue(247),
        RecordActionProcedure(248),
        RequestSpace(249),
        RequestAthome(250),
        DocumentQueueType(251),
        DocumentQueueLocation(252),
        DocumentQueueAuto(253),
        DocumentQueueContainer(254),
        ScheduledTaskHistoryCompleted(255),
        ScheduledTaskHistoryBy(256),
        ScheduledTaskObjectType(257),
        ScheduledTaskRecord(258),
        ScheduledTaskClassification(259),
        ScheduledTaskDate(260),
        ScheduledTaskAssignee(261),
        ScheduledTaskOverdue(262),
        ScheduledTaskDone(263),
        ScheduledTaskFolders(264),
        WordField(265),
        HistoryBreach(266),
        TodoItemItemReferenceRecord(267),
        TodoItemItemReferenceType(268),
        TodoItemDone(269),
        TodoItemOverdue(270),
        TodoItemReference(271),
        RecordTitle(272),
        RecordNotes(273),
        RecordAnyWord(274),
        RecordContent(275),
        RecordKeywordKeyword(277),
        RecordInTray(278),
        RecordDueTray(279),
        RecordMyDocuments(280),
        RecordMyContainers(281),
        RecordWorkTray(282),
        RecordMyTemplates(283),
        RecordMyContent(284),
        RecordNumberx(285),
        RecordClassification(286),
        RecordAccession(287),
        RecordRegisteredOn(288),
        RecordCreatedOn(289),
        RecordClosedOn(290),
        RecordPublishedOn(291),
        RecordEditedOn(292),
        RecordLockedOn(293),
        RecordFinalisedOn(294),
        RecordDueOn(295),
        RecordActionedOn(296),
        RecordInactiveOn(297),
        RecordImported(298),
        RecordSchedule(299),
        RecordReview(300),
        RecordConsignmentNumber(301),
        RecordReturnOn(304),
        RecordTransferredOn(307),
        RecordArchivedOn(308),
        RecordDestroyedOn(310),
        RecordMakeInactiveOn(311),
        RecordTransferOn(313),
        RecordArchiveOn(314),
        RecordDestroyOn(315),
        RecordReviewStatus(316),
        RecordAssignee(317),
        RecordOwner(318),
        RecordHome(319),
        RecordCreator(320),
        RecordContact(321),
        RecordContactx(322),
        RecordAssigneex(323),
        RecordHomex(324),
        RecordLocationLocation(325),
        RecordLocationFrom(326),
        RecordLocationTo(327),
        RecordLocationReturnOn(328),
        RecordLocationPrimary(329),
        RecordLocationSpace(330),
        RecordLocationType(331),
        RecordAtHome(332),
        RecordEnclosed(333),
        RecordMissing(334),
        RecordCheckedOutBy(336),
        HistoryChangedTo(337),
        Audit(338),
        RecordAuthor(339),
        RecordRepresentative(340),
        RecordAddressee(341),
        RecordOtherContact(342),
        RecordClient(343),
        RecordWorkflow(344),
        RecordActivity(345),
        RecordSecurityLevel(346),
        RecordSecurityCaveat(347),
        RecordCSDowngrade(348),
        RecordCSDeclassify(349),
        RecordCSGuide(350),
        RecordCSInitial(351),
        RecordCSAtRegistration(352),
        RecordCSClassifiedBy(353),
        RecordCSClassifiedByAgency(354),
        RecordCSReviewedBy(355),
        RecordCSReviewedOn(356),
        RecordCSUpdatedBy(357),
        RecordCSUpdatedOn(358),
        RecordCSReason(359),
        RecordCSDerivedFrom(360),
        RecordCSDowngradeInstructions(361),
        RecordCSUpdatedReason(362),
        RecordPriority(367),
        RecordExternal(368),
        RecordElectronic(369),
        RecordKeywordHow(373),
        RecordMeeting(374),
        RecordPartRule(375),
        RecordTodo(376),
        RecordOrigin(377),
        RecordType(378),
        LocationType(379),
        LocationUnique(380),
        LocationSurname(381),
        LocationGivenNames(382),
        LocationId(396),
        LocationLogin(397),
        LocationEmail(398),
        LocationAddressCity(399),
        LocationAddressState(400),
        LocationAddressPostcode(401),
        LocationAddressRegion(402),
        LocationAddressCountry(403),
        LocationAddressWord(404),
        LocationAddressType(405),
        LocationAddress(406),
        RecordIndex(407),
        RecordRequest(408),
        RecordHold(410),
        MinuteItemProposer(411),
        MinuteItemSeconder(412),
        MinuteItemOutcome(413),
        MinuteItemMeeting(414),
        MinuteItemType(415),
        MinuteItemOrder(416),
        MinuteItemMotion(417),
        MinuteItemActionArisingTodo(418),
        AgendaItemType(419),
        AgendaItemMeetingType(420),
        AgendaItemApproved(421),
        AgendaItemSection(422),
        AgendaItemPending(423),
        AgendaItemStanding(424),
        AgendaItemCarriedOverFrom(425),
        AgendaItemName(426),
        AgendaItemAttachmentRecord(427),
        AgendaItemAttachmentLocation(428),
        AgendaItemAttached(429),
        AgendaItemOrder(430),
        AgendaItemNumberx(431),
        MeetingInvitationPerson(432),
        MeetingInvitationType(433),
        MeetingInvitationAttendType(434),
        MeetingInvitationProxy(435),
        MeetingDocumentRecord(436),
        MeetingDocumentType(437),
        MeetingPending(438),
        MeetingOpen(439),
        SpaceLowest(440),
        SpaceBay(441),
        ClassificationHome(442),
        ClassificationClass(443),
        ClassificationRecordType(444),
        ClassificationApproved(445),
        ClassificationSchedule(446),
        ClassificationTitle(447),
        KeywordBroader(448),
        KeywordRelated(449),
        KeywordUsedFor(450),
        KeywordNonPreferredFormsOf(451),
        KeywordAttachedTo(452),
        KeywordInTitleOf(453),
        ClassificationNumberx(454),
        ClassificationViewRecords(455),
        ClassificationSecure(456),
        LocationHasMember(457),
        LocationSupervisedBy(458),
        LocationSupervisorOf(459),
        LocationDelegateOf(460),
        LocationDelegateTo(461),
        LocationAdministratorOf(462),
        LocationAdministeredBy(463),
        LocationReview(464),
        LocationDob(465),
        LocationInitials(466),
        LocationInternal(467),
        LocationPhone(468),
        LocationSenderOf(469),
        LocationRecipientOf(470),
        LocationCommunication(471),
        LocationUsingAddressOf(472),
        LocationUsingProfileOf(473),
        LocationSurnamePrefix(474),
        CommunicationDetailWord(475),
        LocationSortName(476),
        RecordAllRelated(477),
        RecordAllParts(478),
        RecordAllVersions(479),
        RecordRelated(480),
        RecordCopyOf(481),
        RecordOriginalOf(482),
        RecordFirstPart(483),
        RecordHasFirstPart(484),
        RecordSupersedes(485),
        RecordSupersededBy(486),
        RecordInSeries(487),
        RecordIsSeriesOf(488),
        RecordAttachedTo(489),
        RecordHasAttachment(490),
        RecordFirstVersionOf(491),
        RecordHasFirstVersion(492),
        RecordAltContains(493),
        RecordAltContainer(494),
        RecordRedactionOf(495),
        RecordHasRedaction(496),
        RecordDerivedFrom(497),
        RecordHasDerivation(498),
        RecordHasContentBlock(499),
        RecordContentBlockIn(500),
        RecordInSite(501),
        RecordHasSite(502),
        RecordContainer(503),
        RecordContains(504),
        RecordLatestPart(505),
        RecordLatestVersion(506),
        RecordCurrentVersion(507),
        WorkflowInitiator(508),
        WorkflowDone(509),
        WorkflowOverdue(510),
        WorkflowJobx(511),
        RecordActionDueOn(512),
        RecordActionDoneOn(513),
        LocationOthers(514),
        LocationHasOther(515),
        ActivityAuthorizedBy(516),
        ActivityEarliestStartOn(517),
        ActivityLatestStartOn(518),
        ActivityStartedOn(519),
        ActivityId(520),
        ActivityEscalatedTo(521),
        ActivitySuspendedUntil(522),
        ActivityPendingAuthorizationBy(523),
        ActivityChild(525),
        ActivityCompound(526),
        ActivityInsideTemplate(527),
        ActivitySkipped(528),
        UserLabelStuckOn(529),
        RecordExtension(530),
        RecordStore(531),
        RecordSpace(532),
        RecordHoldingBay(533),
        RecordSpaceOrBay(534),
        RecordCommunication(535),
        RecordAction(536),
        RecordTask(537),
        RecordHasContents(538),
        CommunicationDetailAddress(539),
        CommunicationDetailCity(540),
        CommunicationDetailPostcode(541),
        SavedSearchType(542),
        SavedSearchOwner(543),
        SavedSearchGroup(544),
        SavedSearchPublic(545),
        SavedSearchParent(546),
        RecordReplyTo(547),
        RecordHasReply(548),
        RecordSpType(549),
        RecordSpGUID(550),
        RecordSpURL(551),
        RecordSpFarmGUID(552),
        RecordInSpList(553),
        RecordSpLirURL(554),
        RecordSpLirId(555),
        SavedSearchOld(556),
        SavedSearchFullName(557),
        SecurityGuideHeld(558),
        LookupSetAuthority(559),
        RecordClass(560),
        RecordSpSiteCollectionGUID(561),
        RecordDisposition(562),
        RecordFinal(563),
        AutoPartRuleDateType(564),
        RecordActionCanStart(565),
        LocationContactOf(566),
        UserLabelFullName(567),
        MeetingRecord(568),
        RecordJurisdiction(569),
        ScheduleTriggerJurisdiction(570),
        JurisdictionName(571),
        JurisdictionDescription(572),
        JurisdictionMembers(575),
        RecordTypedTitle(576),
        RecordGeneratedTitle(577),
        RecordActionStartOn(578),
        RecordOriginRun(579),
        OriginHistoryOrigin(580),
        OriginHistoryRunOn(581),
        OriginHistorySource(582),
        OfflineRecordExtension(583),
        RecordActionParent(584),
        RecordMime(585),
        RecordMedia(586),
        RecordTypeMedia(587),
        JurisdictionHasMember(591),
        RecordAttachments(594),
        HoldExternal(615),
        FieldDefinitionInIdolSchema(622),
        RecordConversation(623),
        RecordMessageId(624),
        RecordConversationId(625),
        RecordLinkOf(626),
        RecordLinksTo(627),
        RecordSameClient(628),
        RecordSameContact(629),
        RecordContainerEx(630),
        RecordContainsEx(631),
        RecordOffline(632),
        RecordTypeHasElecDocSupport(633),
        SpaceParentOf(634),
        ClassificationParentOf(635),
        ScheduleParentOf(636),
        FieldDefinitionVisible(637),
        UserLabelParentOf(638),
        NotificationEventType(639),
        NotificationObjectType(640),
        NotificationEventDate(641),
        RecordFolderOrigin(642),
        HistoryUser(643),
        HistoryLocation(644),
        HistoryObjectType(645),
        HistoryObject(646),
        HistoryWorkflow(647),
        HistoryActivity(648),
        HistoryEvent(649),
        LocationSecurityCaveat(650),
        HistoryComputer(651),
        RecordIdol(652),
        RecordKeyword(653),
        ElectronicStoreTier(654),
        RecordAccessedOn(655),
        ElectronicStoreAccessDate(656),
        RecordRequestor(657),
        RecordRequestedOn(658),
        LocationSecurityLevel(660),
        RequestType(662),
        RequestCreatedOn(663),
        RequestCompletedOn(664),
        RequestDone(665),
        RequestDeliverTo(666),
        RequestPriority(667),
        RequestStatus(668),
        RequestIsCurrent(669),
        CommunicationDetailEmail(670),
        RecordDocumentSize(671),
        ElectronicStoreAutnGroup(672),
        RecordTypeField(673),
        SearchFormName(674),
        SearchFormType(675),
        LocationValidLogin(676),
        AlertObjectType(677),
        AlertSubscriberUser(678),
        AlertSubscriberIsSuspended(679),
        AlertSubscriber(681),
        SharePointItemUniqueId(682),
        SharePointItemList(683),
        SharePointItemListId(684),
        SharePointItemRecord(685),
        SharePointItemSynchPending(686),
        RecordSpRecord(687),
        RecordSpList(688),
        RequestStatusDate(689),
        RecordTypeAckRequests(690),
        RecordClientRecord(691),
        RecordMatterRecord(692),
        RecordRole(693),
        RecordRoleEx(694),
        RecordParty(695),
        RecordPartyEx(696),
        RecordClientMatterRoleLocation(697),
        RecordClientMatterRoleType(698),
        RecordClientMatterPartyParty(700),
        RecordClientMatterPartyType(701),
        RecordClientMatterPartyInterest(702),
        RecordTypeHasMatter(703),
        RecordClientOf(704),
        RecordMatterOf(705),
        RecordConsignment(706),
        ConsignmentNumber(707),
        ConsignmentTransferLocation(708),
        ConsignmentCutoffDate(709),
        ClassificationPendingAuto(716),
        ConsignmentIssueConsignment(717),
        RecordCheckinStyle(719),
        ConsignmentApproverConsignment(720),
        ConsignmentApproverRecord(721),
        ConsignmentApproverApprover(722),
        ConsignmentApproverStatus(723),
        RecordTypeLir(724),
        RecordTypeAutoSubFolderType(725),
        RecordTypeAutoSubFolderClassification(726),
        RecordTypeAutoSubFolderSchedule(727),
        ConsignmentArchivist(728),
        ConsignmentIssueReviewer(729),
        ConsignmentIssueIssueType(730),
        FieldDefinitionSapkey(732),
        ClassificationSapobject(733),
        RecordTypeSaprepository(734),
        RecordSaprepos(735),
        RecordSapdoc(736),
        RecordHasHold(737),
        WorkflowActivity(738),
        ConsignmentDone(739),
        ConsignmentDisposalDate(740),
        RecordSapcustomer(741),
        RecordSapcustomerid(742),
        RecordRelatedEx(743),
        RecordRelatedReverseEx(744),
        LookupItemName(745),
        LookupItemAbbreviation(746),
        LookupItemSet(747),
        RecordCheckedInBy(748),
        RecordRevisionCheckedInBy(749),
        RecordRevisionEx(750),
        RecordSupersededOn(752),
        RecordReceivedOn(753),
        LocationJurisdiction(754),
        RecordActionDoneOnTime(755),
        ActivityDoneOnTime(756),
        HistoryConnectionIPA(757),
        HistoryClientIPA(758),
        CommunicationViewable(759),
        RecordCanUseClass(760),
        SharePointItemViewable(761),
        WordCount(762),
        ActivityCcto(763),
        SavedSearchCanEdit(764),
        SavedSearchCanExecute(765),
        RecordGps(766),
        LocationGps(767),
        CheckinStyleName(768),
        CheckinStyleOwner(769),
        CheckinStyleType(770),
        CheckinStyleContainer(771),
        CheckinStyleClassification(772),
        CheckinStyleMatter(773),
        CheckinStyleAssignee(775),
        CheckinStyleSchedule(776),
        CheckinStyleAction(777),
        CheckinStyleTemplate(778),
        CheckinStyleJurisdiction(779),
        CheckinStyleMatterTemplate(780),
        CheckinStyleMatterFolder(781),
        CheckinPlaceName(782),
        CheckinPlaceType(783),
        CheckinPlaceOwner(785),
        CheckinPlaceId(786),
        CheckinPlaceStyle(788),
        SchedulePcsid(789),
        ScheduleTriggerPcsid(790),
        ClassificationPcsid(791),
        RecordEditor(792),
        RecordReviewer(793),
        RecordAuthorizer(794),
        RecordReclocationx(795),
        RecordLocationDueOn(796),
        RecordLocationDone(797),
        RecordLocationOverdue(798),
        RecordLocationRole(799),
        RecordReviewState(800),
        ConsignmentType(801),
        ConsignmentWaiting(802),
        ConsignmentReviewedOn(803),
        ConsignmentApprovedOn(804),
        ConsignmentDisposedOn(805),
        ScheduleTriggerPcsmapid(806),
        RecordDueOrInTray(807),
        ScheduleTriggerAfterDays(808),
        ScheduleTriggerDelayType(809),
        RecordScheduleStatus(810);

        private final int value;
        SearchClauseIds(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static class AllEnumByKeyDictionary extends HashMap<String,AllEnumerations>
    {
        
    }

    public static class BaseObjectTypeByKeyDictionary extends HashMap<String,BaseObjectTypes>
    {
        
    }

    public static enum PropertyFormats
    {
        String(0),
        Number(1),
        Boolean(2),
        Date(3),
        Datetime(4),
        Decimal(5),
        Currency(7),
        Enum(8),
        Object(9),
        BigNumber(11),
        Geography(13);

        private final int value;
        PropertyFormats(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static enum SearchClauseGroup
    {
        Name,
        Type,
        Text,
        Linked,
        Tray,
        Reference,
        Document,
        Date,
        Field,
        Retention,
        Location,
        Process,
        Rm,
        Security,
        SharePoint,
        Other,
        Favorite,
        Recent,
        ClientMatter;
    }

    public static interface ITrimSearchStackItem
    {
        public Boolean IsOperator = null;
        public Boolean IsSearchClause = null;
    }

    public static enum IconDisplayMode
    {
        Text,
        Icon,
        IconAndText;
    }

    public static enum StringDisplayAlignment
    {
        Left,
        Centre,
        Right;
    }

    public static enum PropertySortMode
    {
        None,
        AlphaNoCase,
        AlphaCase,
        Numeric,
        Icon,
        OwnerEvent,
        Date,
        Time,
        DateTime,
        FileSize,
        AlphaNoCaseEnhanced,
        AlphaCaseEnhanced,
        Currency,
        Url,
        Email,
        Decimal;
    }

    public static enum PropertyOrFieldFormat
    {
        String(0),
        Number(1),
        Boolean(2),
        Date(3),
        Datetime(4),
        Decimal(5),
        Text(6),
        Currency(7),
        Enum(8),
        Object(9),
        BigNumber(11),
        Xml(12),
        Geography(13);

        private final int value;
        PropertyOrFieldFormat(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static class PropertyDef
    {
        public Boolean CanView = null;
        public SearchClauseIds SearchClauseId = null;
        public Boolean IsDefaultDataGridColumn = null;
        public Boolean IsDataGridColumn = null;
        public String FalseString = null;
        public String TrueString = null;
        public Integer Length = null;
        public PropertyOrFieldFormat PFFormat = null;
        public Boolean IsExposedInSDK = null;
        public String InternalName = null;
        public Boolean IsNameProperty = null;
        public AllEnumerations EnumType = null;
        public BaseObjectTypes ObjectType = null;
        public PropertyFormats Format = null;
        public Boolean IsOkForDataEntry = null;
        public Boolean IsDefaultForViewPane = null;
        public Boolean IsOkForViewPane = null;
        public Boolean IsReadOnly = null;
        public IconDisplayMode IconDefaultMode = null;
        public StringDisplayAlignment StringAlignment = null;
        public PropertySortMode SortMode = null;
        public String CaptionShort = null;
        public String Caption = null;
        public PropertyIds Id = null;
        public Boolean CanModify = null;
        
        public Boolean isCanView() { return CanView; }
        public PropertyDef setCanView(Boolean value) { this.CanView = value; return this; }
        public SearchClauseIds getSearchClauseId() { return SearchClauseId; }
        public PropertyDef setSearchClauseId(SearchClauseIds value) { this.SearchClauseId = value; return this; }
        public Boolean getIsDefaultDataGridColumn() { return IsDefaultDataGridColumn; }
        public PropertyDef setIsDefaultDataGridColumn(Boolean value) { this.IsDefaultDataGridColumn = value; return this; }
        public Boolean getIsDataGridColumn() { return IsDataGridColumn; }
        public PropertyDef setIsDataGridColumn(Boolean value) { this.IsDataGridColumn = value; return this; }
        public String getFalseString() { return FalseString; }
        public PropertyDef setFalseString(String value) { this.FalseString = value; return this; }
        public String getTrueString() { return TrueString; }
        public PropertyDef setTrueString(String value) { this.TrueString = value; return this; }
        public Integer getLength() { return Length; }
        public PropertyDef setLength(Integer value) { this.Length = value; return this; }
        public PropertyOrFieldFormat getPfFormat() { return PFFormat; }
        public PropertyDef setPfFormat(PropertyOrFieldFormat value) { this.PFFormat = value; return this; }
        public Boolean getIsExposedInSDK() { return IsExposedInSDK; }
        public PropertyDef setIsExposedInSDK(Boolean value) { this.IsExposedInSDK = value; return this; }
        public String getInternalName() { return InternalName; }
        public PropertyDef setInternalName(String value) { this.InternalName = value; return this; }
        public Boolean getIsNameProperty() { return IsNameProperty; }
        public PropertyDef setIsNameProperty(Boolean value) { this.IsNameProperty = value; return this; }
        public AllEnumerations getEnumType() { return EnumType; }
        public PropertyDef setEnumType(AllEnumerations value) { this.EnumType = value; return this; }
        public BaseObjectTypes getObjectType() { return ObjectType; }
        public PropertyDef setObjectType(BaseObjectTypes value) { this.ObjectType = value; return this; }
        public PropertyFormats getFormat() { return Format; }
        public PropertyDef setFormat(PropertyFormats value) { this.Format = value; return this; }
        public Boolean getIsOkForDataEntry() { return IsOkForDataEntry; }
        public PropertyDef setIsOkForDataEntry(Boolean value) { this.IsOkForDataEntry = value; return this; }
        public Boolean getIsDefaultForViewPane() { return IsDefaultForViewPane; }
        public PropertyDef setIsDefaultForViewPane(Boolean value) { this.IsDefaultForViewPane = value; return this; }
        public Boolean getIsOkForViewPane() { return IsOkForViewPane; }
        public PropertyDef setIsOkForViewPane(Boolean value) { this.IsOkForViewPane = value; return this; }
        public Boolean getIsReadOnly() { return IsReadOnly; }
        public PropertyDef setIsReadOnly(Boolean value) { this.IsReadOnly = value; return this; }
        public IconDisplayMode getIconDefaultMode() { return IconDefaultMode; }
        public PropertyDef setIconDefaultMode(IconDisplayMode value) { this.IconDefaultMode = value; return this; }
        public StringDisplayAlignment getStringAlignment() { return StringAlignment; }
        public PropertyDef setStringAlignment(StringDisplayAlignment value) { this.StringAlignment = value; return this; }
        public PropertySortMode getSortMode() { return SortMode; }
        public PropertyDef setSortMode(PropertySortMode value) { this.SortMode = value; return this; }
        public String getCaptionShort() { return CaptionShort; }
        public PropertyDef setCaptionShort(String value) { this.CaptionShort = value; return this; }
        public String getCaption() { return Caption; }
        public PropertyDef setCaption(String value) { this.Caption = value; return this; }
        public PropertyIds getId() { return Id; }
        public PropertyDef setId(PropertyIds value) { this.Id = value; return this; }
        public Boolean isCanModify() { return CanModify; }
        public PropertyDef setCanModify(Boolean value) { this.CanModify = value; return this; }
    }

    public static class UserOptionPropertyDefList extends ArrayList<UserOptionPropertyDef>
    {
        
    }

    public static class TrimAccessControlFunction
    {
        public String AsString = null;
        public String Caption = null;
        public AccessControlSettings Setting = null;
        public AccessReferenceStyle ReferenceStyle = null;
        public ArrayList<LocationRef> AccessLocations = null;
        
        public String getAsString() { return AsString; }
        public TrimAccessControlFunction setAsString(String value) { this.AsString = value; return this; }
        public String getCaption() { return Caption; }
        public TrimAccessControlFunction setCaption(String value) { this.Caption = value; return this; }
        public AccessControlSettings getSetting() { return Setting; }
        public TrimAccessControlFunction setSetting(AccessControlSettings value) { this.Setting = value; return this; }
        public AccessReferenceStyle getReferenceStyle() { return ReferenceStyle; }
        public TrimAccessControlFunction setReferenceStyle(AccessReferenceStyle value) { this.ReferenceStyle = value; return this; }
        public ArrayList<LocationRef> getAccessLocations() { return AccessLocations; }
        public TrimAccessControlFunction setAccessLocations(ArrayList<LocationRef> value) { this.AccessLocations = value; return this; }
    }

    public static enum DataEntryPageType
    {
        Normal(0),
        Notes(1),
        Access(2),
        RecordActions(7),
        AddCommunication(8),
        AdditionalFields(12),
        LocationAddress(13),
        LocationRelationships(15),
        LocationProfile(16),
        ChildList(17),
        ActiveDates(18),
        CopiedAccess(19),
        DocumentReview(20);

        private final int value;
        DataEntryPageType(final int intValue) { value = intValue; }
        public int getValue() { return value; }
    }

    public static interface IPageItem
    {
        public String Type = null;
    }

    public static class TrimSearchClause extends TrimSearchStackItem
    {
        public Integer AccessControlType = null;
        public SearchClauseIds ClauseId = null;
        public ComparisonType ComparisonOperator = null;
        public String CriteriaString = null;
        public String ParameterCaption = null;
        public String ShortParameterCaption = null;
        public TrimMainObject CriteriaObject = null;
        public FieldDefinitionRef Field = null;
        public Boolean IsFieldSearch = null;
        public Boolean IsNegated = null;
        public ArrayList<String> LookupValues = null;
        public AllEnumerations EnumName = null;
        public ArrayList<FormEnumItem> EnumItems = null;
        public BaseObjectTypes TrimType = null;
        
        public Integer getAccessControlType() { return AccessControlType; }
        public TrimSearchClause setAccessControlType(Integer value) { this.AccessControlType = value; return this; }
        public SearchClauseIds getClauseId() { return ClauseId; }
        public TrimSearchClause setClauseId(SearchClauseIds value) { this.ClauseId = value; return this; }
        public ComparisonType getComparisonOperator() { return ComparisonOperator; }
        public TrimSearchClause setComparisonOperator(ComparisonType value) { this.ComparisonOperator = value; return this; }
        public String getCriteriaString() { return CriteriaString; }
        public TrimSearchClause setCriteriaString(String value) { this.CriteriaString = value; return this; }
        public String getParameterCaption() { return ParameterCaption; }
        public TrimSearchClause setParameterCaption(String value) { this.ParameterCaption = value; return this; }
        public String getShortParameterCaption() { return ShortParameterCaption; }
        public TrimSearchClause setShortParameterCaption(String value) { this.ShortParameterCaption = value; return this; }
        public TrimMainObject getCriteriaObject() { return CriteriaObject; }
        public TrimSearchClause setCriteriaObject(TrimMainObject value) { this.CriteriaObject = value; return this; }
        public FieldDefinitionRef getField() { return Field; }
        public TrimSearchClause setField(FieldDefinitionRef value) { this.Field = value; return this; }
        public Boolean getIsFieldSearch() { return IsFieldSearch; }
        public TrimSearchClause setIsFieldSearch(Boolean value) { this.IsFieldSearch = value; return this; }
        public Boolean getIsNegated() { return IsNegated; }
        public TrimSearchClause setIsNegated(Boolean value) { this.IsNegated = value; return this; }
        public ArrayList<String> getLookupValues() { return LookupValues; }
        public TrimSearchClause setLookupValues(ArrayList<String> value) { this.LookupValues = value; return this; }
        public AllEnumerations getEnumName() { return EnumName; }
        public TrimSearchClause setEnumName(AllEnumerations value) { this.EnumName = value; return this; }
        public ArrayList<FormEnumItem> getEnumItems() { return EnumItems; }
        public TrimSearchClause setEnumItems(ArrayList<FormEnumItem> value) { this.EnumItems = value; return this; }
        public BaseObjectTypes getTrimType() { return TrimType; }
        public TrimSearchClause setTrimType(BaseObjectTypes value) { this.TrimType = value; return this; }
    }

    public static class SearchPageItem
    {
        public String Type = null;
        public String Id = null;
        public String Caption = null;
        public BaseObjectTypes ObjectType = null;
        public PropertyOrFieldFormat Format = null;
        public AllEnumerations EnumName = null;
        public String ClauseName = null;
        public ArrayList<FormEnumItem> EnumItems = null;
        public ArrayList<String> LookupValues = null;
        
        public String getType() { return Type; }
        public SearchPageItem setType(String value) { this.Type = value; return this; }
        public String getId() { return Id; }
        public SearchPageItem setId(String value) { this.Id = value; return this; }
        public String getCaption() { return Caption; }
        public SearchPageItem setCaption(String value) { this.Caption = value; return this; }
        public BaseObjectTypes getObjectType() { return ObjectType; }
        public SearchPageItem setObjectType(BaseObjectTypes value) { this.ObjectType = value; return this; }
        public PropertyOrFieldFormat getFormat() { return Format; }
        public SearchPageItem setFormat(PropertyOrFieldFormat value) { this.Format = value; return this; }
        public AllEnumerations getEnumName() { return EnumName; }
        public SearchPageItem setEnumName(AllEnumerations value) { this.EnumName = value; return this; }
        public String getClauseName() { return ClauseName; }
        public SearchPageItem setClauseName(String value) { this.ClauseName = value; return this; }
        public ArrayList<FormEnumItem> getEnumItems() { return EnumItems; }
        public SearchPageItem setEnumItems(ArrayList<FormEnumItem> value) { this.EnumItems = value; return this; }
        public ArrayList<String> getLookupValues() { return LookupValues; }
        public SearchPageItem setLookupValues(ArrayList<String> value) { this.LookupValues = value; return this; }
    }

    public static class EnumItem
    {
        public Boolean IsACustomValue = null;
        public Boolean HasBeenCustomised = null;
        public Icons Icon = null;
        public String Caption = null;
        public Boolean IsValid = null;
        public Integer Value = null;
        public String Name = null;
        
        public Boolean getIsACustomValue() { return IsACustomValue; }
        public EnumItem setIsACustomValue(Boolean value) { this.IsACustomValue = value; return this; }
        public Boolean isHasBeenCustomised() { return HasBeenCustomised; }
        public EnumItem setHasBeenCustomised(Boolean value) { this.HasBeenCustomised = value; return this; }
        public Icons getIcon() { return Icon; }
        public EnumItem setIcon(Icons value) { this.Icon = value; return this; }
        public String getCaption() { return Caption; }
        public EnumItem setCaption(String value) { this.Caption = value; return this; }
        public Boolean getIsValid() { return IsValid; }
        public EnumItem setIsValid(Boolean value) { this.IsValid = value; return this; }
        public Integer getValue() { return Value; }
        public EnumItem setValue(Integer value) { this.Value = value; return this; }
        public String getName() { return Name; }
        public EnumItem setName(String value) { this.Name = value; return this; }
    }

    public static class UserOptionPropertyDef
    {
        public PropertyOrFieldFormat PFFormat = null;
        public AllEnumerations EnumType = null;
        public BaseObjectTypes ObjectType = null;
        public PropertyFormats Format = null;
        public String CaptionShort = null;
        public String Caption = null;
        public PropertyIds Id = null;
        
        public PropertyOrFieldFormat getPfFormat() { return PFFormat; }
        public UserOptionPropertyDef setPfFormat(PropertyOrFieldFormat value) { this.PFFormat = value; return this; }
        public AllEnumerations getEnumType() { return EnumType; }
        public UserOptionPropertyDef setEnumType(AllEnumerations value) { this.EnumType = value; return this; }
        public BaseObjectTypes getObjectType() { return ObjectType; }
        public UserOptionPropertyDef setObjectType(BaseObjectTypes value) { this.ObjectType = value; return this; }
        public PropertyFormats getFormat() { return Format; }
        public UserOptionPropertyDef setFormat(PropertyFormats value) { this.Format = value; return this; }
        public String getCaptionShort() { return CaptionShort; }
        public UserOptionPropertyDef setCaptionShort(String value) { this.CaptionShort = value; return this; }
        public String getCaption() { return Caption; }
        public UserOptionPropertyDef setCaption(String value) { this.Caption = value; return this; }
        public PropertyIds getId() { return Id; }
        public UserOptionPropertyDef setId(PropertyIds value) { this.Id = value; return this; }
    }

    public static enum AccessControlSettings
    {
        Public,
        Inherited,
        Private;
    }

    public static enum AccessReferenceStyle
    {
        RefOnly,
        NoRefCopy,
        RefCopy,
        RefContainer,
        NoRefContainer,
        NoRefNoCopy,
        RefOwner,
        NoRefOwner;
    }

    public static enum ComparisonType
    {
        Matching,
        EqualTo,
        NotEqualTo,
        LessThan,
        LessThanOrEqualTo,
        GreaterThan,
        GreaterThanOrEqualTo;
    }

    public static class FormEnumItem
    {
        public String Caption = null;
        public String Name = null;
        
        public String getCaption() { return Caption; }
        public FormEnumItem setCaption(String value) { this.Caption = value; return this; }
        public String getName() { return Name; }
        public FormEnumItem setName(String value) { this.Name = value; return this; }
    }

    public static class TrimSearchStackItem
    {
        public Boolean IsOperator = null;
        public Boolean IsSearchClause = null;
        
        public Boolean getIsOperator() { return IsOperator; }
        public TrimSearchStackItem setIsOperator(Boolean value) { this.IsOperator = value; return this; }
        public Boolean getIsSearchClause() { return IsSearchClause; }
        public TrimSearchStackItem setIsSearchClause(Boolean value) { this.IsSearchClause = value; return this; }
    }

}
